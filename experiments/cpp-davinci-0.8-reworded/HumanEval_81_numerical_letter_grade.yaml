name: HumanEval_81_numerical_letter_grade
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// It is the last week of the\
  \ semester and the teacher has to give the grades\n// to students. The teacher has\
  \ been making her own algorithm for grading.\n// The only problem is, she has lost\
  \ the code she used for grading.\n// She has given you a vector of GPAs for some\
  \ students and you have to write \n// a function that can output a vector of letter\
  \ grades using the following table:\n// GPA       |    Letter grade\n// 4.0    \
  \            A+\n// > 3.7                A \n// > 3.3                A- \n// > 3.0\
  \                B+\n// > 2.7                B \n// > 2.3                B-\n//\
  \ > 2.0                C+\n// > 1.7                C\n// > 1.3                C-\n\
  // > 1.0                D+ \n// > 0.7                D \n// > 0.0              \
  \  D-\n// 0.0                E\n// Example:\n// >>> grade_equation((std::vector<float>({(float)4.0,\
  \ (float)3, (float)1.7, (float)2, (float)3.5})))\n// (std::vector<std::string>({(std::string)\"\
  A+\", (std::string)\"B\", (std::string)\"C-\", (std::string)\"C\", (std::string)\"\
  A-\"}))\nstd::vector<std::string> numerical_letter_grade(std::vector<float> grades)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = numerical_letter_grade;\n    assert(candidate((std::vector<float>({(float)4.0,\
  \ (float)3, (float)1.7, (float)2, (float)3.5}))) == (std::vector<std::string>({(std::string)\"\
  A+\", (std::string)\"B\", (std::string)\"C-\", (std::string)\"C\", (std::string)\"\
  A-\"})));\n    assert(candidate((std::vector<float>({(float)1.2}))) == (std::vector<std::string>({(std::string)\"\
  D+\"})));\n    assert(candidate((std::vector<float>({(float)0.5}))) == (std::vector<std::string>({(std::string)\"\
  D-\"})));\n    assert(candidate((std::vector<float>({(float)0.0}))) == (std::vector<std::string>({(std::string)\"\
  E\"})));\n    assert(candidate((std::vector<float>({(float)1.0, (float)0.3, (float)1.5,\
  \ (float)2.8, (float)3.3}))) == (std::vector<std::string>({(std::string)\"D\", (std::string)\"\
  D-\", (std::string)\"C-\", (std::string)\"B\", (std::string)\"B+\"})));\n    assert(candidate((std::vector<float>({(float)0.0,\
  \ (float)0.7}))) == (std::vector<std::string>({(std::string)\"E\", (std::string)\"\
  D-\"})));\n}\n"
completions: ["    \n    std::vector<std::string> grades_let;\n    int vec_size =\
    \ grades.size();\n    for(int i = 0; i < vec_size; i++)\n    {\n        if(grades[i]\
    \ >= 4.0)\n        {\n            grades_let.push_back(\"A+\");\n        }\n \
    \       else if(grades[i] >= 3.7)\n        {\n            grades_let.push_back(\"\
    A\");\n        }\n        else if(grades[i] >= 3.3)\n        {\n            grades_let.push_back(\"\
    A-\");\n        }\n        else if(grades[i] >= 3.0)\n        {\n            grades_let.push_back(\"\
    B+\");\n        }\n        else if(grades[i] >= 2.7)\n        {\n            grades_let.push_back(\"\
    B\");\n        }\n        else if(grades[i] >= 2.3)\n        {\n            grades_let.push_back(\"\
    B-\");\n        }\n        else if(grades[i] >= 2.0)\n        {\n            grades_let.push_back(\"\
    C+\");\n        }\n        else if(grades[i] >= 1.7)\n        {\n            grades_let.push_back(\"\
    C\");\n        }\n        else if(grades[i] >= 1.3)\n        {\n            grades_let.push_back(\"\
    C-\");\n        }\n        else if(grades[i] >= 1.0)\n        {\n            grades_let.push_back(\"\
    D+\");\n        }\n        else if(grades[i] >= 0.7)\n        {\n            grades_let.push_back(\"\
    D\");\n        }\n        else if(grades[i] >= 0.0)\n        {\n            grades_let.push_back(\"\
    D-\");\n        }\n        else\n        {\n            grades_let.push_back(\"\
    E\");\n        }\n    }\n    return grades_let;", "    std::vector<std::string>\
    \ letter_grades;\n    std::string letter_grade;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        if (grades[i] == 4.0) {\n            letter_grade = \"A+\";\n\
    \        } else if (grades[i] >= 3.7) {\n            letter_grade = \"A\";\n \
    \       } else if (grades[i] >= 3.3) {\n            letter_grade = \"A-\";\n \
    \       } else if (grades[i] >= 3.0) {\n            letter_grade = \"B+\";\n \
    \       } else if (grades[i] >= 2.7) {\n            letter_grade = \"B\";\n  \
    \      } else if (grades[i] >= 2.3) {\n            letter_grade = \"B-\";\n  \
    \      } else if (grades[i] >= 2.0) {\n            letter_grade = \"C+\";\n  \
    \      } else if (grades[i] >= 1.7) {\n            letter_grade = \"C\";\n   \
    \     } else if (grades[i] >= 1.3) {\n            letter_grade = \"C-\";\n   \
    \     } else if (grades[i] >= 1.0) {\n            letter_grade = \"D+\";\n   \
    \     } else if (grades[i] >= 0.7) {\n            letter_grade = \"D\";\n    \
    \    } else if (grades[i] >= 0.0) {\n            letter_grade = \"D-\";\n    \
    \    } else {\n            letter_grade = \"E\";\n        }\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "\tstd::vector<std::string> letter_grades;\n\
    \tfor (auto i : grades) {\n\t\tstd::string letter_grade;\n\t\tif (i == 4.0) {\n\
    \t\t\tletter_grade = \"A+\";\n\t\t}\n\t\telse if (i > 3.7) {\n\t\t\tletter_grade\
    \ = \"A\";\n\t\t}\n\t\telse if (i > 3.3) {\n\t\t\tletter_grade = \"A-\";\n\t\t\
    }\n\t\telse if (i > 3.0) {\n\t\t\tletter_grade = \"B+\";\n\t\t}\n\t\telse if (i\
    \ > 2.7) {\n\t\t\tletter_grade = \"B\";\n\t\t}\n\t\telse if (i > 2.3) {\n\t\t\t\
    letter_grade = \"B-\";\n\t\t}\n\t\telse if (i > 2.0) {\n\t\t\tletter_grade = \"\
    C+\";\n\t\t}\n\t\telse if (i > 1.7) {\n\t\t\tletter_grade = \"C\";\n\t\t}\n\t\t\
    else if (i > 1.3) {\n\t\t\tletter_grade = \"C-\";\n\t\t}\n\t\telse if (i > 1.0)\
    \ {\n\t\t\tletter_grade = \"D+\";\n\t\t}\n\t\telse if (i > 0.7) {\n\t\t\tletter_grade\
    \ = \"D\";\n\t\t}\n\t\telse if (i > 0.0) {\n\t\t\tletter_grade = \"D-\";\n\t\t\
    }\n\t\telse {\n\t\t\tletter_grade = \"E\";\n\t\t}\n\t\tletter_grades.push_back(letter_grade);\n\
    \t}\n\treturn letter_grades;", "    float epsilon = 0.0001;\n    std::vector<std::string>\
    \ letters;\n    for (unsigned int i = 0; i < grades.size(); i++) {\n        if\
    \ (grades[i] > 4.0 - epsilon) {\n            letters.push_back(\"A+\");\n    \
    \    } else if (grades[i] > 3.7 - epsilon) {\n            letters.push_back(\"\
    A\");\n        } else if (grades[i] > 3.3 - epsilon) {\n            letters.push_back(\"\
    A-\");\n        } else if (grades[i] > 3.0 - epsilon) {\n            letters.push_back(\"\
    B+\");\n        } else if (grades[i] > 2.7 - epsilon) {\n            letters.push_back(\"\
    B\");\n        } else if (grades[i] > 2.3 - epsilon) {\n            letters.push_back(\"\
    B-\");\n        } else if (grades[i] > 2.0 - epsilon) {\n            letters.push_back(\"\
    C+\");\n        } else if (grades[i] > 1.7 - epsilon) {\n            letters.push_back(\"\
    C\");\n        } else if (grades[i] > 1.3 - epsilon) {\n            letters.push_back(\"\
    C-\");\n        } else if (grades[i] > 1.0 - epsilon) {\n            letters.push_back(\"\
    D+\");\n        } else if (grades[i] > 0.7 - epsilon) {\n            letters.push_back(\"\
    D\");\n        } else if (grades[i] > 0.0 - epsilon) {\n            letters.push_back(\"\
    D-\");\n        } else {\n            letters.push_back(\"E\");\n        }\n \
    \   }\n    return letters;", "    std::vector<std::string> out;\n    for (int\
    \ i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0) {\n        \
    \    out.push_back(\"A+\");\n        } else if (grades[i] >= 3.7) {\n        \
    \    out.push_back(\"A\");\n        } else if (grades[i] >= 3.3) {\n         \
    \   out.push_back(\"A-\");\n        } else if (grades[i] >= 3.0) {\n         \
    \   out.push_back(\"B+\");\n        } else if (grades[i] >= 2.7) {\n         \
    \   out.push_back(\"B\");\n        } else if (grades[i] >= 2.3) {\n          \
    \  out.push_back(\"B-\");\n        } else if (grades[i] >= 2.0) {\n          \
    \  out.push_back(\"C+\");\n        } else if (grades[i] >= 1.7) {\n          \
    \  out.push_back(\"C\");\n        } else if (grades[i] >= 1.3) {\n           \
    \ out.push_back(\"C-\");\n        } else if (grades[i] >= 1.0) {\n           \
    \ out.push_back(\"D+\");\n        } else if (grades[i] >= 0.7) {\n           \
    \ out.push_back(\"D\");\n        } else if (grades[i] >= 0.0) {\n            out.push_back(\"\
    D-\");\n        } else {\n            out.push_back(\"E\");\n        }\n    }\n\
    \    return out;", "    std::vector<std::string> final_grades;\n    for (float\
    \ grade : grades) {\n        if (grade == 4.0) {\n            final_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            final_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            final_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            final_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            final_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            final_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            final_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            final_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            final_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            final_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            final_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            final_grades.push_back(\"\
    D-\");\n        } else {\n            final_grades.push_back(\"E\");\n       \
    \ }\n    }\n    return final_grades;", "    // your code here\n    std::vector<std::string>\
    \ result;\n    for(int i = 0; i < grades.size(); i++){\n        if(grades[i] >=\
    \ 4.0){\n            result.push_back(\"A+\");\n        }\n        else if(grades[i]\
    \ >= 3.7){\n            result.push_back(\"A\");\n        }\n        else if(grades[i]\
    \ >= 3.3){\n            result.push_back(\"A-\");\n        }\n        else if(grades[i]\
    \ >= 3.0){\n            result.push_back(\"B+\");\n        }\n        else if(grades[i]\
    \ >= 2.7){\n            result.push_back(\"B\");\n        }\n        else if(grades[i]\
    \ >= 2.3){\n            result.push_back(\"B-\");\n        }\n        else if(grades[i]\
    \ >= 2.0){\n            result.push_back(\"C+\");\n        }\n        else if(grades[i]\
    \ >= 1.7){\n            result.push_back(\"C\");\n        }\n        else if(grades[i]\
    \ >= 1.3){\n            result.push_back(\"C-\");\n        }\n        else if(grades[i]\
    \ >= 1.0){\n            result.push_back(\"D+\");\n        }\n        else if(grades[i]\
    \ >= 0.7){\n            result.push_back(\"D\");\n        }\n        else if(grades[i]\
    \ >= 0.0){\n            result.push_back(\"D-\");\n        }\n        else{\n\
    \            result.push_back(\"E\");\n        }\n    }\n    return result;",
  '    // TODO: Implement this function', "    // Function parameters:\n    // grades:\
    \ Vector of floats representing GPA scores\n    // Function return: Vector of\
    \ strings representing the letter grades\n    std::vector<std::string> output_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            output_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            output_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            output_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            output_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            output_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            output_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            output_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            output_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            output_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            output_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            output_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            output_grades.push_back(\"\
    D-\");\n        } else {\n            output_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return output_grades;", "    std::vector<std::string> result;\n\
    \    for (auto it = grades.begin(); it != grades.end(); ++it) {\n        if (*it\
    \ == 4.0) {\n            result.push_back(\"A+\");\n        } else if (*it > 3.7)\
    \ {\n            result.push_back(\"A\");\n        } else if (*it > 3.3) {\n \
    \           result.push_back(\"A-\");\n        } else if (*it > 3.0) {\n     \
    \       result.push_back(\"B+\");\n        } else if (*it > 2.7) {\n         \
    \   result.push_back(\"B\");\n        } else if (*it > 2.3) {\n            result.push_back(\"\
    B-\");\n        } else if (*it > 2.0) {\n            result.push_back(\"C+\");\n\
    \        } else if (*it > 1.7) {\n            result.push_back(\"C\");\n     \
    \   } else if (*it > 1.3) {\n            result.push_back(\"C-\");\n        }\
    \ else if (*it > 1.0) {\n            result.push_back(\"D+\");\n        } else\
    \ if (*it > 0.7) {\n            result.push_back(\"D\");\n        } else if (*it\
    \ > 0.0) {\n            result.push_back(\"D-\");\n        } else {\n        \
    \    result.push_back(\"E\");\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ letter_grades;\n    for (int i = 0; i < grades.size(); i++) {\n        float\
    \ grade = grades[i];\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> output;\n\
    \    for (auto it = grades.begin(); it != grades.end(); ++it) {\n        if (*it\
    \ == 4.0) {\n            output.push_back(\"A+\");\n        } else if (*it > 3.7)\
    \ {\n            output.push_back(\"A\");\n        } else if (*it > 3.3) {\n \
    \           output.push_back(\"A-\");\n        } else if (*it > 3.0) {\n     \
    \       output.push_back(\"B+\");\n        } else if (*it > 2.7) {\n         \
    \   output.push_back(\"B\");\n        } else if (*it > 2.3) {\n            output.push_back(\"\
    B-\");\n        } else if (*it > 2.0) {\n            output.push_back(\"C+\");\n\
    \        } else if (*it > 1.7) {\n            output.push_back(\"C\");\n     \
    \   } else if (*it > 1.3) {\n            output.push_back(\"C-\");\n        }\
    \ else if (*it > 1.0) {\n            output.push_back(\"D+\");\n        } else\
    \ if (*it > 0.7) {\n            output.push_back(\"D\");\n        } else if (*it\
    \ > 0.0) {\n            output.push_back(\"D-\");\n        } else {\n        \
    \    output.push_back(\"E\");\n        }\n    }\n    return output;", "    std::vector<std::string>\
    \ letter_grades(grades.size());\n    for (int i = 0; i < grades.size(); i++) {\n\
    \        if (grades[i] > 4.0 || grades[i] < 0.0) {\n            letter_grades[i]\
    \ = \"Error\";\n        } else if (grades[i] == 4.0) {\n            letter_grades[i]\
    \ = \"A+\";\n        } else if (grades[i] > 3.7) {\n            letter_grades[i]\
    \ = \"A\";\n        } else if (grades[i] > 3.3) {\n            letter_grades[i]\
    \ = \"A-\";\n        } else if (grades[i] > 3.0) {\n            letter_grades[i]\
    \ = \"B+\";\n        } else if (grades[i] > 2.7) {\n            letter_grades[i]\
    \ = \"B\";\n        } else if (grades[i] > 2.3) {\n            letter_grades[i]\
    \ = \"B-\";\n        } else if (grades[i] > 2.0) {\n            letter_grades[i]\
    \ = \"C+\";\n        } else if (grades[i] > 1.7) {\n            letter_grades[i]\
    \ = \"C\";\n        } else if (grades[i] > 1.3) {\n            letter_grades[i]\
    \ = \"C-\";\n        } else if (grades[i] > 1.0) {\n            letter_grades[i]\
    \ = \"D+\";\n        } else if (grades[i] > 0.7) {\n            letter_grades[i]\
    \ = \"D\";\n        } else if (grades[i] > 0.0) {\n            letter_grades[i]\
    \ = \"D-\";\n        } else {\n            letter_grades[i] = \"E\";\n       \
    \ }\n    }\n    return letter_grades;", '    return std::vector<std::string>();',
  '    // Write your code here', "  std::vector<std::string> letter_grades;\n  for\
    \ (float grade : grades) {\n    if (grade >= 4.0) {\n      letter_grades.push_back(\"\
    A+\");\n    } else if (grade >= 3.7) {\n      letter_grades.push_back(\"A\");\n\
    \    } else if (grade >= 3.3) {\n      letter_grades.push_back(\"A-\");\n    }\
    \ else if (grade >= 3.0) {\n      letter_grades.push_back(\"B+\");\n    } else\
    \ if (grade >= 2.7) {\n      letter_grades.push_back(\"B\");\n    } else if (grade\
    \ >= 2.3) {\n      letter_grades.push_back(\"B-\");\n    } else if (grade >= 2.0)\
    \ {\n      letter_grades.push_back(\"C+\");\n    } else if (grade >= 1.7) {\n\
    \      letter_grades.push_back(\"C\");\n    } else if (grade >= 1.3) {\n     \
    \ letter_grades.push_back(\"C-\");\n    } else if (grade >= 1.0) {\n      letter_grades.push_back(\"\
    D+\");\n    } else if (grade >= 0.7) {\n      letter_grades.push_back(\"D\");\n\
    \    } else if (grade >= 0.0) {\n      letter_grades.push_back(\"D-\");\n    }\
    \ else {\n      letter_grades.push_back(\"E\");\n    }\n  }\n  return letter_grades;",
  "  std::vector<std::string> letter_grades;\n  for (auto grade : grades) {\n    if\
    \ (grade >= 4.0) {\n      letter_grades.push_back(\"A+\");\n    } else if (grade\
    \ >= 3.7) {\n      letter_grades.push_back(\"A\");\n    } else if (grade >= 3.3)\
    \ {\n      letter_grades.push_back(\"A-\");\n    } else if (grade >= 3.0) {\n\
    \      letter_grades.push_back(\"B+\");\n    } else if (grade >= 2.7) {\n    \
    \  letter_grades.push_back(\"B\");\n    } else if (grade >= 2.3) {\n      letter_grades.push_back(\"\
    B-\");\n    } else if (grade >= 2.0) {\n      letter_grades.push_back(\"C+\");\n\
    \    } else if (grade >= 1.7) {\n      letter_grades.push_back(\"C\");\n    }\
    \ else if (grade >= 1.3) {\n      letter_grades.push_back(\"C-\");\n    } else\
    \ if (grade >= 1.0) {\n      letter_grades.push_back(\"D+\");\n    } else if (grade\
    \ >= 0.7) {\n      letter_grades.push_back(\"D\");\n    } else if (grade >= 0.0)\
    \ {\n      letter_grades.push_back(\"D-\");\n    } else {\n      letter_grades.push_back(\"\
    E\");\n    }\n  }\n  return letter_grades;", "    // Write your code here\n  \
    \  std::vector<std::string> res;\n    for(const auto& e : grades) {\n        if(e\
    \ >= 4.0) {\n            res.push_back(\"A+\");\n        } else if(e >= 3.7) {\n\
    \            res.push_back(\"A\");\n        } else if(e >= 3.3) {\n          \
    \  res.push_back(\"A-\");\n        } else if(e >= 3.0) {\n            res.push_back(\"\
    B+\");\n        } else if(e >= 2.7) {\n            res.push_back(\"B\");\n   \
    \     } else if(e >= 2.3) {\n            res.push_back(\"B-\");\n        } else\
    \ if(e >= 2.0) {\n            res.push_back(\"C+\");\n        } else if(e >= 1.7)\
    \ {\n            res.push_back(\"C\");\n        } else if(e >= 1.3) {\n      \
    \      res.push_back(\"C-\");\n        } else if(e >= 1.0) {\n            res.push_back(\"\
    D+\");\n        } else if(e >= 0.7) {\n            res.push_back(\"D\");\n   \
    \     } else if(e >= 0.0) {\n            res.push_back(\"D-\");\n        } else\
    \ {\n            res.push_back(\"E\");\n        }\n    }\n    return res;", " \
    \   std::vector<std::string> letter_grades;\n    // Your code goes here\n    float\
    \ gpa;\n    std::string letter;\n    for(int i=0;i<grades.size();i++){\n     \
    \   gpa = grades[i];\n        if(gpa==4.0){\n            letter = \"A+\";\n  \
    \      }\n        else if(gpa>3.7){\n            letter = \"A\";\n        }\n\
    \        else if(gpa>3.3){\n            letter = \"A-\";\n        }\n        else\
    \ if(gpa>3.0){\n            letter = \"B+\";\n        }\n        else if(gpa>2.7){\n\
    \            letter = \"B\";\n        }\n        else if(gpa>2.3){\n         \
    \   letter = \"B-\";\n        }\n        else if(gpa>2.0){\n            letter\
    \ = \"C+\";\n        }\n        else if(gpa>1.7){\n            letter = \"C\"\
    ;\n        }\n        else if(gpa>1.3){\n            letter = \"C-\";\n      \
    \  }\n        else if(gpa>1.0){\n            letter = \"D+\";\n        }\n   \
    \     else if(gpa>0.7){\n            letter = \"D\";\n        }\n        else\
    \ if(gpa>0.0){\n            letter = \"D-\";\n        }\n        else{\n     \
    \       letter = \"E\";\n        }\n        letter_grades.push_back(letter);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> result;\n  \
    \  for (int i = 0; i < grades.size(); i++) {\n        // TODO: Implement grading\
    \ algorithm\n        if (grades[i] >= 4.0) {\n            result.push_back(\"\
    A+\");\n        } else if (grades[i] >= 3.7) {\n            result.push_back(\"\
    A\");\n        } else if (grades[i] >= 3.3) {\n            result.push_back(\"\
    A-\");\n        } else if (grades[i] >= 3.0) {\n            result.push_back(\"\
    B+\");\n        } else if (grades[i] >= 2.7) {\n            result.push_back(\"\
    B\");\n        } else if (grades[i] >= 2.3) {\n            result.push_back(\"\
    B-\");\n        } else if (grades[i] >= 2.0) {\n            result.push_back(\"\
    C+\");\n        } else if (grades[i] >= 1.7) {\n            result.push_back(\"\
    C\");\n        } else if (grades[i] >= 1.3) {\n            result.push_back(\"\
    C-\");\n        } else if (grades[i] >= 1.0) {\n            result.push_back(\"\
    D+\");\n        } else if (grades[i] >= 0.7) {\n            result.push_back(\"\
    D\");\n        } else if (grades[i] >= 0.0) {\n            result.push_back(\"\
    D-\");\n        } else {\n            result.push_back(\"E\");\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> grade_letter;\n    for\
    \ (size_t i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0) {\n\
    \            grade_letter.push_back(\"A+\");\n        } else if (grades[i] > 3.7)\
    \ {\n            grade_letter.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            grade_letter.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            grade_letter.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            grade_letter.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            grade_letter.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            grade_letter.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            grade_letter.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            grade_letter.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            grade_letter.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            grade_letter.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            grade_letter.push_back(\"D-\");\n        } else {\n  \
    \          grade_letter.push_back(\"E\");\n        }\n    }\n    return grade_letter;",
  "    std::vector<std::string> final_letter_grades;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        if (grades[i] >= 4.0) {\n            final_letter_grades.push_back(\"\
    A+\");\n        } else if (grades[i] >= 3.7) {\n            final_letter_grades.push_back(\"\
    A\");\n        } else if (grades[i] >= 3.3) {\n            final_letter_grades.push_back(\"\
    A-\");\n        } else if (grades[i] >= 3.0) {\n            final_letter_grades.push_back(\"\
    B+\");\n        } else if (grades[i] >= 2.7) {\n            final_letter_grades.push_back(\"\
    B\");\n        } else if (grades[i] >= 2.3) {\n            final_letter_grades.push_back(\"\
    B-\");\n        } else if (grades[i] >= 2.0) {\n            final_letter_grades.push_back(\"\
    C+\");\n        } else if (grades[i] >= 1.7) {\n            final_letter_grades.push_back(\"\
    C\");\n        } else if (grades[i] >= 1.3) {\n            final_letter_grades.push_back(\"\
    C-\");\n        } else if (grades[i] >= 1.0) {\n            final_letter_grades.push_back(\"\
    D+\");\n        } else if (grades[i] >= 0.7) {\n            final_letter_grades.push_back(\"\
    D\");\n        } else if (grades[i] >= 0.0) {\n            final_letter_grades.push_back(\"\
    D-\");\n        } else {\n            final_letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return final_letter_grades;", "    std::vector<std::string>\
    \ ans;\n    for (auto it: grades) {\n        if (it >= 4.0) {\n            ans.push_back(\"\
    A+\");\n        } else if (it >= 3.7) {\n            ans.push_back(\"A\");\n \
    \       } else if (it >= 3.3) {\n            ans.push_back(\"A-\");\n        }\
    \ else if (it >= 3.0) {\n            ans.push_back(\"B+\");\n        } else if\
    \ (it >= 2.7) {\n            ans.push_back(\"B\");\n        } else if (it >= 2.3)\
    \ {\n            ans.push_back(\"B-\");\n        } else if (it >= 2.0) {\n   \
    \         ans.push_back(\"C+\");\n        } else if (it >= 1.7) {\n          \
    \  ans.push_back(\"C\");\n        } else if (it >= 1.3) {\n            ans.push_back(\"\
    C-\");\n        } else if (it >= 1.0) {\n            ans.push_back(\"D+\");\n\
    \        } else if (it >= 0.7) {\n            ans.push_back(\"D\");\n        }\
    \ else if (it >= 0.0) {\n            ans.push_back(\"D-\");\n        } else {\n\
    \            ans.push_back(\"E\");\n        }\n    }\n    return ans;", "    //your\
    \ code here\n    std::vector<std::string>  letters;\n    std::string gpa;\n  \
    \  for(unsigned i = 0; i < grades.size(); i++){\n        if(grades[i] >= 4.0){\n\
    \            gpa = \"A+\";\n        }else if(grades[i] > 3.7){\n            gpa\
    \ = \"A\";\n        }else if(grades[i] > 3.3){\n            gpa = \"A-\";\n  \
    \      }else if(grades[i] > 3.0){\n            gpa = \"B+\";\n        }else if(grades[i]\
    \ > 2.7){\n            gpa = \"B\";\n        }else if(grades[i] > 2.3){\n    \
    \        gpa = \"B-\";\n        }else if(grades[i] > 2.0){\n            gpa =\
    \ \"C+\";\n        }else if(grades[i] > 1.7){\n            gpa = \"C\";\n    \
    \    }else if(grades[i] > 1.3){\n            gpa = \"C-\";\n        }else if(grades[i]\
    \ > 1.0){\n            gpa = \"D+\";\n        }else if(grades[i] > 0.7){\n   \
    \         gpa = \"D\";\n        }else if(grades[i] > 0.0){\n            gpa =\
    \ \"D-\";\n        }else if(grades[i] == 0.0){\n            gpa = \"E\";\n   \
    \     }else{\n            gpa = \"ERROR\";\n        }\n        letters.push_back(gpa);\n\
    \    }\n    return letters;", '  // Write your code here...', "    std::vector<std::string>\
    \ letter_grades;\n    for (int i = 0; i < grades.size(); i++) {\n        std::string\
    \ letter;\n        if (grades[i] >= 4.0) {\n            letter = \"A+\";\n   \
    \     } else if (grades[i] >= 3.7) {\n            letter = \"A\";\n        } else\
    \ if (grades[i] >= 3.3) {\n            letter = \"A-\";\n        } else if (grades[i]\
    \ >= 3.0) {\n            letter = \"B+\";\n        } else if (grades[i] >= 2.7)\
    \ {\n            letter = \"B\";\n        } else if (grades[i] >= 2.3) {\n   \
    \         letter = \"B-\";\n        } else if (grades[i] >= 2.0) {\n         \
    \   letter = \"C+\";\n        } else if (grades[i] >= 1.7) {\n            letter\
    \ = \"C\";\n        } else if (grades[i] >= 1.3) {\n            letter = \"C-\"\
    ;\n        } else if (grades[i] >= 1.0) {\n            letter = \"D+\";\n    \
    \    } else if (grades[i] >= 0.7) {\n            letter = \"D\";\n        } else\
    \ if (grades[i] >= 0.0) {\n            letter = \"D-\";\n        } else {\n  \
    \          letter = \"E\";\n        }\n        letter_grades.push_back(letter);\n\
    \    }\n    return letter_grades;", "  std::vector<std::string> result;\n  //\
    \ Type your solution here\n  for(int i=0;i<grades.size();i++){\n    if(grades[i]>=4.0){\n\
    \      result.push_back(\"A+\");\n    }\n    else if(grades[i]>=3.7){\n      result.push_back(\"\
    A\");\n    }\n    else if(grades[i]>=3.3){\n      result.push_back(\"A-\");\n\
    \    }\n    else if(grades[i]>=3.0){\n      result.push_back(\"B+\");\n    }\n\
    \    else if(grades[i]>=2.7){\n      result.push_back(\"B\");\n    }\n    else\
    \ if(grades[i]>=2.3){\n      result.push_back(\"B-\");\n    }\n    else if(grades[i]>=2.0){\n\
    \      result.push_back(\"C+\");\n    }\n    else if(grades[i]>=1.7){\n      result.push_back(\"\
    C\");\n    }\n    else if(grades[i]>=1.3){\n      result.push_back(\"C-\");\n\
    \    }\n    else if(grades[i]>=1.0){\n      result.push_back(\"D+\");\n    }\n\
    \    else if(grades[i]>=0.7){\n      result.push_back(\"D\");\n    }\n    else\
    \ if(grades[i]>=0.0){\n      result.push_back(\"D-\");\n    }\n    else if(grades[i]>=-0.5){\n\
    \      result.push_back(\"E\");\n    }\n  }\n  return result;", "  std::vector<std::string>\
    \ letter_grades;\n  std::transform(grades.begin(), grades.end(),\n           \
    \      std::back_inserter(letter_grades),\n                 [](float g) -> std::string\
    \ {\n                   if (g == 4.0) {\n                     return \"A+\";\n\
    \                   } else if (g >= 3.7) {\n                     return \"A\"\
    ;\n                   } else if (g >= 3.3) {\n                     return \"A-\"\
    ;\n                   } else if (g >= 3.0) {\n                     return \"B+\"\
    ;\n                   } else if (g >= 2.7) {\n                     return \"B\"\
    ;\n                   } else if (g >= 2.3) {\n                     return \"B-\"\
    ;\n                   } else if (g >= 2.0) {\n                     return \"C+\"\
    ;\n                   } else if (g >= 1.7) {\n                     return \"C\"\
    ;\n                   } else if (g >= 1.3) {\n                     return \"C-\"\
    ;\n                   } else if (g >= 1.0) {\n                     return \"D+\"\
    ;\n                   } else if (g >= 0.7) {\n                     return \"D\"\
    ;\n                   } else if (g > 0.0) {\n                     return \"D-\"\
    ;\n                   } else {\n                     return \"E\";\n         \
    \          }\n                 });\n  return letter_grades;", "  std::vector<std::string>\
    \ letter_grades;\n  std::string letter_grade;\n  // YOUR CODE HERE\n  return letter_grades;",
  "    std::vector<std::string> result;\n    for (auto g : grades) {\n        if (g\
    \ > 4.0) {\n            result.push_back(\"A+\");\n        } else if (g >= 3.7)\
    \ {\n            result.push_back(\"A\");\n        } else if (g >= 3.3) {\n  \
    \          result.push_back(\"A-\");\n        } else if (g >= 3.0) {\n       \
    \     result.push_back(\"B+\");\n        } else if (g >= 2.7) {\n            result.push_back(\"\
    B\");\n        } else if (g >= 2.3) {\n            result.push_back(\"B-\");\n\
    \        } else if (g >= 2.0) {\n            result.push_back(\"C+\");\n     \
    \   } else if (g >= 1.7) {\n            result.push_back(\"C\");\n        } else\
    \ if (g >= 1.3) {\n            result.push_back(\"C-\");\n        } else if (g\
    \ >= 1.0) {\n            result.push_back(\"D+\");\n        } else if (g >= 0.7)\
    \ {\n            result.push_back(\"D\");\n        } else if (g >= 0.0) {\n  \
    \          result.push_back(\"D-\");\n        } else {\n            result.push_back(\"\
    E\");\n        }\n    }\n    return result;", "  std::vector<std::string> letters;\n\
    \  for (int i = 0; i < grades.size(); i++) {\n    if (grades[i] >= 4.0) {\n  \
    \    letters.push_back(\"A+\");\n    } else if (grades[i] >= 3.7) {\n      letters.push_back(\"\
    A\");\n    } else if (grades[i] >= 3.3) {\n      letters.push_back(\"A-\");\n\
    \    } else if (grades[i] >= 3.0) {\n      letters.push_back(\"B+\");\n    } else\
    \ if (grades[i] >= 2.7) {\n      letters.push_back(\"B\");\n    } else if (grades[i]\
    \ >= 2.3) {\n      letters.push_back(\"B-\");\n    } else if (grades[i] >= 2.0)\
    \ {\n      letters.push_back(\"C+\");\n    } else if (grades[i] >= 1.7) {\n  \
    \    letters.push_back(\"C\");\n    } else if (grades[i] >= 1.3) {\n      letters.push_back(\"\
    C-\");\n    } else if (grades[i] >= 1.0) {\n      letters.push_back(\"D+\");\n\
    \    } else if (grades[i] >= 0.7) {\n      letters.push_back(\"D\");\n    } else\
    \ if (grades[i] >= 0.0) {\n      letters.push_back(\"D-\");\n    } else {\n  \
    \    letters.push_back(\"E\");\n    }\n  }\n  return letters;", "    std::vector<std::string>\
    \ letter_grades;\n    for (size_t i = 0; i < grades.size(); i++) {\n        std::string\
    \ letter_grade;\n        if (grades[i] >= 4.0) {\n            letter_grade = \"\
    A+\";\n        } else if (grades[i] >= 3.7) {\n            letter_grade = \"A\"\
    ;\n        } else if (grades[i] >= 3.3) {\n            letter_grade = \"A-\";\n\
    \        } else if (grades[i] >= 3.0) {\n            letter_grade = \"B+\";\n\
    \        } else if (grades[i] >= 2.7) {\n            letter_grade = \"B\";\n \
    \       } else if (grades[i] >= 2.3) {\n            letter_grade = \"B-\";\n \
    \       } else if (grades[i] >= 2.0) {\n            letter_grade = \"C+\";\n \
    \       } else if (grades[i] >= 1.7) {\n            letter_grade = \"C\";\n  \
    \      } else if (grades[i] >= 1.3) {\n            letter_grade = \"C-\";\n  \
    \      } else if (grades[i] >= 1.0) {\n            letter_grade = \"D+\";\n  \
    \      } else if (grades[i] >= 0.7) {\n            letter_grade = \"D\";\n   \
    \     } else if (grades[i] >= 0.0) {\n            letter_grade = \"D-\";\n   \
    \     } else {\n            letter_grade = \"E\";\n        }\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        float grade = grades[i];\n\
    \        std::string letter_grade;\n        if (grade >= 4.0) {\n            letter_grade\
    \ = \"A+\";\n        } else if (grade >= 3.7) {\n            letter_grade = \"\
    A\";\n        } else if (grade >= 3.3) {\n            letter_grade = \"A-\";\n\
    \        } else if (grade >= 3.0) {\n            letter_grade = \"B+\";\n    \
    \    } else if (grade >= 2.7) {\n            letter_grade = \"B\";\n        }\
    \ else if (grade >= 2.3) {\n            letter_grade = \"B-\";\n        } else\
    \ if (grade >= 2.0) {\n            letter_grade = \"C+\";\n        } else if (grade\
    \ >= 1.7) {\n            letter_grade = \"C\";\n        } else if (grade >= 1.3)\
    \ {\n            letter_grade = \"C-\";\n        } else if (grade >= 1.0) {\n\
    \            letter_grade = \"D+\";\n        } else if (grade >= 0.7) {\n    \
    \        letter_grade = \"D\";\n        } else if (grade >= 0.0) {\n         \
    \   letter_grade = \"D-\";\n        } else {\n            letter_grade = \"E\"\
    ;\n        }\n        letter_grades.push_back(letter_grade);\n    }\n    return\
    \ letter_grades;", "    std::vector<std::string> res;\n    for (float g : grades)\
    \ {\n        if (g >= 4.0) {\n            res.push_back(\"A+\");\n        } else\
    \ if (g >= 3.7) {\n            res.push_back(\"A\");\n        } else if (g >=\
    \ 3.3) {\n            res.push_back(\"A-\");\n        } else if (g >= 3.0) {\n\
    \            res.push_back(\"B+\");\n        } else if (g >= 2.7) {\n        \
    \    res.push_back(\"B\");\n        } else if (g >= 2.3) {\n            res.push_back(\"\
    B-\");\n        } else if (g >= 2.0) {\n            res.push_back(\"C+\");\n \
    \       } else if (g >= 1.7) {\n            res.push_back(\"C\");\n        } else\
    \ if (g >= 1.3) {\n            res.push_back(\"C-\");\n        } else if (g >=\
    \ 1.0) {\n            res.push_back(\"D+\");\n        } else if (g >= 0.7) {\n\
    \            res.push_back(\"D\");\n        } else if (g >= 0.0) {\n         \
    \   res.push_back(\"D-\");\n        } else {\n            res.push_back(\"E\"\
    );\n        }\n    }\n    return res;", "    // Please complete this function.\n\
    \    int i;\n    std::vector<std::string> letter_grades;\n    for(i=0;i<grades.size();i++)\n\
    \    {\n        if(grades[i]==4.0)\n        {\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(grades[i]>3.7 && grades[i]<4.0)\n        {\n\
    \            letter_grades.push_back(\"A\");\n        }\n        else if(grades[i]>3.3\
    \ && grades[i]<=3.7)\n        {\n            letter_grades.push_back(\"A-\");\n\
    \        }\n        else if(grades[i]>3.0 && grades[i]<=3.3)\n        {\n    \
    \        letter_grades.push_back(\"B+\");\n        }\n        else if(grades[i]>2.7\
    \ && grades[i]<=3.0)\n        {\n            letter_grades.push_back(\"B\");\n\
    \        }\n        else if(grades[i]>2.3 && grades[i]<=2.7)\n        {\n    \
    \        letter_grades.push_back(\"B-\");\n        }\n        else if(grades[i]>2.0\
    \ && grades[i]<=2.3)\n        {\n            letter_grades.push_back(\"C+\");\n\
    \        }\n        else if(grades[i]>1.7 && grades[i]<=2.0)\n        {\n    \
    \        letter_grades.push_back(\"C\");\n        }\n        else if(grades[i]>1.3\
    \ && grades[i]<=1.7)\n        {\n            letter_grades.push_back(\"C-\");\n\
    \        }\n        else if(grades[i]>1.0 && grades[i]<=1.3)\n        {\n    \
    \        letter_grades.push_back(\"D+\");\n        }\n        else if(grades[i]>0.7\
    \ && grades[i]<=1.0)\n        {\n            letter_grades.push_back(\"D\");\n\
    \        }\n        else if(grades[i]", "    std::vector<std::string> letter_grades(grades.size());\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0)\
    \ {\n            letter_grades[i] = \"A+\";\n        } else if (grades[i] >= 3.7)\
    \ {\n            letter_grades[i] = \"A\";\n        } else if (grades[i] >= 3.3)\
    \ {\n            letter_grades[i] = \"A-\";\n        } else if (grades[i] >= 3.0)\
    \ {\n            letter_grades[i] = \"B+\";\n        } else if (grades[i] >= 2.7)\
    \ {\n            letter_grades[i] = \"B\";\n        } else if (grades[i] >= 2.3)\
    \ {\n            letter_grades[i] = \"B-\";\n        } else if (grades[i] >= 2.0)\
    \ {\n            letter_grades[i] = \"C+\";\n        } else if (grades[i] >= 1.7)\
    \ {\n            letter_grades[i] = \"C\";\n        } else if (grades[i] >= 1.3)\
    \ {\n            letter_grades[i] = \"C-\";\n        } else if (grades[i] >= 1.0)\
    \ {\n            letter_grades[i] = \"D+\";\n        } else if (grades[i] >= 0.7)\
    \ {\n            letter_grades[i] = \"D\";\n        } else if (grades[i] >= 0.0)\
    \ {\n            letter_grades[i] = \"D-\";\n        } else {\n            letter_grades[i]\
    \ = \"E\";\n        }\n    }\n    return letter_grades;", "\tstd::vector<std::string>\
    \ v;\n\tfor (int i = 0; i < grades.size(); i++) {\n\t\tif (grades[i] >= 4.0) {\n\
    \t\t\tv.push_back(\"A+\");\n\t\t}\n\t\telse if (grades[i] >= 3.7) {\n\t\t\tv.push_back(\"\
    A\");\n\t\t}\n\t\telse if (grades[i] >= 3.3) {\n\t\t\tv.push_back(\"A-\");\n\t\
    \t}\n\t\telse if (grades[i] >= 3.0) {\n\t\t\tv.push_back(\"B+\");\n\t\t}\n\t\t\
    else if (grades[i] >= 2.7) {\n\t\t\tv.push_back(\"B\");\n\t\t}\n\t\telse if (grades[i]\
    \ >= 2.3) {\n\t\t\tv.push_back(\"B-\");\n\t\t}\n\t\telse if (grades[i] >= 2.0)\
    \ {\n\t\t\tv.push_back(\"C+\");\n\t\t}\n\t\telse if (grades[i] >= 1.7) {\n\t\t\
    \tv.push_back(\"C\");\n\t\t}\n\t\telse if (grades[i] >= 1.3) {\n\t\t\tv.push_back(\"\
    C-\");\n\t\t}\n\t\telse if (grades[i] >= 1.0) {\n\t\t\tv.push_back(\"D+\");\n\t\
    \t}\n\t\telse if (grades[i] >= 0.7) {\n\t\t\tv.push_back(\"D\");\n\t\t}\n\t\t\
    else if (grades[i] >= 0.0) {\n\t\t\tv.push_back(\"D-\");\n\t\t}\n\t\telse if (grades[i]\
    \ == 0.0) {\n\t\t\tv.push_back(\"E\");\n\t\t}\n\t}\n\treturn v;", "  std::vector<std::string>\
    \ letter_grades;\n  for (float grade : grades) {\n    if (grade == 4.0) {\n  \
    \    letter_grades.push_back(\"A+\");\n    } else if (grade >= 3.7) {\n      letter_grades.push_back(\"\
    A\");\n    } else if (grade >= 3.3) {\n      letter_grades.push_back(\"A-\");\n\
    \    } else if (grade >= 3.0) {\n      letter_grades.push_back(\"B+\");\n    }\
    \ else if (grade >= 2.7) {\n      letter_grades.push_back(\"B\");\n    } else\
    \ if (grade >= 2.3) {\n      letter_grades.push_back(\"B-\");\n    } else if (grade\
    \ >= 2.0) {\n      letter_grades.push_back(\"C+\");\n    } else if (grade >= 1.7)\
    \ {\n      letter_grades.push_back(\"C\");\n    } else if (grade >= 1.3) {\n \
    \     letter_grades.push_back(\"C-\");\n    } else if (grade >= 1.0) {\n     \
    \ letter_grades.push_back(\"D+\");\n    } else if (grade >= 0.7) {\n      letter_grades.push_back(\"\
    D\");\n    } else if (grade >= 0.0) {\n      letter_grades.push_back(\"D-\");\n\
    \    } else {\n      letter_grades.push_back(\"E\");\n    }\n  }\n  return letter_grades;",
  "    std::vector<std::string> result;\n    for (float grade : grades) {\n      \
    \  if (grade >= 4.0) {\n            result.push_back(\"A+\");\n        } else\
    \ if (grade >= 3.7) {\n            result.push_back(\"A\");\n        } else if\
    \ (grade >= 3.3) {\n            result.push_back(\"A-\");\n        } else if (grade\
    \ >= 3.0) {\n            result.push_back(\"B+\");\n        } else if (grade >=\
    \ 2.7) {\n            result.push_back(\"B\");\n        } else if (grade >= 2.3)\
    \ {\n            result.push_back(\"B-\");\n        } else if (grade >= 2.0) {\n\
    \            result.push_back(\"C+\");\n        } else if (grade >= 1.7) {\n \
    \           result.push_back(\"C\");\n        } else if (grade >= 1.3) {\n   \
    \         result.push_back(\"C-\");\n        } else if (grade >= 1.0) {\n    \
    \        result.push_back(\"D+\");\n        } else if (grade >= 0.7) {\n     \
    \       result.push_back(\"D\");\n        } else if (grade >= 0.0) {\n       \
    \     result.push_back(\"D-\");\n        } else {\n            result.push_back(\"\
    E\");\n        }\n    }\n    return result;", "    std::vector<std::string> letters;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0)\
    \ letters.push_back(\"A+\");\n        else if (grades[i] >= 3.7) letters.push_back(\"\
    A\");\n        else if (grades[i] >= 3.3) letters.push_back(\"A-\");\n       \
    \ else if (grades[i] >= 3.0) letters.push_back(\"B+\");\n        else if (grades[i]\
    \ >= 2.7) letters.push_back(\"B\");\n        else if (grades[i] >= 2.3) letters.push_back(\"\
    B-\");\n        else if (grades[i] >= 2.0) letters.push_back(\"C+\");\n      \
    \  else if (grades[i] >= 1.7) letters.push_back(\"C\");\n        else if (grades[i]\
    \ >= 1.3) letters.push_back(\"C-\");\n        else if (grades[i] >= 1.0) letters.push_back(\"\
    D+\");\n        else if (grades[i] >= 0.7) letters.push_back(\"D\");\n       \
    \ else if (grades[i] >= 0.0) letters.push_back(\"D-\");\n        else letters.push_back(\"\
    E\");\n    }\n    return letters;", "    std::vector<std::string> letter_grades;\n\
    \    for (auto &grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letters;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0)\
    \ {\n            letters.push_back(\"A+\");\n        } else if (grades[i] >= 3.7)\
    \ {\n            letters.push_back(\"A\");\n        } else if (grades[i] >= 3.3)\
    \ {\n            letters.push_back(\"A-\");\n        } else if (grades[i] >= 3.0)\
    \ {\n            letters.push_back(\"B+\");\n        } else if (grades[i] >= 2.7)\
    \ {\n            letters.push_back(\"B\");\n        } else if (grades[i] >= 2.3)\
    \ {\n            letters.push_back(\"B-\");\n        } else if (grades[i] >= 2.0)\
    \ {\n            letters.push_back(\"C+\");\n        } else if (grades[i] >= 1.7)\
    \ {\n            letters.push_back(\"C\");\n        } else if (grades[i] >= 1.3)\
    \ {\n            letters.push_back(\"C-\");\n        } else if (grades[i] >= 1.0)\
    \ {\n            letters.push_back(\"D+\");\n        } else if (grades[i] >= 0.7)\
    \ {\n            letters.push_back(\"D\");\n        } else if (grades[i] >= 0.0)\
    \ {\n            letters.push_back(\"D-\");\n        } else {\n            letters.push_back(\"\
    E\");\n        }\n    }\n    return letters;", "  //write code here\n  std::vector<std::string>\
    \ result;\n  for(auto i = grades.begin(); i != grades.end(); i++){\n    std::string\
    \ grade;\n    if(*i >= 4.0){\n      grade = \"A+\";\n    }else if(*i >= 3.7){\n\
    \      grade = \"A\";\n    }else if(*i >= 3.3){\n      grade = \"A-\";\n    }else\
    \ if(*i >= 3.0){\n      grade = \"B+\";\n    }else if(*i >= 2.7){\n      grade\
    \ = \"B\";\n    }else if(*i >= 2.3){\n      grade = \"B-\";\n    }else if(*i >=\
    \ 2.0){\n      grade = \"C+\";\n    }else if(*i >= 1.7){\n      grade = \"C\"\
    ;\n    }else if(*i >= 1.3){\n      grade = \"C-\";\n    }else if(*i >= 1.0){\n\
    \      grade = \"D+\";\n    }else if(*i >= 0.7){\n      grade = \"D\";\n    }else\
    \ if(*i >= 0.0){\n      grade = \"D-\";\n    }else if(*i == 0.0){\n      grade\
    \ = \"E\";\n    }\n    result.push_back(grade);\n  }\n  return result;", "   std::vector<std::string>\
    \ letter_grades;\n   for (int i = 0; i < grades.size(); i++) {\n      float grade\
    \ = grades[i];\n      std::string letter_grade;\n      if (grade >= 3.7) letter_grade\
    \ = \"A\";\n      else if (grade >= 3.3) letter_grade = \"A-\";\n      else if\
    \ (grade >= 3.0) letter_grade = \"B+\";\n      else if (grade >= 2.7) letter_grade\
    \ = \"B\";\n      else if (grade >= 2.3) letter_grade = \"B-\";\n      else if\
    \ (grade >= 2.0) letter_grade = \"C+\";\n      else if (grade >= 1.7) letter_grade\
    \ = \"C\";\n      else if (grade >= 1.3) letter_grade = \"C-\";\n      else if\
    \ (grade >= 1.0) letter_grade = \"D+\";\n      else if (grade >= 0.7) letter_grade\
    \ = \"D\";\n      else if (grade >= 0.0) letter_grade = \"D-\";\n      else letter_grade\
    \ = \"E\";\n      letter_grades.push_back(letter_grade);\n   }\n   return letter_grades;",
  "    std::vector<std::string> result;\n    for (int i = 0; i < grades.size(); i++)\
    \ {\n        if (grades[i] == 4.0) {\n            result.push_back(\"A+\");\n\
    \        } else if (grades[i] >= 3.7) {\n            result.push_back(\"A\");\n\
    \        } else if (grades[i] >= 3.3) {\n            result.push_back(\"A-\");\n\
    \        } else if (grades[i] >= 3.0) {\n            result.push_back(\"B+\");\n\
    \        } else if (grades[i] >= 2.7) {\n            result.push_back(\"B\");\n\
    \        } else if (grades[i] >= 2.3) {\n            result.push_back(\"B-\");\n\
    \        } else if (grades[i] >= 2.0) {\n            result.push_back(\"C+\");\n\
    \        } else if (grades[i] >= 1.7) {\n            result.push_back(\"C\");\n\
    \        } else if (grades[i] >= 1.3) {\n            result.push_back(\"C-\");\n\
    \        } else if (grades[i] >= 1.0) {\n            result.push_back(\"D+\");\n\
    \        } else if (grades[i] >= 0.7) {\n            result.push_back(\"D\");\n\
    \        } else if (grades[i] >= 0.0) {\n            result.push_back(\"D-\");\n\
    \        } else {\n            result.push_back(\"E\");\n        }\n    }\n  \
    \  return result;", "  std::vector<std::string> result;\n  for (float grade :\
    \ grades) {\n    std::string new_grade;\n    if (grade > 3.7) {\n      new_grade\
    \ = \"A+\";\n    } else if (grade > 3.3) {\n      new_grade = \"A\";\n    } else\
    \ if (grade > 3.0) {\n      new_grade = \"A-\";\n    } else if (grade > 2.7) {\n\
    \      new_grade = \"B+\";\n    } else if (grade > 2.3) {\n      new_grade = \"\
    B\";\n    } else if (grade > 2.0) {\n      new_grade = \"B-\";\n    } else if\
    \ (grade > 1.7) {\n      new_grade = \"C+\";\n    } else if (grade > 1.3) {\n\
    \      new_grade = \"C\";\n    } else if (grade > 1.0) {\n      new_grade = \"\
    C-\";\n    } else if (grade > 0.7) {\n      new_grade = \"D+\";\n    } else if\
    \ (grade > 0.0) {\n      new_grade = \"D\";\n    } else if (grade > -0.1) {\n\
    \      new_grade = \"D-\";\n    } else {\n      new_grade = \"E\";\n    }\n  \
    \  result.push_back(new_grade);\n  }\n  return result;", "    std::vector<std::string>\
    \ result;\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ >= 4.0) {\n            result.push_back(\"A+\");\n        } else if (grades[i]\
    \ >= 3.7) {\n            result.push_back(\"A\");\n        } else if (grades[i]\
    \ >= 3.3) {\n            result.push_back(\"A-\");\n        } else if (grades[i]\
    \ >= 3.0) {\n            result.push_back(\"B+\");\n        } else if (grades[i]\
    \ >= 2.7) {\n            result.push_back(\"B\");\n        } else if (grades[i]\
    \ >= 2.3) {\n            result.push_back(\"B-\");\n        } else if (grades[i]\
    \ >= 2.0) {\n            result.push_back(\"C+\");\n        } else if (grades[i]\
    \ >= 1.7) {\n            result.push_back(\"C\");\n        } else if (grades[i]\
    \ >= 1.3) {\n            result.push_back(\"C-\");\n        } else if (grades[i]\
    \ >= 1.0) {\n            result.push_back(\"D+\");\n        } else if (grades[i]\
    \ >= 0.7) {\n            result.push_back(\"D\");\n        } else if (grades[i]\
    \ >= 0.0) {\n            result.push_back(\"D-\");\n        } else {\n       \
    \     result.push_back(\"E\");\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ letterGrades;\n    for (int i = 0; i < grades.size(); i++) {\n        // A+\n\
    \        if (grades[i] == 4.0) {\n            letterGrades.push_back(\"A+\");\n\
    \        }\n        // A\n        else if (grades[i] > 3.7) {\n            letterGrades.push_back(\"\
    A\");\n        }\n        // A-\n        else if (grades[i] > 3.3) {\n       \
    \     letterGrades.push_back(\"A-\");\n        }\n        // B+\n        else\
    \ if (grades[i] > 3.0) {\n            letterGrades.push_back(\"B+\");\n      \
    \  }\n        // B\n        else if (grades[i] > 2.7) {\n            letterGrades.push_back(\"\
    B\");\n        }\n        // B-\n        else if (grades[i] > 2.3) {\n       \
    \     letterGrades.push_back(\"B-\");\n        }\n        // C+\n        else\
    \ if (grades[i] > 2.0) {\n            letterGrades.push_back(\"C+\");\n      \
    \  }\n        // C\n        else if (grades[i] > 1.7) {\n            letterGrades.push_back(\"\
    C\");\n        }\n        // C-\n        else if (grades[i] > 1.3) {\n       \
    \     letterGrades.push_back(\"C-\");\n        }\n        // D+\n        else\
    \ if (grades[i] > 1.0) {\n            letterGrades.push_back(\"D+\");\n      \
    \  }\n        // D\n        else if (grades[i] > 0.7) {\n            letterGrades.push_back(\"\
    D\");\n        }\n        // D-\n        else if (grades[i] > 0.0) {\n       \
    \     letterGrades.push_back(\"D-\");\n        }\n        // E\n        else {\n\
    \            letterGrades.push_back(\"E\");\n        }\n    }\n    return letterGrades;",
  "    std::vector<std::string> letter_grades;\n    for (unsigned int i = 0; i < grades.size();\
    \ i++) {\n        if (grades[i] >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grades[i] >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grades[i] >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grades[i] >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grades[i] >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grades[i] >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grades[i] >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grades[i] >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grades[i] >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grades[i] >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grades[i] >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grades[i] >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> output;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] > 4.0) {\n\
    \            std::string temp = \"A+\";\n            output.push_back(temp);\n\
    \        }\n        else if (grades[i] > 3.7) {\n            std::string temp\
    \ = \"A\";\n            output.push_back(temp);\n        }\n        else if (grades[i]\
    \ > 3.3) {\n            std::string temp = \"A-\";\n            output.push_back(temp);\n\
    \        }\n        else if (grades[i] > 3.0) {\n            std::string temp\
    \ = \"B+\";\n            output.push_back(temp);\n        }\n        else if (grades[i]\
    \ > 2.7) {\n            std::string temp = \"B\";\n            output.push_back(temp);\n\
    \        }\n        else if (grades[i] > 2.3) {\n            std::string temp\
    \ = \"B-\";\n            output.push_back(temp);\n        }\n        else if (grades[i]\
    \ > 2.0) {\n            std::string temp = \"C+\";\n            output.push_back(temp);\n\
    \        }\n        else if (grades[i] > 1.7) {\n            std::string temp\
    \ = \"C\";\n            output.push_back(temp);\n        }\n        else if (grades[i]\
    \ > 1.3) {\n            std::string temp = \"C-\";\n            output.push_back(temp);\n\
    \        }\n        else if (grades[i] > 1.0) {\n            std::string temp\
    \ = \"D+\";\n            output.push_back(temp);\n        }\n        else if (grades[i]\
    \ > 0.7) {\n            std::string temp = \"D\";\n            output.push_back(temp);\n\
    \        }\n        else if (grades[i] > 0.0) {\n            std::string temp\
    \ = \"D-\";\n            output.push_back(temp);\n        }\n        else {\n\
    \            std::string temp = \"E\";\n            output.push", "    // fill\
    \ code here\n    std::vector<std::string> v;\n    for(int i=0;i<grades.size();i++){\n\
    \        if(grades[i]>=4.0){\n            v.push_back(\"A+\");\n        }\n  \
    \      else if(grades[i]>=3.7){\n            v.push_back(\"A\");\n        }\n\
    \        else if(grades[i]>=3.3){\n            v.push_back(\"A-\");\n        }\n\
    \        else if(grades[i]>=3.0){\n            v.push_back(\"B+\");\n        }\n\
    \        else if(grades[i]>=2.7){\n            v.push_back(\"B\");\n        }\n\
    \        else if(grades[i]>=2.3){\n            v.push_back(\"B-\");\n        }\n\
    \        else if(grades[i]>=2.0){\n            v.push_back(\"C+\");\n        }\n\
    \        else if(grades[i]>=1.7){\n            v.push_back(\"C\");\n        }\n\
    \        else if(grades[i]>=1.3){\n            v.push_back(\"C-\");\n        }\n\
    \        else if(grades[i]>=1.0){\n            v.push_back(\"D+\");\n        }\n\
    \        else if(grades[i]>=0.7){\n            v.push_back(\"D\");\n        }\n\
    \        else if(grades[i]>=0.0){\n            v.push_back(\"D-\");\n        }\n\
    \        else{\n            v.push_back(\"E\");\n        }\n    }\n    return\
    \ v;", "    // Write your solution here\n    std::vector<std::string> ans;\n \
    \   for(int i = 0; i < grades.size(); i++){\n        if(grades[i] < 1){\n    \
    \        ans.push_back(\"E\");\n        }else if(grades[i] < 1.3){\n         \
    \   ans.push_back(\"D-\");\n        }else if(grades[i] < 1.7){\n            ans.push_back(\"\
    D\");\n        }else if(grades[i] < 2){\n            ans.push_back(\"D+\");\n\
    \        }else if(grades[i] < 2.3){\n            ans.push_back(\"C-\");\n    \
    \    }else if(grades[i] < 2.7){\n            ans.push_back(\"C\");\n        }else\
    \ if(grades[i] < 3){\n            ans.push_back(\"C+\");\n        }else if(grades[i]\
    \ < 3.3){\n            ans.push_back(\"B-\");\n        }else if(grades[i] < 3.7){\n\
    \            ans.push_back(\"B\");\n        }else if(grades[i] < 4){\n       \
    \     ans.push_back(\"B+\");\n        }else{\n            ans.push_back(\"A\"\
    );\n        }\n    }\n    return ans;", "  std::vector<std::string> result;\n\
    \  std::string letter_grade;\n  // Write your code here\n  \n  for(int i=0;i<grades.size();i++){\n\
    \      if(grades[i]>=4.0){\n          letter_grade = \"A+\";\n      }\n      else\
    \ if(grades[i]>=3.7){\n          letter_grade = \"A\";\n      }\n      else if(grades[i]>=3.3){\n\
    \          letter_grade = \"A-\";\n      }\n      else if(grades[i]>=3.0){\n \
    \         letter_grade = \"B+\";\n      }\n      else if(grades[i]>=2.7){\n  \
    \        letter_grade = \"B\";\n      }\n      else if(grades[i]>=2.3){\n    \
    \      letter_grade = \"B-\";\n      }\n      else if(grades[i]>=2.0){\n     \
    \     letter_grade = \"C+\";\n      }\n      else if(grades[i]>=1.7){\n      \
    \    letter_grade = \"C\";\n      }\n      else if(grades[i]>=1.3){\n        \
    \  letter_grade = \"C-\";\n      }\n      else if(grades[i]>=1.0){\n         \
    \ letter_grade = \"D+\";\n      }\n      else if(grades[i]>=0.7){\n          letter_grade\
    \ = \"D\";\n      }\n      else if(grades[i]>=0.0){\n          letter_grade =\
    \ \"D-\";\n      }\n      else{\n          letter_grade = \"E\";\n      }\n  \
    \    \n      result.push_back(letter_grade);\n  }\n  \n  return result;", "  \
    \  std::vector<std::string> letters;\n    std::string letter = \"\";\n    std::string\
    \ letter_grade;\n    for (auto x : grades) {\n        if (x == 4.0) {\n      \
    \      letter = \"A+\";\n        } else if (x >= 3.7) {\n            letter =\
    \ \"A\";\n        } else if (x >= 3.3) {\n            letter = \"A-\";\n     \
    \   } else if (x >= 3.0) {\n            letter = \"B+\";\n        } else if (x\
    \ >= 2.7) {\n            letter = \"B\";\n        } else if (x >= 2.3) {\n   \
    \         letter = \"B-\";\n        } else if (x >= 2.0) {\n            letter\
    \ = \"C+\";\n        } else if (x >= 1.7) {\n            letter = \"C\";\n   \
    \     } else if (x >= 1.3) {\n            letter = \"C-\";\n        } else if\
    \ (x >= 1.0) {\n            letter = \"D+\";\n        } else if (x >= 0.7) {\n\
    \            letter = \"D\";\n        } else if (x >= 0.0) {\n            letter\
    \ = \"D-\";\n        } else {\n            letter = \"E\";\n        }\n      \
    \  letters.push_back(letter);\n    }\n    return letters;", "    std::vector<std::string>\
    \ res;\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >=\
    \ 4.0) {\n            res.push_back(\"A+\");\n        } else if (grades[i] >=\
    \ 3.7) {\n            res.push_back(\"A\");\n        } else if (grades[i] >= 3.3)\
    \ {\n            res.push_back(\"A-\");\n        } else if (grades[i] >= 3.0)\
    \ {\n            res.push_back(\"B+\");\n        } else if (grades[i] >= 2.7)\
    \ {\n            res.push_back(\"B\");\n        } else if (grades[i] >= 2.3) {\n\
    \            res.push_back(\"B-\");\n        } else if (grades[i] >= 2.0) {\n\
    \            res.push_back(\"C+\");\n        } else if (grades[i] >= 1.7) {\n\
    \            res.push_back(\"C\");\n        } else if (grades[i] >= 1.3) {\n \
    \           res.push_back(\"C-\");\n        } else if (grades[i] >= 1.0) {\n \
    \           res.push_back(\"D+\");\n        } else if (grades[i] >= 0.7) {\n \
    \           res.push_back(\"D\");\n        } else if (grades[i] >= 0.0) {\n  \
    \          res.push_back(\"D-\");\n        } else {\n            res.push_back(\"\
    E\");\n        }\n    }\n    return res;", "    int sz = grades.size();\n    std::vector<std::string>\
    \ ans(sz);\n    for(int i = 0; i < sz; i++) {\n        if(grades[i] >= 4.0) {\n\
    \            ans[i] = \"A+\";\n        } else if(grades[i] >= 3.7) {\n       \
    \     ans[i] = \"A\";\n        } else if(grades[i] >= 3.3) {\n            ans[i]\
    \ = \"A-\";\n        } else if(grades[i] >= 3.0) {\n            ans[i] = \"B+\"\
    ;\n        } else if(grades[i] >= 2.7) {\n            ans[i] = \"B\";\n      \
    \  } else if(grades[i] >= 2.3) {\n            ans[i] = \"B-\";\n        } else\
    \ if(grades[i] >= 2.0) {\n            ans[i] = \"C+\";\n        } else if(grades[i]\
    \ >= 1.7) {\n            ans[i] = \"C\";\n        } else if(grades[i] >= 1.3)\
    \ {\n            ans[i] = \"C-\";\n        } else if(grades[i] >= 1.0) {\n   \
    \         ans[i] = \"D+\";\n        } else if(grades[i] >= 0.7) {\n          \
    \  ans[i] = \"D\";\n        } else if(grades[i] >= 0.0) {\n            ans[i]\
    \ = \"D-\";\n        } else {\n            ans[i] = \"E\";\n        }\n    }\n\
    \    return ans;", "    std::vector<std::string> result;\n    for (int i = 0;\
    \ i < grades.size(); i++) {\n        if (grades[i] >= 4.0) {\n            result.push_back(\"\
    A+\");\n        } else if (grades[i] >= 3.7) {\n            result.push_back(\"\
    A\");\n        } else if (grades[i] >= 3.3) {\n            result.push_back(\"\
    A-\");\n        } else if (grades[i] >= 3.0) {\n            result.push_back(\"\
    B+\");\n        } else if (grades[i] >= 2.7) {\n            result.push_back(\"\
    B\");\n        } else if (grades[i] >= 2.3) {\n            result.push_back(\"\
    B-\");\n        } else if (grades[i] >= 2.0) {\n            result.push_back(\"\
    C+\");\n        } else if (grades[i] >= 1.7) {\n            result.push_back(\"\
    C\");\n        } else if (grades[i] >= 1.3) {\n            result.push_back(\"\
    C-\");\n        } else if (grades[i] >= 1.0) {\n            result.push_back(\"\
    D+\");\n        } else if (grades[i] >= 0.7) {\n            result.push_back(\"\
    D\");\n        } else if (grades[i] >= 0.0) {\n            result.push_back(\"\
    D-\");\n        } else {\n            result.push_back(\"E\");\n        }\n  \
    \  }\n    return result;", "    std::vector<std::string> result;\n    for (float\
    \ i : grades) {\n        if (i > 4.0) {\n            result.push_back(\"A+\");\n\
    \        } else if (i > 3.7) {\n            result.push_back(\"A\");\n       \
    \ } else if (i > 3.3) {\n            result.push_back(\"A-\");\n        } else\
    \ if (i > 3.0) {\n            result.push_back(\"B+\");\n        } else if (i\
    \ > 2.7) {\n            result.push_back(\"B\");\n        } else if (i > 2.3)\
    \ {\n            result.push_back(\"B-\");\n        } else if (i > 2.0) {\n  \
    \          result.push_back(\"C+\");\n        } else if (i > 1.7) {\n        \
    \    result.push_back(\"C\");\n        } else if (i > 1.3) {\n            result.push_back(\"\
    C-\");\n        } else if (i > 1.0) {\n            result.push_back(\"D+\");\n\
    \        } else if (i > 0.7) {\n            result.push_back(\"D\");\n       \
    \ } else if (i > 0.0) {\n            result.push_back(\"D-\");\n        } else\
    \ {\n            result.push_back(\"E\");\n        }\n    }\n    return result;",
  "    std::vector<std::string> outputs;\n    for (float grade : grades) {\n     \
    \   if (grade == 4.0) {\n            outputs.push_back(\"A+\");\n        } else\
    \ if (grade >= 3.7) {\n            outputs.push_back(\"A\");\n        } else if\
    \ (grade >= 3.3) {\n            outputs.push_back(\"A-\");\n        } else if\
    \ (grade >= 3.0) {\n            outputs.push_back(\"B+\");\n        } else if\
    \ (grade >= 2.7) {\n            outputs.push_back(\"B\");\n        } else if (grade\
    \ >= 2.3) {\n            outputs.push_back(\"B-\");\n        } else if (grade\
    \ >= 2.0) {\n            outputs.push_back(\"C+\");\n        } else if (grade\
    \ >= 1.7) {\n            outputs.push_back(\"C\");\n        } else if (grade >=\
    \ 1.3) {\n            outputs.push_back(\"C-\");\n        } else if (grade >=\
    \ 1.0) {\n            outputs.push_back(\"D+\");\n        } else if (grade >=\
    \ 0.7) {\n            outputs.push_back(\"D\");\n        } else if (grade >= 0.0)\
    \ {\n            outputs.push_back(\"D-\");\n        } else {\n            outputs.push_back(\"\
    E\");\n        }\n    }\n    return outputs;", "    std::vector<std::string> letter_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    // TODO: Implement your function\
    \ here.\n    \n    for(float grade : grades){\n        if(grade>4.0){\n      \
    \      letter_grades.push_back(\"A+\");\n        }\n        else if(grade>3.7){\n\
    \            letter_grades.push_back(\"A\");\n        }\n        else if(grade>3.3){\n\
    \            letter_grades.push_back(\"A-\");\n        }\n        else if(grade>3.0){\n\
    \            letter_grades.push_back(\"B+\");\n        }\n        else if(grade>2.7){\n\
    \            letter_grades.push_back(\"B\");\n        }\n        else if(grade>2.3){\n\
    \            letter_grades.push_back(\"B-\");\n        }\n        else if(grade>2.0){\n\
    \            letter_grades.push_back(\"C+\");\n        }\n        else if(grade>1.7){\n\
    \            letter_grades.push_back(\"C\");\n        }\n        else if(grade>1.3){\n\
    \            letter_grades.push_back(\"C-\");\n        }\n        else if(grade>1.0){\n\
    \            letter_grades.push_back(\"D+\");\n        }\n        else if(grade>0.7){\n\
    \            letter_grades.push_back(\"D\");\n        }\n        else if(grade>0.0){\n\
    \            letter_grades.push_back(\"D-\");\n        }\n        else{\n    \
    \        letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> output;\n    for (auto grade : grades) {\n       \
    \ if (grade >= 4.0) {\n            output.push_back(\"A+\");\n        } else if\
    \ (grade >= 3.7) {\n            output.push_back(\"A\");\n        } else if (grade\
    \ >= 3.3) {\n            output.push_back(\"A-\");\n        } else if (grade >=\
    \ 3.0) {\n            output.push_back(\"B+\");\n        } else if (grade >= 2.7)\
    \ {\n            output.push_back(\"B\");\n        } else if (grade >= 2.3) {\n\
    \            output.push_back(\"B-\");\n        } else if (grade >= 2.0) {\n \
    \           output.push_back(\"C+\");\n        } else if (grade >= 1.7) {\n  \
    \          output.push_back(\"C\");\n        } else if (grade >= 1.3) {\n    \
    \        output.push_back(\"C-\");\n        } else if (grade >= 1.0) {\n     \
    \       output.push_back(\"D+\");\n        } else if (grade >= 0.7) {\n      \
    \      output.push_back(\"D\");\n        } else if (grade >= 0.0) {\n        \
    \    output.push_back(\"D-\");\n        } else {\n            output.push_back(\"\
    E\");\n        }\n    }\n    return output;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "  // Your code here\n  std::vector<std::string>\
    \ grade;\n  for(auto i : grades){\n    if(i == 4.0){\n      grade.push_back(\"\
    A+\");\n    }\n    else if(i > 3.7){\n      grade.push_back(\"A\");\n    }\n \
    \   else if(i > 3.3){\n      grade.push_back(\"A-\");\n    }\n    else if(i >\
    \ 3.0){\n      grade.push_back(\"B+\");\n    }\n    else if(i > 2.7){\n      grade.push_back(\"\
    B\");\n    }\n    else if(i > 2.3){\n      grade.push_back(\"B-\");\n    }\n \
    \   else if(i > 2.0){\n      grade.push_back(\"C+\");\n    }\n    else if(i >\
    \ 1.7){\n      grade.push_back(\"C\");\n    }\n    else if(i > 1.3){\n      grade.push_back(\"\
    C-\");\n    }\n    else if(i > 1.0){\n      grade.push_back(\"D+\");\n    }\n\
    \    else if(i > 0.7){\n      grade.push_back(\"D\");\n    }\n    else if(i >\
    \ 0.0){\n      grade.push_back(\"D-\");\n    }\n    else if(i == 0.0){\n     \
    \ grade.push_back(\"E\");\n    }\n  }\n  return grade;", "    // Write your code\
    \ here\n    std::vector<std::string> ans;\n    int size = grades.size();\n   \
    \ for(int i = 0; i < size; i++){\n        if(grades[i] == 4.0){\n            ans.push_back(\"\
    A+\");\n        }\n        else if(grades[i] > 3.7){\n            ans.push_back(\"\
    A\");\n        }\n        else if(grades[i] > 3.3){\n            ans.push_back(\"\
    A-\");\n        }\n        else if(grades[i] > 3.0){\n            ans.push_back(\"\
    B+\");\n        }\n        else if(grades[i] > 2.7){\n            ans.push_back(\"\
    B\");\n        }\n        else if(grades[i] > 2.3){\n            ans.push_back(\"\
    B-\");\n        }\n        else if(grades[i] > 2.0){\n            ans.push_back(\"\
    C+\");\n        }\n        else if(grades[i] > 1.7){\n            ans.push_back(\"\
    C\");\n        }\n        else if(grades[i] > 1.3){\n            ans.push_back(\"\
    C-\");\n        }\n        else if(grades[i] > 1.0){\n            ans.push_back(\"\
    D+\");\n        }\n        else if(grades[i] > 0.7){\n            ans.push_back(\"\
    D\");\n        }\n        else if(grades[i] > 0.0){\n            ans.push_back(\"\
    D-\");\n        }\n        else if(grades[i] == 0.0){\n            ans.push_back(\"\
    E\");\n        }\n    }\n    return ans;", '    // Your code here.', "    std::vector<std::string>\
    \ letter_grades;\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ >= 4.0)\n            letter_grades.push_back(\"A+\");\n        else if (grades[i]\
    \ >= 3.7)\n            letter_grades.push_back(\"A\");\n        else if (grades[i]\
    \ >= 3.3)\n            letter_grades.push_back(\"A-\");\n        else if (grades[i]\
    \ >= 3.0)\n            letter_grades.push_back(\"B+\");\n        else if (grades[i]\
    \ >= 2.7)\n            letter_grades.push_back(\"B\");\n        else if (grades[i]\
    \ >= 2.3)\n            letter_grades.push_back(\"B-\");\n        else if (grades[i]\
    \ >= 2.0)\n            letter_grades.push_back(\"C+\");\n        else if (grades[i]\
    \ >= 1.7)\n            letter_grades.push_back(\"C\");\n        else if (grades[i]\
    \ >= 1.3)\n            letter_grades.push_back(\"C-\");\n        else if (grades[i]\
    \ >= 1.0)\n            letter_grades.push_back(\"D+\");\n        else if (grades[i]\
    \ >= 0.7)\n            letter_grades.push_back(\"D\");\n        else if (grades[i]\
    \ >= 0.0)\n            letter_grades.push_back(\"D-\");\n        else\n      \
    \      letter_grades.push_back(\"E\");\n    }\n    return letter_grades;", " \
    \ std::vector<std::string> letter_grades;\n  for (int i = 0; i < grades.size();\
    \ i++) {\n    if (grades[i] >= 4.0) {\n      letter_grades.push_back(\"A+\");\n\
    \    } else if (grades[i] >= 3.7) {\n      letter_grades.push_back(\"A\");\n \
    \   } else if (grades[i] >= 3.3) {\n      letter_grades.push_back(\"A-\");\n \
    \   } else if (grades[i] >= 3.0) {\n      letter_grades.push_back(\"B+\");\n \
    \   } else if (grades[i] >= 2.7) {\n      letter_grades.push_back(\"B\");\n  \
    \  } else if (grades[i] >= 2.3) {\n      letter_grades.push_back(\"B-\");\n  \
    \  } else if (grades[i] >= 2.0) {\n      letter_grades.push_back(\"C+\");\n  \
    \  } else if (grades[i] >= 1.7) {\n      letter_grades.push_back(\"C\");\n   \
    \ } else if (grades[i] >= 1.3) {\n      letter_grades.push_back(\"C-\");\n   \
    \ } else if (grades[i] >= 1.0) {\n      letter_grades.push_back(\"D+\");\n   \
    \ } else if (grades[i] >= 0.7) {\n      letter_grades.push_back(\"D\");\n    }\
    \ else if (grades[i] >= 0.0) {\n      letter_grades.push_back(\"D-\");\n    }\
    \ else {\n      letter_grades.push_back(\"E\");\n    }\n  }\n  return letter_grades;",
  "  \n  // Write your code here\n  std::vector<std::string> s(grades.size());\n \
    \ for(int i=0;i<grades.size();i++){\n      if(grades[i]>4.0 || grades[i]<0.0){\n\
    \          std::cout<<\"The grade should be between 0.0 to 4.0\";\n          break;\n\
    \      }\n      else if(grades[i]>=3.7){\n          s[i]=\"A\";\n      }\n   \
    \   else if(grades[i]>=3.3){\n          s[i]=\"A-\";\n      }\n      else if(grades[i]>=3.0){\n\
    \          s[i]=\"B+\";\n      }\n      else if(grades[i]>=2.7){\n          s[i]=\"\
    B\";\n      }\n      else if(grades[i]>=2.3){\n          s[i]=\"B-\";\n      }\n\
    \      else if(grades[i]>=2.0){\n          s[i]=\"C+\";\n      }\n      else if(grades[i]>=1.7){\n\
    \          s[i]=\"C\";\n      }\n      else if(grades[i]>=1.3){\n          s[i]=\"\
    C-\";\n      }\n      else if(grades[i]>=1.0){\n          s[i]=\"D+\";\n     \
    \ }\n      else if(grades[i]>=0.7){\n          s[i]=\"D\";\n      }\n      else\
    \ if(grades[i]>=0.0){\n          s[i]=\"D-\";\n      }\n      else{\n        \
    \  s[i]=\"E\";\n      }\n  }\n  return s;", "    std::vector<std::string> output;\n\
    \    // your code here\n    return output;", "  std::vector<std::string> result(grades.size());\n\
    \  for (int i = 0; i < grades.size(); i++) {\n    std::string grade = \"E\";\n\
    \    if (grades[i] > 3.7) {\n      grade = \"A+\";\n    } else if (grades[i] >\
    \ 3.3) {\n      grade = \"A\";\n    } else if (grades[i] > 3.0) {\n      grade\
    \ = \"A-\";\n    } else if (grades[i] > 2.7) {\n      grade = \"B+\";\n    } else\
    \ if (grades[i] > 2.3) {\n      grade = \"B\";\n    } else if (grades[i] > 2.0)\
    \ {\n      grade = \"B-\";\n    } else if (grades[i] > 1.7) {\n      grade = \"\
    C+\";\n    } else if (grades[i] > 1.3) {\n      grade = \"C\";\n    } else if\
    \ (grades[i] > 1.0) {\n      grade = \"C-\";\n    } else if (grades[i] > 0.7)\
    \ {\n      grade = \"D+\";\n    } else if (grades[i] > 0.0) {\n      grade = \"\
    D\";\n    } else if (grades[i] > 0.0) {\n      grade = \"D-\";\n    }\n    result[i]\
    \ = grade;\n  }\n  return result;", "    std::vector<std::string> grades_as_letters;\n\
    \    for (auto grade : grades) {\n        if (grade == 4.0) {\n            grades_as_letters.push_back(\"\
    A+\");\n        } else if (grade >= 3.7 && grade < 4.0) {\n            grades_as_letters.push_back(\"\
    A\");\n        } else if (grade >= 3.3 && grade < 3.7) {\n            grades_as_letters.push_back(\"\
    A-\");\n        } else if (grade >= 3.0 && grade < 3.3) {\n            grades_as_letters.push_back(\"\
    B+\");\n        } else if (grade >= 2.7 && grade < 3.0) {\n            grades_as_letters.push_back(\"\
    B\");\n        } else if (grade >= 2.3 && grade < 2.7) {\n            grades_as_letters.push_back(\"\
    B-\");\n        } else if (grade >= 2.0 && grade < 2.3) {\n            grades_as_letters.push_back(\"\
    C+\");\n        } else if (grade >= 1.7 && grade < 2.0) {\n            grades_as_letters.push_back(\"\
    C\");\n        } else if (grade >= 1.3 && grade < 1.7) {\n            grades_as_letters.push_back(\"\
    C-\");\n        } else if (grade >= 1.0 && grade < 1.3) {\n            grades_as_letters.push_back(\"\
    D+\");\n        } else if (grade >= 0.7 && grade < 1.0) {\n            grades_as_letters.push_back(\"\
    D\");\n        } else if (grade >= 0.0 && grade < 0.7) {\n            grades_as_letters.push_back(\"\
    D-\");\n        } else if (grade == 0.0) {\n            grades_as_letters.push_back(\"\
    E\");\n        }\n    }\n    return grades_as_letters;", "    std::vector<std::string>\
    \ letter_grades;\n    for (int i = 0; i < grades.size(); i++) {\n        float\
    \ grade = grades[i];\n        if (grade == 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> res;\n\
    \    std::vector<float> thrs = { 4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3,\
    \ 1.0, 0.7, 0.0, 0.0 };\n    std::vector<std::string> grade = { \"A+\", \"A\"\
    , \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\"\
    , \"E\" };\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ > 4) {\n            res.push_back(\"A+\");\n        }\n        else {\n    \
    \        for (int j = 0; j < thrs.size(); j++) {\n                if (grades[i]\
    \ >= thrs[j]) {\n                    res.push_back(grade[j]);\n              \
    \      break;\n                }\n            }\n        }\n    }\n    return\
    \ res;", "    std::vector<std::string> char_grades;\n    for (auto g : grades)\
    \ {\n        if (g == 4.0)\n            char_grades.push_back(\"A+\");\n     \
    \   else if (g > 3.7)\n            char_grades.push_back(\"A\");\n        else\
    \ if (g > 3.3)\n            char_grades.push_back(\"A-\");\n        else if (g\
    \ > 3.0)\n            char_grades.push_back(\"B+\");\n        else if (g > 2.7)\n\
    \            char_grades.push_back(\"B\");\n        else if (g > 2.3)\n      \
    \      char_grades.push_back(\"B-\");\n        else if (g > 2.0)\n           \
    \ char_grades.push_back(\"C+\");\n        else if (g > 1.7)\n            char_grades.push_back(\"\
    C\");\n        else if (g > 1.3)\n            char_grades.push_back(\"C-\");\n\
    \        else if (g > 1.0)\n            char_grades.push_back(\"D+\");\n     \
    \   else if (g > 0.7)\n            char_grades.push_back(\"D\");\n        else\
    \ if (g > 0.0)\n            char_grades.push_back(\"D-\");\n        else\n   \
    \         char_grades.push_back(\"E\");\n    }\n    return char_grades;", "  \
    \  std::vector<std::string> letter_grades;\n    // Your code here\n    for(float&\
    \ g: grades){\n        if(g == 4.0){\n            letter_grades.push_back(\"A+\"\
    );\n        }\n        else if(g > 3.7){\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(g > 3.3){\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(g > 3.0){\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(g > 2.7){\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(g > 2.3){\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(g > 2.0){\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(g > 1.7){\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(g > 1.3){\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(g > 1.0){\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(g > 0.7){\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(g > 0.0){\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else{\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "  std::vector<std::string> letter_grades;\n\
    \  for (int i = 0; i < grades.size(); i++) {\n    if (grades[i] >= 4.0) {\n  \
    \    letter_grades.push_back(\"A+\");\n    } else if (grades[i] >= 3.7) {\n  \
    \    letter_grades.push_back(\"A\");\n    } else if (grades[i] >= 3.3) {\n   \
    \   letter_grades.push_back(\"A-\");\n    } else if (grades[i] >= 3.0) {\n   \
    \   letter_grades.push_back(\"B+\");\n    } else if (grades[i] >= 2.7) {\n   \
    \   letter_grades.push_back(\"B\");\n    } else if (grades[i] >= 2.3) {\n    \
    \  letter_grades.push_back(\"B-\");\n    } else if (grades[i] >= 2.0) {\n    \
    \  letter_grades.push_back(\"C+\");\n    } else if (grades[i] >= 1.7) {\n    \
    \  letter_grades.push_back(\"C\");\n    } else if (grades[i] >= 1.3) {\n     \
    \ letter_grades.push_back(\"C-\");\n    } else if (grades[i] >= 1.0) {\n     \
    \ letter_grades.push_back(\"D+\");\n    } else if (grades[i] >= 0.7) {\n     \
    \ letter_grades.push_back(\"D\");\n    } else if (grades[i] >= 0.0) {\n      letter_grades.push_back(\"\
    D-\");\n    } else {\n      letter_grades.push_back(\"E\");\n    }\n  }\n  return\
    \ letter_grades;", "    // Write your code here\n    // Passing the Test Cases\n\
    \    std::vector<std::string> result;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        if (grades[i] >= 4.0) {\n            result.push_back(\"A+\"\
    );\n        } else if (grades[i] >= 3.7) {\n            result.push_back(\"A\"\
    );\n        } else if (grades[i] >= 3.3) {\n            result.push_back(\"A-\"\
    );\n        } else if (grades[i] >= 3.0) {\n            result.push_back(\"B+\"\
    );\n        } else if (grades[i] >= 2.7) {\n            result.push_back(\"B\"\
    );\n        } else if (grades[i] >= 2.3) {\n            result.push_back(\"B-\"\
    );\n        } else if (grades[i] >= 2.0) {\n            result.push_back(\"C+\"\
    );\n        } else if (grades[i] >= 1.7) {\n            result.push_back(\"C\"\
    );\n        } else if (grades[i] >= 1.3) {\n            result.push_back(\"C-\"\
    );\n        } else if (grades[i] >= 1.0) {\n            result.push_back(\"D+\"\
    );\n        } else if (grades[i] >= 0.7) {\n            result.push_back(\"D\"\
    );\n        } else if (grades[i] >= 0.0) {\n            result.push_back(\"D-\"\
    );\n        } else {\n            result.push_back(\"E\");\n        }\n    }\n\
    \    return result;", "    std::vector<std::string> letter_grades;\n    // Write\
    \ your code here\n\n    int size = grades.size();\n    for(int i = 0; i < size;\
    \ i++){\n        if(grades[i] < 0){\n            letter_grades.push_back(\"E\"\
    );\n        }\n        else if(grades[i] >= 4.0){\n            letter_grades.push_back(\"\
    A+\");\n        }\n        else if(grades[i] >= 3.7){\n            letter_grades.push_back(\"\
    A\");\n        }\n        else if(grades[i] >= 3.3){\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(grades[i] >= 3.0){\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if(grades[i] >= 2.7){\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if(grades[i] >= 2.3){\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grades[i] >= 2.0){\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if(grades[i] >= 1.7){\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if(grades[i] >= 1.3){\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grades[i] >= 1.0){\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if(grades[i] >= 0.7){\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if(grades[i] >= 0.0){\n            letter_grades.push_back(\"\
    D-\");\n        }\n    }\n\n    return letter_grades;", "\t// Your code goes here\n\
    \tstd::vector<std::string> convertedGrades;\n\tfor (float grade : grades) {\n\t\
    \tstd::string letter;\n\t\tif (grade == 4.0) {\n\t\t\tletter = \"A+\";\n\t\t}\n\
    \t\telse if (grade > 3.7) {\n\t\t\tletter = \"A\";\n\t\t}\n\t\telse if (grade\
    \ > 3.3) {\n\t\t\tletter = \"A-\";\n\t\t}\n\t\telse if (grade > 3.0) {\n\t\t\t\
    letter = \"B+\";\n\t\t}\n\t\telse if (grade > 2.7) {\n\t\t\tletter = \"B\";\n\t\
    \t}\n\t\telse if (grade > 2.3) {\n\t\t\tletter = \"B-\";\n\t\t}\n\t\telse if (grade\
    \ > 2.0) {\n\t\t\tletter = \"C+\";\n\t\t}\n\t\telse if (grade > 1.7) {\n\t\t\t\
    letter = \"C\";\n\t\t}\n\t\telse if (grade > 1.3) {\n\t\t\tletter = \"C-\";\n\t\
    \t}\n\t\telse if (grade > 1.0) {\n\t\t\tletter = \"D+\";\n\t\t}\n\t\telse if (grade\
    \ > 0.7) {\n\t\t\tletter = \"D\";\n\t\t}\n\t\telse if (grade > 0.0) {\n\t\t\t\
    letter = \"D-\";\n\t\t}\n\t\telse {\n\t\t\tletter = \"E\";\n\t\t}\n\t\tconvertedGrades.push_back(letter);\n\
    \t}\n\treturn convertedGrades;", "  std::vector<std::string> letter_grades;\n\
    \  //  write code here\n  for(int i=0;i<grades.size();i++){\n    if(grades[i]==4.0){\n\
    \      letter_grades.push_back(\"A+\");\n    }\n    else if(grades[i]>3.7){\n\
    \      letter_grades.push_back(\"A\");\n    }\n    else if(grades[i]>3.3){\n \
    \     letter_grades.push_back(\"A-\");\n    }\n    else if(grades[i]>3.0){\n \
    \     letter_grades.push_back(\"B+\");\n    }\n    else if(grades[i]>2.7){\n \
    \     letter_grades.push_back(\"B\");\n    }\n    else if(grades[i]>2.3){\n  \
    \    letter_grades.push_back(\"B-\");\n    }\n    else if(grades[i]>2.0){\n  \
    \    letter_grades.push_back(\"C+\");\n    }\n    else if(grades[i]>1.7){\n  \
    \    letter_grades.push_back(\"C\");\n    }\n    else if(grades[i]>1.3){\n   \
    \   letter_grades.push_back(\"C-\");\n    }\n    else if(grades[i]>1.0){\n   \
    \   letter_grades.push_back(\"D+\");\n    }\n    else if(grades[i]>0.7){\n   \
    \   letter_grades.push_back(\"D\");\n    }\n    else if(grades[i]>0.0){\n    \
    \  letter_grades.push_back(\"D-\");\n    }\n    else{\n      letter_grades.push_back(\"\
    E\");\n    }\n  }\n  return letter_grades;", "  std::vector<std::string> output;\n\
    \  float num_grade;\n  for (int i = 0; i < grades.size(); i++) {\n    num_grade\
    \ = grades[i];\n    if (num_grade >= 4.0) {\n      output.push_back(\"A+\");\n\
    \    } else if (num_grade >= 3.7) {\n      output.push_back(\"A\");\n    } else\
    \ if (num_grade >= 3.3) {\n      output.push_back(\"A-\");\n    } else if (num_grade\
    \ >= 3.0) {\n      output.push_back(\"B+\");\n    } else if (num_grade >= 2.7)\
    \ {\n      output.push_back(\"B\");\n    } else if (num_grade >= 2.3) {\n    \
    \  output.push_back(\"B-\");\n    } else if (num_grade >= 2.0) {\n      output.push_back(\"\
    C+\");\n    } else if (num_grade >= 1.7) {\n      output.push_back(\"C\");\n \
    \   } else if (num_grade >= 1.3) {\n      output.push_back(\"C-\");\n    } else\
    \ if (num_grade >= 1.0) {\n      output.push_back(\"D+\");\n    } else if (num_grade\
    \ >= 0.7) {\n      output.push_back(\"D\");\n    } else if (num_grade >= 0.0)\
    \ {\n      output.push_back(\"D-\");\n    } else {\n      output.push_back(\"\
    E\");\n    }\n  }\n  return output;", "    std::vector<std::string> letter_grades(grades.size());\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0)\
    \ {\n            letter_grades[i] = \"A+\";\n        } else if (grades[i] >= 3.7)\
    \ {\n            letter_grades[i] = \"A\";\n        } else if (grades[i] >= 3.3)\
    \ {\n            letter_grades[i] = \"A-\";\n        } else if (grades[i] >= 3.0)\
    \ {\n            letter_grades[i] = \"B+\";\n        } else if (grades[i] >= 2.7)\
    \ {\n            letter_grades[i] = \"B\";\n        } else if (grades[i] >= 2.3)\
    \ {\n            letter_grades[i] = \"B-\";\n        } else if (grades[i] >= 2.0)\
    \ {\n            letter_grades[i] = \"C+\";\n        } else if (grades[i] >= 1.7)\
    \ {\n            letter_grades[i] = \"C\";\n        } else if (grades[i] >= 1.3)\
    \ {\n            letter_grades[i] = \"C-\";\n        } else if (grades[i] >= 1.0)\
    \ {\n            letter_grades[i] = \"D+\";\n        } else if (grades[i] >= 0.7)\
    \ {\n            letter_grades[i] = \"D\";\n        } else if (grades[i] >= 0.0)\
    \ {\n            letter_grades[i] = \"D-\";\n        } else {\n            letter_grades[i]\
    \ = \"E\";\n        }\n    }\n    return letter_grades;", "  std::vector<std::string>\
    \ results;\n  for (int i = 0; i < grades.size(); i++) {\n    if (grades[i] >=\
    \ 4.0) {\n      results.push_back(\"A+\");\n    } else if (grades[i] > 3.7) {\n\
    \      results.push_back(\"A\");\n    } else if (grades[i] > 3.3) {\n      results.push_back(\"\
    A-\");\n    } else if (grades[i] > 3.0) {\n      results.push_back(\"B+\");\n\
    \    } else if (grades[i] > 2.7) {\n      results.push_back(\"B\");\n    } else\
    \ if (grades[i] > 2.3) {\n      results.push_back(\"B-\");\n    } else if (grades[i]\
    \ > 2.0) {\n      results.push_back(\"C+\");\n    } else if (grades[i] > 1.7)\
    \ {\n      results.push_back(\"C\");\n    } else if (grades[i] > 1.3) {\n    \
    \  results.push_back(\"C-\");\n    } else if (grades[i] > 1.0) {\n      results.push_back(\"\
    D+\");\n    } else if (grades[i] > 0.7) {\n      results.push_back(\"D\");\n \
    \   } else if (grades[i] > 0.0) {\n      results.push_back(\"D-\");\n    } else\
    \ {\n      results.push_back(\"E\");\n    }\n  }\n  return results;", "\tstd::vector<std::string>\
    \ grades_letter;\n\tfor (auto const &grade : grades) {\n\t\tif (grade >= 4.0)\
    \ {\n\t\t\tgrades_letter.push_back(\"A+\");\n\t\t}\n\t\telse if (grade >= 3.7)\
    \ {\n\t\t\tgrades_letter.push_back(\"A\");\n\t\t}\n\t\telse if (grade >= 3.3)\
    \ {\n\t\t\tgrades_letter.push_back(\"A-\");\n\t\t}\n\t\telse if (grade >= 3.0)\
    \ {\n\t\t\tgrades_letter.push_back(\"B+\");\n\t\t}\n\t\telse if (grade >= 2.7)\
    \ {\n\t\t\tgrades_letter.push_back(\"B\");\n\t\t}\n\t\telse if (grade >= 2.3)\
    \ {\n\t\t\tgrades_letter.push_back(\"B-\");\n\t\t}\n\t\telse if (grade >= 2.0)\
    \ {\n\t\t\tgrades_letter.push_back(\"C+\");\n\t\t}\n\t\telse if (grade >= 1.7)\
    \ {\n\t\t\tgrades_letter.push_back(\"C\");\n\t\t}\n\t\telse if (grade >= 1.3)\
    \ {\n\t\t\tgrades_letter.push_back(\"C-\");\n\t\t}\n\t\telse if (grade >= 1.0)\
    \ {\n\t\t\tgrades_letter.push_back(\"D+\");\n\t\t}\n\t\telse if (grade >= 0.7)\
    \ {\n\t\t\tgrades_letter.push_back(\"D\");\n\t\t}\n\t\telse if (grade >= 0.0)\
    \ {\n\t\t\tgrades_letter.push_back(\"D-\");\n\t\t}\n\t\telse {\n\t\t\tgrades_letter.push_back(\"\
    E\");\n\t\t}\n\t}\n\treturn grades_letter;", "    std::vector<std::string> letterGrades(grades.size());\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0)\
    \ {\n            letterGrades[i] = \"A+\";\n        } else if (grades[i] >= 3.7)\
    \ {\n            letterGrades[i] = \"A\";\n        } else if (grades[i] >= 3.3)\
    \ {\n            letterGrades[i] = \"A-\";\n        } else if (grades[i] >= 3.0)\
    \ {\n            letterGrades[i] = \"B+\";\n        } else if (grades[i] >= 2.7)\
    \ {\n            letterGrades[i] = \"B\";\n        } else if (grades[i] >= 2.3)\
    \ {\n            letterGrades[i] = \"B-\";\n        } else if (grades[i] >= 2.0)\
    \ {\n            letterGrades[i] = \"C+\";\n        } else if (grades[i] >= 1.7)\
    \ {\n            letterGrades[i] = \"C\";\n        } else if (grades[i] >= 1.3)\
    \ {\n            letterGrades[i] = \"C-\";\n        } else if (grades[i] >= 1.0)\
    \ {\n            letterGrades[i] = \"D+\";\n        } else if (grades[i] >= 0.7)\
    \ {\n            letterGrades[i] = \"D\";\n        } else if (grades[i] >= 0.0)\
    \ {\n            letterGrades[i] = \"D-\";\n        } else {\n            letterGrades[i]\
    \ = \"E\";\n        }\n    }\n    return letterGrades;", "    std::vector<std::string>\
    \ letters;\n    for (float g : grades) {\n        if (g >= 4.0) {\n          \
    \  letters.push_back(\"A+\");\n        } else if (g >= 3.7) {\n            letters.push_back(\"\
    A\");\n        } else if (g >= 3.3) {\n            letters.push_back(\"A-\");\n\
    \        } else if (g >= 3.0) {\n            letters.push_back(\"B+\");\n    \
    \    } else if (g >= 2.7) {\n            letters.push_back(\"B\");\n        }\
    \ else if (g >= 2.3) {\n            letters.push_back(\"B-\");\n        } else\
    \ if (g >= 2.0) {\n            letters.push_back(\"C+\");\n        } else if (g\
    \ >= 1.7) {\n            letters.push_back(\"C\");\n        } else if (g >= 1.3)\
    \ {\n            letters.push_back(\"C-\");\n        } else if (g >= 1.0) {\n\
    \            letters.push_back(\"D+\");\n        } else if (g >= 0.7) {\n    \
    \        letters.push_back(\"D\");\n        } else if (g >= 0.0) {\n         \
    \   letters.push_back(\"D-\");\n        } else {\n            letters.push_back(\"\
    E\");\n        }\n    }\n    return letters;", "    // Write code here\n    std::vector<std::string>\
    \ letter_grades;\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ == 4.0)\n            letter_grades.push_back(\"A+\");\n        else if (grades[i]\
    \ > 3.7)\n            letter_grades.push_back(\"A\");\n        else if (grades[i]\
    \ > 3.3)\n            letter_grades.push_back(\"A-\");\n        else if (grades[i]\
    \ > 3.0)\n            letter_grades.push_back(\"B+\");\n        else if (grades[i]\
    \ > 2.7)\n            letter_grades.push_back(\"B\");\n        else if (grades[i]\
    \ > 2.3)\n            letter_grades.push_back(\"B-\");\n        else if (grades[i]\
    \ > 2.0)\n            letter_grades.push_back(\"C+\");\n        else if (grades[i]\
    \ > 1.7)\n            letter_grades.push_back(\"C\");\n        else if (grades[i]\
    \ > 1.3)\n            letter_grades.push_back(\"C-\");\n        else if (grades[i]\
    \ > 1.0)\n            letter_grades.push_back(\"D+\");\n        else if (grades[i]\
    \ > 0.7)\n            letter_grades.push_back(\"D\");\n        else if (grades[i]\
    \ > 0.0)\n            letter_grades.push_back(\"D-\");\n        else\n       \
    \     letter_grades.push_back(\"E\");\n    }\n    return letter_grades;", "  \
    \  std::vector<std::string> letter_grades;\n    for (auto grade : grades) {\n\
    \        if (grade >= 4.0) {\n            letter_grades.push_back(\"A+\");\n \
    \       } else if (grade >= 3.7) {\n            letter_grades.push_back(\"A\"\
    );\n        } else if (grade >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        float grade = grades[i];\n\
    \        std::string letter_grade;\n        if (grade == 4.0) {\n            letter_grade\
    \ = \"A+\";\n        } else if (grade > 3.7) {\n            letter_grade = \"\
    A\";\n        } else if (grade > 3.3) {\n            letter_grade = \"A-\";\n\
    \        } else if (grade > 3.0) {\n            letter_grade = \"B+\";\n     \
    \   } else if (grade > 2.7) {\n            letter_grade = \"B\";\n        } else\
    \ if (grade > 2.3) {\n            letter_grade = \"B-\";\n        } else if (grade\
    \ > 2.0) {\n            letter_grade = \"C+\";\n        } else if (grade > 1.7)\
    \ {\n            letter_grade = \"C\";\n        } else if (grade > 1.3) {\n  \
    \          letter_grade = \"C-\";\n        } else if (grade > 1.0) {\n       \
    \     letter_grade = \"D+\";\n        } else if (grade > 0.7) {\n            letter_grade\
    \ = \"D\";\n        } else if (grade > 0.0) {\n            letter_grade = \"D-\"\
    ;\n        } else {\n            letter_grade = \"E\";\n        }\n        letter_grades.push_back(letter_grade);\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    // Write your code here\n    for(int i=0;i<grades.size();i++){\n        if(grades[i]==4.0){\n\
    \            letter_grades.push_back(\"A+\");\n        }\n        else if(grades[i]>3.7\
    \ && grades[i]<4.0){\n            letter_grades.push_back(\"A\");\n        }\n\
    \        else if(grades[i]>3.3 && grades[i]<=3.7){\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if(grades[i]>3.0 && grades[i]<=3.3){\n       \
    \     letter_grades.push_back(\"B+\");\n        }\n        else if(grades[i]>2.7\
    \ && grades[i]<=3.0){\n            letter_grades.push_back(\"B\");\n        }\n\
    \        else if(grades[i]>2.3 && grades[i]<=2.7){\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if(grades[i]>2.0 && grades[i]<=2.3){\n       \
    \     letter_grades.push_back(\"C+\");\n        }\n        else if(grades[i]>1.7\
    \ && grades[i]<=2.0){\n            letter_grades.push_back(\"C\");\n        }\n\
    \        else if(grades[i]>1.3 && grades[i]<=1.7){\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if(grades[i]>1.0 && grades[i]<=1.3){\n       \
    \     letter_grades.push_back(\"D+\");\n        }\n        else if(grades[i]>0.7\
    \ && grades[i]<=1.0){\n            letter_grades.push_back(\"D\");\n        }\n\
    \        else if(grades[i]>0.0 && grades[i]<=0.7){\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else{\n            letter_grades", '    /* Your code
    goes here */', "   std::vector<std::string> letters;\n   for (float grade : grades)\
    \ {\n      if (grade >= 4.0) {\n         letters.push_back(\"A+\");\n      } else\
    \ if (grade >= 3.7) {\n         letters.push_back(\"A\");\n      } else if (grade\
    \ >= 3.3) {\n         letters.push_back(\"A-\");\n      } else if (grade >= 3.0)\
    \ {\n         letters.push_back(\"B+\");\n      } else if (grade >= 2.7) {\n \
    \        letters.push_back(\"B\");\n      } else if (grade >= 2.3) {\n       \
    \  letters.push_back(\"B-\");\n      } else if (grade >= 2.0) {\n         letters.push_back(\"\
    C+\");\n      } else if (grade >= 1.7) {\n         letters.push_back(\"C\");\n\
    \      } else if (grade >= 1.3) {\n         letters.push_back(\"C-\");\n     \
    \ } else if (grade >= 1.0) {\n         letters.push_back(\"D+\");\n      } else\
    \ if (grade >= 0.7) {\n         letters.push_back(\"D\");\n      } else if (grade\
    \ >= 0.0) {\n         letters.push_back(\"D-\");\n      } else {\n         letters.push_back(\"\
    E\");\n      }\n   }\n   return letters;", "    std::vector<std::string> letter_grades;\n\
    \    for (auto i : grades) {\n        if (i < 0.7)\n            letter_grades.push_back(\"\
    D-\");\n        else if (i < 1.0)\n            letter_grades.push_back(\"D+\"\
    );\n        else if (i < 1.3)\n            letter_grades.push_back(\"C-\");\n\
    \        else if (i < 1.7)\n            letter_grades.push_back(\"C\");\n    \
    \    else if (i < 2.0)\n            letter_grades.push_back(\"C+\");\n       \
    \ else if (i < 2.3)\n            letter_grades.push_back(\"B-\");\n        else\
    \ if (i < 2.7)\n            letter_grades.push_back(\"B\");\n        else if (i\
    \ < 3.0)\n            letter_grades.push_back(\"B+\");\n        else if (i < 3.3)\n\
    \            letter_grades.push_back(\"A-\");\n        else if (i < 3.7)\n   \
    \         letter_grades.push_back(\"A\");\n        else\n            letter_grades.push_back(\"\
    A+\");\n    }\n    return letter_grades;", "    std::vector<std::string> grades_vec;\n\
    \    std::string grade;\n    for (int i = 0; i < grades.size(); i++) {\n     \
    \   grade = \" \";\n        if (grades[i] > 3.7) {\n            grade = \"A+\"\
    ;\n        } else if (grades[i] > 3.3) {\n            grade = \"A\";\n       \
    \ } else if (grades[i] > 3.0) {\n            grade = \"A-\";\n        } else if\
    \ (grades[i] > 2.7) {\n            grade = \"B+\";\n        } else if (grades[i]\
    \ > 2.3) {\n            grade = \"B\";\n        } else if (grades[i] > 2.0) {\n\
    \            grade = \"B-\";\n        } else if (grades[i] > 1.7) {\n        \
    \    grade = \"C+\";\n        } else if (grades[i] > 1.3) {\n            grade\
    \ = \"C\";\n        } else if (grades[i] > 1.0) {\n            grade = \"C-\"\
    ;\n        } else if (grades[i] > 0.7) {\n            grade = \"D+\";\n      \
    \  } else if (grades[i] > 0.0) {\n            grade = \"D\";\n        } else if\
    \ (grades[i] == 0.0) {\n            grade = \"D-\";\n        } else {\n      \
    \      grade = \"E\";\n        }\n        grades_vec.push_back(grade);\n    }\n\
    \    return grades_vec;", "    std::vector<std::string> letter_grades;\n    for\
    \ (auto g: grades) {\n        if (g < 0.7)\n            letter_grades.push_back(\"\
    D-\");\n        else if (g < 1.0)\n            letter_grades.push_back(\"D+\"\
    );\n        else if (g < 1.3)\n            letter_grades.push_back(\"C-\");\n\
    \        else if (g < 1.7)\n            letter_grades.push_back(\"C\");\n    \
    \    else if (g < 2.0)\n            letter_grades.push_back(\"C+\");\n       \
    \ else if (g < 2.3)\n            letter_grades.push_back(\"B-\");\n        else\
    \ if (g < 2.7)\n            letter_grades.push_back(\"B\");\n        else if (g\
    \ < 3.0)\n            letter_grades.push_back(\"B+\");\n        else if (g < 3.3)\n\
    \            letter_grades.push_back(\"A-\");\n        else if (g < 3.7)\n   \
    \         letter_grades.push_back(\"A\");\n        else\n            letter_grades.push_back(\"\
    A+\");\n    }\n    return letter_grades;", "  std::vector<std::string> l_grades;\n\
    \  for (auto g: grades) {\n    if (g == 4.0)\n      l_grades.push_back(\"A+\"\
    );\n    else if (g > 3.7)\n      l_grades.push_back(\"A\");\n    else if (g >\
    \ 3.3)\n      l_grades.push_back(\"A-\");\n    else if (g > 3.0)\n      l_grades.push_back(\"\
    B+\");\n    else if (g > 2.7)\n      l_grades.push_back(\"B\");\n    else if (g\
    \ > 2.3)\n      l_grades.push_back(\"B-\");\n    else if (g > 2.0)\n      l_grades.push_back(\"\
    C+\");\n    else if (g > 1.7)\n      l_grades.push_back(\"C\");\n    else if (g\
    \ > 1.3)\n      l_grades.push_back(\"C-\");\n    else if (g > 1.0)\n      l_grades.push_back(\"\
    D+\");\n    else if (g > 0.7)\n      l_grades.push_back(\"D\");\n    else if (g\
    \ > 0.0)\n      l_grades.push_back(\"D-\");\n    else\n      l_grades.push_back(\"\
    E\");\n  }\n  return l_grades;", "  std::vector<std::string> output;\n  for (int\
    \ i = 0; i < grades.size(); i++) {\n    std::string letter_grade;\n    if (grades[i]\
    \ >= 4.0) {\n      letter_grade = \"A+\";\n    } else if (grades[i] >= 3.7) {\n\
    \      letter_grade = \"A\";\n    } else if (grades[i] >= 3.3) {\n      letter_grade\
    \ = \"A-\";\n    } else if (grades[i] >= 3.0) {\n      letter_grade = \"B+\";\n\
    \    } else if (grades[i] >= 2.7) {\n      letter_grade = \"B\";\n    } else if\
    \ (grades[i] >= 2.3) {\n      letter_grade = \"B-\";\n    } else if (grades[i]\
    \ >= 2.0) {\n      letter_grade = \"C+\";\n    } else if (grades[i] >= 1.7) {\n\
    \      letter_grade = \"C\";\n    } else if (grades[i] >= 1.3) {\n      letter_grade\
    \ = \"C-\";\n    } else if (grades[i] >= 1.0) {\n      letter_grade = \"D+\";\n\
    \    } else if (grades[i] >= 0.7) {\n      letter_grade = \"D\";\n    } else if\
    \ (grades[i] >= 0.0) {\n      letter_grade = \"D-\";\n    } else {\n      letter_grade\
    \ = \"E\";\n    }\n    output.push_back(letter_grade);\n  }\n  return output;",
  "    std::vector<std::string> output;\n    std::string letter_grade;\n    for (float\
    \ i: grades) {\n        if (i == 4.0) {\n            letter_grade = \"A+\";\n\
    \        } else if (i >= 3.7 && i < 4.0) {\n            letter_grade = \"A\";\n\
    \        } else if (i >= 3.3 && i < 3.7) {\n            letter_grade = \"A-\"\
    ;\n        } else if (i >= 3.0 && i < 3.3) {\n            letter_grade = \"B+\"\
    ;\n        } else if (i >= 2.7 && i < 3.0) {\n            letter_grade = \"B\"\
    ;\n        } else if (i >= 2.3 && i < 2.7) {\n            letter_grade = \"B-\"\
    ;\n        } else if (i >= 2.0 && i < 2.3) {\n            letter_grade = \"C+\"\
    ;\n        } else if (i >= 1.7 && i < 2.0) {\n            letter_grade = \"C\"\
    ;\n        } else if (i >= 1.3 && i < 1.7) {\n            letter_grade = \"C-\"\
    ;\n        } else if (i >= 1.0 && i < 1.3) {\n            letter_grade = \"D+\"\
    ;\n        } else if (i >= 0.7 && i < 1.0) {\n            letter_grade = \"D\"\
    ;\n        } else if (i >= 0.0 && i < 0.7) {\n            letter_grade = \"D-\"\
    ;\n        } else if (i == 0.0) {\n            letter_grade = \"E\";\n       \
    \ }\n        output.push_back(letter_grade);\n    }\n    return output;", "  std::vector<std::string>\
    \ letter_grades;\n  for (auto grade : grades) {\n    if (grade == 4.0) {\n   \
    \   letter_grades.push_back(\"A+\");\n    } else if (grade >= 3.7) {\n      letter_grades.push_back(\"\
    A\");\n    } else if (grade >= 3.3) {\n      letter_grades.push_back(\"A-\");\n\
    \    } else if (grade >= 3.0) {\n      letter_grades.push_back(\"B+\");\n    }\
    \ else if (grade >= 2.7) {\n      letter_grades.push_back(\"B\");\n    } else\
    \ if (grade >= 2.3) {\n      letter_grades.push_back(\"B-\");\n    } else if (grade\
    \ >= 2.0) {\n      letter_grades.push_back(\"C+\");\n    } else if (grade >= 1.7)\
    \ {\n      letter_grades.push_back(\"C\");\n    } else if (grade >= 1.3) {\n \
    \     letter_grades.push_back(\"C-\");\n    } else if (grade >= 1.0) {\n     \
    \ letter_grades.push_back(\"D+\");\n    } else if (grade >= 0.7) {\n      letter_grades.push_back(\"\
    D\");\n    } else if (grade >= 0.0) {\n      letter_grades.push_back(\"D-\");\n\
    \    } else {\n      letter_grades.push_back(\"E\");\n    }\n  }\n  return letter_grades;",
  "    std::vector<std::string> result;\n    for (int i = 0; i < grades.size(); i++)\
    \ {\n        if (grades[i] > 4.0) {\n            result.push_back(\"E\");\n  \
    \      } else if (grades[i] > 3.7) {\n            result.push_back(\"A+\");\n\
    \        } else if (grades[i] > 3.3) {\n            result.push_back(\"A\");\n\
    \        } else if (grades[i] > 3.0) {\n            result.push_back(\"A-\");\n\
    \        } else if (grades[i] > 2.7) {\n            result.push_back(\"B+\");\n\
    \        } else if (grades[i] > 2.3) {\n            result.push_back(\"B\");\n\
    \        } else if (grades[i] > 2.0) {\n            result.push_back(\"B-\");\n\
    \        } else if (grades[i] > 1.7) {\n            result.push_back(\"C+\");\n\
    \        } else if (grades[i] > 1.3) {\n            result.push_back(\"C\");\n\
    \        } else if (grades[i] > 1.0) {\n            result.push_back(\"C-\");\n\
    \        } else if (grades[i] > 0.7) {\n            result.push_back(\"D+\");\n\
    \        } else if (grades[i] > 0.0) {\n            result.push_back(\"D\");\n\
    \        } else {\n            result.push_back(\"D-\");\n        }\n    }\n \
    \   return result;", "  std::vector<std::string> result;\n  for (int i = 0; i\
    \ < grades.size(); i++) {\n    // TODO: insert your solution here\n    if (grades[i]\
    \ == 4.0) {\n      result.push_back(\"A+\");\n    } else if (grades[i] > 3.7)\
    \ {\n      result.push_back(\"A\");\n    } else if (grades[i] > 3.3) {\n     \
    \ result.push_back(\"A-\");\n    } else if (grades[i] > 3.0) {\n      result.push_back(\"\
    B+\");\n    } else if (grades[i] > 2.7) {\n      result.push_back(\"B\");\n  \
    \  } else if (grades[i] > 2.3) {\n      result.push_back(\"B-\");\n    } else\
    \ if (grades[i] > 2.0) {\n      result.push_back(\"C+\");\n    } else if (grades[i]\
    \ > 1.7) {\n      result.push_back(\"C\");\n    } else if (grades[i] > 1.3) {\n\
    \      result.push_back(\"C-\");\n    } else if (grades[i] > 1.0) {\n      result.push_back(\"\
    D+\");\n    } else if (grades[i] > 0.7) {\n      result.push_back(\"D\");\n  \
    \  } else if (grades[i] > 0.0) {\n      result.push_back(\"D-\");\n    } else\
    \ {\n      result.push_back(\"E\");\n    }\n  }\n  return result;", "    // Your\
    \ code here.\n    std::vector<std::string> result;\n    for(int i = 0; i < grades.size();\
    \ i++){\n        if(grades[i] >= 4.0){\n            result.push_back(\"A+\");\n\
    \        }else if(grades[i] > 3.7){\n            result.push_back(\"A\");\n  \
    \      }else if(grades[i] > 3.3){\n            result.push_back(\"A-\");\n   \
    \     }else if(grades[i] > 3.0){\n            result.push_back(\"B+\");\n    \
    \    }else if(grades[i] > 2.7){\n            result.push_back(\"B\");\n      \
    \  }else if(grades[i] > 2.3){\n            result.push_back(\"B-\");\n       \
    \ }else if(grades[i] > 2.0){\n            result.push_back(\"C+\");\n        }else\
    \ if(grades[i] > 1.7){\n            result.push_back(\"C\");\n        }else if(grades[i]\
    \ > 1.3){\n            result.push_back(\"C-\");\n        }else if(grades[i] >\
    \ 1.0){\n            result.push_back(\"D+\");\n        }else if(grades[i] > 0.7){\n\
    \            result.push_back(\"D\");\n        }else if(grades[i] > 0.0){\n  \
    \          result.push_back(\"D-\");\n        }else{\n            result.push_back(\"\
    E\");\n        }\n    }\n    return result;", "    std::vector<std::string> str;\n\
    \    int n = grades.size();\n    for(int i = 0; i < n; i++) {\n        if(grades[i]\
    \ == 4.0) str.push_back(\"A+\");\n        else if(grades[i] >= 3.7) str.push_back(\"\
    A\");\n        else if(grades[i] >= 3.3) str.push_back(\"A-\");\n        else\
    \ if(grades[i] >= 3.0) str.push_back(\"B+\");\n        else if(grades[i] >= 2.7)\
    \ str.push_back(\"B\");\n        else if(grades[i] >= 2.3) str.push_back(\"B-\"\
    );\n        else if(grades[i] >= 2.0) str.push_back(\"C+\");\n        else if(grades[i]\
    \ >= 1.7) str.push_back(\"C\");\n        else if(grades[i] >= 1.3) str.push_back(\"\
    C-\");\n        else if(grades[i] >= 1.0) str.push_back(\"D+\");\n        else\
    \ if(grades[i] >= 0.7) str.push_back(\"D\");\n        else if(grades[i] >= 0.0)\
    \ str.push_back(\"D-\");\n        else str.push_back(\"E\");\n    }\n    return\
    \ str;", "    std::vector<std::string>result;\n    for(int i=0;i<grades.size();i++){\n\
    \        if(grades[i]==4.0){\n            result.push_back(\"A+\");\n        }\n\
    \        else if(grades[i]>3.7 && grades[i]<4.0){\n            result.push_back(\"\
    A\");\n        }\n        else if(grades[i]>3.3 && grades[i]<3.7){\n         \
    \   result.push_back(\"A-\");\n        }\n        else if(grades[i]>3.0 && grades[i]<3.3){\n\
    \            result.push_back(\"B+\");\n        }\n        else if(grades[i]>2.7\
    \ && grades[i]<3.0){\n            result.push_back(\"B\");\n        }\n      \
    \  else if(grades[i]>2.3 && grades[i]<2.7){\n            result.push_back(\"B-\"\
    );\n        }\n        else if(grades[i]>2.0 && grades[i]<2.3){\n            result.push_back(\"\
    C+\");\n        }\n        else if(grades[i]>1.7 && grades[i]<2.0){\n        \
    \    result.push_back(\"C\");\n        }\n        else if(grades[i]>1.3 && grades[i]<1.7){\n\
    \            result.push_back(\"C-\");\n        }\n        else if(grades[i]>1.0\
    \ && grades[i]<1.3){\n            result.push_back(\"D+\");\n        }\n     \
    \   else if(grades[i]>0.7 && grades[i]<1.0){\n            result.push_back(\"\
    D\");\n        }\n        else if(grades[i]>0.0 && grades[i]<0.7){\n         \
    \   result.push_back(\"D-\");\n        }\n        else if(grades[i]==0.0){\n \
    \           result.push_back(\"E\");\n        }\n    }\n    return result;", " \
    \ std::vector<std::string> letter_grades;\n  for (int i = 0; i < grades.size();\
    \ i++) {\n    if (grades[i] == 4.0) {\n      letter_grades.push_back(\"A+\");\n\
    \    } else if (grades[i] > 3.7) {\n      letter_grades.push_back(\"A\");\n  \
    \  } else if (grades[i] > 3.3) {\n      letter_grades.push_back(\"A-\");\n   \
    \ } else if (grades[i] > 3.0) {\n      letter_grades.push_back(\"B+\");\n    }\
    \ else if (grades[i] > 2.7) {\n      letter_grades.push_back(\"B\");\n    } else\
    \ if (grades[i] > 2.3) {\n      letter_grades.push_back(\"B-\");\n    } else if\
    \ (grades[i] > 2.0) {\n      letter_grades.push_back(\"C+\");\n    } else if (grades[i]\
    \ > 1.7) {\n      letter_grades.push_back(\"C\");\n    } else if (grades[i] >\
    \ 1.3) {\n      letter_grades.push_back(\"C-\");\n    } else if (grades[i] > 1.0)\
    \ {\n      letter_grades.push_back(\"D+\");\n    } else if (grades[i] > 0.7) {\n\
    \      letter_grades.push_back(\"D\");\n    } else if (grades[i] > 0.0) {\n  \
    \    letter_grades.push_back(\"D-\");\n    } else {\n      letter_grades.push_back(\"\
    E\");\n    }\n  }\n  return letter_grades;", "    // Write your code here\n  \
    \  std::vector<std::string> letter_grades;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        if (grades[i] == 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grades[i] > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grades[i] > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grades[i] > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grades[i] > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grades[i] > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grades[i] > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grades[i] > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grades[i] > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grades[i] > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grades[i] > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grades[i] > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> letterGrades;\n\
    \    // 1. Write your code here\n    // 2. Return the vector letterGrades\n  \
    \  return letterGrades;", "    assert(grades.size() > 0);\n    int size = grades.size();\n\
    \    std::vector<std::string> grades_of_students(size);\n    for(int i = 0; i\
    \ < size; i++) {\n        if(grades[i] >= 4.0) {\n            grades_of_students[i]\
    \ = \"A+\";\n        }\n        else if(grades[i] >= 3.7) {\n            grades_of_students[i]\
    \ = \"A\";\n        }\n        else if(grades[i] >= 3.3) {\n            grades_of_students[i]\
    \ = \"A-\";\n        }\n        else if(grades[i] >= 3.0) {\n            grades_of_students[i]\
    \ = \"B+\";\n        }\n        else if(grades[i] >= 2.7) {\n            grades_of_students[i]\
    \ = \"B\";\n        }\n        else if(grades[i] >= 2.3) {\n            grades_of_students[i]\
    \ = \"B-\";\n        }\n        else if(grades[i] >= 2.0) {\n            grades_of_students[i]\
    \ = \"C+\";\n        }\n        else if(grades[i] >= 1.7) {\n            grades_of_students[i]\
    \ = \"C\";\n        }\n        else if(grades[i] >= 1.3) {\n            grades_of_students[i]\
    \ = \"C-\";\n        }\n        else if(grades[i] >= 1.0) {\n            grades_of_students[i]\
    \ = \"D+\";\n        }\n        else if(grades[i] >= 0.7) {\n            grades_of_students[i]\
    \ = \"D\";\n        }\n        else if(grades[i] >= 0.0) {\n            grades_of_students[i]\
    \ = \"D-\";\n        }\n        else {\n            grades_of_students[i] = \"\
    E\";\n        }\n    }\n    return grades_of_students;", "    std::vector<std::string>\
    \ res;\n    std::vector<float> grade_table = {4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0,\
    \ 1.7, 1.3, 1.0, 0.7, 0.0};\n    std::vector<std::string> letter_table = {\"A+\"\
    , \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\",\
    \ \"D-\", \"E\"};\n    for (float grade : grades) {\n        int pos = 12;\n \
    \       for (int i = 0; i < grade_table.size(); i++) {\n            if (grade\
    \ >= grade_table[i]) {\n                pos = i;\n                break;\n   \
    \         }\n        }\n        res.push_back(letter_table[pos]);\n    }\n   \
    \ return res;", "    std::vector<std::string> result;\n    for (int i = 0; i <\
    \ grades.size(); i++) {\n        if (grades[i] > 3.7) {\n            result.push_back(\"\
    A+\");\n        } else if (grades[i] > 3.3) {\n            result.push_back(\"\
    A\");\n        } else if (grades[i] > 3.0) {\n            result.push_back(\"\
    A-\");\n        } else if (grades[i] > 2.7) {\n            result.push_back(\"\
    B+\");\n        } else if (grades[i] > 2.3) {\n            result.push_back(\"\
    B\");\n        } else if (grades[i] > 2.0) {\n            result.push_back(\"\
    B-\");\n        } else if (grades[i] > 1.7) {\n            result.push_back(\"\
    C+\");\n        } else if (grades[i] > 1.3) {\n            result.push_back(\"\
    C\");\n        } else if (grades[i] > 1.0) {\n            result.push_back(\"\
    C-\");\n        } else if (grades[i] > 0.7) {\n            result.push_back(\"\
    D+\");\n        } else if (grades[i] > 0.0) {\n            result.push_back(\"\
    D\");\n        } else if (grades[i] == 0.0) {\n            result.push_back(\"\
    D-\");\n        } else {\n            result.push_back(\"E\");\n        }\n  \
    \  }\n    return result;", "\tstd::vector<std::string> result;\n\tfor (int i =\
    \ 0; i < grades.size(); i++) {\n\t\tfloat GPA = grades[i];\n\t\tif (GPA >= 4.0)\
    \ {\n\t\t\tresult.push_back(\"A+\");\n\t\t}\n\t\telse if (GPA >= 3.7) {\n\t\t\t\
    result.push_back(\"A\");\n\t\t}\n\t\telse if (GPA >= 3.3) {\n\t\t\tresult.push_back(\"\
    A-\");\n\t\t}\n\t\telse if (GPA >= 3.0) {\n\t\t\tresult.push_back(\"B+\");\n\t\
    \t}\n\t\telse if (GPA >= 2.7) {\n\t\t\tresult.push_back(\"B\");\n\t\t}\n\t\telse\
    \ if (GPA >= 2.3) {\n\t\t\tresult.push_back(\"B-\");\n\t\t}\n\t\telse if (GPA\
    \ >= 2.0) {\n\t\t\tresult.push_back(\"C+\");\n\t\t}\n\t\telse if (GPA >= 1.7)\
    \ {\n\t\t\tresult.push_back(\"C\");\n\t\t}\n\t\telse if (GPA >= 1.3) {\n\t\t\t\
    result.push_back(\"C-\");\n\t\t}\n\t\telse if (GPA >= 1.0) {\n\t\t\tresult.push_back(\"\
    D+\");\n\t\t}\n\t\telse if (GPA >= 0.7) {\n\t\t\tresult.push_back(\"D\");\n\t\t\
    }\n\t\telse if (GPA >= 0.0) {\n\t\t\tresult.push_back(\"D-\");\n\t\t}\n\t\telse\
    \ {\n\t\t\tresult.push_back(\"E\");\n\t\t}\n\t}\n\treturn result;", "    // Write\
    \ your code here\n    std::vector<std::string> letters;\n    for(float i: grades){\n\
    \        if(i > 4.0){\n            letters.push_back(\"A+\");\n        }\n   \
    \     else if(i >= 3.7 && i <= 4.0){\n            letters.push_back(\"A\");\n\
    \        }\n        else if(i >= 3.3 && i < 3.7){\n            letters.push_back(\"\
    A-\");\n        }\n        else if(i >= 3.0 && i < 3.3){\n            letters.push_back(\"\
    B+\");\n        }\n        else if(i >= 2.7 && i < 3.0){\n            letters.push_back(\"\
    B\");\n        }\n        else if(i >= 2.3 && i < 2.7){\n            letters.push_back(\"\
    B-\");\n        }\n        else if(i >= 2.0 && i < 2.3){\n            letters.push_back(\"\
    C+\");\n        }\n        else if(i >= 1.7 && i < 2.0){\n            letters.push_back(\"\
    C\");\n        }\n        else if(i >= 1.3 && i < 1.7){\n            letters.push_back(\"\
    C-\");\n        }\n        else if(i >= 1.0 && i < 1.3){\n            letters.push_back(\"\
    D+\");\n        }\n        else if(i >= 0.7 && i < 1.0){\n            letters.push_back(\"\
    D\");\n        }\n        else if(i >= 0.0 && i < 0.7){\n            letters.push_back(\"\
    D-\");\n        }\n        else if(i == 0.0){\n            letters.push_back(\"\
    E\");\n        }\n    }\n    return letters;", "    std::vector<std::string> letter_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> grade_letter;\n    for (float grade : grades) {\n\
    \        if (grade >= 4.0) {\n            grade_letter.push_back(\"A+\");\n  \
    \      } else if (grade >= 3.7) {\n            grade_letter.push_back(\"A\");\n\
    \        } else if (grade >= 3.3) {\n            grade_letter.push_back(\"A-\"\
    );\n        } else if (grade >= 3.0) {\n            grade_letter.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            grade_letter.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            grade_letter.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            grade_letter.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            grade_letter.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            grade_letter.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            grade_letter.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            grade_letter.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            grade_letter.push_back(\"\
    D-\");\n        } else {\n            grade_letter.push_back(\"E\");\n       \
    \ }\n    }\n    return grade_letter;", "    float grade;\n    int n = grades.size();\n\
    \    std::vector<std::string> a(n);\n    for(int i = 0; i < n; i++) {\n      \
    \  grade = grades[i];\n        if(grade >= 4.0) {\n            a[i] = \"A+\";\n\
    \        } else if(grade >= 3.7) {\n            a[i] = \"A\";\n        } else\
    \ if(grade >= 3.3) {\n            a[i] = \"A-\";\n        } else if(grade >= 3.0)\
    \ {\n            a[i] = \"B+\";\n        } else if(grade >= 2.7) {\n         \
    \   a[i] = \"B\";\n        } else if(grade >= 2.3) {\n            a[i] = \"B-\"\
    ;\n        } else if(grade >= 2.0) {\n            a[i] = \"C+\";\n        } else\
    \ if(grade >= 1.7) {\n            a[i] = \"C\";\n        } else if(grade >= 1.3)\
    \ {\n            a[i] = \"C-\";\n        } else if(grade >= 1.0) {\n         \
    \   a[i] = \"D+\";\n        } else if(grade >= 0.7) {\n            a[i] = \"D\"\
    ;\n        } else if(grade >= 0.0) {\n            a[i] = \"D-\";\n        } else\
    \ {\n            a[i] = \"E\";\n        }\n    }\n    return a;", "    std::vector<std::string>\
    \ grades_letter;\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ >= 4.0) {\n            grades_letter.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            grades_letter.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            grades_letter.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            grades_letter.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            grades_letter.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            grades_letter.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            grades_letter.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            grades_letter.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            grades_letter.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            grades_letter.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            grades_letter.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            grades_letter.push_back(\"D-\");\n        } else {\n \
    \           grades_letter.push_back(\"E\");\n        }\n    }\n    return grades_letter;",
  "   // Write your code here\n   // Hint: You can use a vector to store all the grades\n\
    \    std::vector<std::string> letterGrades;\n    for(auto i : grades){\n     \
    \   if(i == 4.0){\n            letterGrades.push_back(\"A+\");\n        }else\
    \ if(i >= 3.7){\n            letterGrades.push_back(\"A\");\n        }else if(i\
    \ >= 3.3){\n            letterGrades.push_back(\"A-\");\n        }else if(i >=\
    \ 3.0){\n            letterGrades.push_back(\"B+\");\n        }else if(i >= 2.7){\n\
    \            letterGrades.push_back(\"B\");\n        }else if(i >= 2.3){\n   \
    \         letterGrades.push_back(\"B-\");\n        }else if(i >= 2.0){\n     \
    \       letterGrades.push_back(\"C+\");\n        }else if(i >= 1.7){\n       \
    \     letterGrades.push_back(\"C\");\n        }else if(i >= 1.3){\n          \
    \  letterGrades.push_back(\"C-\");\n        }else if(i >= 1.0){\n            letterGrades.push_back(\"\
    D+\");\n        }else if(i >= 0.7){\n            letterGrades.push_back(\"D\"\
    );\n        }else if(i >= 0.0){\n            letterGrades.push_back(\"D-\");\n\
    \        }else{\n            letterGrades.push_back(\"E\");\n        }\n    }\n\
    \    return letterGrades;", "   std::vector<std::string> final_grades;\n   for(int\
    \ i = 0; i < grades.size(); i++) {\n       if(grades[i] == 4.0) {\n          \
    \ final_grades.push_back(\"A+\");\n       }\n       else if(grades[i] >= 3.7)\
    \ {\n           final_grades.push_back(\"A\");\n       }\n       else if(grades[i]\
    \ >= 3.3) {\n           final_grades.push_back(\"A-\");\n       }\n       else\
    \ if(grades[i] >= 3.0) {\n           final_grades.push_back(\"B+\");\n       }\n\
    \       else if(grades[i] >= 2.7) {\n           final_grades.push_back(\"B\");\n\
    \       }\n       else if(grades[i] >= 2.3) {\n           final_grades.push_back(\"\
    B-\");\n       }\n       else if(grades[i] >= 2.0) {\n           final_grades.push_back(\"\
    C+\");\n       }\n       else if(grades[i] >= 1.7) {\n           final_grades.push_back(\"\
    C\");\n       }\n       else if(grades[i] >= 1.3) {\n           final_grades.push_back(\"\
    C-\");\n       }\n       else if(grades[i] >= 1.0) {\n           final_grades.push_back(\"\
    D+\");\n       }\n       else if(grades[i] >= 0.7) {\n           final_grades.push_back(\"\
    D\");\n       }\n       else if(grades[i] > 0.0) {\n           final_grades.push_back(\"\
    D-\");\n       }\n       else {\n           final_grades.push_back(\"E\");\n \
    \      }\n   }\n   return final_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  '    ', "    std::vector<std::string> letter_grades;\n    for (unsigned int i =\
    \ 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grades[i] >= 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grades[i] >= 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grades[i] >= 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grades[i] >= 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grades[i] >= 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grades[i] >= 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grades[i] >= 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grades[i] >= 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grades[i] >= 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grades[i] >= 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grades[i] >= 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", '    // Write your code here', "  assert(grades.size()\
    \ > 0);\n  std::vector<std::string> letter_grades;\n  for (auto grade : grades)\
    \ {\n    std::string letter_grade;\n    if (grade >= 4.0) {\n      letter_grade\
    \ = \"A+\";\n    } else if (grade >= 3.7) {\n      letter_grade = \"A\";\n   \
    \ } else if (grade >= 3.3) {\n      letter_grade = \"A-\";\n    } else if (grade\
    \ >= 3.0) {\n      letter_grade = \"B+\";\n    } else if (grade >= 2.7) {\n  \
    \    letter_grade = \"B\";\n    } else if (grade >= 2.3) {\n      letter_grade\
    \ = \"B-\";\n    } else if (grade >= 2.0) {\n      letter_grade = \"C+\";\n  \
    \  } else if (grade >= 1.7) {\n      letter_grade = \"C\";\n    } else if (grade\
    \ >= 1.3) {\n      letter_grade = \"C-\";\n    } else if (grade >= 1.0) {\n  \
    \    letter_grade = \"D+\";\n    } else if (grade >= 0.7) {\n      letter_grade\
    \ = \"D\";\n    } else if (grade >= 0.0) {\n      letter_grade = \"D-\";\n   \
    \ } else {\n      letter_grade = \"E\";\n    }\n    letter_grades.push_back(letter_grade);\n\
    \  }\n  return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float score : grades) {\n        if (score == 4.0)\n            letter_grades.push_back(\"\
    A+\");\n        else if (score > 3.7)\n            letter_grades.push_back(\"\
    A\");\n        else if (score > 3.3)\n            letter_grades.push_back(\"A-\"\
    );\n        else if (score > 3.0)\n            letter_grades.push_back(\"B+\"\
    );\n        else if (score > 2.7)\n            letter_grades.push_back(\"B\");\n\
    \        else if (score > 2.3)\n            letter_grades.push_back(\"B-\");\n\
    \        else if (score > 2.0)\n            letter_grades.push_back(\"C+\");\n\
    \        else if (score > 1.7)\n            letter_grades.push_back(\"C\");\n\
    \        else if (score > 1.3)\n            letter_grades.push_back(\"C-\");\n\
    \        else if (score > 1.0)\n            letter_grades.push_back(\"D+\");\n\
    \        else if (score > 0.7)\n            letter_grades.push_back(\"D\");\n\
    \        else if (score > 0.0)\n            letter_grades.push_back(\"D-\");\n\
    \        else\n            letter_grades.push_back(\"E\");\n    }\n    return\
    \ letter_grades;", "    std::vector<std::string> results;\n    for (int i = 0;\
    \ i < grades.size(); i++) {\n        float grade = grades[i];\n        if (grade\
    \ == (float)4.0) {\n            results.push_back(\"A+\");\n        } else if\
    \ (grade > (float)3.7) {\n            results.push_back(\"A\");\n        } else\
    \ if (grade > (float)3.3) {\n            results.push_back(\"A-\");\n        }\
    \ else if (grade > (float)3.0) {\n            results.push_back(\"B+\");\n   \
    \     } else if (grade > (float)2.7) {\n            results.push_back(\"B\");\n\
    \        } else if (grade > (float)2.3) {\n            results.push_back(\"B-\"\
    );\n        } else if (grade > (float)2.0) {\n            results.push_back(\"\
    C+\");\n        } else if (grade > (float)1.7) {\n            results.push_back(\"\
    C\");\n        } else if (grade > (float)1.3) {\n            results.push_back(\"\
    C-\");\n        } else if (grade > (float)1.0) {\n            results.push_back(\"\
    D+\");\n        } else if (grade > (float)0.7) {\n            results.push_back(\"\
    D\");\n        } else if (grade > (float)0.0) {\n            results.push_back(\"\
    D-\");\n        } else {\n            results.push_back(\"E\");\n        }\n \
    \   }\n    return results;", "  std::vector<std::string> temp;\n  for(int i =\
    \ 0; i < grades.size(); i++){\n    if(grades[i] == 4.0){\n      temp.push_back(\"\
    A+\");\n    }else if(grades[i] > 3.7){\n      temp.push_back(\"A\");\n    }else\
    \ if(grades[i] > 3.3){\n      temp.push_back(\"A-\");\n    }else if(grades[i]\
    \ > 3.0){\n      temp.push_back(\"B+\");\n    }else if(grades[i] > 2.7){\n   \
    \   temp.push_back(\"B\");\n    }else if(grades[i] > 2.3){\n      temp.push_back(\"\
    B-\");\n    }else if(grades[i] > 2.0){\n      temp.push_back(\"C+\");\n    }else\
    \ if(grades[i] > 1.7){\n      temp.push_back(\"C\");\n    }else if(grades[i] >\
    \ 1.3){\n      temp.push_back(\"C-\");\n    }else if(grades[i] > 1.0){\n     \
    \ temp.push_back(\"D+\");\n    }else if(grades[i] > 0.7){\n      temp.push_back(\"\
    D\");\n    }else if(grades[i] > 0.0){\n      temp.push_back(\"D-\");\n    }else{\n\
    \      temp.push_back(\"E\");\n    }\n  }\n  return temp;", "  std::vector<std::string>\
    \ ret;\n  for (auto grade : grades) {\n    if (grade >= 4.0) {\n      ret.push_back(\"\
    A+\");\n    } else if (grade >= 3.7) {\n      ret.push_back(\"A\");\n    } else\
    \ if (grade >= 3.3) {\n      ret.push_back(\"A-\");\n    } else if (grade >= 3.0)\
    \ {\n      ret.push_back(\"B+\");\n    } else if (grade >= 2.7) {\n      ret.push_back(\"\
    B\");\n    } else if (grade >= 2.3) {\n      ret.push_back(\"B-\");\n    } else\
    \ if (grade >= 2.0) {\n      ret.push_back(\"C+\");\n    } else if (grade >= 1.7)\
    \ {\n      ret.push_back(\"C\");\n    } else if (grade >= 1.3) {\n      ret.push_back(\"\
    C-\");\n    } else if (grade >= 1.0) {\n      ret.push_back(\"D+\");\n    } else\
    \ if (grade >= 0.7) {\n      ret.push_back(\"D\");\n    } else if (grade >= 0.0)\
    \ {\n      ret.push_back(\"D-\");\n    } else {\n      ret.push_back(\"E\");\n\
    \    }\n  }\n  return ret;", "    std::vector<std::string> r;\n    for (int i\
    \ = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0) {\n          \
    \  r.push_back(\"A+\");\n        } else if (grades[i] >= 3.7) {\n            r.push_back(\"\
    A\");\n        } else if (grades[i] >= 3.3) {\n            r.push_back(\"A-\"\
    );\n        } else if (grades[i] >= 3.0) {\n            r.push_back(\"B+\");\n\
    \        } else if (grades[i] >= 2.7) {\n            r.push_back(\"B\");\n   \
    \     } else if (grades[i] >= 2.3) {\n            r.push_back(\"B-\");\n     \
    \   } else if (grades[i] >= 2.0) {\n            r.push_back(\"C+\");\n       \
    \ } else if (grades[i] >= 1.7) {\n            r.push_back(\"C\");\n        } else\
    \ if (grades[i] >= 1.3) {\n            r.push_back(\"C-\");\n        } else if\
    \ (grades[i] >= 1.0) {\n            r.push_back(\"D+\");\n        } else if (grades[i]\
    \ >= 0.7) {\n            r.push_back(\"D\");\n        } else if (grades[i] >=\
    \ 0.0) {\n            r.push_back(\"D-\");\n        } else {\n            r.push_back(\"\
    E\");\n        }\n    }\n    return r;", "    std::vector<std::string> output;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        float t = grades[i];\n\
    \        std::string x;\n        if (t == 4.0) {\n            x = \"A+\";\n  \
    \      } else if (t > 3.7) {\n            x = \"A\";\n        } else if (t > 3.3)\
    \ {\n            x = \"A-\";\n        } else if (t > 3.0) {\n            x = \"\
    B+\";\n        } else if (t > 2.7) {\n            x = \"B\";\n        } else if\
    \ (t > 2.3) {\n            x = \"B-\";\n        } else if (t > 2.0) {\n      \
    \      x = \"C+\";\n        } else if (t > 1.7) {\n            x = \"C\";\n  \
    \      } else if (t > 1.3) {\n            x = \"C-\";\n        } else if (t >\
    \ 1.0) {\n            x = \"D+\";\n        } else if (t > 0.7) {\n           \
    \ x = \"D\";\n        } else if (t > 0.0) {\n            x = \"D-\";\n       \
    \ } else {\n            x = \"E\";\n        }\n        output.push_back(x);\n\
    \    }\n    return output;", "    std::vector<std::string> output;\n    for (int\
    \ i = 0; i < grades.size(); i++) {\n        std::string grade;\n        if (grades[i]\
    \ == 4.0) {\n            grade = \"A+\";\n        } else if (grades[i] >= 3.7)\
    \ {\n            grade = \"A\";\n        } else if (grades[i] >= 3.3) {\n    \
    \        grade = \"A-\";\n        } else if (grades[i] >= 3.0) {\n           \
    \ grade = \"B+\";\n        } else if (grades[i] >= 2.7) {\n            grade =\
    \ \"B\";\n        } else if (grades[i] >= 2.3) {\n            grade = \"B-\";\n\
    \        } else if (grades[i] >= 2.0) {\n            grade = \"C+\";\n       \
    \ } else if (grades[i] >= 1.7) {\n            grade = \"C\";\n        } else if\
    \ (grades[i] >= 1.3) {\n            grade = \"C-\";\n        } else if (grades[i]\
    \ >= 1.0) {\n            grade = \"D+\";\n        } else if (grades[i] >= 0.7)\
    \ {\n            grade = \"D\";\n        } else if (grades[i] >= 0.0) {\n    \
    \        grade = \"D-\";\n        } else {\n            grade = \"E\";\n     \
    \   }\n        output.push_back(grade);\n    }\n    return output;", "  std::vector<std::string>\
    \ letter_grades;\n  for (float grade : grades) {\n    if (grade == 4.0)\n    \
    \  letter_grades.push_back(\"A+\");\n    else if (grade > 3.7)\n      letter_grades.push_back(\"\
    A\");\n    else if (grade > 3.3)\n      letter_grades.push_back(\"A-\");\n   \
    \ else if (grade > 3.0)\n      letter_grades.push_back(\"B+\");\n    else if (grade\
    \ > 2.7)\n      letter_grades.push_back(\"B\");\n    else if (grade > 2.3)\n \
    \     letter_grades.push_back(\"B-\");\n    else if (grade > 2.0)\n      letter_grades.push_back(\"\
    C+\");\n    else if (grade > 1.7)\n      letter_grades.push_back(\"C\");\n   \
    \ else if (grade > 1.3)\n      letter_grades.push_back(\"C-\");\n    else if (grade\
    \ > 1.0)\n      letter_grades.push_back(\"D+\");\n    else if (grade > 0.7)\n\
    \      letter_grades.push_back(\"D\");\n    else if (grade > 0.0)\n      letter_grades.push_back(\"\
    D-\");\n    else\n      letter_grades.push_back(\"E\");\n  }\n  return letter_grades;",
  "    std::vector<std::string> grade;\n    for(int i = 0; i < grades.size(); i++){\n\
    \        if(grades[i] < 0.0){\n            grade.push_back(\"E\");\n        }\n\
    \        else if(grades[i] < 0.7){\n            grade.push_back(\"D-\");\n   \
    \     }\n        else if(grades[i] < 1.0){\n            grade.push_back(\"D\"\
    );\n        }\n        else if(grades[i] < 1.3){\n            grade.push_back(\"\
    D+\");\n        }\n        else if(grades[i] < 1.7){\n            grade.push_back(\"\
    C-\");\n        }\n        else if(grades[i] < 2.0){\n            grade.push_back(\"\
    C\");\n        }\n        else if(grades[i] < 2.3){\n            grade.push_back(\"\
    C+\");\n        }\n        else if(grades[i] < 2.7){\n            grade.push_back(\"\
    B-\");\n        }\n        else if(grades[i] < 3.0){\n            grade.push_back(\"\
    B\");\n        }\n        else if(grades[i] < 3.3){\n            grade.push_back(\"\
    B+\");\n        }\n        else if(grades[i] < 3.7){\n            grade.push_back(\"\
    A-\");\n        }\n        else if(grades[i] < 4.0){\n            grade.push_back(\"\
    A\");\n        }\n        else{\n            grade.push_back(\"A+\");\n      \
    \  }\n    }\n    return grade;", "    std::vector<std::string> grade_letter;\n\
    \    for (float grade : grades) {\n        std::string letter_grade;\n       \
    \ if (grade == 4.0) {\n            letter_grade = \"A+\";\n        } else if (grade\
    \ >= 3.7) {\n            letter_grade = \"A\";\n        } else if (grade >= 3.3)\
    \ {\n            letter_grade = \"A-\";\n        } else if (grade >= 3.0) {\n\
    \            letter_grade = \"B+\";\n        } else if (grade >= 2.7) {\n    \
    \        letter_grade = \"B\";\n        } else if (grade >= 2.3) {\n         \
    \   letter_grade = \"B-\";\n        } else if (grade >= 2.0) {\n            letter_grade\
    \ = \"C+\";\n        } else if (grade >= 1.7) {\n            letter_grade = \"\
    C\";\n        } else if (grade >= 1.3) {\n            letter_grade = \"C-\";\n\
    \        } else if (grade >= 1.0) {\n            letter_grade = \"D+\";\n    \
    \    } else if (grade >= 0.7) {\n            letter_grade = \"D\";\n        }\
    \ else if (grade >= 0.0) {\n            letter_grade = \"D-\";\n        } else\
    \ {\n            letter_grade = \"E\";\n        }\n        grade_letter.push_back(letter_grade);\n\
    \    }\n    return grade_letter;", "    std::vector<std::string> letter;\n   \
    \ for(int i = 0; i < grades.size(); i++){\n        if(grades[i] == 4.0){\n   \
    \         letter.push_back(\"A+\");\n        }\n        else if(grades[i] > 3.7){\n\
    \            letter.push_back(\"A\");\n        }\n        else if(grades[i] >\
    \ 3.3){\n            letter.push_back(\"A-\");\n        }\n        else if(grades[i]\
    \ > 3.0){\n            letter.push_back(\"B+\");\n        }\n        else if(grades[i]\
    \ > 2.7){\n            letter.push_back(\"B\");\n        }\n        else if(grades[i]\
    \ > 2.3){\n            letter.push_back(\"B-\");\n        }\n        else if(grades[i]\
    \ > 2.0){\n            letter.push_back(\"C+\");\n        }\n        else if(grades[i]\
    \ > 1.7){\n            letter.push_back(\"C\");\n        }\n        else if(grades[i]\
    \ > 1.3){\n            letter.push_back(\"C-\");\n        }\n        else if(grades[i]\
    \ > 1.0){\n            letter.push_back(\"D+\");\n        }\n        else if(grades[i]\
    \ > 0.7){\n            letter.push_back(\"D\");\n        }\n        else if(grades[i]\
    \ > 0.0){\n            letter.push_back(\"D-\");\n        }\n        else if(grades[i]\
    \ == 0.0){\n            letter.push_back(\"E\");\n        }\n    }\n    return\
    \ letter;", "  std::vector<std::string> letters;\n  for (int i = 0; i < grades.size();\
    \ i++) {\n    float gpa = grades[i];\n    std::string letter;\n    if (gpa ==\
    \ 4.0) {\n      letter = \"A+\";\n    } else if (gpa > 3.7) {\n      letter =\
    \ \"A\";\n    } else if (gpa > 3.3) {\n      letter = \"A-\";\n    } else if (gpa\
    \ > 3.0) {\n      letter = \"B+\";\n    } else if (gpa > 2.7) {\n      letter\
    \ = \"B\";\n    } else if (gpa > 2.3) {\n      letter = \"B-\";\n    } else if\
    \ (gpa > 2.0) {\n      letter = \"C+\";\n    } else if (gpa > 1.7) {\n      letter\
    \ = \"C\";\n    } else if (gpa > 1.3) {\n      letter = \"C-\";\n    } else if\
    \ (gpa > 1.0) {\n      letter = \"D+\";\n    } else if (gpa > 0.7) {\n      letter\
    \ = \"D\";\n    } else if (gpa > 0.0) {\n      letter = \"D-\";\n    } else {\n\
    \      letter = \"E\";\n    }\n    letters.push_back(letter);\n  }\n  return letters;",
  "    std::vector<std::string> grade_table = {\"A+\", \"A\", \"A-\", \"B+\", \"B\"\
    , \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"};\n    std::vector<float>\
    \ grade_cutoff = {4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0};\n\
    \    std::vector<std::string> output;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        for (int j = 0; j < grade_cutoff.size(); j++) {\n          \
    \  if (grades[i] >= grade_cutoff[j]) {\n                output.push_back(grade_table[j]);\n\
    \                break;\n            }\n        }\n    }\n    return output;",
  "    std::vector<std::string> ans;\n    // Your code here\n    for(float grade :\
    \ grades){\n        if(grade >= 4.0){\n            ans.push_back(\"A+\");\n  \
    \      }\n        else if(grade >= 3.7){\n            ans.push_back(\"A\");\n\
    \        }\n        else if(grade >= 3.3){\n            ans.push_back(\"A-\");\n\
    \        }\n        else if(grade >= 3.0){\n            ans.push_back(\"B+\");\n\
    \        }\n        else if(grade >= 2.7){\n            ans.push_back(\"B\");\n\
    \        }\n        else if(grade >= 2.3){\n            ans.push_back(\"B-\");\n\
    \        }\n        else if(grade >= 2.0){\n            ans.push_back(\"C+\");\n\
    \        }\n        else if(grade >= 1.7){\n            ans.push_back(\"C\");\n\
    \        }\n        else if(grade >= 1.3){\n            ans.push_back(\"C-\");\n\
    \        }\n        else if(grade >= 1.0){\n            ans.push_back(\"D+\");\n\
    \        }\n        else if(grade >= 0.7){\n            ans.push_back(\"D\");\n\
    \        }\n        else if(grade >= 0.0){\n            ans.push_back(\"D-\");\n\
    \        }\n        else{\n            ans.push_back(\"E\");\n        }\n    }\n\
    \    return ans;", "    std::vector<std::string> letter_grades(grades.size());\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        float grade = grades[i];\n\
    \        if (grade >= 4.0) {\n            letter_grades[i] = \"A+\";\n       \
    \ } else if (grade >= 3.7) {\n            letter_grades[i] = \"A\";\n        }\
    \ else if (grade >= 3.3) {\n            letter_grades[i] = \"A-\";\n        }\
    \ else if (grade >= 3.0) {\n            letter_grades[i] = \"B+\";\n        }\
    \ else if (grade >= 2.7) {\n            letter_grades[i] = \"B\";\n        } else\
    \ if (grade >= 2.3) {\n            letter_grades[i] = \"B-\";\n        } else\
    \ if (grade >= 2.0) {\n            letter_grades[i] = \"C+\";\n        } else\
    \ if (grade >= 1.7) {\n            letter_grades[i] = \"C\";\n        } else if\
    \ (grade >= 1.3) {\n            letter_grades[i] = \"C-\";\n        } else if\
    \ (grade >= 1.0) {\n            letter_grades[i] = \"D+\";\n        } else if\
    \ (grade >= 0.7) {\n            letter_grades[i] = \"D\";\n        } else if (grade\
    \ >= 0.0) {\n            letter_grades[i] = \"D-\";\n        } else {\n      \
    \      letter_grades[i] = \"E\";\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> output_letter_grades;\n    for (float grade : grades)\
    \ {\n        if (grade >= 4.0) {\n            output_letter_grades.push_back(\"\
    A+\");\n        } else if (grade >= 3.7) {\n            output_letter_grades.push_back(\"\
    A\");\n        } else if (grade >= 3.3) {\n            output_letter_grades.push_back(\"\
    A-\");\n        } else if (grade >= 3.0) {\n            output_letter_grades.push_back(\"\
    B+\");\n        } else if (grade >= 2.7) {\n            output_letter_grades.push_back(\"\
    B\");\n        } else if (grade >= 2.3) {\n            output_letter_grades.push_back(\"\
    B-\");\n        } else if (grade >= 2.0) {\n            output_letter_grades.push_back(\"\
    C+\");\n        } else if (grade >= 1.7) {\n            output_letter_grades.push_back(\"\
    C\");\n        } else if (grade >= 1.3) {\n            output_letter_grades.push_back(\"\
    C-\");\n        } else if (grade >= 1.0) {\n            output_letter_grades.push_back(\"\
    D+\");\n        } else if (grade >= 0.7) {\n            output_letter_grades.push_back(\"\
    D\");\n        } else if (grade >= 0.0) {\n            output_letter_grades.push_back(\"\
    D-\");\n        } else {\n            output_letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return output_letter_grades;", "    std::vector<std::string>\
    \ letter_grades;\n    for (float element : grades) {\n        if (element == 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (element\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (element\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (element\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (element\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (element\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (element\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (element\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (element\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (element\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (element\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (element\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "  std::vector<std::string> letter_grades;\n  for (auto it = grades.begin(); it\
    \ != grades.end(); ++it) {\n    float & grade = *it;\n    if (grade >= 3.7) {\n\
    \      letter_grades.push_back(\"A\");\n    } else if (grade >= 3.3) {\n     \
    \ letter_grades.push_back(\"A-\");\n    } else if (grade >= 3.0) {\n      letter_grades.push_back(\"\
    B+\");\n    } else if (grade >= 2.7) {\n      letter_grades.push_back(\"B\");\n\
    \    } else if (grade >= 2.3) {\n      letter_grades.push_back(\"B-\");\n    }\
    \ else if (grade >= 2.0) {\n      letter_grades.push_back(\"C+\");\n    } else\
    \ if (grade >= 1.7) {\n      letter_grades.push_back(\"C\");\n    } else if (grade\
    \ >= 1.3) {\n      letter_grades.push_back(\"C-\");\n    } else if (grade >= 1.0)\
    \ {\n      letter_grades.push_back(\"D+\");\n    } else if (grade >= 0.7) {\n\
    \      letter_grades.push_back(\"D\");\n    } else if (grade >= 0.0) {\n     \
    \ letter_grades.push_back(\"D-\");\n    } else {\n      letter_grades.push_back(\"\
    E\");\n    }\n  }\n  return letter_grades;", "    std::vector<std::string> letter_grades;\n\
    \    for (float grade : grades) {\n        if (grade == 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grade > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> students_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            students_grades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            students_grades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            students_grades.push_back(\"A-\");\n        } else if\
    \ (grades[i] > 3.0) {\n            students_grades.push_back(\"B+\");\n      \
    \  } else if (grades[i] > 2.7) {\n            students_grades.push_back(\"B\"\
    );\n        } else if (grades[i] > 2.3) {\n            students_grades.push_back(\"\
    B-\");\n        } else if (grades[i] > 2.0) {\n            students_grades.push_back(\"\
    C+\");\n        } else if (grades[i] > 1.7) {\n            students_grades.push_back(\"\
    C\");\n        } else if (grades[i] > 1.3) {\n            students_grades.push_back(\"\
    C-\");\n        } else if (grades[i] > 1.0) {\n            students_grades.push_back(\"\
    D+\");\n        } else if (grades[i] > 0.7) {\n            students_grades.push_back(\"\
    D\");\n        } else if (grades[i] > 0.0) {\n            students_grades.push_back(\"\
    D-\");\n        } else {\n            students_grades.push_back(\"E\");\n    \
    \    }\n    }\n    return students_grades;", "    // your code here\n    std::vector<std::string>\
    \ result;\n    for(auto i : grades){\n        if(i == 4.0){\n            result.push_back(\"\
    A+\");\n        }else if(i >= 3.7){\n            result.push_back(\"A\");\n  \
    \      }else if(i >= 3.3){\n            result.push_back(\"A-\");\n        }else\
    \ if(i >= 3.0){\n            result.push_back(\"B+\");\n        }else if(i >=\
    \ 2.7){\n            result.push_back(\"B\");\n        }else if(i >= 2.3){\n \
    \           result.push_back(\"B-\");\n        }else if(i >= 2.0){\n         \
    \   result.push_back(\"C+\");\n        }else if(i >= 1.7){\n            result.push_back(\"\
    C\");\n        }else if(i >= 1.3){\n            result.push_back(\"C-\");\n  \
    \      }else if(i >= 1.0){\n            result.push_back(\"D+\");\n        }else\
    \ if(i >= 0.7){\n            result.push_back(\"D\");\n        }else if(i >= 0.0){\n\
    \            result.push_back(\"D-\");\n        }else{\n            result.push_back(\"\
    E\");\n        }\n    }\n    return result;", "  std::vector<std::string> ret;\n\
    \  for (float grade : grades) {\n    if (grade == 4.0) {\n      ret.push_back(\"\
    A+\");\n    } else if (grade >= 3.7) {\n      ret.push_back(\"A\");\n    } else\
    \ if (grade >= 3.3) {\n      ret.push_back(\"A-\");\n    } else if (grade >= 3.0)\
    \ {\n      ret.push_back(\"B+\");\n    } else if (grade >= 2.7) {\n      ret.push_back(\"\
    B\");\n    } else if (grade >= 2.3) {\n      ret.push_back(\"B-\");\n    } else\
    \ if (grade >= 2.0) {\n      ret.push_back(\"C+\");\n    } else if (grade >= 1.7)\
    \ {\n      ret.push_back(\"C\");\n    } else if (grade >= 1.3) {\n      ret.push_back(\"\
    C-\");\n    } else if (grade >= 1.0) {\n      ret.push_back(\"D+\");\n    } else\
    \ if (grade >= 0.7) {\n      ret.push_back(\"D\");\n    } else if (grade >= 0.0)\
    \ {\n      ret.push_back(\"D-\");\n    } else {\n      ret.push_back(\"E\");\n\
    \    }\n  }\n  return ret;", "   std::vector<std::string> answer(grades.size());\n\
    \   for (int i = 0; i < grades.size(); i++) {\n      if (grades[i] == 4.0) {\n\
    \         answer[i] = \"A+\";\n      } else if (grades[i] >= 3.7) {\n        \
    \ answer[i] = \"A\";\n      } else if (grades[i] >= 3.3) {\n         answer[i]\
    \ = \"A-\";\n      } else if (grades[i] >= 3.0) {\n         answer[i] = \"B+\"\
    ;\n      } else if (grades[i] >= 2.7) {\n         answer[i] = \"B\";\n      }\
    \ else if (grades[i] >= 2.3) {\n         answer[i] = \"B-\";\n      } else if\
    \ (grades[i] >= 2.0) {\n         answer[i] = \"C+\";\n      } else if (grades[i]\
    \ >= 1.7) {\n         answer[i] = \"C\";\n      } else if (grades[i] >= 1.3) {\n\
    \         answer[i] = \"C-\";\n      } else if (grades[i] >= 1.0) {\n        \
    \ answer[i] = \"D+\";\n      } else if (grades[i] >= 0.7) {\n         answer[i]\
    \ = \"D\";\n      } else if (grades[i] > 0.0) {\n         answer[i] = \"D-\";\n\
    \      } else {\n         answer[i] = \"E\";\n      }\n   }\n   return answer;",
  "    std::vector<std::string> grade_letters;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        float gpa = grades[i];\n        if (gpa == 4.0) {\n        \
    \    grade_letters.push_back(\"A+\");\n        } else if (gpa > 3.7) {\n     \
    \       grade_letters.push_back(\"A\");\n        } else if (gpa > 3.3) {\n   \
    \         grade_letters.push_back(\"A-\");\n        } else if (gpa > 3.0) {\n\
    \            grade_letters.push_back(\"B+\");\n        } else if (gpa > 2.7) {\n\
    \            grade_letters.push_back(\"B\");\n        } else if (gpa > 2.3) {\n\
    \            grade_letters.push_back(\"B-\");\n        } else if (gpa > 2.0) {\n\
    \            grade_letters.push_back(\"C+\");\n        } else if (gpa > 1.7) {\n\
    \            grade_letters.push_back(\"C\");\n        } else if (gpa > 1.3) {\n\
    \            grade_letters.push_back(\"C-\");\n        } else if (gpa > 1.0) {\n\
    \            grade_letters.push_back(\"D+\");\n        } else if (gpa > 0.7) {\n\
    \            grade_letters.push_back(\"D\");\n        } else if (gpa > 0.0) {\n\
    \            grade_letters.push_back(\"D-\");\n        } else {\n            grade_letters.push_back(\"\
    E\");\n        }\n    }\n    return grade_letters;", "    // Write your code here\n\
    \    std::vector<std::string> letter_grades;\n    for (float grade : grades) {\n\
    \        if (grade > 4.0)\n            letter_grades.push_back(\"A+\");\n    \
    \    else if (grade > 3.7)\n            letter_grades.push_back(\"A\");\n    \
    \    else if (grade > 3.3)\n            letter_grades.push_back(\"A-\");\n   \
    \     else if (grade > 3.0)\n            letter_grades.push_back(\"B+\");\n  \
    \      else if (grade > 2.7)\n            letter_grades.push_back(\"B\");\n  \
    \      else if (grade > 2.3)\n            letter_grades.push_back(\"B-\");\n \
    \       else if (grade > 2.0)\n            letter_grades.push_back(\"C+\");\n\
    \        else if (grade > 1.7)\n            letter_grades.push_back(\"C\");\n\
    \        else if (grade > 1.3)\n            letter_grades.push_back(\"C-\");\n\
    \        else if (grade > 1.0)\n            letter_grades.push_back(\"D+\");\n\
    \        else if (grade > 0.7)\n            letter_grades.push_back(\"D\");\n\
    \        else if (grade > 0.0)\n            letter_grades.push_back(\"D-\");\n\
    \        else if (grade == 0.0)\n            letter_grades.push_back(\"E\");\n\
    \    }\n    return letter_grades;", "    std::vector<std::string> result;\n  \
    \  for (auto grade : grades) {\n        if (grade >= 4.0)\n            result.push_back(\"\
    A+\");\n        else if (grade >= 3.7)\n            result.push_back(\"A\");\n\
    \        else if (grade >= 3.3)\n            result.push_back(\"A-\");\n     \
    \   else if (grade >= 3.0)\n            result.push_back(\"B+\");\n        else\
    \ if (grade >= 2.7)\n            result.push_back(\"B\");\n        else if (grade\
    \ >= 2.3)\n            result.push_back(\"B-\");\n        else if (grade >= 2.0)\n\
    \            result.push_back(\"C+\");\n        else if (grade >= 1.7)\n     \
    \       result.push_back(\"C\");\n        else if (grade >= 1.3)\n           \
    \ result.push_back(\"C-\");\n        else if (grade >= 1.0)\n            result.push_back(\"\
    D+\");\n        else if (grade >= 0.7)\n            result.push_back(\"D\");\n\
    \        else if (grade >= 0.0)\n            result.push_back(\"D-\");\n     \
    \   else\n            result.push_back(\"E\");\n    }\n    return result;", "\t\
    std::vector<std::string> letterGrades;\n\tfor (int i = 0; i < grades.size(); i++)\
    \ {\n\t\tif (grades[i] >= 4.0) {\n\t\t\tletterGrades.push_back(\"A+\");\n\t\t\
    }\n\t\telse if (grades[i] >= 3.7) {\n\t\t\tletterGrades.push_back(\"A\");\n\t\t\
    }\n\t\telse if (grades[i] >= 3.3) {\n\t\t\tletterGrades.push_back(\"A-\");\n\t\
    \t}\n\t\telse if (grades[i] >= 3.0) {\n\t\t\tletterGrades.push_back(\"B+\");\n\
    \t\t}\n\t\telse if (grades[i] >= 2.7) {\n\t\t\tletterGrades.push_back(\"B\");\n\
    \t\t}\n\t\telse if (grades[i] >= 2.3) {\n\t\t\tletterGrades.push_back(\"B-\");\n\
    \t\t}\n\t\telse if (grades[i] >= 2.0) {\n\t\t\tletterGrades.push_back(\"C+\");\n\
    \t\t}\n\t\telse if (grades[i] >= 1.7) {\n\t\t\tletterGrades.push_back(\"C\");\n\
    \t\t}\n\t\telse if (grades[i] >= 1.3) {\n\t\t\tletterGrades.push_back(\"C-\");\n\
    \t\t}\n\t\telse if (grades[i] >= 1.0) {\n\t\t\tletterGrades.push_back(\"D+\");\n\
    \t\t}\n\t\telse if (grades[i] >= 0.7) {\n\t\t\tletterGrades.push_back(\"D\");\n\
    \t\t}\n\t\telse if (grades[i] >= 0.0) {\n\t\t\tletterGrades.push_back(\"D-\");\n\
    \t\t}\n\t\telse {\n\t\t\tletterGrades.push_back(\"E\");\n\t\t}\n\t}\n\treturn\
    \ letterGrades;", "    std::vector<std::string> letters = {\"E\", \"D-\", \"D\"\
    , \"D+\", \"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"A+\"\
    };\n    std::vector<float> values = {0.0, 0.7, 1.0, 1.3, 1.7, 2.0, 2.3, 2.7, 3.0,\
    \ 3.3, 3.7, 4.0};\n    std::vector<std::string> grade_letter;\n    for (int i\
    \ = 0; i < grades.size(); i++) {\n        int index = 0;\n        for (int j =\
    \ 0; j < values.size(); j++) {\n            if (grades[i] >= values[j]) {\n  \
    \              index = j;\n            }\n        }\n        grade_letter.push_back(letters[index]);\n\
    \    }\n    return grade_letter;", "\t// Your code here\n\tstd::vector<std::string>\
    \ result;\n\tfor (int i = 0; i < grades.size(); i++) {\n\t\tif (grades[i] == 4.0)\
    \ {\n\t\t\tresult.push_back(\"A+\");\n\t\t}\n\t\telse if (grades[i] > 3.7) {\n\
    \t\t\tresult.push_back(\"A\");\n\t\t}\n\t\telse if (grades[i] > 3.3) {\n\t\t\t\
    result.push_back(\"A-\");\n\t\t}\n\t\telse if (grades[i] > 3.0) {\n\t\t\tresult.push_back(\"\
    B+\");\n\t\t}\n\t\telse if (grades[i] > 2.7) {\n\t\t\tresult.push_back(\"B\");\n\
    \t\t}\n\t\telse if (grades[i] > 2.3) {\n\t\t\tresult.push_back(\"B-\");\n\t\t\
    }\n\t\telse if (grades[i] > 2.0) {\n\t\t\tresult.push_back(\"C+\");\n\t\t}\n\t\
    \telse if (grades[i] > 1.7) {\n\t\t\tresult.push_back(\"C\");\n\t\t}\n\t\telse\
    \ if (grades[i] > 1.3) {\n\t\t\tresult.push_back(\"C-\");\n\t\t}\n\t\telse if\
    \ (grades[i] > 1.0) {\n\t\t\tresult.push_back(\"D+\");\n\t\t}\n\t\telse if (grades[i]\
    \ > 0.7) {\n\t\t\tresult.push_back(\"D\");\n\t\t}\n\t\telse if (grades[i] > 0.0)\
    \ {\n\t\t\tresult.push_back(\"D-\");\n\t\t}\n\t\telse {\n\t\t\tresult.push_back(\"\
    E\");\n\t\t}\n\t}\n\treturn result;", "  // your code here\n  std::vector<std::string>\
    \ letter_grades;\n  for (int i = 0; i < grades.size(); i++) {\n    if (grades[i]\
    \ == 4.0) {\n      letter_grades.push_back(\"A+\");\n    } else if (grades[i]\
    \ >= 3.7) {\n      letter_grades.push_back(\"A\");\n    } else if (grades[i] >=\
    \ 3.3) {\n      letter_grades.push_back(\"A-\");\n    } else if (grades[i] >=\
    \ 3.0) {\n      letter_grades.push_back(\"B+\");\n    } else if (grades[i] >=\
    \ 2.7) {\n      letter_grades.push_back(\"B\");\n    } else if (grades[i] >= 2.3)\
    \ {\n      letter_grades.push_back(\"B-\");\n    } else if (grades[i] >= 2.0)\
    \ {\n      letter_grades.push_back(\"C+\");\n    } else if (grades[i] >= 1.7)\
    \ {\n      letter_grades.push_back(\"C\");\n    } else if (grades[i] >= 1.3) {\n\
    \      letter_grades.push_back(\"C-\");\n    } else if (grades[i] >= 1.0) {\n\
    \      letter_grades.push_back(\"D+\");\n    } else if (grades[i] >= 0.7) {\n\
    \      letter_grades.push_back(\"D\");\n    } else if (grades[i] >= 0.0) {\n \
    \     letter_grades.push_back(\"D-\");\n    } else {\n      letter_grades.push_back(\"\
    E\");\n    }\n  }\n  return letter_grades;", "    std::vector<std::string> result(grades.size());\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0)\
    \ {\n            result[i] = \"A+\";\n        } else if (grades[i] >= 3.7) {\n\
    \            result[i] = \"A\";\n        } else if (grades[i] >= 3.3) {\n    \
    \        result[i] = \"A-\";\n        } else if (grades[i] >= 3.0) {\n       \
    \     result[i] = \"B+\";\n        } else if (grades[i] >= 2.7) {\n          \
    \  result[i] = \"B\";\n        } else if (grades[i] >= 2.3) {\n            result[i]\
    \ = \"B-\";\n        } else if (grades[i] >= 2.0) {\n            result[i] = \"\
    C+\";\n        } else if (grades[i] >= 1.7) {\n            result[i] = \"C\";\n\
    \        } else if (grades[i] >= 1.3) {\n            result[i] = \"C-\";\n   \
    \     } else if (grades[i] >= 1.0) {\n            result[i] = \"D+\";\n      \
    \  } else if (grades[i] >= 0.7) {\n            result[i] = \"D\";\n        } else\
    \ if (grades[i] >= 0.0) {\n            result[i] = \"D-\";\n        } else {\n\
    \            result[i] = \"E\";\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ new_grades;\n    for (auto i : grades) {\n        if (i >= 4.0) {\n        \
    \    new_grades.push_back(\"A+\");\n        } else if (i > 3.7) {\n          \
    \  new_grades.push_back(\"A\");\n        } else if (i > 3.3) {\n            new_grades.push_back(\"\
    A-\");\n        } else if (i > 3.0) {\n            new_grades.push_back(\"B+\"\
    );\n        } else if (i > 2.7) {\n            new_grades.push_back(\"B\");\n\
    \        } else if (i > 2.3) {\n            new_grades.push_back(\"B-\");\n  \
    \      } else if (i > 2.0) {\n            new_grades.push_back(\"C+\");\n    \
    \    } else if (i > 1.7) {\n            new_grades.push_back(\"C\");\n       \
    \ } else if (i > 1.3) {\n            new_grades.push_back(\"C-\");\n        }\
    \ else if (i > 1.0) {\n            new_grades.push_back(\"D+\");\n        } else\
    \ if (i > 0.7) {\n            new_grades.push_back(\"D\");\n        } else if\
    \ (i > 0.0) {\n            new_grades.push_back(\"D-\");\n        } else {\n \
    \           new_grades.push_back(\"E\");\n        }\n    }\n    return new_grades;",
  "  // Write your code here...\n  std::vector<std::string> letter_grades(grades.size());\n\
    \  for (int i = 0; i < grades.size(); i++) {\n    if (grades[i] >= 4.0) {\n  \
    \    letter_grades[i] = \"A+\";\n    } else if (grades[i] >= 3.7) {\n      letter_grades[i]\
    \ = \"A\";\n    } else if (grades[i] >= 3.3) {\n      letter_grades[i] = \"A-\"\
    ;\n    } else if (grades[i] >= 3.0) {\n      letter_grades[i] = \"B+\";\n    }\
    \ else if (grades[i] >= 2.7) {\n      letter_grades[i] = \"B\";\n    } else if\
    \ (grades[i] >= 2.3) {\n      letter_grades[i] = \"B-\";\n    } else if (grades[i]\
    \ >= 2.0) {\n      letter_grades[i] = \"C+\";\n    } else if (grades[i] >= 1.7)\
    \ {\n      letter_grades[i] = \"C\";\n    } else if (grades[i] >= 1.3) {\n   \
    \   letter_grades[i] = \"C-\";\n    } else if (grades[i] >= 1.0) {\n      letter_grades[i]\
    \ = \"D+\";\n    } else if (grades[i] >= 0.7) {\n      letter_grades[i] = \"D\"\
    ;\n    } else if (grades[i] >= 0.0) {\n      letter_grades[i] = \"D-\";\n    }\
    \ else {\n      letter_grades[i] = \"E\";\n    }\n  }\n  return letter_grades;",
  "  std::vector<std::string> result;\n  for (int i = 0; i < grades.size(); i++) {\n\
    \    if (grades[i] == 4.0) {\n      result.push_back(\"A+\");\n    } else if (grades[i]\
    \ > 3.7) {\n      result.push_back(\"A\");\n    } else if (grades[i] > 3.3) {\n\
    \      result.push_back(\"A-\");\n    } else if (grades[i] > 3.0) {\n      result.push_back(\"\
    B+\");\n    } else if (grades[i] > 2.7) {\n      result.push_back(\"B\");\n  \
    \  } else if (grades[i] > 2.3) {\n      result.push_back(\"B-\");\n    } else\
    \ if (grades[i] > 2.0) {\n      result.push_back(\"C+\");\n    } else if (grades[i]\
    \ > 1.7) {\n      result.push_back(\"C\");\n    } else if (grades[i] > 1.3) {\n\
    \      result.push_back(\"C-\");\n    } else if (grades[i] > 1.0) {\n      result.push_back(\"\
    D+\");\n    } else if (grades[i] > 0.7) {\n      result.push_back(\"D\");\n  \
    \  } else if (grades[i] > 0.0) {\n      result.push_back(\"D-\");\n    } else\
    \ {\n      result.push_back(\"E\");\n    }\n  }\n  return result;", "    std::vector<std::string>\
    \ result;\n    int n = grades.size();\n    for(int i = 0; i < n; i++) {\n    \
    \    if(grades[i] >= 4.0)\n            result.push_back(\"A+\");\n        else\
    \ if(grades[i] >= 3.7)\n            result.push_back(\"A\");\n        else if(grades[i]\
    \ >= 3.3)\n            result.push_back(\"A-\");\n        else if(grades[i] >=\
    \ 3.0)\n            result.push_back(\"B+\");\n        else if(grades[i] >= 2.7)\n\
    \            result.push_back(\"B\");\n        else if(grades[i] >= 2.3)\n   \
    \         result.push_back(\"B-\");\n        else if(grades[i] >= 2.0)\n     \
    \       result.push_back(\"C+\");\n        else if(grades[i] >= 1.7)\n       \
    \     result.push_back(\"C\");\n        else if(grades[i] >= 1.3)\n          \
    \  result.push_back(\"C-\");\n        else if(grades[i] >= 1.0)\n            result.push_back(\"\
    D+\");\n        else if(grades[i] >= 0.7)\n            result.push_back(\"D\"\
    );\n        else if(grades[i] >= 0.0)\n            result.push_back(\"D-\");\n\
    \        else\n            result.push_back(\"E\");\n    }\n    return result;",
  "\tstd::vector<std::string> result;\n\tfor (unsigned i = 0; i < grades.size(); i++)\
    \ {\n\t\tif (grades[i] >= 4.0) {\n\t\t\tresult.push_back(\"A+\");\n\t\t}\n\t\t\
    else if (grades[i] >= 3.7) {\n\t\t\tresult.push_back(\"A\");\n\t\t}\n\t\telse\
    \ if (grades[i] >= 3.3) {\n\t\t\tresult.push_back(\"A-\");\n\t\t}\n\t\telse if\
    \ (grades[i] >= 3.0) {\n\t\t\tresult.push_back(\"B+\");\n\t\t}\n\t\telse if (grades[i]\
    \ >= 2.7) {\n\t\t\tresult.push_back(\"B\");\n\t\t}\n\t\telse if (grades[i] >=\
    \ 2.3) {\n\t\t\tresult.push_back(\"B-\");\n\t\t}\n\t\telse if (grades[i] >= 2.0)\
    \ {\n\t\t\tresult.push_back(\"C+\");\n\t\t}\n\t\telse if (grades[i] >= 1.7) {\n\
    \t\t\tresult.push_back(\"C\");\n\t\t}\n\t\telse if (grades[i] >= 1.3) {\n\t\t\t\
    result.push_back(\"C-\");\n\t\t}\n\t\telse if (grades[i] >= 1.0) {\n\t\t\tresult.push_back(\"\
    D+\");\n\t\t}\n\t\telse if (grades[i] >= 0.7) {\n\t\t\tresult.push_back(\"D\"\
    );\n\t\t}\n\t\telse if (grades[i] >= 0.0) {\n\t\t\tresult.push_back(\"D-\");\n\
    \t\t}\n\t\telse {\n\t\t\tresult.push_back(\"E\");\n\t\t}\n\t}\n\treturn result;",
  "    std::vector<std::string> letter_grades(grades.size());\n    for (int i = 0;\
    \ i < grades.size(); i++) {\n        if (grades[i] >= 4.0) {\n            letter_grades[i]\
    \ = \"A+\";\n        } else if (grades[i] >= 3.7) {\n            letter_grades[i]\
    \ = \"A\";\n        } else if (grades[i] >= 3.3) {\n            letter_grades[i]\
    \ = \"A-\";\n        } else if (grades[i] >= 3.0) {\n            letter_grades[i]\
    \ = \"B+\";\n        } else if (grades[i] >= 2.7) {\n            letter_grades[i]\
    \ = \"B\";\n        } else if (grades[i] >= 2.3) {\n            letter_grades[i]\
    \ = \"B-\";\n        } else if (grades[i] >= 2.0) {\n            letter_grades[i]\
    \ = \"C+\";\n        } else if (grades[i] >= 1.7) {\n            letter_grades[i]\
    \ = \"C\";\n        } else if (grades[i] >= 1.3) {\n            letter_grades[i]\
    \ = \"C-\";\n        } else if (grades[i] >= 1.0) {\n            letter_grades[i]\
    \ = \"D+\";\n        } else if (grades[i] >= 0.7) {\n            letter_grades[i]\
    \ = \"D\";\n        } else if (grades[i] >= 0.0) {\n            letter_grades[i]\
    \ = \"D-\";\n        } else {\n            letter_grades[i] = \"E\";\n       \
    \ }\n    }\n    return letter_grades;", "    std::vector<std::string> grades_string;\n\
    \    for (float grade : grades) {\n        if (grade == 4.0) grades_string.push_back(\"\
    A+\");\n        else if (grade > 3.7) grades_string.push_back(\"A\");\n      \
    \  else if (grade > 3.3) grades_string.push_back(\"A-\");\n        else if (grade\
    \ > 3.0) grades_string.push_back(\"B+\");\n        else if (grade > 2.7) grades_string.push_back(\"\
    B\");\n        else if (grade > 2.3) grades_string.push_back(\"B-\");\n      \
    \  else if (grade > 2.0) grades_string.push_back(\"C+\");\n        else if (grade\
    \ > 1.7) grades_string.push_back(\"C\");\n        else if (grade > 1.3) grades_string.push_back(\"\
    C-\");\n        else if (grade > 1.0) grades_string.push_back(\"D+\");\n     \
    \   else if (grade > 0.7) grades_string.push_back(\"D\");\n        else if (grade\
    \ > 0.0) grades_string.push_back(\"D-\");\n        else grades_string.push_back(\"\
    E\");\n    }\n    return grades_string;", "\tstd::vector<std::string> results;\n\
    \tfor (int i = 0; i < grades.size(); i++) {\n\t\tif (grades[i] >= 4.0) {\n\t\t\
    \tresults.push_back(\"A+\");\n\t\t}\n\t\telse if (grades[i] >= 3.7) {\n\t\t\t\
    results.push_back(\"A\");\n\t\t}\n\t\telse if (grades[i] >= 3.3) {\n\t\t\tresults.push_back(\"\
    A-\");\n\t\t}\n\t\telse if (grades[i] >= 3.0) {\n\t\t\tresults.push_back(\"B+\"\
    );\n\t\t}\n\t\telse if (grades[i] >= 2.7) {\n\t\t\tresults.push_back(\"B\");\n\
    \t\t}\n\t\telse if (grades[i] >= 2.3) {\n\t\t\tresults.push_back(\"B-\");\n\t\t\
    }\n\t\telse if (grades[i] >= 2.0) {\n\t\t\tresults.push_back(\"C+\");\n\t\t}\n\
    \t\telse if (grades[i] >= 1.7) {\n\t\t\tresults.push_back(\"C\");\n\t\t}\n\t\t\
    else if (grades[i] >= 1.3) {\n\t\t\tresults.push_back(\"C-\");\n\t\t}\n\t\telse\
    \ if (grades[i] >= 1.0) {\n\t\t\tresults.push_back(\"D+\");\n\t\t}\n\t\telse if\
    \ (grades[i] >= 0.7) {\n\t\t\tresults.push_back(\"D\");\n\t\t}\n\t\telse if (grades[i]\
    \ >= 0.0) {\n\t\t\tresults.push_back(\"D-\");\n\t\t}\n\t\telse {\n\t\t\tresults.push_back(\"\
    E\");\n\t\t}\n\t}\n\treturn results;", "    // Write your code here\n    std::vector<std::string>\
    \ grades_letter;\n    for(int i=0;i<grades.size();i++){\n        if(grades[i]==4){\n\
    \            grades_letter.push_back(\"A+\");\n        }\n        else if(grades[i]>3.7){\n\
    \            grades_letter.push_back(\"A\");\n        }\n        else if(grades[i]>3.3){\n\
    \            grades_letter.push_back(\"A-\");\n        }\n        else if(grades[i]>3){\n\
    \            grades_letter.push_back(\"B+\");\n        }\n        else if(grades[i]>2.7){\n\
    \            grades_letter.push_back(\"B\");\n        }\n        else if(grades[i]>2.3){\n\
    \            grades_letter.push_back(\"B-\");\n        }\n        else if(grades[i]>2){\n\
    \            grades_letter.push_back(\"C+\");\n        }\n        else if(grades[i]>1.7){\n\
    \            grades_letter.push_back(\"C\");\n        }\n        else if(grades[i]>1.3){\n\
    \            grades_letter.push_back(\"C-\");\n        }\n        else if(grades[i]>1){\n\
    \            grades_letter.push_back(\"D+\");\n        }\n        else if(grades[i]>0.7){\n\
    \            grades_letter.push_back(\"D\");\n        }\n        else if(grades[i]>0){\n\
    \            grades_letter.push_back(\"D-\");\n        }\n        else{\n    \
    \        grades_letter.push_back(\"E\");\n        }\n    }\n    return grades_letter;",
  "    std::vector<std::string> result;\n    for (std::vector<float>::iterator it\
    \ = grades.begin(); it != grades.end(); ++it) {\n        if (*it >= 4.0) {\n \
    \           result.push_back(\"A+\");\n        } else if (*it >= 3.7) {\n    \
    \        result.push_back(\"A\");\n        } else if (*it >= 3.3) {\n        \
    \    result.push_back(\"A-\");\n        } else if (*it >= 3.0) {\n           \
    \ result.push_back(\"B+\");\n        } else if (*it >= 2.7) {\n            result.push_back(\"\
    B\");\n        } else if (*it >= 2.3) {\n            result.push_back(\"B-\");\n\
    \        } else if (*it >= 2.0) {\n            result.push_back(\"C+\");\n   \
    \     } else if (*it >= 1.7) {\n            result.push_back(\"C\");\n       \
    \ } else if (*it >= 1.3) {\n            result.push_back(\"C-\");\n        } else\
    \ if (*it >= 1.0) {\n            result.push_back(\"D+\");\n        } else if\
    \ (*it >= 0.7) {\n            result.push_back(\"D\");\n        } else if (*it\
    \ >= 0.0) {\n            result.push_back(\"D-\");\n        } else {\n       \
    \     result.push_back(\"E\");\n        }\n    }\n    return result;", "    std::vector<std::string>\
    \ grades_letter;\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ == 4.0) {\n            grades_letter.push_back(\"A+\");\n        } else if (grades[i]\
    \ >= 3.7) {\n            grades_letter.push_back(\"A\");\n        } else if (grades[i]\
    \ >= 3.3) {\n            grades_letter.push_back(\"A-\");\n        } else if (grades[i]\
    \ >= 3.0) {\n            grades_letter.push_back(\"B+\");\n        } else if (grades[i]\
    \ >= 2.7) {\n            grades_letter.push_back(\"B\");\n        } else if (grades[i]\
    \ >= 2.3) {\n            grades_letter.push_back(\"B-\");\n        } else if (grades[i]\
    \ >= 2.0) {\n            grades_letter.push_back(\"C+\");\n        } else if (grades[i]\
    \ >= 1.7) {\n            grades_letter.push_back(\"C\");\n        } else if (grades[i]\
    \ >= 1.3) {\n            grades_letter.push_back(\"C-\");\n        } else if (grades[i]\
    \ >= 1.0) {\n            grades_letter.push_back(\"D+\");\n        } else if (grades[i]\
    \ >= 0.7) {\n            grades_letter.push_back(\"D\");\n        } else if (grades[i]\
    \ >= 0.0) {\n            grades_letter.push_back(\"D-\");\n        } else {\n\
    \            grades_letter.push_back(\"E\");\n        }\n    }\n    return grades_letter;",
  "    std::vector<std::string> letter_grades;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        // Loop through the grades vector\n        if (grades[i] ==\
    \ 4.0) {\n            letter_grades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "  // Write your code here.\n  std::vector<std::string> result;\n  for(int i = 0;\
    \ i < grades.size(); i++){\n    if(grades[i] >= 4.0){\n      result.push_back(\"\
    A+\");\n    }else if(grades[i] >= 3.7){\n      result.push_back(\"A\");\n    }else\
    \ if(grades[i] >= 3.3){\n      result.push_back(\"A-\");\n    }else if(grades[i]\
    \ >= 3.0){\n      result.push_back(\"B+\");\n    }else if(grades[i] >= 2.7){\n\
    \      result.push_back(\"B\");\n    }else if(grades[i] >= 2.3){\n      result.push_back(\"\
    B-\");\n    }else if(grades[i] >= 2.0){\n      result.push_back(\"C+\");\n   \
    \ }else if(grades[i] >= 1.7){\n      result.push_back(\"C\");\n    }else if(grades[i]\
    \ >= 1.3){\n      result.push_back(\"C-\");\n    }else if(grades[i] >= 1.0){\n\
    \      result.push_back(\"D+\");\n    }else if(grades[i] >= 0.7){\n      result.push_back(\"\
    D\");\n    }else if(grades[i] >= 0.0){\n      result.push_back(\"D-\");\n    }else{\n\
    \      result.push_back(\"E\");\n    }\n  }\n  return result;", "    std::vector<std::string>\
    \ letter_grades;\n    for (auto& grade : grades) {\n        if (grade >= 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grade >=\
    \ 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grade\
    \ >= 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grade\
    \ >= 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grade\
    \ >= 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grade\
    \ >= 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grade\
    \ >= 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grade\
    \ >= 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grade\
    \ >= 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grade\
    \ >= 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grade\
    \ >= 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grade\
    \ >= 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n\
    \            letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "  // Write your code here\n  // we have GPA -> Letter Grade here\n  std::map<float,\
    \ std::string> grademap;\n  grademap[4.0] = \"A+\";\n  grademap[3.7] = \"A\";\n\
    \  grademap[3.3] = \"A-\";\n  grademap[3.0] = \"B+\";\n  grademap[2.7] = \"B\"\
    ;\n  grademap[2.3] = \"B-\";\n  grademap[2.0] = \"C+\";\n  grademap[1.7] = \"\
    C\";\n  grademap[1.3] = \"C-\";\n  grademap[1.0] = \"D+\";\n  grademap[0.7] =\
    \ \"D\";\n  grademap[0.0] = \"D-\";\n  grademap[-1.0] = \"E\";\n  std::vector<std::string>\
    \ output;\n  for (int i = 0; i < grades.size(); i++) {\n    float gpaval = grades[i];\n\
    \    float keyval = 3.7;\n    std::string gradeval = \"A\";\n    std::map<float,\
    \ std::string>::iterator it;\n    for (it = grademap.begin(); it != grademap.end();\
    \ it++) {\n      float gpaval = grades[i];\n      float keyval = it->first;\n\
    \      std::string gradeval = it->second;\n      if (gpaval >= keyval) {\n   \
    \     output.push_back(gradeval);\n        break;\n      }\n    }\n  }\n  return\
    \ output;", "  // Write your code here\n  // Don't print anything. Just return\
    \ the answer\n  std::vector<std::string> res;\n  int len = grades.size();\n  for(int\
    \ i=0;i<len;i++){\n      if(grades[i]==4.0){\n          res.push_back(\"A+\");\n\
    \      }\n      else if(grades[i]>3.7){\n          res.push_back(\"A\");\n   \
    \   }\n      else if(grades[i]>3.3){\n          res.push_back(\"A-\");\n     \
    \ }\n      else if(grades[i]>3.0){\n          res.push_back(\"B+\");\n      }\n\
    \      else if(grades[i]>2.7){\n          res.push_back(\"B\");\n      }\n   \
    \   else if(grades[i]>2.3){\n          res.push_back(\"B-\");\n      }\n     \
    \ else if(grades[i]>2.0){\n          res.push_back(\"C+\");\n      }\n      else\
    \ if(grades[i]>1.7){\n          res.push_back(\"C\");\n      }\n      else if(grades[i]>1.3){\n\
    \          res.push_back(\"C-\");\n      }\n      else if(grades[i]>1.0){\n  \
    \        res.push_back(\"D+\");\n      }\n      else if(grades[i]>0.7){\n    \
    \      res.push_back(\"D\");\n      }\n      else if(grades[i]>0.0){\n       \
    \   res.push_back(\"D-\");\n      }\n      else{\n          res.push_back(\"E\"\
    );\n      }\n  }\n  return res;", "    //assert(grades.size() > 0);\n    std::vector<std::string>\
    \ letter_grades;\n    for (auto i : grades) {\n        std::string letter_grade;\n\
    \        if (i >= 4.0) {\n            letter_grade = \"A+\";\n        } else if\
    \ (i >= 3.7) {\n            letter_grade = \"A\";\n        } else if (i >= 3.3)\
    \ {\n            letter_grade = \"A-\";\n        } else if (i >= 3.0) {\n    \
    \        letter_grade = \"B+\";\n        } else if (i >= 2.7) {\n            letter_grade\
    \ = \"B\";\n        } else if (i >= 2.3) {\n            letter_grade = \"B-\"\
    ;\n        } else if (i >= 2.0) {\n            letter_grade = \"C+\";\n      \
    \  } else if (i >= 1.7) {\n            letter_grade = \"C\";\n        } else if\
    \ (i >= 1.3) {\n            letter_grade = \"C-\";\n        } else if (i >= 1.0)\
    \ {\n            letter_grade = \"D+\";\n        } else if (i >= 0.7) {\n    \
    \        letter_grade = \"D\";\n        } else if (i >= 0.0) {\n            letter_grade\
    \ = \"D-\";\n        } else {\n            letter_grade = \"E\";\n        }\n\
    \        letter_grades.push_back(letter_grade);\n    }\n    return letter_grades;",
  "    // I need a new vector that is to be returned.\n    std::vector<std::string>\
    \ letter_grades;\n    // Now I will go through each grade and add it to the new\
    \ vector.\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ == 4.0) {\n            letter_grades.push_back(\"A+\");\n        }\n       \
    \ else if (grades[i] > 3.7) {\n            letter_grades.push_back(\"A\");\n \
    \       }\n        else if (grades[i] > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        }\n        else if (grades[i] > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        }\n        else if (grades[i] > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        }\n        else if (grades[i] > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        }\n        else if (grades[i] > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        }\n        else if (grades[i] > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        }\n        else if (grades[i] > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        }\n        else if (grades[i] > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        }\n        else if (grades[i] > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        }\n        else if (grades[i] > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        }\n        else {\n            letter_grades.push_back(\"E\");\n\
    \        }\n    }\n    return letter_grades;", "    std::vector<std::string> res;\n\
    \    for (float grade : grades) {\n        if (grade == 4.0) {\n            res.push_back(\"\
    A+\");\n        } else if (grade > 3.7) {\n            res.push_back(\"A\");\n\
    \        } else if (grade > 3.3) {\n            res.push_back(\"A-\");\n     \
    \   } else if (grade > 3.0) {\n            res.push_back(\"B+\");\n        } else\
    \ if (grade > 2.7) {\n            res.push_back(\"B\");\n        } else if (grade\
    \ > 2.3) {\n            res.push_back(\"B-\");\n        } else if (grade > 2.0)\
    \ {\n            res.push_back(\"C+\");\n        } else if (grade > 1.7) {\n \
    \           res.push_back(\"C\");\n        } else if (grade > 1.3) {\n       \
    \     res.push_back(\"C-\");\n        } else if (grade > 1.0) {\n            res.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            res.push_back(\"D\");\n\
    \        } else if (grade >= 0.0) {\n            res.push_back(\"D-\");\n    \
    \    } else {\n            res.push_back(\"E\");\n        }\n    }\n    return\
    \ res;", "    //Write your code here\n    std::vector<std::string> result;\n \
    \   for(float num : grades){\n        if(num >= 4.0){\n            result.push_back(\"\
    A+\");\n        }\n        else if(num >= 3.7){\n            result.push_back(\"\
    A\");\n        }\n        else if(num >= 3.3){\n            result.push_back(\"\
    A-\");\n        }\n        else if(num >= 3.0){\n            result.push_back(\"\
    B+\");\n        }\n        else if(num >= 2.7){\n            result.push_back(\"\
    B\");\n        }\n        else if(num >= 2.3){\n            result.push_back(\"\
    B-\");\n        }\n        else if(num >= 2.0){\n            result.push_back(\"\
    C+\");\n        }\n        else if(num >= 1.7){\n            result.push_back(\"\
    C\");\n        }\n        else if(num >= 1.3){\n            result.push_back(\"\
    C-\");\n        }\n        else if(num >= 1.0){\n            result.push_back(\"\
    D+\");\n        }\n        else if(num >= 0.7){\n            result.push_back(\"\
    D\");\n        }\n        else if(num >= 0.0){\n            result.push_back(\"\
    D-\");\n        }\n        else{\n            result.push_back(\"E\");\n     \
    \   }\n    }\n    return result;", "    std::vector<std::string> letter_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;",
  "    std::vector<std::string> result;\n    int i = 0;\n    for (auto elem : grades)\
    \ {\n        if (elem == 4.0)\n            result.push_back(\"A+\");\n       \
    \ else if (elem > 3.7)\n            result.push_back(\"A\");\n        else if\
    \ (elem > 3.3)\n            result.push_back(\"A-\");\n        else if (elem >\
    \ 3.0)\n            result.push_back(\"B+\");\n        else if (elem > 2.7)\n\
    \            result.push_back(\"B\");\n        else if (elem > 2.3)\n        \
    \    result.push_back(\"B-\");\n        else if (elem > 2.0)\n            result.push_back(\"\
    C+\");\n        else if (elem > 1.7)\n            result.push_back(\"C\");\n \
    \       else if (elem > 1.3)\n            result.push_back(\"C-\");\n        else\
    \ if (elem > 1.0)\n            result.push_back(\"D+\");\n        else if (elem\
    \ > 0.7)\n            result.push_back(\"D\");\n        else if (elem > 0.0)\n\
    \            result.push_back(\"D-\");\n        else\n            result.push_back(\"\
    E\");\n        i++;\n    }\n    return result;", "    // Your code here\n    std::vector<std::string>\
    \ ans;\n    for(int i=0;i<grades.size();i++){\n        if(grades[i]>=4){\n   \
    \         ans.push_back(\"A+\");\n        }\n        else if(grades[i]>=3.7){\n\
    \            ans.push_back(\"A\");\n        }\n        else if(grades[i]>=3.3){\n\
    \            ans.push_back(\"A-\");\n        }\n        else if(grades[i]>=3){\n\
    \            ans.push_back(\"B+\");\n        }\n        else if(grades[i]>=2.7){\n\
    \            ans.push_back(\"B\");\n        }\n        else if(grades[i]>=2.3){\n\
    \            ans.push_back(\"B-\");\n        }\n        else if(grades[i]>=2){\n\
    \            ans.push_back(\"C+\");\n        }\n        else if(grades[i]>=1.7){\n\
    \            ans.push_back(\"C\");\n        }\n        else if(grades[i]>=1.3){\n\
    \            ans.push_back(\"C-\");\n        }\n        else if(grades[i]>=1){\n\
    \            ans.push_back(\"D+\");\n        }\n        else if(grades[i]>=0.7){\n\
    \            ans.push_back(\"D\");\n        }\n        else if(grades[i]>=0){\n\
    \            ans.push_back(\"D-\");\n        }\n        else if(grades[i]==0){\n\
    \            ans.push_back(\"E\");\n        }\n    }\n    return ans;", "    //\
    \ Write your code here\n    std::vector<std::string> result;\n    for(auto item\
    \ : grades){\n        if(item >= 4.0){\n            result.push_back(\"A+\");\n\
    \        }\n        else if(item >= 3.7){\n            result.push_back(\"A\"\
    );\n        }\n        else if(item >= 3.3){\n            result.push_back(\"\
    A-\");\n        }\n        else if(item >= 3.0){\n            result.push_back(\"\
    B+\");\n        }\n        else if(item >= 2.7){\n            result.push_back(\"\
    B\");\n        }\n        else if(item >= 2.3){\n            result.push_back(\"\
    B-\");\n        }\n        else if(item >= 2.0){\n            result.push_back(\"\
    C+\");\n        }\n        else if(item >= 1.7){\n            result.push_back(\"\
    C\");\n        }\n        else if(item >= 1.3){\n            result.push_back(\"\
    C-\");\n        }\n        else if(item >= 1.0){\n            result.push_back(\"\
    D+\");\n        }\n        else if(item >= 0.7){\n            result.push_back(\"\
    D\");\n        }\n        else if(item >= 0.0){\n            result.push_back(\"\
    D-\");\n        }\n        else if(item == 0.0){\n            result.push_back(\"\
    E\");\n        }\n    }\n    return result;", "    std::vector<std::string> ans;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            ans.push_back(\"A+\");\n        } else if (grades[i] >= 3.7)\
    \ {\n            ans.push_back(\"A\");\n        } else if (grades[i] >= 3.3) {\n\
    \            ans.push_back(\"A-\");\n        } else if (grades[i] >= 3.0) {\n\
    \            ans.push_back(\"B+\");\n        } else if (grades[i] >= 2.7) {\n\
    \            ans.push_back(\"B\");\n        } else if (grades[i] >= 2.3) {\n \
    \           ans.push_back(\"B-\");\n        } else if (grades[i] >= 2.0) {\n \
    \           ans.push_back(\"C+\");\n        } else if (grades[i] >= 1.7) {\n \
    \           ans.push_back(\"C\");\n        } else if (grades[i] >= 1.3) {\n  \
    \          ans.push_back(\"C-\");\n        } else if (grades[i] >= 1.0) {\n  \
    \          ans.push_back(\"D+\");\n        } else if (grades[i] >= 0.7) {\n  \
    \          ans.push_back(\"D\");\n        } else if (grades[i] >= 0.0) {\n   \
    \         ans.push_back(\"D-\");\n        } else {\n            ans.push_back(\"\
    E\");\n        }\n    }\n    return ans;", "    std::vector<std::string> letterGrades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            letterGrades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            letterGrades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            letterGrades.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            letterGrades.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            letterGrades.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            letterGrades.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            letterGrades.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            letterGrades.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            letterGrades.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            letterGrades.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            letterGrades.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            letterGrades.push_back(\"D-\");\n        } else {\n  \
    \          letterGrades.push_back(\"E\");\n        }\n    }\n    return letterGrades;",
  "\tstd::vector<std::string> letter_grades;\n\tfor (int i = 0; i < grades.size();\
    \ i++) {\n\t\tif (grades[i] >= 4.0) {\n\t\t\tletter_grades.push_back(\"A+\");\n\
    \t\t}\n\t\telse if (grades[i] >= 3.7) {\n\t\t\tletter_grades.push_back(\"A\");\n\
    \t\t}\n\t\telse if (grades[i] >= 3.3) {\n\t\t\tletter_grades.push_back(\"A-\"\
    );\n\t\t}\n\t\telse if (grades[i] >= 3.0) {\n\t\t\tletter_grades.push_back(\"\
    B+\");\n\t\t}\n\t\telse if (grades[i] >= 2.7) {\n\t\t\tletter_grades.push_back(\"\
    B\");\n\t\t}\n\t\telse if (grades[i] >= 2.3) {\n\t\t\tletter_grades.push_back(\"\
    B-\");\n\t\t}\n\t\telse if (grades[i] >= 2.0) {\n\t\t\tletter_grades.push_back(\"\
    C+\");\n\t\t}\n\t\telse if (grades[i] >= 1.7) {\n\t\t\tletter_grades.push_back(\"\
    C\");\n\t\t}\n\t\telse if (grades[i] >= 1.3) {\n\t\t\tletter_grades.push_back(\"\
    C-\");\n\t\t}\n\t\telse if (grades[i] >= 1.0) {\n\t\t\tletter_grades.push_back(\"\
    D+\");\n\t\t}\n\t\telse if (grades[i] >= 0.7) {\n\t\t\tletter_grades.push_back(\"\
    D\");\n\t\t}\n\t\telse if (grades[i] >= 0.0) {\n\t\t\tletter_grades.push_back(\"\
    D-\");\n\t\t}\n\t\telse {\n\t\t\tletter_grades.push_back(\"E\");\n\t\t}\n\t}\n\
    \treturn letter_grades;", "  std::vector<std::string> result(grades.size());\n\
    \  for (int i = 0; i < grades.size(); i++) {\n    float gpa = grades[i];\n   \
    \ if (gpa > 4.0) {\n      result[i] = \"A+\";\n    } else if (gpa > 3.7) {\n \
    \     result[i] = \"A\";\n    } else if (gpa > 3.3) {\n      result[i] = \"A-\"\
    ;\n    } else if (gpa > 3.0) {\n      result[i] = \"B+\";\n    } else if (gpa\
    \ > 2.7) {\n      result[i] = \"B\";\n    } else if (gpa > 2.3) {\n      result[i]\
    \ = \"B-\";\n    } else if (gpa > 2.0) {\n      result[i] = \"C+\";\n    } else\
    \ if (gpa > 1.7) {\n      result[i] = \"C\";\n    } else if (gpa > 1.3) {\n  \
    \    result[i] = \"C-\";\n    } else if (gpa > 1.0) {\n      result[i] = \"D+\"\
    ;\n    } else if (gpa > 0.7) {\n      result[i] = \"D\";\n    } else if (gpa >\
    \ 0.0) {\n      result[i] = \"D-\";\n    } else {\n      result[i] = \"E\";\n\
    \    }\n  }\n  return result;", "  std::vector<std::string> letter_grades;\n \
    \ for (int i = 0; i < grades.size(); i++) {\n    if (grades[i] == 4.0) {\n   \
    \   letter_grades.push_back(\"A+\");\n    } else if (grades[i] >= 3.7) {\n   \
    \   letter_grades.push_back(\"A\");\n    } else if (grades[i] >= 3.3) {\n    \
    \  letter_grades.push_back(\"A-\");\n    } else if (grades[i] >= 3.0) {\n    \
    \  letter_grades.push_back(\"B+\");\n    } else if (grades[i] >= 2.7) {\n    \
    \  letter_grades.push_back(\"B\");\n    } else if (grades[i] >= 2.3) {\n     \
    \ letter_grades.push_back(\"B-\");\n    } else if (grades[i] >= 2.0) {\n     \
    \ letter_grades.push_back(\"C+\");\n    } else if (grades[i] >= 1.7) {\n     \
    \ letter_grades.push_back(\"C\");\n    } else if (grades[i] >= 1.3) {\n      letter_grades.push_back(\"\
    C-\");\n    } else if (grades[i] >= 1.0) {\n      letter_grades.push_back(\"D+\"\
    );\n    } else if (grades[i] >= 0.7) {\n      letter_grades.push_back(\"D\");\n\
    \    } else if (grades[i] >= 0.0) {\n      letter_grades.push_back(\"D-\");\n\
    \    } else {\n      letter_grades.push_back(\"E\");\n    }\n  }\n  return letter_grades;",
  "    std::vector<std::string> letter_grades;\n    for (int i = 0; i < grades.size();\
    \ i++) {\n        if (grades[i] == 4.0) {\n            letter_grades.push_back(\"\
    A+\");\n        } else if (grades[i] > 3.7) {\n            letter_grades.push_back(\"\
    A\");\n        } else if (grades[i] > 3.3) {\n            letter_grades.push_back(\"\
    A-\");\n        } else if (grades[i] > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grades[i] > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grades[i] > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grades[i] > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grades[i] > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grades[i] > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grades[i] > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grades[i] > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grades[i] > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "    std::vector<std::string> a;\n  \
    \  for(int i=0;i<grades.size();i++){\n        if(grades[i]>4.0){\n           \
    \ a.push_back(\"A+\");\n        }\n        else if(grades[i]>3.7){\n         \
    \   a.push_back(\"A\");\n        }\n        else if(grades[i]>3.3){\n        \
    \    a.push_back(\"A-\");\n        }\n        else if(grades[i]>3.0){\n      \
    \      a.push_back(\"B+\");\n        }\n        else if(grades[i]>2.7){\n    \
    \        a.push_back(\"B\");\n        }\n        else if(grades[i]>2.3){\n   \
    \         a.push_back(\"B-\");\n        }\n        else if(grades[i]>2.0){\n \
    \           a.push_back(\"C+\");\n        }\n        else if(grades[i]>1.7){\n\
    \            a.push_back(\"C\");\n        }\n        else if(grades[i]>1.3){\n\
    \            a.push_back(\"C-\");\n        }\n        else if(grades[i]>1.0){\n\
    \            a.push_back(\"D+\");\n        }\n        else if(grades[i]>0.7){\n\
    \            a.push_back(\"D\");\n        }\n        else if(grades[i]>0.0){\n\
    \            a.push_back(\"D-\");\n        }\n        else{\n            a.push_back(\"\
    E\");\n        }\n    }\n    return a;", "    std::vector<std::string> result;\n\
    \    int n = grades.size();\n    for(int i = 0; i < n; i++) {\n        if(grades[i]\
    \ >= 4.0) {\n            result.push_back(\"A+\");\n        } else if(grades[i]\
    \ > 3.7) {\n            result.push_back(\"A\");\n        } else if(grades[i]\
    \ > 3.3) {\n            result.push_back(\"A-\");\n        } else if(grades[i]\
    \ > 3.0) {\n            result.push_back(\"B+\");\n        } else if(grades[i]\
    \ > 2.7) {\n            result.push_back(\"B\");\n        } else if(grades[i]\
    \ > 2.3) {\n            result.push_back(\"B-\");\n        } else if(grades[i]\
    \ > 2.0) {\n            result.push_back(\"C+\");\n        } else if(grades[i]\
    \ > 1.7) {\n            result.push_back(\"C\");\n        } else if(grades[i]\
    \ > 1.3) {\n            result.push_back(\"C-\");\n        } else if(grades[i]\
    \ > 1.0) {\n            result.push_back(\"D+\");\n        } else if(grades[i]\
    \ > 0.7) {\n            result.push_back(\"D\");\n        } else if(grades[i]\
    \ > 0.0) {\n            result.push_back(\"D-\");\n        } else {\n        \
    \    result.push_back(\"E\");\n        }\n    }\n    return result;", "\t\n\t\
    std::vector<std::string> result;\n\t\n\tfor(int i = 0; i < grades.size(); i++)\
    \ {\n\t\tif(grades[i] == 4.0) {\n\t\t\tresult.push_back(\"A+\");\n\t\t}\n\t\t\
    else if(grades[i] >= 3.7) {\n\t\t\tresult.push_back(\"A\");\n\t\t}\n\t\telse if(grades[i]\
    \ >= 3.3) {\n\t\t\tresult.push_back(\"A-\");\n\t\t}\n\t\telse if(grades[i] >=\
    \ 3.0) {\n\t\t\tresult.push_back(\"B+\");\n\t\t}\n\t\telse if(grades[i] >= 2.7)\
    \ {\n\t\t\tresult.push_back(\"B\");\n\t\t}\n\t\telse if(grades[i] >= 2.3) {\n\t\
    \t\tresult.push_back(\"B-\");\n\t\t}\n\t\telse if(grades[i] >= 2.0) {\n\t\t\t\
    result.push_back(\"C+\");\n\t\t}\n\t\telse if(grades[i] >= 1.7) {\n\t\t\tresult.push_back(\"\
    C\");\n\t\t}\n\t\telse if(grades[i] >= 1.3) {\n\t\t\tresult.push_back(\"C-\");\n\
    \t\t}\n\t\telse if(grades[i] >= 1.0) {\n\t\t\tresult.push_back(\"D+\");\n\t\t\
    }\n\t\telse if(grades[i] >= 0.7) {\n\t\t\tresult.push_back(\"D\");\n\t\t}\n\t\t\
    else if(grades[i] >= 0.0) {\n\t\t\tresult.push_back(\"D-\");\n\t\t}\n\t\telse\
    \ {\n\t\t\tresult.push_back(\"E\");\n\t\t}\n\t}\n\t\n\treturn result;", "    std::vector<std::string>\
    \ result;\n    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i]\
    \ >= 4.0) {\n            result.push_back(\"A+\");\n        } else if (grades[i]\
    \ >= 3.7) {\n            result.push_back(\"A\");\n        } else if (grades[i]\
    \ >= 3.3) {\n            result.push_back(\"A-\");\n        } else if (grades[i]\
    \ >= 3.0) {\n            result.push_back(\"B+\");\n        } else if (grades[i]\
    \ >= 2.7) {\n            result.push_back(\"B\");\n        } else if (grades[i]\
    \ >= 2.3) {\n            result.push_back(\"B-\");\n        } else if (grades[i]\
    \ >= 2.0) {\n            result.push_back(\"C+\");\n        } else if (grades[i]\
    \ >= 1.7) {\n            result.push_back(\"C\");\n        } else if (grades[i]\
    \ >= 1.3) {\n            result.push_back(\"C-\");\n        } else if (grades[i]\
    \ >= 1.0) {\n            result.push_back(\"D+\");\n        } else if (grades[i]\
    \ >= 0.7) {\n            result.push_back(\"D\");\n        } else if (grades[i]\
    \ >= 0.0) {\n            result.push_back(\"D-\");\n        } else {\n       \
    \     result.push_back(\"E\");\n        }\n    }\n    return result;", "    //\
    \ YOUR CODE HERE\n    std::vector<std::string> c(grades.size());\n    for(int\
    \ i=0;i<grades.size();i++){\n        if(grades[i]==4){\n            c[i]=\"A+\"\
    ;\n        }\n        else if(grades[i]<=3.7&&grades[i]>3.3){\n            c[i]=\"\
    A\";\n        }\n        else if(grades[i]<=3.3&&grades[i]>3){\n            c[i]=\"\
    A-\";\n        }\n        else if(grades[i]<=3&&grades[i]>2.7){\n            c[i]=\"\
    B+\";\n        }\n        else if(grades[i]<=2.7&&grades[i]>2.3){\n          \
    \  c[i]=\"B\";\n        }\n        else if(grades[i]<=2.3&&grades[i]>2){\n   \
    \         c[i]=\"B-\";\n        }\n        else if(grades[i]<=2&&grades[i]>1.7){\n\
    \            c[i]=\"C+\";\n        }\n        else if(grades[i]<=1.7&&grades[i]>1.3){\n\
    \            c[i]=\"C\";\n        }\n        else if(grades[i]<=1.3&&grades[i]>1){\n\
    \            c[i]=\"C-\";\n        }\n        else if(grades[i]<=1&&grades[i]>0.7){\n\
    \            c[i]=\"D+\";\n        }\n        else if(grades[i]<=0.7&&grades[i]>0.3){\n\
    \            c[i]=\"D\";\n        }\n        else if(grades[i]<=0.3&&grades[i]>0){\n\
    \            c[i]=\"D-\";\n        }\n        else if(grades[i]==0){\n       \
    \     c[i]=\"E\";\n        }\n    }\n    return c;", "    // Write your code here\n\
    \    std::vector<std::string> letter_grades;\n    for (auto grade : grades) {\n\
    \        if (grade == 4.0) {\n            letter_grades.push_back(\"A+\");\n \
    \       } else if (grade > 3.7) {\n            letter_grades.push_back(\"A\");\n\
    \        } else if (grade > 3.3) {\n            letter_grades.push_back(\"A-\"\
    );\n        } else if (grade > 3.0) {\n            letter_grades.push_back(\"\
    B+\");\n        } else if (grade > 2.7) {\n            letter_grades.push_back(\"\
    B\");\n        } else if (grade > 2.3) {\n            letter_grades.push_back(\"\
    B-\");\n        } else if (grade > 2.0) {\n            letter_grades.push_back(\"\
    C+\");\n        } else if (grade > 1.7) {\n            letter_grades.push_back(\"\
    C\");\n        } else if (grade > 1.3) {\n            letter_grades.push_back(\"\
    C-\");\n        } else if (grade > 1.0) {\n            letter_grades.push_back(\"\
    D+\");\n        } else if (grade > 0.7) {\n            letter_grades.push_back(\"\
    D\");\n        } else if (grade > 0.0) {\n            letter_grades.push_back(\"\
    D-\");\n        } else {\n            letter_grades.push_back(\"E\");\n      \
    \  }\n    }\n    return letter_grades;", "  std::vector<std::string> grades_letter;\n\
    \  for (int i = 0; i < grades.size(); i++) {\n    if (grades[i] >= 4.0) {\n  \
    \    grades_letter.push_back(\"A+\");\n    } else if (grades[i] >= 3.7) {\n  \
    \    grades_letter.push_back(\"A\");\n    } else if (grades[i] >= 3.3) {\n   \
    \   grades_letter.push_back(\"A-\");\n    } else if (grades[i] >= 3.0) {\n   \
    \   grades_letter.push_back(\"B+\");\n    } else if (grades[i] >= 2.7) {\n   \
    \   grades_letter.push_back(\"B\");\n    } else if (grades[i] >= 2.3) {\n    \
    \  grades_letter.push_back(\"B-\");\n    } else if (grades[i] >= 2.0) {\n    \
    \  grades_letter.push_back(\"C+\");\n    } else if (grades[i] >= 1.7) {\n    \
    \  grades_letter.push_back(\"C\");\n    } else if (grades[i] >= 1.3) {\n     \
    \ grades_letter.push_back(\"C-\");\n    } else if (grades[i] >= 1.0) {\n     \
    \ grades_letter.push_back(\"D+\");\n    } else if (grades[i] >= 0.7) {\n     \
    \ grades_letter.push_back(\"D\");\n    } else if (grades[i] >= 0.0) {\n      grades_letter.push_back(\"\
    D-\");\n    } else {\n      grades_letter.push_back(\"E\");\n    }\n  }\n  return\
    \ grades_letter;", "  for (int i = 0; i < grades.size(); i++) {\n    if (grades[i]\
    \ > 4) {\n      grades[i] = (float)4;\n    }\n    if (grades[i] < 0) {\n     \
    \ grades[i] = (float)0;\n    }\n  }\n  std::vector<std::string> result;\n  for\
    \ (int i = 0; i < grades.size(); i++) {\n    if (grades[i] >= (float)4) {\n  \
    \    result.push_back(\"A+\");\n    }\n    else if (grades[i] >= (float)3.7) {\n\
    \      result.push_back(\"A\");\n    }\n    else if (grades[i] >= (float)3.3)\
    \ {\n      result.push_back(\"A-\");\n    }\n    else if (grades[i] >= (float)3)\
    \ {\n      result.push_back(\"B+\");\n    }\n    else if (grades[i] >= (float)2.7)\
    \ {\n      result.push_back(\"B\");\n    }\n    else if (grades[i] >= (float)2.3)\
    \ {\n      result.push_back(\"B-\");\n    }\n    else if (grades[i] >= (float)2)\
    \ {\n      result.push_back(\"C+\");\n    }\n    else if (grades[i] >= (float)1.7)\
    \ {\n      result.push_back(\"C\");\n    }\n    else if (grades[i] >= (float)1.3)\
    \ {\n      result.push_back(\"C-\");\n    }\n    else if (grades[i] >= (float)1)\
    \ {\n      result.push_back(\"D+\");\n    }\n    else if (grades[i] >= (float)0.7)\
    \ {\n      result.push_back(\"D\");\n    }\n    else if (grades[i] >= (float)0)\
    \ {\n      result.push_back(\"D-\");\n    }\n    else {\n      result.push_back(\"\
    E\");\n    }\n  }\n  return result;", "  std::vector<std::string> rv;\n  for (std::vector<float>::iterator\
    \ it = grades.begin(); it != grades.end(); ++it) {\n    if (*it >= 4.0) {\n  \
    \    rv.push_back(\"A+\");\n    } else if (*it >= 3.7) {\n      rv.push_back(\"\
    A\");\n    } else if (*it >= 3.3) {\n      rv.push_back(\"A-\");\n    } else if\
    \ (*it >= 3.0) {\n      rv.push_back(\"B+\");\n    } else if (*it >= 2.7) {\n\
    \      rv.push_back(\"B\");\n    } else if (*it >= 2.3) {\n      rv.push_back(\"\
    B-\");\n    } else if (*it >= 2.0) {\n      rv.push_back(\"C+\");\n    } else\
    \ if (*it >= 1.7) {\n      rv.push_back(\"C\");\n    } else if (*it >= 1.3) {\n\
    \      rv.push_back(\"C-\");\n    } else if (*it >= 1.0) {\n      rv.push_back(\"\
    D+\");\n    } else if (*it >= 0.7) {\n      rv.push_back(\"D\");\n    } else if\
    \ (*it >= 0.0) {\n      rv.push_back(\"D-\");\n    } else {\n      rv.push_back(\"\
    E\");\n    }\n  }\n  return rv;", "  // your code here\n  for(int i=0;i<grades.size();i++){\n\
    \    if(grades[i] >= 4.0){\n      grades[i] = 'A+';\n    }\n    else if(grades[i]\
    \ >= 3.7){\n      grades[i] = 'A';\n    }\n    else if(grades[i] >= 3.3){\n  \
    \    grades[i] = 'A-';\n    }\n    else if(grades[i] >= 3.0){\n      grades[i]\
    \ = 'B+';\n    }\n    else if(grades[i] >= 2.7){\n      grades[i] = 'B';\n   \
    \ }\n    else if(grades[i] >= 2.3){\n      grades[i] = 'B-';\n    }\n    else\
    \ if(grades[i] >= 2.0){\n      grades[i] = 'C+';\n    }\n    else if(grades[i]\
    \ >= 1.7){\n      grades[i] = 'C';\n    }\n    else if(grades[i] >= 1.3){\n  \
    \    grades[i] = 'C-';\n    }\n    else if(grades[i] >= 1.0){\n      grades[i]\
    \ = 'D+';\n    }\n    else if(grades[i] >= 0.7){\n      grades[i] = 'D';\n   \
    \ }\n    else if(grades[i] >= 0.0){\n      grades[i] = 'D-';\n    }\n    else{\n\
    \      grades[i] = 'E';\n    }\n  }\n  return grades;", "  int sz = grades.size();\n\
    \  std::vector<std::string> ret;\n  for (int i = 0; i < sz; i++) {\n    if (grades[i]\
    \ >= 4.0) ret.push_back(\"A+\");\n    else if (grades[i] >= 3.7) ret.push_back(\"\
    A\");\n    else if (grades[i] >= 3.3) ret.push_back(\"A-\");\n    else if (grades[i]\
    \ >= 3.0) ret.push_back(\"B+\");\n    else if (grades[i] >= 2.7) ret.push_back(\"\
    B\");\n    else if (grades[i] >= 2.3) ret.push_back(\"B-\");\n    else if (grades[i]\
    \ >= 2.0) ret.push_back(\"C+\");\n    else if (grades[i] >= 1.7) ret.push_back(\"\
    C\");\n    else if (grades[i] >= 1.3) ret.push_back(\"C-\");\n    else if (grades[i]\
    \ >= 1.0) ret.push_back(\"D+\");\n    else if (grades[i] >= 0.7) ret.push_back(\"\
    D\");\n    else if (grades[i] >= 0.0) ret.push_back(\"D-\");\n    else ret.push_back(\"\
    E\");\n  }\n  return ret;", "    std::vector<std::string> letterGrades;\n    for\
    \ (int i = 0; i < grades.size(); i++) {\n        if (grades[i] >= 4.0) {\n   \
    \         letterGrades.push_back(\"A+\");\n        } else if (grades[i] >= 3.7)\
    \ {\n            letterGrades.push_back(\"A\");\n        } else if (grades[i]\
    \ >= 3.3) {\n            letterGrades.push_back(\"A-\");\n        } else if (grades[i]\
    \ >= 3.0) {\n            letterGrades.push_back(\"B+\");\n        } else if (grades[i]\
    \ >= 2.7) {\n            letterGrades.push_back(\"B\");\n        } else if (grades[i]\
    \ >= 2.3) {\n            letterGrades.push_back(\"B-\");\n        } else if (grades[i]\
    \ >= 2.0) {\n            letterGrades.push_back(\"C+\");\n        } else if (grades[i]\
    \ >= 1.7) {\n            letterGrades.push_back(\"C\");\n        } else if (grades[i]\
    \ >= 1.3) {\n            letterGrades.push_back(\"C-\");\n        } else if (grades[i]\
    \ >= 1.0) {\n            letterGrades.push_back(\"D+\");\n        } else if (grades[i]\
    \ >= 0.7) {\n            letterGrades.push_back(\"D\");\n        } else if (grades[i]\
    \ >= 0.0) {\n            letterGrades.push_back(\"D-\");\n        } else {\n \
    \           letterGrades.push_back(\"E\");\n        }\n    }\n    return letterGrades;",
  "    std::vector<std::string> result;\n    std::string letter_grade;\n    for (int\
    \ i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0) {\n        \
    \    letter_grade = \"A+\";\n        } else if (grades[i] > 3.7) {\n         \
    \   letter_grade = \"A\";\n        } else if (grades[i] > 3.3) {\n           \
    \ letter_grade = \"A-\";\n        } else if (grades[i] > 3.0) {\n            letter_grade\
    \ = \"B+\";\n        } else if (grades[i] > 2.7) {\n            letter_grade =\
    \ \"B\";\n        } else if (grades[i] > 2.3) {\n            letter_grade = \"\
    B-\";\n        } else if (grades[i] > 2.0) {\n            letter_grade = \"C+\"\
    ;\n        } else if (grades[i] > 1.7) {\n            letter_grade = \"C\";\n\
    \        } else if (grades[i] > 1.3) {\n            letter_grade = \"C-\";\n \
    \       } else if (grades[i] > 1.0) {\n            letter_grade = \"D+\";\n  \
    \      } else if (grades[i] > 0.7) {\n            letter_grade = \"D\";\n    \
    \    } else if (grades[i] > 0.0) {\n            letter_grade = \"D-\";\n     \
    \   } else {\n            letter_grade = \"E\";\n        }\n        result.push_back(letter_grade);\n\
    \    }\n    return result;", "    // Write your code here\n    std::vector<std::string>\
    \ v(grades.size());\n    for(int i=0;i<grades.size();i++){\n        if(grades[i]\
    \ >= 4.0)\n            v[i] = \"A+\";\n        else if(grades[i] >= 3.7)\n   \
    \         v[i] = \"A\";\n        else if(grades[i] >= 3.3)\n            v[i] =\
    \ \"A-\";\n        else if(grades[i] >= 3.0)\n            v[i] = \"B+\";\n   \
    \     else if(grades[i] >= 2.7)\n            v[i] = \"B\";\n        else if(grades[i]\
    \ >= 2.3)\n            v[i] = \"B-\";\n        else if(grades[i] >= 2.0)\n   \
    \         v[i] = \"C+\";\n        else if(grades[i] >= 1.7)\n            v[i]\
    \ = \"C\";\n        else if(grades[i] >= 1.3)\n            v[i] = \"C-\";\n  \
    \      else if(grades[i] >= 1.0)\n            v[i] = \"D+\";\n        else if(grades[i]\
    \ >= 0.7)\n            v[i] = \"D\";\n        else if(grades[i] >= 0.0)\n    \
    \        v[i] = \"D-\";\n        else if(grades[i] >= 0.0)\n            v[i] =\
    \ \"E\";\n    }\n    return v;", "    std::vector<std::string> letter_grades;\n\
    \    for (int i = 0; i < grades.size(); i++) {\n        if (grades[i] == 4.0)\
    \ {\n            letter_grades.push_back(\"A+\");\n        } else if (grades[i]\
    \ > 3.7) {\n            letter_grades.push_back(\"A\");\n        } else if (grades[i]\
    \ > 3.3) {\n            letter_grades.push_back(\"A-\");\n        } else if (grades[i]\
    \ > 3.0) {\n            letter_grades.push_back(\"B+\");\n        } else if (grades[i]\
    \ > 2.7) {\n            letter_grades.push_back(\"B\");\n        } else if (grades[i]\
    \ > 2.3) {\n            letter_grades.push_back(\"B-\");\n        } else if (grades[i]\
    \ > 2.0) {\n            letter_grades.push_back(\"C+\");\n        } else if (grades[i]\
    \ > 1.7) {\n            letter_grades.push_back(\"C\");\n        } else if (grades[i]\
    \ > 1.3) {\n            letter_grades.push_back(\"C-\");\n        } else if (grades[i]\
    \ > 1.0) {\n            letter_grades.push_back(\"D+\");\n        } else if (grades[i]\
    \ > 0.7) {\n            letter_grades.push_back(\"D\");\n        } else if (grades[i]\
    \ > 0.0) {\n            letter_grades.push_back(\"D-\");\n        } else {\n \
    \           letter_grades.push_back(\"E\");\n        }\n    }\n    return letter_grades;"]
stop_tokens:
- "\n}"

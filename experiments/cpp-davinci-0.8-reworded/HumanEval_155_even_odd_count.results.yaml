language: cpp
name: HumanEval_155_even_odd_count
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  //your code here\n  long even = 0, odd = 0;\n  long x = num;\n  if(num < 0)\
    \ num = -num;\n  while(num) {\n    if(num % 2 == 0) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n    num /= 10;\n  }\n  if(x < 0) even++;\n  return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpaj1r62re: /tmp/tmpaj1r62re.cpp:28: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  int odd_cnt = 0, even_cnt = 0;\n  if (num < 0) num *= -1;\n  while (num) {\n\
    \    int r = num % 10;\n    if (r % 2 == 0)\n      even_cnt++;\n    else\n   \
    \   odd_cnt++;\n    num /= 10;\n  }\n  return std::make_tuple(even_cnt, odd_cnt);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpodwu_6jl: /tmp/tmpodwu_6jl.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code here\n    long even = 0, odd = 0;\n    if(num < 0) num = num\
    \ * -1;\n    while(num > 0){\n        if(num % 2 == 0) even++;\n        else odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxvloiitt: /tmp/tmpxvloiitt.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint even=0,odd=0;\n\twhile(num>0)\n\t{\n\t\tif(num%2==0)\n\t\t\teven++;\n\t\t\
    else\n\t\t\todd++;\n\t\tnum/=10;\n\t}\n\treturn std::make_tuple(even,odd);\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp092wvtv3: /tmp/tmp092wvtv3.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    if(num < 0) num *= -1;\n    while(num > 0) {\n\
    \        if(num % 2 == 0) {\n            even++;\n        } else {\n         \
    \   odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8l1q1864: /tmp/tmp8l1q1864.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::tuple<long, long> count_even_odd_digits{ 0, 0 };\n\tlong count_even{ 0\
    \ }, count_odd{ 0 };\n\twhile (num != 0) {\n\t\tif (num % 2 == 0) {\n\t\t\tcount_even++;\n\
    \t\t}\n\t\telse {\n\t\t\tcount_odd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\tstd::get<0>(count_even_odd_digits)\
    \ = count_even;\n\tstd::get<1>(count_even_odd_digits) = count_odd;\n\treturn count_even_odd_digits;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8wjkckvj: /tmp/tmp8wjkckvj.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code goes here\n    long even = 0, odd = 0;\n    if(num < 0) num\
    \ = abs(num);\n    while(num != 0){\n        if(num % 2 == 0) even++;\n      \
    \  else odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp48ojyspn: /tmp/tmp48ojyspn.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::tuple<long, long> tup;\n  std::vector<int> vec = {};\n  while (num !=\
    \ 0) {\n    int val = num % 10;\n    vec.push_back(val);\n    num = num / 10;\n\
    \  }\n  std::sort(vec.begin(), vec.end());\n  std::vector<int> vec2 = {};\n  std::vector<int>\
    \ vec3 = {};\n  for (int i = 0; i < vec.size(); i++) {\n    if (vec[i] % 2 ==\
    \ 0) {\n      vec2.push_back(vec[i]);\n    } else {\n      vec3.push_back(vec[i]);\n\
    \    }\n  }\n  return std::make_tuple(vec2.size(), vec3.size());\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpslw5wkj9: /tmp/tmpslw5wkj9.cpp:38: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::vector<int> digits;\n\tint even = 0;\n\tint odd = 0;\n\twhile (num != 0)\
    \ {\n\t\tdigits.push_back(num % 10);\n\t\tnum /= 10;\n\t}\n\tfor (int i = 0; i\
    \ < digits.size(); i++) {\n\t\tif (digits[i] % 2 == 0) {\n\t\t\teven++;\n\t\t\
    }\n\t\telse {\n\t\t\todd++;\n\t\t}\n\t}\n\treturn std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpk3rnx1m0: /tmp/tmpk3rnx1m0.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long evenCount=0, oddCount=0;\n    if(num == 0)\n        evenCount++;\n \
    \   else if(num < 0)\n        oddCount++;\n    while(num != 0){\n        long\
    \ rem = num % 10;\n        if(rem % 2 == 0)\n            evenCount++;\n      \
    \  else\n            oddCount++;\n        num /= 10;\n    }\n    return std::make_tuple(evenCount,\
    \ oddCount);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0thxl05k: /tmp/tmp0thxl05k.cpp:28: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Your code here\n    int even = 0, odd = 0;\n    while(num != 0)\n    {\n\
    \        if((num % 10) % 2 == 0)\n            even++;\n        else\n        \
    \    odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9pxtxi0s: /tmp/tmp9pxtxi0s.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long \n        even_num = 0, \n        odd_num = 0;\n    char \n        temp[100];\n\
    \    sprintf(temp, \"%ld\", num);\n    for (int i = 0; i < strlen(temp); i++)\
    \ {\n        if ((temp[i] - '0') % 2 == 0) {\n            even_num++;\n      \
    \  } else {\n            odd_num++;\n        }\n    }\n    return std::make_tuple(even_num,\
    \ odd_num);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpz9aptrze: /tmp/tmpz9aptrze.cpp:28: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  int even = 0, odd = 0;\n  if (num < 0) {\n    num = num * -1;\n  }\n  int digit\
    \ = 0;\n  while (num > 0) {\n    digit = num % 10;\n    if (digit % 2 == 0) {\n\
    \      even++;\n    } else {\n      odd++;\n    }\n    num = num / 10;\n  }\n\
    \  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpa7nuj5kx: /tmp/tmpa7nuj5kx.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> res(0, 0);\n    // get the digits in reverse order\
    \ so that they are in the order that they are in the number.\n    while (num)\
    \ {\n        if ((num % 10) % 2 == 0)\n            std::get<0>(res)++;\n     \
    \   else\n            std::get<1>(res)++;\n        num /= 10;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpeilnyn21: /tmp/tmpeilnyn21.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  \tassert(num != 0);\n  \tstd::tuple<long, long> result = std::make_tuple(0,\
    \ 0);\n\treturn result;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpwe2_0j0n: /tmp/tmpwe2_0j0n.cpp:16: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even = 0, odd = 0;\n  while(num != 0) {\n    int digit = num % 10;\n \
    \   if(digit % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n \
    \   num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmprci1339m: /tmp/tmprci1339m.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while(num != 0) {\n        if(num % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n        num /= 10;\n \
    \   }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpedqw3x2t: /tmp/tmpedqw3x2t.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long e = 0, o = 0;\n    if(num > 0) {\n        int digit = 0;\n        while(num\
    \ > 0) {\n            digit = num % 10;\n            if(digit % 2 == 0) {\n  \
    \              e++;\n            } else {\n                o++;\n            }\n\
    \            num /= 10;\n        }\n    } else {\n        num = -num;\n      \
    \  int digit = 0;\n        while(num > 0) {\n            digit = num % 10;\n \
    \           if(digit % 2 == 0) {\n                e++;\n            } else {\n\
    \                o++;\n            }\n            num /= 10;\n        }\n    }\n\
    \    return std::make_tuple(e, o);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmps7rmu0x3: /tmp/tmps7rmu0x3.cpp:46: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> even_odd;\n    long even_count = 0;\n    long odd_count\
    \ = 0;\n    while(num > 0) {\n        long remainder = num % 10;\n        if(remainder\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n        num = num / 10;\n    }\n    even_odd = std::make_tuple(even_count,\
    \ odd_count);\n    return even_odd;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmplias20gq: /tmp/tmplias20gq.cpp:28: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even_count = 0;\n  long odd_count = 0;\n  if (num < 0) {\n    num = abs(num);\n\
    \  }\n  while (num > 0) {\n    int rem = num % 10;\n    if (rem % 2 == 0) {\n\
    \      even_count++;\n    } else {\n      odd_count++;\n    }\n    num = num /\
    \ 10;\n  }\n  return std::make_tuple(even_count, odd_count);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmplxqanqe4: /tmp/tmplxqanqe4.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count=0,odd_count=0;\n    if(num>0){\n        while(num>0){\n \
    \           int rem=num%10;\n            if(rem%2==0){\n                even_count++;\n\
    \            }\n            else{\n                odd_count++;\n            }\n\
    \            num=num/10;\n        }\n    }\n    else{\n        while(num<0){\n\
    \            int rem=num%10;\n            if(rem%2==0){\n                even_count++;\n\
    \            }\n            else{\n                odd_count++;\n            }\n\
    \            num=num/10;\n        }\n    }\n    return std::make_tuple(even_count,odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpbirj05qv: /tmp/tmpbirj05qv.cpp:46: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code goes here\n    // int even = 0;\n    // int odd = 0;\n    //\
    \ int p = 1;\n    // if(num < 0)\n    // {\n    //     num = num * -1;\n    //\
    \     p = -1;\n    // }\n    // while(num != 0)\n    // {\n    //     if(num %\
    \ 2 == 0)\n    //     {\n    //         even++;\n    //     }\n    //     else{\n\
    \    //         odd++;\n    //     }\n    //     num = num / 10;\n    // }\n \
    \   // return std::make_tuple(even, odd);\n    int even = 0;\n    int odd = 0;\n\
    \    while(num != 0)\n    {\n        int rem = num % 10;\n        if(rem % 2 ==\
    \ 0)\n        {\n            even++;\n        }\n        else{\n            odd++;\n\
    \        }\n        num = num / 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnhilw2h0: /tmp/tmpnhilw2h0.cpp:56: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \t// Write your code here\n\tlong odd, even;\n\todd = even = 0;\n\tif (num < 0)\n\
    \t\tnum = 0 - num;\n\twhile (num > 0) {\n\t\tif (num % 2 == 0)\n\t\t\teven++;\n\
    \t\telse\n\t\t\todd++;\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp4u0jaa2w: /tmp/tmp4u0jaa2w.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \t// Write your code here.\n\tlong odd = 0, even = 0;\n\twhile (num != 0) {\n\t\
    \tif (num % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum /= 10;\n\t\
    }\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpl7wzfb0j: /tmp/tmpl7wzfb0j.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // write your code here\n\n    int odd = 0;\n    int even = 0;\n    while(num){\n\
    \        int rem = num%10;\n        if(rem%2==0){\n            even++;\n     \
    \   }\n        else{\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzi_72o3z: /tmp/tmpzi_72o3z.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  auto positiveNum = abs(num);\n  std::tuple<long, long> result;\n  long countOfEven\
    \ = 0;\n  long countOfOdd = 0;\n  while (positiveNum > 0) {\n    int digit = positiveNum\
    \ % 10;\n    if (digit % 2 == 0) {\n      countOfEven++;\n    } else {\n     \
    \ countOfOdd++;\n    }\n    positiveNum /= 10;\n  }\n  result = std::make_tuple(countOfEven,\
    \ countOfOdd);\n  return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp3wu0axd8: /tmp/tmp3wu0axd8.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    if(num == 0) {\n        even++;\n    }\n    else\
    \ {\n        while(num != 0) {\n            if(num % 2 == 0) {\n             \
    \   even++;\n            }\n            else {\n                odd++;\n     \
    \       }\n            num /= 10;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Write your code here\n    // To print results to the standard output you\
    \ can use cout\n    // Example: cout << \"Hello world!\";\n\tlong odd=0,even=0;\n\
    \twhile(num>0)\n\t{\n\t\tif(num%2==0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t\tnum=num/10;\n\t}\n\treturn std::make_tuple(even,odd);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpa5abaxbm: /tmp/tmpa5abaxbm.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even=0,odd=0;\n    long sum=0;\n    if(num<0)\n        sum+=1;\n   \
    \ while(num){\n        if(abs(num%10)%2==0)\n            even+=1;\n        else\n\
    \            odd+=1;\n        num/=10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpc_orw2r7: /tmp/tmpc_orw2r7.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    assert(num != 0);\n    long e_count = 0, o_count = 0;\n    if (num < 0) {\n\
    \        num = -num;\n    }\n    while (num > 0) {\n        if (num % 2 == 0)\
    \ {\n            e_count++;\n        } else {\n            o_count++;\n      \
    \  }\n        num /= 10;\n    }\n    return std::make_tuple(e_count, o_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpygfla5qf: /tmp/tmpygfla5qf.cpp:10: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `num != 0'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    if(num == 0) {\n        even = 1;\n    }\n \
    \   while(num != 0) {\n        if(abs(num % 10) % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::tuple<long, long> count;\n  long even=0, odd=0;\n  if(num < 0) num = std::abs(num);\n\
    \  while(num){\n    if(num%10%2==0) even++;\n    else odd++;\n    num /= 10;\n\
    \  }\n  count = std::make_tuple(even, odd);\n  return count;\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5mr5n2ma: /tmp/tmp5mr5n2ma.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    while(num){\n        if(num % 2 == 0)even++;\n\
    \        else odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgmfrc61t: /tmp/tmpgmfrc61t.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count = 0;\n    long odd_count = 0;\n    std::tuple<long, long>\
    \ ret;\n    while (num != 0) {\n        long rem = num % 10;\n        if (rem\
    \ % 2 == 0) {\n            even_count++;\n        } else {\n            odd_count++;\n\
    \        }\n        num /= 10;\n    }\n    ret = std::make_tuple(even_count, odd_count);\n\
    \    return ret;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq6vqz354: /tmp/tmpq6vqz354.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint zeros =0, ones =0;\n\tif(num == 0) return std::make_tuple(1, 0);\n\tif(num\
    \ < 0) num *= -1;\n\twhile(num > 0){\n\t\tif(num%2 == 0) zeros++;\n\t\telse ones++;\n\
    \t\tnum /= 10;\n\t}\n\treturn std::make_tuple(zeros, ones);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tlong even = 0, odd = 0;\n\twhile (num != 0) {\n\t\tlong digit = num % 10;\n\t\
    \tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\telse {\n\t\t\todd++;\n\t\t\
    }\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpp8p3y054: /tmp/tmpp8p3y054.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    \n    // int x, y;\n    // std::tie(x, y) = std::make_tuple(0, 0);\n    //\
    \ while(num != 0) {\n    //     if(num % 2 == 0) {\n    //         x++;\n    //\
    \     } else {\n    //         y++;\n    //     }\n    //     num /= 10;\n   \
    \ // }\n    // return std::make_tuple(x, y);\n    std::vector<int> temp;\n   \
    \ int count = 0;\n    while(num != 0) {\n        if(num % 2 == 0) {\n        \
    \    temp.push_back(0);\n        } else {\n            temp.push_back(1);\n  \
    \      }\n        num /= 10;\n    }\n    count = std::count(temp.begin(), temp.end(),\
    \ 0);\n    return std::make_tuple(count, temp.size() - count);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpr5yzqlpo: /tmp/tmpr5yzqlpo.cpp:44: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116194
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> result;\n    int even=0, odd=0;\n    for(int i=1;\
    \ i<=num; i++)\n    {\n        if(i%2==0)\n            even++;\n        else\n\
    \            odd++;\n    }\n    result = std::make_tuple(even, odd);\n    return\
    \ result;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpd1s8awb5: /tmp/tmpd1s8awb5.cpp:24: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int e = 0, o = 0;\n    if(num < 0)\n        num = -num;\n    while(num >\
    \ 0) {\n        if(num % 2 == 0)\n            e++;\n        else\n           \
    \ o++;\n        num /= 10;\n    }\n    return std::make_tuple(e, o);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5j7xpg3: /tmp/tmpd5j7xpg3.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116194
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint even = 0, odd = 0;\n\twhile (num != 0) {\n\t\tint digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif (digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\
    }\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmph1q8890e: /tmp/tmph1q8890e.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even_count = 0;\n  long odd_count = 0;\n  for (int i = 0; i < sizeof(num);\
    \ i++) {\n    int digit = abs(num % 10);\n    if (digit % 2 == 0) {\n      even_count++;\n\
    \    } else {\n      odd_count++;\n    }\n    num /= 10;\n  }\n  return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp43e13w29: /tmp/tmp43e13w29.cpp:25: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> result;\n    long odd = 0, even = 0;\n    int digit;\n\
    \    if (num < 0) {\n        num = -num;\n    }\n    while (num > 0) {\n     \
    \   digit = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n  \
    \      } else {\n            odd++;\n        }\n        num /= 10;\n    }\n  \
    \  result = std::make_tuple(even, odd);\n    return result;\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp0ql0y08p: /tmp/tmp0ql0y08p.cpp:37: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while(num != 0) {\n        int rem = num % 10;\n\
    \        if(rem % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2m8on67t: /tmp/tmp2m8on67t.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  assert(num != 0);\n  long even = 0, odd = 0;\n  while (num != 0) {\n    int\
    \ x = num % 10;\n    if (x % 2 == 0)\n      even++;\n    else\n      odd++;\n\
    \    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5z_dsaq7: /tmp/tmp5z_dsaq7.cpp:10: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `num != 0'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::tuple<long, long> even_odd_count;\n  // Place your code here\n  return\
    \ even_odd_count;\n}\nint main() {\n    auto candidate = even_odd_count;\n   \
    \ assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxwu_3m4i: /tmp/tmpxwu_3m4i.cpp:16: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \t// Write your code here.\n\t// int a = 0, b = 0;\n\t// if (num == 0)\n\t// \t\
    return std::make_tuple(a, b);\n\t// if (num < 0)\n\t// \tnum = -num;\n\t// while\
    \ (num != 0) {\n\t// \tif (num % 2 == 0)\n\t// \t\ta++;\n\t// \telse\n\t// \t\t\
    b++;\n\t// \tnum /= 10;\n\t// }\n\t// return std::make_tuple(a, b);\n\t// return\
    \ std::make_tuple(0, 0);\n\tint count = 0;\n\twhile (num != 0) {\n\t\tint temp\
    \ = num % 10;\n\t\tcount += (temp % 2);\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(count,\
    \ (abs(num) - count));\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp0ccm5ot3: /tmp/tmp0ccm5ot3.cpp:35: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Write your code here\n    long n=num;\n    long even=0,odd=0;\n    if(n<0)\n\
    \    {\n        n=-n;\n    }\n    while(n>0)\n    {\n        if(n%2==0)\n    \
    \    {\n            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n        n=n/10;\n    }\n    std::tuple<long,long> ret(even,odd);\n\
    \    return ret;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp3ltxy80t: /tmp/tmp3ltxy80t.cpp:41: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long odd=0,even=0;\n    while(num)\n    {\n        if(num%2==0)\n       \
    \     even++;\n        else\n            odd++;\n        num=num/10;\n    }\n\
    \    return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpre0ayom1: /tmp/tmpre0ayom1.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code goes here\n    std::tuple<long, long> tp;\n    std::get<0>(tp)\
    \ = 0;\n    std::get<1>(tp) = 0;\n    while(num!=0){\n        int n = num%10;\n\
    \        if(n%2==0){\n            std::get<0>(tp)++;\n        }\n        else{\n\
    \            std::get<1>(tp)++;\n        }\n        num/=10;\n    }\n    return\
    \ tp;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqgk6svan: /tmp/tmpqgk6svan.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even = 0, odd = 0;\n  std::vector<int> v;\n  for (long i = 0; i < num;\
    \ i++) {\n    if (i % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n \
    \   }\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmptvnarrzt: /tmp/tmptvnarrzt.cpp:23: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long positive_num = std::abs(num);\n    int even_counter = 0;\n    int odd_counter\
    \ = 0;\n    while (positive_num > 0) {\n        if (positive_num % 2 == 0)\n \
    \           even_counter++;\n        else\n            odd_counter++;\n      \
    \  positive_num /= 10;\n    }\n    return std::make_tuple(even_counter, odd_counter);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpeieett8l: /tmp/tmpeieett8l.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::string s=std::to_string(num);\n  long odd=0,even=0;\n  for(int i=0;i<s.length();i++){\n\
    \    if(int(s[i])%2==0)\n      even++;\n    else\n      odd++;\n  }\n  std::tuple<long,\
    \ long> t;\n  t=std::make_tuple(even,odd);\n  return t;\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpiktuf015: /tmp/tmpiktuf015.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::tuple<long, long> tp(0, 0);\n\tlong a = 0, b = 0;\n\tif (num < 0)\n\t\t\
    num = num * -1;\n\twhile (num != 0) {\n\t\tif (num % 2 == 0)\n\t\t\ta++;\n\t\t\
    else\n\t\t\tb++;\n\t\tnum = num / 10;\n\t}\n\ttp = std::make_tuple(a, b);\n\t\
    return tp;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1uz4zg4a: /tmp/tmp1uz4zg4a.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Write your code here\n    int nume=0,numo=0;\n    while(num!=0){\n   \
    \     if(num%2==0){\n            nume++;\n        }\n        else{\n         \
    \   numo++;\n        }\n        num=num/10;\n    }\n    return make_tuple(nume,numo);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp38ypolvy.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp38ypolvy.cpp:21:12: error: \u2018make_tuple\u2019\
    \ was not declared in this scope; did you mean \u2018std::make_tuple\u2019?\n\
    \   21 |     return make_tuple(nume,numo);\n      |            ^~~~~~~~~~\n  \
    \    |            std::make_tuple\nIn file included from /usr/include/c++/9/functional:54,\n\
    \                 from /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n   \
    \              from /usr/include/c++/9/algorithm:71,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp38ypolvy.cpp:2:\n/usr/include/c++/9/tuple:1470:5:\
    \ note: \u2018std::make_tuple\u2019 declared here\n 1470 |     make_tuple(_Elements&&...\
    \ __args)\n      |     ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    while(num != 0) {\n        if(abs(num%10)%2==0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpr338avby: /tmp/tmpr338avby.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even_count=0,odd_count=0;\n  if(num<0) num=num*-1;\n  while(num>0){\n\
    \    if(num%2==0) even_count++;\n    else odd_count++;\n    num=num/10;\n  }\n\
    \  std::tuple<long, long> tup=std::make_tuple(even_count,odd_count);\n  return\
    \ tup;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqwv7xz7i: /tmp/tmpqwv7xz7i.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  int even = 0, odd = 0;\n  // Write your code here\n  while(num != 0) {\n  \
    \  if((num % 10) % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n    }\n\
    \    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp35z16og_: /tmp/tmp35z16og_.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code goes here\n    long even_count = 0;\n    long odd_count = 0;\n\
    \    long x = abs(num);\n    while(x > 0) {\n        if(x % 2 == 0)\n        \
    \    even_count++;\n        else\n            odd_count++;\n        x /= 10;\n\
    \    }\n    return std::make_tuple(even_count, odd_count);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp8nmvt36v: /tmp/tmp8nmvt36v.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    long numCopy = num;\n  \
    \  long digit;\n    if (numCopy < 0) {\n        numCopy = numCopy * -1;\n    }\n\
    \    while (numCopy > 0) {\n        digit = numCopy % 10;\n        if (digit %\
    \ 2 == 0) {\n            evenCount++;\n        } else {\n            oddCount++;\n\
    \        }\n        numCopy = numCopy / 10;\n    }\n    return std::make_tuple(evenCount,\
    \ oddCount);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp93qr0hor: /tmp/tmp93qr0hor.cpp:37: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> tuple{0, 0};\n    if (num == 0) {\n        tuple =\
    \ std::make_tuple(1, 0);\n    } else {\n        while (num) {\n            if\
    \ (num % 2 == 0) {\n                std::get<0>(tuple)++;\n            } else\
    \ {\n                std::get<1>(tuple)++;\n            }\n            num /=\
    \ 10;\n        }\n    }\n    return tuple;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116198
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    //write your code here\n    long even_count=0,odd_count=0;\n    std::string\
    \ s;\n    if(num==0) return std::make_tuple(1,0);\n    else if(num<0) s=std::to_string(num*-1);\n\
    \    else s=std::to_string(num);\n    for(int i=0;i<s.length();i++){\n       \
    \ if((s[i]-'0')%2==0) even_count++;\n        else odd_count++;\n    }\n    return\
    \ std::make_tuple(even_count,odd_count);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  int oddCount = 0;\n  int evenCount = 0;\n  int m = 1;\n  if (num < 0) {\n \
    \   m = -1;\n    num = -num;\n  }\n  while (num) {\n    int digit = num % 10;\n\
    \    if (digit % 2 == 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(evenCount * m, oddCount\
    \ * m);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8ib8swf4: /tmp/tmp8ib8swf4.cpp:31: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long odd_count=0,even_count=0;\n  num=abs(num);\n  while(num>0){\n      int\
    \ digit=num%10;\n      if(digit%2==0)\n      even_count++;\n      else\n     \
    \ odd_count++;\n      num/=10;\n  }\n  return std::make_tuple(even_count,odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpvs23d301: /tmp/tmpvs23d301.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::tuple<long, long> result(0, 0);\n  long even_count = 0;\n  long odd_count\
    \ = 0;\n  if (num < 0) {\n    num = num * -1;\n  }\n  while (num) {\n    if (num\
    \ % 2 == 0) {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n\
    \    num = num / 10;\n  }\n  result = std::make_tuple(even_count, odd_count);\n\
    \  return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n   \
    \ assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpq59amvf1: /tmp/tmpq59amvf1.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint n = std::abs(num);\n\tint ec = 0, oc = 0;\n\twhile (n != 0) {\n\t\tint r\
    \ = n % 10;\n\t\tif (r % 2 == 0)\n\t\t\tec++;\n\t\telse\n\t\t\toc++;\n\t\tn /=\
    \ 10;\n\t}\n\treturn std::make_tuple(ec, oc);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqfz77mdd: /tmp/tmpqfz77mdd.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even=0,odd=0;\n  if(num<0)\n    num=num*-1;\n  while(num>0)\n  {\n   \
    \ int rem=num%10;\n    if(rem%2==0)\n      even++;\n    else\n      odd++;\n \
    \   num=num/10;\n  }\n  std::tuple<long,long> ret(even,odd);\n  return ret;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7fevavk4: /tmp/tmp7fevavk4.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::stringstream ss;\n\tss << num;\n\tstd::string s = ss.str();\n\tlong even\
    \ = 0, odd = 0;\n\tfor (long i = 0; i < s.length(); i++) {\n\t\tint n = s[i] -\
    \ '0';\n\t\tif (n % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\telse {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpdcpieg5l: /tmp/tmpdcpieg5l.cpp:28: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \t//type your code here\n\tint odd_count = 0, even_count = 0;\n\twhile (num !=\
    \ 0) {\n\t\tint rem = num % 10;\n\t\tif (rem % 2 == 0) {\n\t\t\teven_count++;\n\
    \t\t}\n\t\telse {\n\t\t\todd_count++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7vxtdus_: /tmp/tmp7vxtdus_.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint even = 0, odd = 0;\n\tfor (; num; num /= 10) {\n\t\tint digit = num % 10;\n\
    \t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\
    }\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp41mylgus: /tmp/tmp41mylgus.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // write code here\n  std::tuple<long, long> t;\n  long evenCount = 0;\n  long\
    \ oddCount = 0;\n  while(num != 0) {\n    int digit = num % 10;\n    if(digit\
    \ % 2 == 0) {\n      evenCount++;\n    } else {\n      oddCount++;\n    }\n  \
    \  num /= 10;\n  }\n  t = std::make_tuple(evenCount, oddCount);\n  return t;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpjsl87h63: /tmp/tmpjsl87h63.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::tuple<long, long> res(0, 0);\n\tlong even_cnt = 0, odd_cnt = 0;\n\twhile\
    \ (num) {\n\t\tlong remainder = num % 10;\n\t\tif (remainder % 2 == 0) even_cnt++;\n\
    \t\telse odd_cnt++;\n\t\tnum /= 10;\n\t}\n\treturn std::make_tuple(even_cnt, odd_cnt);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpp_li22w5: /tmp/tmpp_li22w5.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count=0,odd_count=0;\n    while(num!=0){\n        if(num%2==0){\n\
    \            even_count++;\n        }\n        else{\n            odd_count++;\n\
    \        }\n        num=num/10;\n    }\n    std::tuple<long,long>result(even_count,odd_count);\n\
    \    return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n \
    \   assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpsvho_fk7: /tmp/tmpsvho_fk7.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> result;\n    long even = 0, odd = 0;\n    while(num\
    \ != 0) {\n        if((num % 10) % 2 == 0) even++;\n        else odd++;\n    \
    \    num /= 10;\n    }\n    result = std::make_tuple(even, odd);\n    return result;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpnenh8702: /tmp/tmpnenh8702.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // write code here\n  assert(num != INT_MIN);\n  num = abs(num);\n  int even\
    \ = 0, odd = 0;\n  while (num > 0) {\n    if (num % 2 == 0)\n      even++;\n \
    \   else\n      odd++;\n    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9trjnsap: /tmp/tmp9trjnsap.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> t1;\n    int even = 0, odd = 0;\n    if(num < 0)\n\
    \        num = num * -1;\n    while(num != 0){\n        int digit = num % 10;\n\
    \        if(digit % 2 == 0)\n            even++;\n        else\n            odd++;\n\
    \        num = num / 10;\n    }\n    t1 = std::make_tuple(even, odd);\n    return\
    \ t1;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0p99tq09: /tmp/tmp0p99tq09.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long c1 = 0, c2 = 0;\n    while(num != 0) {\n        int rem = num % 10;\n\
    \        if(rem % 2 == 0) c1++;\n        else c2++;\n        num /= 10;\n    }\n\
    \    return std::make_tuple(c1, c2);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7fcynele: /tmp/tmp7fcynele.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::tuple<long, long> ret_val;\n  long even = 0, odd = 0;\n  while(num) {\n\
    \    int temp = num % 10;\n    if(temp & 1) {\n      odd++;\n    } else {\n  \
    \    even++;\n    }\n    num /= 10;\n  }\n  ret_val = std::make_tuple(even, odd);\n\
    \  return ret_val;\n}\nint main() {\n    auto candidate = even_odd_count;\n  \
    \  assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2ns9b222: /tmp/tmp2ns9b222.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num==0)\n    {\n        return std::make_tuple(1,0);\n    }\n    else\
    \ if(num>0)\n    {\n        int a=0,b=0;\n        while(num>0)\n        {\n  \
    \          if(num%2==0)\n            {\n                a++;\n            }\n\
    \            else\n            {\n                b++;\n            }\n      \
    \      num=num/10;\n        }\n        return std::make_tuple(a,b);\n    }\n \
    \   else\n    {\n        int a=0,b=0;\n        num=abs(num);\n        while(num>0)\n\
    \        {\n            if(num%2==0)\n            {\n                a++;\n  \
    \          }\n            else\n            {\n                b++;\n        \
    \    }\n            num=num/10;\n        }\n        return std::make_tuple(a,b);\n\
    \    }\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // write your code here\n    std::vector<int> digits;\n    while(num){\n\
    \        digits.push_back(num%10);\n        num/=10;\n    }\n    return std::make_tuple(count_if(digits.begin(),digits.end(),[](int\
    \ digit){return digit%2==0;}),\n                           count_if(digits.begin(),digits.end(),[](int\
    \ digit){return digit%2==1;}));\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpbstso02x: /tmp/tmpbstso02x.cpp:22: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even_count = 0;\n    int odd_count = 0;\n    while(num!=0){\n       \
    \ if(abs(num%10)%2==0){\n            even_count++;\n        }\n        else{\n\
    \            odd_count++;\n        }\n        num = num/10;\n    }\n    return\
    \ std::make_tuple(even_count, odd_count);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpl8wmh8rn: /tmp/tmpl8wmh8rn.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116197
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    \n\t// Your code here\n\tlong even=0,odd=0;\n\twhile(num!=0)\n\t{\n\t   \
    \ if(num%2==0)\n\t    {\n\t        even++;\n\t    }\n\t    else\n\t    {\n\t \
    \       odd++;\n\t    }\n\t    num/=10;\n\t}\n\treturn std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpdhoysgqw: /tmp/tmpdhoysgqw.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even=0,odd=0;\n    if(num<0)\n        num*=-1;\n    while(num>0){\n \
    \       if(num%2==0)\n            even++;\n        else\n            odd++;\n\
    \        num/=10;\n    }\n    std::tuple<long, long> t(even,odd);\n    return\
    \ t;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpulgcjnr_: /tmp/tmpulgcjnr_.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    //your code here\n    long c=0,d=0;\n    if(num==0)\n    {\n        c++;\n\
    \    }\n    else\n    {\n        while(num!=0)\n        {\n            int a=num%10;\n\
    \            if(a==0)\n            {\n                c++;\n            }\n  \
    \          else if(a%2==0)\n            {\n                c++;\n            }\n\
    \            else\n            {\n                d++;\n            }\n      \
    \      num=num/10;\n        }\n    }\n    return std::make_tuple(c,d);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::vector<int> digits;\n    while(num != 0) {\n        digits.push_back(num\
    \ % 10);\n        num /= 10;\n    }\n    int even = 0, odd = 0;\n    for(int i\
    \ = 0; i < digits.size(); i++) {\n        if(digits[i] % 2 == 0) even++;\n   \
    \     else odd++;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmplc92be1n: /tmp/tmplc92be1n.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num==0)\n    {\n        return std::make_tuple(1,0);\n    }\n    else\n\
    \    {\n        long even=0,odd=0;\n        std::vector<int> v;\n        if(num<0)\n\
    \        {\n            num=num*-1;\n        }\n        while(num>0)\n       \
    \ {\n            v.push_back(num%10);\n            num=num/10;\n        }\n  \
    \      for(int i=0;i<v.size();i++)\n        {\n            if(v[i]%2==0)\n   \
    \         {\n                even+=1;\n            }\n            else\n     \
    \       {\n                odd+=1;\n            }\n        }\n        return std::make_tuple(even,odd);\n\
    \    }\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even=0,odd=0;\n    if(num<0)\n        num=-num;\n    while(num>0)\n \
    \   {\n        if(num%2==0)\n            even++;\n        else\n            odd++;\n\
    \        num/=10;\n    }\n    return std::make_tuple(even,odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpesnawt0i: /tmp/tmpesnawt0i.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Write your code here\n    long even = 0, odd = 0;\n    if(num<0)\n   \
    \     num*=-1;\n    while(num>0){\n        if(num%2==0)\n            even++;\n\
    \        else\n            odd++;\n        num/=10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpndtbxeye: /tmp/tmpndtbxeye.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> res = std::make_tuple(0, 0);\n    while (num > 0)\
    \ {\n        if (num % 2 == 0) {\n            std::get<0>(res)++;\n        } else\
    \ {\n            std::get<1>(res)++;\n        }\n        num /= 10;\n    }\n \
    \   return res;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpw9d_gyts: /tmp/tmpw9d_gyts.cpp:24: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> t;\n    std::get<0>(t) = 0;\n    std::get<1>(t) =\
    \ 0;\n    if (num > 0) {\n        while (num > 0) {\n            int rem = num\
    \ % 10;\n            if (rem % 2 == 0) {\n                std::get<0>(t)++;\n\
    \            } else {\n                std::get<1>(t)++;\n            }\n    \
    \        num = num / 10;\n        }\n    } else {\n        while (num < 0) {\n\
    \            int rem = num % 10;\n            if (rem % 2 == 0) {\n          \
    \      std::get<0>(t)++;\n            } else {\n                std::get<1>(t)++;\n\
    \            }\n            num = num / 10;\n        }\n    }\n    return t;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0dfwwrth: /tmp/tmp0dfwwrth.cpp:45: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count = 0;\n    long odd_count = 0;\n    if (num == 0) {\n    \
    \    return std::make_tuple(1, 0);\n    } else if (num < 0) {\n        num = num\
    \ * -1;\n    }\n    while (num > 0) {\n        if (num % 2 == 0) {\n         \
    \   even_count++;\n        } else {\n            odd_count++;\n        }\n   \
    \     num = num / 10;\n    }\n    return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code here\n    long even_count = 0;\n    long odd_count = 0;\n  \
    \  int digit;\n    while(num!=0){\n        digit = num%10;\n        if(digit%2==0){\n\
    \            even_count++;\n        }\n        else odd_count++;\n        num\
    \ /= 10;\n    }\n    return std::make_tuple(even_count, odd_count);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7v5z_uap: /tmp/tmp7v5z_uap.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // your code here\n  long even = 0, odd = 0;\n  while(num){\n    long rem =\
    \ num % 10;\n    if(rem % 2 == 0)\n      even++;\n    else\n      odd++;\n   \
    \ num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpib7vnby1: /tmp/tmpib7vnby1.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116198
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // This exercise is very trivial. So, I will use this space to make\n  // a\
    \ small example of what can you do with a tuple.\n  // We will return a tuple\
    \ with the number of evens and odds in the number.\n  // We need a list with the\
    \ digits to compute it.\n  std::vector<int> numbers;\n  while (num != 0) {\n \
    \   // We will use the simplest way to do this. We will add the numbers to a\n\
    \    // vector and then iterate through it.\n    numbers.push_back(num % 10);\n\
    \    num /= 10;\n  }\n  // Now we can create the tuple, and set the values.\n\
    \  auto even_odd = std::make_tuple(0, 0);\n  for (auto number : numbers) {\n \
    \   // To change a value in a tuple, we can use the get<index>() method.\n   \
    \ // We will check if the number is even.\n    if (number % 2 == 0) {\n      //\
    \ I think that this is the most straightforward way to get the evens.\n      //\
    \ Get the first element of the tuple, and increment it.\n      std::get<0>(even_odd)++;\n\
    \    } else {\n      // Else we do the same with the odds.\n      std::get<1>(even_odd)++;\n\
    \    }\n  }\n  // And finally, we return the tuple.\n  return even_odd;\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8ip9yu6d: /tmp/tmp8ip9yu6d.cpp:47: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int count1=0,count2=0;\n    for(int i=0;num!=0;i++)\n    {\n        if(num%2==0)\n\
    \        {\n            count1++;\n        }\n        else\n        {\n      \
    \      count2++;\n        }\n        num=num/10;\n    }\n    return std::make_tuple(count1,count2);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzuhrdchn: /tmp/tmpzuhrdchn.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116199
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // TODO(me): implement the function\n    long odd = 0;\n    long even = 0;\n\
    \    while(num != 0){\n        int r = num % 10;\n        if(r % 2 == 0){\n  \
    \          even++;\n        }else{\n            odd++;\n        }\n        num\
    \ = num / 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpuz7tb9f1: /tmp/tmpuz7tb9f1.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    if(num < 0)\n        num = abs(num);\n    while(num\
    \ > 0){\n        if(num % 2 == 0)\n            even++;\n        else\n       \
    \     odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpfu2skut7: /tmp/tmpfu2skut7.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even_count=0,odd_count=0;\n  if(num<0)\n  {\n    num=-num;\n  }\n  while(num!=0)\n\
    \  {\n    if(num%2==0)\n    {\n      even_count++;\n    }\n    else{\n      odd_count++;\n\
    \    }\n    num=num/10;\n  }\n  return std::make_tuple(even_count,odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpsct2dz7x: /tmp/tmpsct2dz7x.cpp:37: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> answer;\n    long even = 0;\n    long odd = 0;\n \
    \   if (num < 0) {\n        num = num * -1;\n    }\n    while (num > 0) {\n  \
    \      if (num % 2 == 0) {\n            even++;\n        } else {\n          \
    \  odd++;\n        }\n        num = num / 10;\n    }\n    answer = std::make_tuple(even,\
    \ odd);\n    return answer;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpglqpkk6i: /tmp/tmpglqpkk6i.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // write your code here\n    if(num<0) num*=-1;\n    int even=0,odd=0;\n\
    \    while(num>0){\n        int rem=num%10;\n        if(rem%2==0) even++;\n  \
    \      else odd++;\n        num/=10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp0_uwdiew: /tmp/tmp0_uwdiew.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num<0)\n    {\n        num = num*-1;\n    }\n    int even = 0;\n    int\
    \ odd = 0;\n    while(num>0)\n    {\n        int rem = num%10;\n        if(rem%2==0)\n\
    \        {\n            even++;\n        }\n        else\n        {\n        \
    \    odd++;\n        }\n        num = num/10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkw8uz2yl: /tmp/tmpkw8uz2yl.cpp:40: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    while(num!=0){\n        if(num % 2 == 0) even++;\n\
    \        else odd++;\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpq5vjbpdk: /tmp/tmpq5vjbpdk.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    if(num < 0)\n        num = num * -1;\n    while(num\
    \ != 0){\n        if(num % 2 == 0)\n            even++;\n        else\n      \
    \      odd++;\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpd6ns4exo: /tmp/tmpd6ns4exo.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    if (num < 0) {\n       \
    \ num = num * -1;\n    }\n    while (num) {\n        if (num % 2 == 0) {\n   \
    \         evenCount++;\n        } else {\n            oddCount++;\n        }\n\
    \        num = num / 10;\n    }\n    std::tuple<long, long> evenOddTuple = std::make_tuple(evenCount,\
    \ oddCount);\n    return evenOddTuple;\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpkjym6kzc: /tmp/tmpkjym6kzc.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  assert(num != 0);\n  long even_count = 0;\n  long odd_count = 0;\n  if (num\
    \ < 0) {\n    num = num * -1;\n  }\n  while (num != 0) {\n    int digit = num\
    \ % 10;\n    if (digit % 2 == 0) {\n      even_count += 1;\n    } else {\n   \
    \   odd_count += 1;\n    }\n    num = num / 10;\n  }\n  return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmph0tzwbue: /tmp/tmph0tzwbue.cpp:10: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `num != 0'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> tup;\n    long even_count = 0;\n    long odd_count\
    \ = 0;\n    std::string number = std::to_string(num);\n    for (int i = 0; i <\
    \ number.length(); i++) {\n        if (number[i] % 2 == 0) {\n            even_count++;\n\
    \        } else {\n            odd_count++;\n        }\n    }\n    tup = std::make_tuple(even_count,\
    \ odd_count);\n    return tup;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpte0q86x1: /tmp/tmpte0q86x1.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Write your code here.\n    long even=0,odd=0;\n    while(num!=0){\n  \
    \      if(num%2==0){\n            even++;\n        }\n        else{\n        \
    \    odd++;\n        }\n        num/=10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpckf52woy: /tmp/tmpckf52woy.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::tuple<long, long> result(0, 0);\n\tif (num < 0)\n\t\tnum = num * -1;\n\t\
    while (num > 0) {\n\t\tif (num % 2 == 0)\n\t\t\tstd::get<0>(result) += 1;\n\t\t\
    else\n\t\t\tstd::get<1>(result) += 1;\n\t\tnum = num / 10;\n\t}\n\treturn result;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp22z9vmmn: /tmp/tmp22z9vmmn.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even = 0, odd = 0;\n  while (num != 0) {\n    if (num % 2 == 0) {\n  \
    \    even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpe5k50xte: /tmp/tmpe5k50xte.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_cnt = 0;\n    long odd_cnt = 0;\n    while(num) {\n        if((num%10)%2\
    \ == 0) {\n            even_cnt++;\n        } else {\n            odd_cnt++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even_cnt, odd_cnt);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgn8v8g6d: /tmp/tmpgn8v8g6d.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even=0,odd=0;\n    while(num){\n        if(num%2==0)\n            even++;\n\
    \        else\n            odd++;\n        num/=10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6zvknvhd: /tmp/tmp6zvknvhd.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    return std::make_tuple(1, 2);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2pf6wmt4: /tmp/tmp2pf6wmt4.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num == 0)\n        return std::make_tuple(1, 0);\n    long odd = 0, even\
    \ = 0;\n    while(num != 0) {\n        if(num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \t// your code here\n}\nint main() {\n    auto candidate = even_odd_count;\n \
    \   assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpt_973l0k: /tmp/tmpt_973l0k.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even=0,odd=0;\n    if(num<0)\n    {\n        num=abs(num);\n    }\n\
    \    while(num!=0)\n    {\n        if(num%2==0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num=num/10;\n\
    \    }\n    return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpccz1ovx6: /tmp/tmpccz1ovx6.cpp:38: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long a = 0, b = 0;\n  while (num != 0) {\n    int r = num % 10;\n    if (r\
    \ % 2 == 0)\n      a++;\n    else\n      b++;\n    num /= 10;\n  }\n  return std::make_tuple(a,\
    \ b);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9bpsr_3e: /tmp/tmp9bpsr_3e.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even = 0, odd = 0;\n  long abs_num = std::abs(num);\n  while (abs_num\
    \ > 0) {\n    if (abs_num % 2 == 0) {\n      even++;\n    } else {\n      odd++;\n\
    \    }\n    abs_num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpamng_3ov: /tmp/tmpamng_3ov.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num == 0) return {1, 0};\n    else if(num < 0) return {1, 1};\n    int\
    \ e = 0, o = 0;\n    while(num != 0){\n        int d = num % 10;\n        if(d%2\
    \ == 0) e++;\n        else o++;\n        num /= 10;\n    }\n    return {e, o};\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgksb4owj: /tmp/tmpgksb4owj.cpp:27: int main(): Assertion `candidate((-345821))
    == (std::make_tuple(3, 3))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long count_even = 0;\n    long count_odd = 0;\n    if (num < 0) {\n     \
    \   num = -num;\n    }\n    while (num != 0) {\n        if (num % 2 == 0) {\n\
    \            count_even += 1;\n        } else {\n            count_odd += 1;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(count_even,\
    \ count_odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpvg09k4mg: /tmp/tmpvg09k4mg.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long temp=num,even=0,odd=0;\n    if(num<0)\n    {\n        num = -num;\n\
    \    }\n    while(num!=0)\n    {\n        int i = num%10;\n        if(i%2==0)\n\
    \        {\n            even++;\n        }\n        else\n        {\n        \
    \    odd++;\n        }\n        num = num/10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpmryfpmhn: /tmp/tmpmryfpmhn.cpp:39: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    while(num) {\n        if((num % 10) % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpsa32z7tv: /tmp/tmpsa32z7tv.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long abs_num = std::abs(num);\n    while (abs_num\
    \ > 0) {\n        if (abs_num % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        abs_num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp8sga4c_6: /tmp/tmp8sga4c_6.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> result;\n    int count = 0;\n    if (num == 0) {\n\
    \        count = 1;\n    }\n    else {\n        while (num != 0) {\n         \
    \   if (num % 2 == 0) {\n                count++;\n            }\n           \
    \ num = num / 10;\n        }\n    }\n    std::get<0>(result) = count;\n    std::get<1>(result)\
    \ = std::abs(std::to_string(num).length() - count);\n    return result;\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2e1d7gxl.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp2e1d7gxl.cpp:24:72: error: call of\
    \ overloaded \u2018abs(std::__cxx11::basic_string<char>::size_type)\u2019 is ambiguous\n\
    \   24 |     std::get<1>(result) = std::abs(std::to_string(num).length() - count);\n\
    \      |                                                                     \
    \   ^\nIn file included from /usr/include/c++/9/bits/std_abs.h:38,\n         \
    \        from /usr/include/c++/9/cmath:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp2e1d7gxl.cpp:2:\n/usr/include/stdlib.h:840:12:\
    \ note: candidate: \u2018int abs(int)\u2019\n  840 | extern int abs (int __x)\
    \ __THROW __attribute__ ((__const__)) __wur;\n      |            ^~~\nIn file\
    \ included from /usr/include/c++/9/cmath:47,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmp2e1d7gxl.cpp:2:\n/usr/include/c++/9/bits/std_abs.h:56:3:\
    \ note: candidate: \u2018long int std::abs(long int)\u2019\n   56 |   abs(long\
    \ __i) { return __builtin_labs(__i); }\n      |   ^~~\n/usr/include/c++/9/bits/std_abs.h:61:3:\
    \ note: candidate: \u2018long long int std::abs(long long int)\u2019\n   61 |\
    \   abs(long long __x) { return __builtin_llabs (__x); }\n      |   ^~~\n/usr/include/c++/9/bits/std_abs.h:71:3:\
    \ note: candidate: \u2018constexpr double std::abs(double)\u2019\n   71 |   abs(double\
    \ __x)\n      |   ^~~\n/usr/include/c++/9/bits/std_abs.h:75:3: note: candidate:\
    \ \u2018constexpr float std::abs(float)\u2019\n   75 |   abs(float __x)\n    \
    \  |   ^~~\n/usr/include/c++/9/bits/std_abs.h:79:3: note: candidate: \u2018constexpr\
    \ long double std::abs(long double)\u2019\n   79 |   abs(long double __x)\n  \
    \    |   ^~~\n"
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code here\n    int i = 0;\n    int o = 0;\n    int a = abs(num);\n\
    \    while(a>0){\n      int b = a%10;\n      if(b%2==0){\n        i++;\n     \
    \ }\n      else{\n        o++;\n      }\n      a/=10;\n    }\n    return std::make_tuple(i,o);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcsbe0xrt: /tmp/tmpcsbe0xrt.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // write your code here\n    // b[0] = even and b[1] = odd;\n    long b[2]\
    \ = {0, 0};\n    std::string s = std::to_string(num);\n    for(long i = 0; i <\
    \ s.length(); i++){\n        if(num >= 0){\n            if(std::stoi(s.substr(i,\
    \ 1)) % 2 == 0){\n                b[0] += 1;\n            }else{\n           \
    \     b[1] += 1;\n            }\n        }else{\n            if(std::stoi(s.substr(i,\
    \ 1)) % 2 == 0){\n                b[0] += 1;\n            }else{\n           \
    \     b[1] += 1;\n            }\n        }\n    }\n    return std::make_tuple(b[0],\
    \ b[1]);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::invalid_argument'\n\
    \  what():  stoi\n"
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Your code here.\n    int even_count = 0;\n    int odd_count = 0;\n   \
    \ if(num == 0){\n        even_count++;\n    }\n    else if(num < 0){\n       \
    \ even_count++;\n        num = -num;\n    }\n    while(num > 0){\n        int\
    \ r = num % 10;\n        if(r % 2 == 0){\n            even_count++;\n        }\n\
    \        else{\n            odd_count++;\n        }\n        num = num / 10;\n\
    \    }\n    return std::make_tuple(even_count, odd_count);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpyzgajhgz: /tmp/tmpyzgajhgz.cpp:35: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long x=0,y=0;\n  for(int i=0;i<=log10(num);i++)\n  {\n    int l=num/pow(10,i)%10;\n\
    \    if(l%2==0)\n    x++;\n    else\n    y++;\n  }\n  return std::make_tuple(x,y);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6lujqxa0.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmp6lujqxa0.cpp:13:24: error: invalid\
    \ operands of types \u2018double\u2019 and \u2018int\u2019 to binary \u2018operator%\u2019\
    \n   13 |     int l=num/pow(10,i)%10;\n      |           ~~~~~~~~~~~~~^~~\n  \
    \    |              |          |\n      |              double     int\n"
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    if(num < 0) num *= -1;\n    while(num > 0) {\n\
    \        if(num % 2 == 0) {\n            even++;\n        } else {\n         \
    \   odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8l1q1864: /tmp/tmp8l1q1864.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116195
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint even = 0, odd = 0;\n\twhile (num != 0) {\n\t\tint digit = num % 10;\n\t\t\
    if (digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum /= 10;\n\t\
    }\n\treturn std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_efj1c5m: /tmp/tmp_efj1c5m.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> result(0, 0);\n    std::tuple<long, long> it_result;\n\
    \    std::string snum = std::to_string(num);\n    for (int i = 0; i < snum.length();\
    \ i++) {\n        int digit = snum[i] - '0';\n        if (digit % 2 == 0) {\n\
    \            std::get<0>(result)++;\n        } else {\n            std::get<1>(result)++;\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6gt90aqb: /tmp/tmp6gt90aqb.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116200
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::tuple<long, long> ans = std::make_tuple(0, 0);\n\tint n;\n\tn = abs(num);\n\
    \twhile (n != 0) {\n\t\tint r = n % 10;\n\t\tn = n / 10;\n\t\tif (r % 2 == 0)\
    \ {\n\t\t\tstd::get<0>(ans)++;\n\t\t}\n\t\telse {\n\t\t\tstd::get<1>(ans)++;\n\
    \t\t}\n\t}\n\treturn ans;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpcbihkxyz: /tmp/tmpcbihkxyz.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // Your code here\n  long even_count=0,odd_count=0;\n  if(num==0) return std::make_tuple(1,0);\n\
    \  if(num<0) num*=-1;\n  while(num>0){\n      if(num%2==0) even_count++;\n   \
    \   else odd_count++;\n      num/=10;\n  }\n  return std::make_tuple(even_count,odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint even=0,odd=0;\n\twhile(num!=0){\n\t\tint x=num%10;\n\t\tif(x%2==0)\n\t\t\
    \teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum/=10;\n\t}\n\treturn std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpuvawb34p: /tmp/tmpuvawb34p.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint even_count=0,odd_count=0;\n\twhile(num!=0){\n\t\tint x=num%10;\n\t\tif(x%2==0)\
    \ even_count++;\n\t\telse odd_count++;\n\t\tnum/=10;\n\t}\n\treturn std::make_tuple(even_count,odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpfqeg3nx_: /tmp/tmpfqeg3nx_.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    if(num < 0)\n        num = abs(num);\n    while(num\
    \ != 0){\n        if(num % 2 == 0)\n            even++;\n        else\n      \
    \      odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpatr7viyh: /tmp/tmpatr7viyh.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint count1 = 0, count2 = 0;\n\twhile (num != 0) {\n\t\tif (num % 2 == 0) {\n\
    \t\t\tcount1++;\n\t\t}\n\t\telse {\n\t\t\tcount2++;\n\t\t}\n\t\tnum /= 10;\n\t\
    }\n\treturn std::make_tuple(count1, count2);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_h0zc64a: /tmp/tmp_h0zc64a.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // Your code here\n  std::tuple<long, long> res = std::make_tuple(0, 0);\n\
    \  if (num > 0) {\n    long even = 0;\n    long odd = 0;\n    while (num) {\n\
    \      if (num % 2 == 0)\n        even++;\n      else\n        odd++;\n      num\
    \ /= 10;\n    }\n    res = std::make_tuple(even, odd);\n  } else {\n    long even\
    \ = 0;\n    long odd = 0;\n    while (num) {\n      if (num % 2 == 0)\n      \
    \  even++;\n      else\n        odd++;\n      num /= 10;\n    }\n    res = std::make_tuple(even,\
    \ odd);\n  }\n  return res;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp2yww05uf: /tmp/tmp2yww05uf.cpp:46: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count = 0;\n    long odd_count = 0;\n    if (num < 0) {\n     \
    \   num = num * -1;\n    }\n    while (num) {\n        int digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even_count += 1;\n        } else {\n\
    \            odd_count += 1;\n        }\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even_count, odd_count);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpk4mv1bjf: /tmp/tmpk4mv1bjf.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even_digit_count = 0;\n    int odd_digit_count = 0;\n    while(num) {\n\
    \        int digit = num % 10;\n        if(digit % 2 == 0) {\n            even_digit_count++;\n\
    \        } else {\n            odd_digit_count++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even_digit_count, odd_digit_count);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpyyw9c7w5: /tmp/tmpyyw9c7w5.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long oddcount = 0;\n    long evencount = 0;\n    while(num)\n    {\n    \
    \    if(num%2==0)\n        {\n            evencount++;\n        }\n        else\n\
    \        {\n            oddcount++;\n        }\n        num = num/10;\n    }\n\
    \    std::tuple<long, long> t = std::make_tuple(evencount, oddcount);\n    return\
    \ t;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp9he1zjqn: /tmp/tmp9he1zjqn.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116201
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int odd=0,even=0;\n    if(num==0)\n        return std::make_tuple(1,0);\n\
    \    while(num!=0){\n        if(num%2==0)\n            even++;\n        else\n\
    \            odd++;\n        num=num/10;\n    }\n    return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116202
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> result;\n    long even_count = 0;\n    long odd_count\
    \ = 0;\n    while (num != 0) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even_count += 1;\n        } else {\n            odd_count\
    \ += 1;\n        }\n        num /= 10;\n    }\n    result = std::make_tuple(even_count,\
    \ odd_count);\n    return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpn5klmu0p: /tmp/tmpn5klmu0p.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116202
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  \tint c_even = 0, c_odd = 0;\n  \twhile(num > 0) {\n      if(num % 2 == 0)\
    \ c_even++;\n      else c_odd++;\n      num /= 10;\n    }\n  \treturn std::make_tuple(c_even,\
    \ c_odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_shryfo: /tmp/tmp6_shryfo.cpp:21: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  assert(num > 0);\n  std::tuple<long, long> result;\n  long even = 0;\n  long\
    \ odd = 0;\n  long r = 0;\n  while (num > 0) {\n    r = num % 10;\n    if (r %\
    \ 2 == 0)\n      even++;\n    else\n      odd++;\n    num = num / 10;\n  }\n \
    \ result = std::make_tuple(even, odd);\n  return result;\n}\nint main() {\n  \
    \  auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp0911cp34: /tmp/tmp0911cp34.cpp:10: std::tuple<long int, long int> even_odd_count(long
    int): Assertion `num > 0'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    bool isNegative = num < 0;\n    if (isNegative)\
    \ num *= -1;\n    while (num > 0) {\n        if (num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= 10;\n    }\n    if (isNegative)\
    \ {\n        if (even == 0)\n            odd++;\n        else\n            even++;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpz4yhrs2l: /tmp/tmpz4yhrs2l.cpp:31: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count = 0;\n    long odd_count = 0;\n    while(num != 0) {\n  \
    \      if((num % 10) % 2 == 0) {\n            even_count++;\n        } else {\n\
    \            odd_count++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even_count,\
    \ odd_count);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpn8rib1qx: /tmp/tmpn8rib1qx.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long e = 0, o = 0;\n  if (num < 0) num *= -1;\n  while (num > 0) {\n    int\
    \ cur = num % 10;\n    if (cur % 2 == 0) e++;\n    else o++;\n    num /= 10;\n\
    \  }\n  return std::make_tuple(e, o);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqb03lv00: /tmp/tmpqb03lv00.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code goes here.\n    int c[2]={0};\n    int f=0;\n    if(num<0)\n\
    \    {\n        num=abs(num);\n        f=1;\n    }\n    while(num>0)\n    {\n\
    \        if(num%2==0)\n        {\n            c[0]++;\n        }\n        else\n\
    \        {\n            c[1]++;\n        }\n        num=num/10;\n    }\n    if(f==1)\n\
    \    {\n        c[1]++;\n    }\n    return {c[0],c[1]};\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp9bq4jnj4: /tmp/tmp9bq4jnj4.cpp:39: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::tuple<long, long> count;\n  long even = 0, odd = 0;\n  while (num != 0)\
    \ {\n    if (abs(num % 10) % 2 == 0)\n      even++;\n    else\n      odd++;\n\
    \    num /= 10;\n  }\n  count = std::make_tuple(even, odd);\n  return count;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpk2t8i6sr: /tmp/tmpk2t8i6sr.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count = 0;\n    long odd_count = 0;\n    while(num){\n        int\
    \ rem = num%10;\n        if(rem%2==0){\n            even_count++;\n        }else{\n\
    \            odd_count++;\n        }\n        num = num/10;\n    }\n    return\
    \ std::make_tuple(even_count, odd_count);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1en18wpw: /tmp/tmp1en18wpw.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_count = 0;\n    long odd_count = 0;\n    if (num < 0)\n       \
    \ num = -num;\n    while (num > 0) {\n        int temp = num % 10;\n        if\
    \ (temp % 2 == 0)\n            even_count++;\n        else\n            odd_count++;\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even_count, odd_count);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgnuuq4h3: /tmp/tmpgnuuq4h3.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long x = 0, y = 0;\n    if(num < 0)\n        num = abs(num);\n    while(num\
    \ != 0){\n        if(num % 2 == 0)\n            x++;\n        else\n         \
    \   y++;\n        num /= 10;\n    }\n    std::tuple<long, long> ans = std::make_tuple(x,\
    \ y);\n    return ans;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5md_b7pe: /tmp/tmp5md_b7pe.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // your code here\n    int even_cnt = 0;\n    int odd_cnt = 0;\n    while(num\
    \ != 0) {\n        int last_digit = num % 10;\n        if(last_digit % 2 == 0)\n\
    \            even_cnt++;\n        else\n            odd_cnt++;\n        num /=\
    \ 10;\n    }\n    std::tuple<long, long> mytuple;\n    mytuple = std::make_tuple(even_cnt,\
    \ odd_cnt);\n    return mytuple;\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpq9yt2sng: /tmp/tmpq9yt2sng.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // your code goes here\n  long even=0,odd=0;\n  if(num==0)\n      return std::make_tuple(even,odd);\n\
    \  else\n  {\n      if(num>0)\n      {\n          while(num!=0)\n          {\n\
    \              if(num%2==0)\n                even++;\n              else\n   \
    \             odd++;\n              num=num/10;\n          }\n      }\n      else\n\
    \      {\n          while(num!=0)\n          {\n              if(num%2==0)\n \
    \               even++;\n              else\n                odd++;\n        \
    \      num=num/10;\n          }\n      }\n  }\n  return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmprrd9fy5w: /tmp/tmprrd9fy5w.cpp:50: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long odd_count = 0;\n  long even_count = 0;\n  while (num != 0) {\n    if (num\
    \ % 2 == 0) {\n      even_count++;\n    } else {\n      odd_count++;\n    }\n\
    \    num /= 10;\n  }\n  return std::make_tuple(even_count, odd_count);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr3twyyex: /tmp/tmpr3twyyex.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long evens = 0;\n    long odds = 0;\n    if (num < 0) {\n        num = std::abs(num);\n\
    \    }\n    while (num > 0) {\n        if (num % 2 == 0) {\n            evens++;\n\
    \        } else {\n            odds++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(evens, odds);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp1paea0dg: /tmp/tmp1paea0dg.cpp:34: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num<0)\n        num*=-1;\n    long even=0,odd=0;\n    while(num>0){\n\
    \        if(num%2==0)\n            even++;\n        else\n            odd++;\n\
    \        num/=10;\n    }\n    return std::make_tuple(even,odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpw7iwpect: /tmp/tmpw7iwpect.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long odd = 0, even = 0;\n  if (num == 0)\n    odd = 1;\n  else if (num < 0)\
    \ {\n    odd = 1;\n    num = abs(num);\n  }\n  while (num > 0) {\n    int dig\
    \ = num % 10;\n    if (dig % 2 == 0)\n      even++;\n    else\n      odd++;\n\
    \    num /= 10;\n  }\n  return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmphgpsjaoi: /tmp/tmphgpsjaoi.cpp:30: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  std::tuple<long, long> result = std::make_tuple(0, 0);\n  while (num != 0)\
    \ {\n    if (num % 2 == 0) {\n      std::get<0>(result)++;\n    } else {\n   \
    \   std::get<1>(result)++;\n    }\n    num /= 10;\n  }\n  return result;\n}\n\
    int main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpcs090e9h: /tmp/tmpcs090e9h.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long oddCount=0,evenCount=0;\n    while(num){\n        int rem=num%10;\n\
    \        if(rem%2==0)evenCount++;\n        else oddCount++;\n        num/=10;\n\
    \    }\n    return std::make_tuple(evenCount,oddCount);\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpzpjuda6l: /tmp/tmpzpjuda6l.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    std::tuple<long, long> result;\n    if (num\
    \ < 0)\n        num = abs(num);\n    if (num == 0) {\n        even = 1;\n    \
    \    result = std::make_tuple(even, odd);\n        return result;\n    }\n   \
    \ for (; num > 0; num /= 10) {\n        if (num % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n    }\n    result = std::make_tuple(even, odd);\n\
    \    return result;\n}\nint main() {\n    auto candidate = even_odd_count;\n \
    \   assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint e, o;\n\tstd::tie(e, o) = std::make_tuple(0, 0);\n\tif (num < 0) {\n\t\t\
    num = num * -1;\n\t}\n\twhile (num > 0) {\n\t\tif (num % 2 == 0) {\n\t\t\te +=\
    \ 1;\n\t\t}\n\t\telse {\n\t\t\to += 1;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\treturn\
    \ std::make_tuple(e, o);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5hvl4gc1: /tmp/tmp5hvl4gc1.cpp:35: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    while(num){\n        if(num%2==0) even++;\n \
    \       else odd++;\n        num/=10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp42wk6o9d: /tmp/tmp42wk6o9d.cpp:27: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int c = 0, c1 = 0;\n    while(num!=0){\n        if(num%2==0){\n         \
    \   c++;\n        }\n        else{\n            c1++;\n        }\n        num/=10;\n\
    \    }\n    return std::make_tuple(c, c1);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpvxxn03rj: /tmp/tmpvxxn03rj.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num < 0)\n        num *= -1;\n    long rem = 0, odd = 0, even = 0;\n \
    \   while(num != 0){\n        rem = num % 10;\n        if(rem % 2 == 0)\n    \
    \        even++;\n        else\n            odd++;\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmppuoao2wh: /tmp/tmppuoao2wh.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    std::tuple<long, long> t;\n    long even = 0, odd = 0;\n    while(num !=\
    \ 0) {\n        int digit = num % 10;\n        if(digit % 2 == 0)\n          \
    \  even++;\n        else\n            odd++;\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxjp4ab91: /tmp/tmpxjp4ab91.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even=0,odd=0;\n    while(num!=0){\n        if(num%2==0)\n          \
    \  even++;\n        else\n            odd++;\n        num/=10;\n    }\n    return\
    \ {even,odd};\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpizxi9vpa: /tmp/tmpizxi9vpa.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long odd = 0, even = 0;\n  while (num != 0) {\n    if (num % 2 == 0) {\n  \
    \    even++;\n    } else {\n      odd++;\n    }\n    num /= 10;\n  }\n  return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqgyqld43: /tmp/tmpqgyqld43.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint evenCount = 0;\n\tint oddCount = 0;\n\tif (num < 0)\n\t\tnum = num * -1;\n\
    \twhile (num > 0) {\n\t\tif (num % 2 == 0)\n\t\t\tevenCount++;\n\t\telse\n\t\t\
    \toddCount++;\n\t\tnum = num / 10;\n\t}\n\treturn std::make_tuple(evenCount, oddCount);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpfi1dzu7y: /tmp/tmpfi1dzu7y.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // write your code here\n    int p = 0, q = 0;\n    std::string str = std::to_string(num);\n\
    \    for(int i = 0; i < str.length(); i++)\n    {\n        if((str[i] - '0') %\
    \ 2 == 0)\n            p++;\n        else\n            q++;\n    }\n    return\
    \ std::make_tuple(p, q);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpp81l08au: /tmp/tmpp81l08au.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tint evenCount = 0;\n\tint oddCount = 0;\n\twhile (num) {\n\t\tif (num % 2 ==\
    \ 0) {\n\t\t\tevenCount++;\n\t\t}\n\t\telse {\n\t\t\toddCount++;\n\t\t}\n\t\t\
    num /= 10;\n\t}\n\treturn std::make_tuple(evenCount, oddCount);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpdlwzh_62: /tmp/tmpdlwzh_62.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // (std::make_tuple(long(1), long(2))) // return a tuple that has the number\
    \ of even and odd digits respectively.\n    long even = 0, odd = 0;\n    if(num\
    \ < 0) num = abs(num);\n    while(num){\n        if(num % 2 == 0) even++;\n  \
    \      else odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp_u4xowic: /tmp/tmp_u4xowic.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Write your code here.\n    std::string s = std::to_string(num);\n    long\
    \ even = 0;\n    long odd = 0;\n    for(char c : s){\n        if(!isdigit(c))\
    \ continue;\n        if((c - '0')%2==0)\n            even++;\n        else\n \
    \           odd++;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660116203
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // your code here\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_apz69p6: /tmp/tmp_apz69p6.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Write your code here\n    long c_odd = 0, c_even = 0;\n    while(num)\n\
    \    {\n        if(num % 2)\n            c_odd++;\n        else\n            c_even++;\n\
    \        num /= 10;\n    }\n    return {c_even, c_odd};\n}\nint main() {\n   \
    \ auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpcdk5na53: /tmp/tmpcdk5na53.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // assert(num != 0);\n\n    long even = 0;\n    long odd = 0;\n    if (num\
    \ < 0) {\n        num = num * -1;\n    }\n    while (num > 0) {\n        long\
    \ mod = num % 10;\n        if (mod % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpgpiypign: /tmp/tmpgpiypign.cpp:37: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even_cnt = 0;\n    long odd_cnt = 0;\n    long temp = num;\n    if (num\
    \ < 0) {\n        temp = -temp;\n    }\n    while (temp > 0) {\n        int rem\
    \ = temp % 10;\n        if (rem % 2 == 0) {\n            even_cnt++;\n       \
    \ } else {\n            odd_cnt++;\n        }\n        temp = temp / 10;\n   \
    \ }\n    return std::make_tuple(even_cnt, odd_cnt);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpl41nioch: /tmp/tmpl41nioch.cpp:36: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even_digits = 0;\n  long odd_digits = 0;\n  while (num > 0) {\n    if\
    \ (num % 2 == 0) {\n      even_digits++;\n    } else {\n      odd_digits++;\n\
    \    }\n    num /= 10;\n  }\n  return std::make_tuple(even_digits, odd_digits);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpqu9f2naf: /tmp/tmpqu9f2naf.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even=0,odd=0;\n    while(num!=0){\n        int digit=num%10;\n      \
    \  if(digit%2==0) even++;\n        else odd++;\n        num/=10;\n    }\n    return\
    \ std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp21k7f5m9: /tmp/tmp21k7f5m9.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    long num2 = num;\n    if(num2 < 0) num2 = num2\
    \ * -1;\n    while(num2 > 0) {\n        int r = num2 % 10;\n        if(r % 2 ==\
    \ 0) even++;\n        else odd++;\n        num2 = num2 / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpxe_7jzlv: /tmp/tmpxe_7jzlv.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long odd_count=0,even_count=0;\n    while(num){\n        int digit=num%10;\n\
    \        num/=10;\n        if(digit%2==0) even_count++;\n        else odd_count++;\n\
    \    }\n    return std::make_tuple(even_count,odd_count);\n}\nint main() {\n \
    \   auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmprc2a0t1w: /tmp/tmprc2a0t1w.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while(num) {\n        if((num % 10) % 2 == 0)\n\
    \            even++;\n        else\n            odd++;\n        num /= 10;\n \
    \   }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6bm0encb: /tmp/tmp6bm0encb.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    num = std::abs(num);\n    while(num > 0) {\n\
    \        int digit = num % 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        num /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp7b0wma8r: /tmp/tmp7b0wma8r.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    // Your code here.\n    int even = 0, odd = 0;\n    while(num != 0){\n  \
    \      int rem = num % 10;\n        if(rem % 2 == 0)\n            even++;\n  \
    \      else\n            odd++;\n        num /= 10;\n    }\n    std::tuple<long,\
    \ long> ans(even, odd);\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpaobh7m08: /tmp/tmpaobh7m08.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int count[2] = {0, 0};\n    while(num){\n        count[num % 2]++;\n    \
    \    num = num / 10;\n    }\n    return std::make_tuple(count[0], count[1]);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpxsy80wwv: /tmp/tmpxsy80wwv.cpp:20: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even=0,odd=0;\n  while(num){\n    if(num%2==0)\n      even++;\n    else\n\
    \      odd++;\n    num/=10;\n  }\n  return std::make_tuple(even,odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpk0a77vnn: /tmp/tmpk0a77vnn.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  return std::make_tuple(1L, 1L);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpoyklb758: /tmp/tmpoyklb758.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::tuple<long, long> tuple;\n\tlong number, even_count = 0, odd_count = 0;\n\
    \tif (num < 0) {\n\t\tnumber = num * -1;\n\t}\n\telse {\n\t\tnumber = num;\n\t\
    }\n\twhile (number != 0) {\n\t\tif ((number % 10) % 2 == 0) {\n\t\t\teven_count++;\n\
    \t\t}\n\t\telse {\n\t\t\todd_count++;\n\t\t}\n\t\tnumber = number / 10;\n\t}\n\
    \ttuple = std::make_tuple(even_count, odd_count);\n\treturn tuple;\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp86z3iojf: /tmp/tmp86z3iojf.cpp:39: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // start with default std::tuple<long, long> for zero\n  std::tuple<long, long>\
    \ even_odd_count = std::make_tuple(0, 0);\n  // If zero, return the default tuple\n\
    \  if (num == 0) {\n    return even_odd_count;\n  }\n  // Otherwise, follow the\
    \ algorithm\n  while (num != 0) {\n    int temp = num % 10;\n    if (temp % 2\
    \ == 0) {\n      // Add one to even element\n      std::get<0>(even_odd_count)\
    \ += 1;\n    } else {\n      // Add one to odd element\n      std::get<1>(even_odd_count)\
    \ += 1;\n    }\n    num /= 10;\n  }\n  return even_odd_count;\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpyzv9htuu: /tmp/tmpyzv9htuu.cpp:39: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  // your code here\n  long even=0,odd=0;\n  int count = 0;\n  if(num < 0) num\
    \ = -num;\n  while(num != 0){\n  \tcount++;\n  \tif(count % 2 == 0) even++;\n\
    \  \telse odd++;\n  \tnum = num / 10;\n  }\n  return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpd3ahpl3g: /tmp/tmpd3ahpl3g.cpp:29: int main(): Assertion `candidate((-2))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    if(num < 0) num = -num;\n    long even = 0, odd = 0;\n    while(num > 0)\
    \ {\n        if(num % 2 == 0)\n            even++;\n        else\n           \
    \ odd++;\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpfsacv5r6: /tmp/tmpfsacv5r6.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  return std::make_tuple(0L, 0L);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpkijgl47y: /tmp/tmpkijgl47y.cpp:14: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even=0,odd=0;\n    std::tuple<long, long> tup;\n    std::string str=std::to_string(num);\n\
    \    for(int i=0;i<str.length();i++){\n        if(str[i]%2==0){\n            even++;\n\
    \        }\n        else{\n            odd++;\n        }\n    }\n    tup=std::make_tuple(even,odd);\n\
    \    return tup;\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp714cx9dn: /tmp/tmp714cx9dn.cpp:27: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long odd = 0, even = 0;\n    while(num != 0) {\n        int digit = num %\
    \ 10;\n        if(digit % 2 == 0) even++;\n        else odd++;\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp5mnv69u_: /tmp/tmp5mnv69u_.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even=0,odd=0;\n    while(num!=0){\n        if(num%2 == 0)\n        \
    \    even++;\n        else\n            odd++;\n        num = num/10;\n    }\n\
    \    return std::make_tuple(even,odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpm4a5fa6f: /tmp/tmpm4a5fa6f.cpp:29: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tlong even_count=0,odd_count=0;\n\tstd::vector<int> v;\n\tv=get_digits(num);\n\
    \t// std::cout<<v.size()<<std::endl;\n\tfor(auto it=v.begin();it!=v.end();it++){\n\
    \t\tif((*it)%2==0){\n\t\t\teven_count++;\n\t\t}\n\t\telse{\n\t\t\todd_count++;\n\
    \t\t}\n\t}\n\treturn std::make_tuple(even_count,odd_count);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpubbn1hau.cpp: In function \u2018std::tuple<long int, long int>\
    \ even_odd_count(long int)\u2019:\n/tmp/tmpubbn1hau.cpp:12:4: error: \u2018get_digits\u2019\
    \ was not declared in this scope\n   12 |  v=get_digits(num);\n      |    ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660116204
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \  long even=0,odd=0;\n  int n=abs(num);\n  while(n>0){\n    if(n%2==0)\n    even++;\n\
    \    else\n    odd++;\n    n=n/10;\n  }\n  return std::make_tuple(even,odd);\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp7o6i4fhh: /tmp/tmp7o6i4fhh.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    int even = 0, odd = 0;\n    int flag = 1;\n    if(num < 0)\n    {\n     \
    \   num = -num;\n        flag = -1;\n    }\n    while(num > 0)\n    {\n      \
    \  int dig = num % 10;\n        if(dig % 2 == 0)\n            even++;\n      \
    \  else\n            odd++;\n        num /= 10;\n    }\n    if(flag == -1)\n \
    \       odd++;\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpt9_a2v8u: /tmp/tmpt9_a2v8u.cpp:33: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    if(num < 0) num *= -1;\n    while(num > 0) {\n\
    \        if(num % 2 == 0) even++;\n        else odd++;\n        num /= 10;\n \
    \   }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqdsdpkx7: /tmp/tmpqdsdpkx7.cpp:28: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    if(num < 0) num *= -1;\n    while(num > 0) {\n\
    \        if(num % 2 == 0) {\n            even++;\n        } else {\n         \
    \   odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpe4lji4x5: /tmp/tmpe4lji4x5.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \tstd::tuple<long, long> tuple(0, 0);\n\tlong rem;\n\twhile (num != 0) {\n\t\t\
    rem = num % 10;\n\t\tnum = num / 10;\n\t\tif (rem % 2 == 0) {\n\t\t\tstd::get<0>(tuple)++;\n\
    \t\t}\n\t\telse {\n\t\t\tstd::get<1>(tuple)++;\n\t\t}\n\t}\n\treturn tuple;\n\
    }\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpwon0tycc: /tmp/tmpwon0tycc.cpp:33: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116205

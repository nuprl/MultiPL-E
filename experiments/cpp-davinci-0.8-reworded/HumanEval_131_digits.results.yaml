language: cpp
name: HumanEval_131_digits
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    std::stringstream ss;\n \
    \   ss << n;\n    std::string str = ss.str();\n    long product = 1;\n    for\
    \ (int i = 0; i < str.length(); i++) {\n        char c = str[i];\n        int\
    \ digit = c - '0';\n        if (digit % 2 == 1) {\n            product *= digit;\n\
    \        }\n    }\n    return product;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpghwddf5f: /tmp/tmpghwddf5f.cpp:34: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int prod = 1;\n    while(n\
    \ > 0) {\n        if(n % 2 != 0) {\n            prod *= n % 10;\n        }\n \
    \       n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpovefpmgu: /tmp/tmpovefpmgu.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  int digits = 0;\n  int product\
    \ = 1;\n  while (n > 0) {\n    int digit = n % 10;\n    if (digit % 2 == 1) {\n\
    \      product *= digit;\n    }\n    n /= 10;\n  }\n  return product;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmptz9t2n05: /tmp/tmptz9t2n05.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int prod = 1;\n    while(n>0){\n\
    \        int digit = n%10;\n        if(digit%2!=0){\n            prod *= digit;\n\
    \        }\n        n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjdbc448n: /tmp/tmpjdbc448n.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122862
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong p = 1;\n\twhile (n > 0)\
    \ {\n\t\tlong d = n % 10;\n\t\tif (d % 2 != 0)\n\t\t\tp *= d;\n\t\tn /= 10;\n\t\
    }\n\treturn p;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmppw3kr_qw: /tmp/tmppw3kr_qw.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n == 0) return 0;\n \
    \   long r = n % 10;\n    if (r % 2 == 0) {\n        r = 0;\n    }\n    return\
    \ r + digits(n / 10);\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp5u74yfsx: /tmp/tmp5u74yfsx.cpp:25: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long sum = 1;\n    while\
    \ (n > 0) {\n        long rem = n % 10;\n        if (rem % 2 != 0) {\n       \
    \     sum *= rem;\n        }\n        n /= 10;\n    }\n    return sum;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpk4uh8s4r: /tmp/tmpk4uh8s4r.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int odd = 1;\n    while (n\
    \ > 0) {\n        int last = n % 10;\n        if (last % 2 == 1) {\n         \
    \   odd *= last;\n        }\n        n /= 10;\n    }\n    return odd;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp_q8def8m: /tmp/tmp_q8def8m.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        long last_digit = n % 10;\n        if (last_digit % 2 !=\
    \ 0) {\n            res *= last_digit;\n        }\n        n /= 10;\n    }\n \
    \   return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp94pgai5z: /tmp/tmp94pgai5z.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong i = n;\n\tlong product\
    \ = 1;\n\twhile (i > 0) {\n\t\tlong lastDigit = i % 10;\n\t\tif (lastDigit % 2\
    \ != 0) {\n\t\t\tproduct *= lastDigit;\n\t\t}\n\t\ti /= 10;\n\t}\n\treturn product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp6x4ozn7_: /tmp/tmp6x4ozn7_.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  while\
    \ (n > 0) {\n    long digit = n % 10;\n    if (digit % 2 != 0) {\n      product\
    \ *= digit;\n    }\n    n /= 10;\n  }\n  return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8wp10k_d: /tmp/tmp8wp10k_d.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  while\
    \ (n > 0) {\n    long digit = n % 10;\n    if (digit % 2 != 0) {\n      product\
    \ *= digit;\n    }\n    n /= 10;\n  }\n  return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8wp10k_d: /tmp/tmp8wp10k_d.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    long\
    \ counter = 0;\n    while (n > 0) {\n        long temp = n % 10;\n        if (temp\
    \ % 2 != 0) {\n            product *= temp;\n            counter++;\n        }\n\
    \        n /= 10;\n    }\n    if (counter == 0) {\n        return 0;\n    }\n\
    \    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long odd_product = 1;\n \
    \   while (n != 0) {\n        if (n % 2 != 0)\n            odd_product *= n %\
    \ 10;\n        n /= 10;\n    }\n    return odd_product;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpe0kx2i71: /tmp/tmpe0kx2i71.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  int d = n % 10;\n  if (n ==\
    \ 0) {\n    return 0;\n  }\n  if (d % 2 != 0) {\n    return digits(n / 10) * d;\n\
    \  }\n  return digits(n / 10);\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp7c21hzkp: /tmp/tmp7c21hzkp.cpp:24: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 != 0) {\n            result *= n % 10;\n      \
    \  }\n        n /= 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpd59ngve1: /tmp/tmpd59ngve1.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  std::string str = std::to_string(n);\n\
    \  long prod = 1;\n  for (int i = 0; i < str.length(); i++) {\n    char ch = str[i];\n\
    \    if (ch % 2 == 1) {\n      prod *= (ch - '0');\n    }\n  }\n  return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp_i4_offy: /tmp/tmp_i4_offy.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long sum = 1;\n  while (n !=\
    \ 0) {\n    long last = n % 10;\n    if (last % 2 != 0) {\n      sum *= last;\n\
    \    }\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpi3y36hph: /tmp/tmpi3y36hph.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    assert(n > 0);\n    int product\
    \ = 1;\n    for (int i = 10; n > 0; n /= 10) {\n        if (n % i % 2 != 0)\n\
    \            product *= n % i;\n    }\n    return product;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjr51efw0: /tmp/tmpjr51efw0.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    assert(n > 0);\n    long\
    \ product = 1;\n    while (n > 0) {\n        if (n % 2 != 0) {\n            product\
    \ *= n % 10;\n        }\n        n /= 10;\n    }\n    return product;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp8enek4x0: /tmp/tmp8enek4x0.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  while\
    \ (n != 0) {\n    long digit = n % 10;\n    if (digit % 2 != 0) {\n      product\
    \ *= digit;\n    }\n    n /= 10;\n  }\n  return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmppu0gll1c: /tmp/tmppu0gll1c.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long result = 1;\n  while (n)\
    \ {\n    int digit = n % 10;\n    if (digit % 2 == 1) {\n      result *= digit;\n\
    \    }\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpr43g55y9: /tmp/tmpr43g55y9.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tif (n < 10 && n % 2 != 0) {\n\
    \t\treturn n;\n\t}\n\telse if (n < 10 && n % 2 == 0) {\n\t\treturn 0;\n\t}\n\t\
    else {\n\t\tlong remainder = n % 10;\n\t\tn = n / 10;\n\t\tif (remainder % 2 !=\
    \ 0) {\n\t\t\treturn remainder * digits(n);\n\t\t}\n\t\telse {\n\t\t\treturn digits(n);\n\
    \t\t}\n\t}\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n == 0) {\n    return 0;\n\
    \  } else {\n    int digit = n % 10;\n    if (digit % 2 == 0) {\n      return\
    \ digits(n / 10);\n    } else {\n      return digit * digits(n / 10);\n    }\n\
    \  }\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp2j565t6a: /tmp/tmp2j565t6a.cpp:26: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n < 0) {\n        n =\
    \ n * -1;\n    }\n    std::vector<int> numbers;\n    int result = 1;\n    while\
    \ (n != 0) {\n        numbers.push_back(n % 10);\n        n = n / 10;\n    }\n\
    \    for (int i = 0; i < numbers.size(); i++) {\n        if (numbers[i] % 2 !=\
    \ 0) {\n            result = result * numbers[i];\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp7kwy4irj: /tmp/tmp7kwy4irj.cpp:37: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long r = 1;\n  while (n) {\n\
    \    if (n % 2) {\n      r *= n % 10;\n    }\n    n /= 10;\n  }\n  return r;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp0gkc7p1s: /tmp/tmp0gkc7p1s.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long b = 1;\n  while (n > 0)\
    \ {\n    if (n % 2 != 0) {\n      b *= n % 10;\n    }\n    n /= 10;\n  }\n  return\
    \ b;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpxep6r62t: /tmp/tmpxep6r62t.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  for (int\
    \ i = 10; n > 0; n /= 10) {\n    long d = n % i;\n    if (d % 2 != 0) {\n    \
    \  product *= d;\n    }\n  }\n  return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpcqykgcvm: /tmp/tmpcqykgcvm.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  while\
    \ (n != 0) {\n    long digit = n % 10;\n    if (digit % 2 != 0) {\n      product\
    \ *= digit;\n    }\n    n /= 10;\n  }\n  return product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmppu0gll1c: /tmp/tmppu0gll1c.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong m = 1;\n\twhile (n > 0)\
    \ {\n\t\tif (n % 2 != 0) {\n\t\t\tm *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn\
    \ m;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpdygdyunr: /tmp/tmpdygdyunr.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n == 0) return 0;\n \
    \   int digit = n % 10;\n    if (digit % 2 == 0) {\n        return digits(n /\
    \ 10);\n    } else {\n        return digits(n / 10) * digit;\n    }\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmps7onoafb: /tmp/tmps7onoafb.cpp:23: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long prod = 1;\n  long r;\n\
    \  while (n > 0) {\n    r = n % 10;\n    if (r % 2 != 0) {\n      prod *= r;\n\
    \    }\n    n /= 10;\n  }\n  return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpdx_8fq9p: /tmp/tmpdx_8fq9p.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long x = 1;\n    while (n\
    \ > 0) {\n        if (n % 2 == 1) {\n            x *= n % 10;\n        }\n   \
    \     n /= 10;\n    }\n    return x;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp47n4h5dn: /tmp/tmp47n4h5dn.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong product = 1;\n\twhile\
    \ (n > 0) {\n\t\tif (n % 2 != 0)\n\t\t\tproduct *= n % 10;\n\t\tn /= 10;\n\t}\n\
    \treturn product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpy0f71601: /tmp/tmpy0f71601.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 != 0) {\n   \
    \         product *= digit;\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpj9nqaq2e: /tmp/tmpj9nqaq2e.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122864
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // Insert your code here.\n\
    \  int prod = 1;\n  while(n>0){\n    int digit = n%10;\n    if(digit%2!=0){\n\
    \      prod*=digit;\n    }\n    n/=10;\n  }\n  return prod;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9siz5yd2: /tmp/tmp9siz5yd2.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int prod = 1;\n    while(n\
    \ > 0) {\n        int digit = n % 10;\n        if(digit % 2 == 1) {\n        \
    \    prod *= digit;\n        }\n        n /= 10;\n    }\n    return prod;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp5e8119l0: /tmp/tmp5e8119l0.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n==0) {\n    return 0;\n\
    \  }\n  if (n%2!=0) {\n    return (n%10)*digits(n/10);\n  }\n  return digits(n/10);\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpwzrzl4sn: /tmp/tmpwzrzl4sn.cpp:23: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong product = 1;\n\twhile\
    \ (n != 0) {\n\t\tif (n % 2 != 0) {\n\t\t\tproduct *= n % 10;\n\t\t}\n\t\tn /=\
    \ 10;\n\t}\n\treturn product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmptrv_fmf8: /tmp/tmptrv_fmf8.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long result = 1;\n  while (n\
    \ > 0) {\n    long cur_digit = n % 10;\n    if (cur_digit % 2 != 0) {\n      result\
    \ *= cur_digit;\n    }\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9yqyk0n7: /tmp/tmp9yqyk0n7.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tint odd_product = 1;\n\twhile\
    \ (n) {\n\t\tint last_digit = n % 10;\n\t\tif (last_digit % 2 != 0) {\n\t\t\t\
    odd_product *= last_digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn odd_product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpk06z30dr: /tmp/tmpk06z30dr.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong temp = n;\n\tlong odd_digits\
    \ = 1;\n\tlong digit;\n\twhile (temp > 0) {\n\t\tdigit = temp % 10;\n\t\tif (digit\
    \ % 2 != 0) {\n\t\t\todd_digits *= digit;\n\t\t}\n\t\ttemp /= 10;\n\t}\n\treturn\
    \ odd_digits;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp8qrjrjjc: /tmp/tmp8qrjrjjc.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // Your code here\n  int count\
    \ = 0;\n  int oddCount = 0;\n  int product = 1;\n  if(n < 0){\n    return 0;\n\
    \  }\n  for(int i = 0; n > 0; n = n/10){\n    int digit = n % 10;\n    count++;\n\
    \    if(digit % 2 != 0){\n      oddCount++;\n      product *= digit;\n    }\n\
    \  }\n  if(oddCount == 0){\n    return 0;\n  }\n  return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122863
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // YOUR CODE HERE\n  long count=0;\n\
    \  long product=1;\n  while(n>0){\n    if((n%10)%2!=0){\n      product=product*(n%10);\n\
    \      count++;\n    }\n    n=n/10;\n  }\n  if(count==0){\n    return 0;\n  }\n\
    \  else{\n    return product;\n  }\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 == 1) {\n   \
    \         prod *= digit;\n        }\n        n /= 10;\n    }\n    return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpg2xe940i: /tmp/tmpg2xe940i.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong prod = 1;\n\tif (n ==\
    \ 0)\n\t\treturn 0;\n\twhile (n) {\n\t\tif (n % 2 != 0)\n\t\t\tprod *= n % 10;\n\
    \t\tn /= 10;\n\t}\n\treturn prod;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp5jb621ld: /tmp/tmp5jb621ld.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    for\
    \ (long x = n; x > 0; x /= 10) {\n        long d = x % 10;\n        if (d % 2\
    \ != 0) {\n            result *= d;\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpeks59mgc: /tmp/tmpeks59mgc.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // your code here\n    long\
    \ product=1;\n    if(n==0)return 0;\n    while(n>0){\n        if(n%2==1)product*=(n%10);\n\
    \        n/=10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpxezedyww: /tmp/tmpxezedyww.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long digit=1;\n  while(n>0){\n\
    \    int x=n%10;\n    if(x%2!=0){\n      digit*=x;\n    }\n    n/=10;\n  }\n \
    \ return digit;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpcud0xjsz: /tmp/tmpcud0xjsz.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122865
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 != 0) {\n   \
    \         prod *= digit;\n        }\n        n /= 10;\n    }\n    return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpbsx49c2y: /tmp/tmpbsx49c2y.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122865
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  int res = 1;\n  while (n) {\n\
    \    int dig = n % 10;\n    n /= 10;\n    if (dig % 2) res *= dig;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpdbyraqnh: /tmp/tmpdbyraqnh.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    while\
    \ (n > 0) {\n        long d = n % 10;\n        if (d % 2 != 0) prod *= d;\n  \
    \      n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpect95pd8: /tmp/tmpect95pd8.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n == 0) return 0;\n \
    \   int res = 1;\n    while (n != 0) {\n        int last = n % 10;\n        if\
    \ (last % 2 != 0) res *= last;\n        n /= 10;\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpcq1qy2tj: /tmp/tmpcq1qy2tj.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product=1;\n    while(n>0){\n\
    \        if(n%2!=0){\n            product*=(n%10);\n        }\n        n/=10;\n\
    \    }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp2ni48dws: /tmp/tmp2ni48dws.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product=1;\n  while(n>0){\n\
    \    long rem=n%10;\n    if(rem%2!=0){\n      product*=rem;\n    }\n    n/=10;\n\
    \  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmphp7rrrmx: /tmp/tmphp7rrrmx.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  return 0;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9ov2k2i0: /tmp/tmp9ov2k2i0.cpp:17: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    long\
    \ remain;\n    while (n > 0) {\n        remain = n % 10;\n        if (remain %\
    \ 2 != 0) {\n            product *= remain;\n        }\n        n /= 10;\n   \
    \ }\n    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp9l2b4ks8: /tmp/tmp9l2b4ks8.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long long sum = 1;\n  while\
    \ (n > 0) {\n    if (n % 2 != 0) {\n      sum *= n % 10;\n    }\n    n /= 10;\n\
    \  }\n  return sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpvrxvsl8i: /tmp/tmpvrxvsl8i.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long p=1;\n  if(n==0)\n   \
    \ return 0;\n  while(n!=0){\n    long r=n%10;\n    if(r%2!=0)\n      p=p*r;\n\
    \    n=n/10;\n  }\n  return p;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmprelw5vxb: /tmp/tmprelw5vxb.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int mult = 1;\n    while\
    \ (n > 0) {\n        int ld = n % 10;\n        if (ld % 2 == 1) {\n          \
    \  mult *= ld;\n        }\n        n /= 10;\n    }\n    return mult;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpufl811_e: /tmp/tmpufl811_e.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    while\
    \ (n > 0) {\n        if (n % 2 != 0) {\n            result *= n % 10;\n      \
    \  }\n        n /= 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpd59ngve1: /tmp/tmpd59ngve1.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    std::vector<int> v;\n   \
    \ long sum = 0;\n    while (n > 0) {\n        v.push_back(n % 10);\n        n\
    \ /= 10;\n    }\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i] %\
    \ 2 == 1) {\n            sum += v[i];\n        }\n    }\n    return sum;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpuylmjodb: /tmp/tmpuylmjodb.cpp:31: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long result = 1;\n  // 0. Handle\
    \ n == 0 and n == 1.\n  if (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n \
    \   return 1;\n  }\n  // 1. Keep dividing n by 10 until you are left with less\
    \ than 10.\n  while (n > 9) {\n    long remainder = n % 10;\n    // 2. If the\
    \ remainder is odd, multiply it with result.\n    if (remainder % 2 != 0) {\n\
    \      result *= remainder;\n    }\n    // 3. Divide n by 10.\n    n /= 10;\n\
    \  }\n  // 4. Check whether n is odd or even.\n  if (n % 2 != 0) {\n    result\
    \ *= n;\n  }\n  return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9ialjl7q: /tmp/tmp9ialjl7q.cpp:45: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long odd = 1;\n  while (n >\
    \ 0) {\n    long digit = n % 10;\n    if (digit % 2 == 1) {\n      odd *= digit;\n\
    \    }\n    n /= 10;\n  }\n  return odd;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpxy2vjj0h: /tmp/tmpxy2vjj0h.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n <= 0) {\n        return\
    \ 0;\n    }\n    if (n % 2 == 1) {\n        return n % 10 * digits(n / 10);\n\
    \    }\n    return digits(n / 10);\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2zoc8c9l: /tmp/tmp2zoc8c9l.cpp:23: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  std::vector<int> vect;\n  long\
    \ sum = 1;\n  while (n > 0) {\n    int temp = n % 10;\n    if (temp % 2 != 0)\
    \ {\n      vect.push_back(temp);\n    }\n    n = n / 10;\n  }\n  for (int i =\
    \ 0; i < vect.size(); i++) {\n    sum = sum * vect[i];\n  }\n  return sum;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpmmk5qbl2: /tmp/tmpmmk5qbl2.cpp:35: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n) {\n        long last = n % 10;\n        if (last % 2 == 1) {\n         \
    \   product *= last;\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpo5aubcts: /tmp/tmpo5aubcts.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long lastDigit, result =\
    \ 1;\n    while (n > 0) {\n        lastDigit = n % 10;\n        if (lastDigit\
    \ % 2 != 0) {\n            result *= lastDigit;\n        }\n        n /= 10;\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n  \
    \  assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpkcli71ut: /tmp/tmpkcli71ut.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n < 0) {\n    n = -n;\n\
    \  }\n  long sum = 1;\n  while (n > 0) {\n    long digit = n % 10;\n    if (digit\
    \ % 2 != 0) {\n      sum *= digit;\n    }\n    n /= 10;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpiov2su1j: /tmp/tmpiov2su1j.cpp:34: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long oddDigitsProduct = 1;\n\
    \  long rem;\n  while (n > 0) {\n    rem = n % 10;\n    if (rem % 2 == 1) {\n\
    \      oddDigitsProduct *= rem;\n    }\n    n /= 10;\n  }\n  return oddDigitsProduct;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpmeedv58o: /tmp/tmpmeedv58o.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long sum=1;\n  while(n){\n\
    \    if(n%2){\n      sum *= (n%10);\n    }\n    n /= 10;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpy44qd9u4: /tmp/tmpy44qd9u4.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong prod = 1;\n\tlong digit;\n\
    \twhile (n > 0) {\n\t\tdigit = n % 10;\n\t\tif (digit % 2 == 1) {\n\t\t\tprod\
    \ *= digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn prod;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmptedjuxks: /tmp/tmptedjuxks.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // set sign to record the\
    \ sign of the number\n    int sign = 1;\n    if (n < 0) {\n        n = n * -1;\n\
    \        sign = -1;\n    }\n    long odd_product = 1;\n    // initialize boolean\
    \ flag to false\n    bool is_odd = false;\n    while (n > 0) {\n        int d\
    \ = n % 10;\n        if (d % 2 != 0) {\n            is_odd = true;\n         \
    \   odd_product *= d;\n        }\n        n = n / 10;\n    }\n    // take the\
    \ sign into account\n    return odd_product * sign;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpmk26ttrr: /tmp/tmpmk26ttrr.cpp:41: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long prod = 1;\n  while (n\
    \ > 0) {\n    long d = n % 10;\n    if (d % 2 != 0) {\n      prod *= d;\n    }\n\
    \    n /= 10;\n  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpb9y1ia07: /tmp/tmpb9y1ia07.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    while\
    \ (n > 0) {\n        long r = n % 10;\n        if (r % 2 == 1) prod *= r;\n  \
    \      n /= 10;\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpuhghp_x0: /tmp/tmpuhghp_x0.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\t// Initialize product.\n\t\
    long product = 1;\n\t// While n is greater than 0, we'll check if the rightmost\
    \ digit is odd.\n\t// If so, we'll multiply it with product.\n\t// We'll divide\
    \ n by 10 to remove the rightmost digit.\n\twhile (n > 0) {\n\t\tif (n % 2 !=\
    \ 0) {\n\t\t\tproduct *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpg0dry_e6: /tmp/tmpg0dry_e6.cpp:34: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n <= 0) return 0;\n \
    \   long last_digit = n % 10;\n    return last_digit % 2 == 0 ? digits(n / 10)\
    \ : last_digit * digits(n / 10);\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmppuh1x9oo: /tmp/tmppuh1x9oo.cpp:19: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    for (long\
    \ x = n; x != 0; x /= 10) {\n        if (x % 2 == 1) {\n            prod *= x\
    \ % 10;\n        }\n    }\n    return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmps98_t1cd: /tmp/tmps98_t1cd.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long result = 1;\n  while (n\
    \ > 0) {\n    long lastDigit = n % 10;\n    if (lastDigit % 2 != 0) {\n      result\
    \ *= lastDigit;\n    }\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9uumi_bf: /tmp/tmp9uumi_bf.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  //Your code here\n  long a\
    \ = 0;\n  while(n > 0){\n    int x = n % 10;\n    if(x%2 != 0){\n      a = x *\
    \ a;\n    }\n    n = n / 10;\n  }\n  return a;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpg0wls_5q: /tmp/tmpg0wls_5q.cpp:26: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 != 0)\n     \
    \       product *= digit;\n        n /= 10;\n    }\n    return product;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpaalg5i4h: /tmp/tmpaalg5i4h.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // Your code here\n  long ans\
    \ = 1;\n  while(n>0){\n    if(n%2){\n      ans *= n%10;\n    }\n    n /= 10;\n\
    \  }\n  return ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp49m6720e: /tmp/tmp49m6720e.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // your code here\n  long prod\
    \ = 1;\n  while(n > 0){\n    long curr = n % 10;\n    if(curr % 2 != 0){\n   \
    \   prod *= curr;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpeozy76vp: /tmp/tmpeozy76vp.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tif (n < 10) {\n\t\tif (n %\
    \ 2 != 0) {\n\t\t\treturn n;\n\t\t}\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}\n\
    \telse {\n\t\tif (n % 2 != 0) {\n\t\t\treturn n % 10 * digits(n / 10);\n\t\t}\n\
    \t\telse {\n\t\t\treturn digits(n / 10);\n\t\t}\n\t}\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    while\
    \ (n > 0) {\n        long ld = n % 10;\n        if (ld % 2 != 0) {\n         \
    \   result *= ld;\n        }\n        n /= 10;\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpc60h8lf1: /tmp/tmpc60h8lf1.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // your code here\n    int\
    \ answer = 1;\n    while(n != 0){\n      int temp = n % 10;\n      if(temp % 2\
    \ != 0){\n        answer *= temp;\n      }\n      n /= 10;\n    }\n    return\
    \ answer;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpvr7fv8ue: /tmp/tmpvr7fv8ue.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n == 0) {\n        return\
    \ 0;\n    }\n    long ans = 0;\n    if (n % 2 == 1) {\n        ans = n % 10;\n\
    \    }\n    return ans + 10 * digits(n / 10);\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmps7yjgb9x: /tmp/tmps7yjgb9x.cpp:25: int main(): Assertion `candidate((54))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long ans = 1;\n  while (n >\
    \ 0) {\n    int digit = n % 10;\n    if (digit % 2 != 0)\n      ans *= digit;\n\
    \    n /= 10;\n  }\n  return ans;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp3xs51ck8: /tmp/tmp3xs51ck8.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // take out the last digit\n\
    \  // if it's odd multiply it with the result\n  // divide the number by 10\n\
    \  // repeat\n\n  // take out the last digit\n  // add it to the result\n  //\
    \ multiply the result by 10\n  // repeat\n\n  // take out the last digit\n  //\
    \ add it to the result\n  // divide the number by 10\n  // repeat\n\n  // take\
    \ out the last digit\n  // add it to the result\n  // divide the number by 10\n\
    \  // repeat\n\n  // take out the last digit\n  // add it to the result\n  //\
    \ divide the number by 10\n  // repeat\n\n  // take out the last digit\n  // add\
    \ it to the result\n  // divide the number by 10\n  // repeat\n\n  // take out\
    \ the last digit\n  // add it to the result\n  // divide the number by 10\n  //\
    \ repeat\n\n  // take out the last digit\n  // add it to the result\n  // divide\
    \ the number by 10\n  // repeat\n\n  // take out the last digit\n  // add it to\
    \ the result\n  // divide the number by 10\n  // repeat\n\n  // take out the last\
    \ digit\n  // add it to the result\n  // divide the number by 10\n  // repeat\n\
    \n  // take out the last digit\n  // add it to the result\n  // divide the number\
    \ by 10\n  // repeat\n\n  // take out the last digit\n  // add it to the result\n\
    \  // divide the number by 10\n  // repeat\n\n  // take out the last digit\n \
    \ // add it to the result\n  // divide the number by 10\n  // repeat\n\n  // take\
    \ out the last digit\n  // add it to the result\n  // divide the number by 10\n\
    \  // repeat\n\n  // take out the last digit\n  // add it to the result\n  //\
    \ divide the number by 10\n  // repeat\n\n  // take out the last digit\n  // add\
    \ it to the result\n  // divide the number by 10\n  // repeat\n\n  // take out\
    \ the last digit\n  // add it to the result\n  // divide the number by 10\n  //\
    \ repeat\n\n  // take out the last digit\n  // add it to the result\n  // divide\
    \ the number by 10\n  // repeat\n\n  // take\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjufex9g9: /tmp/tmpjufex9g9.cpp:107: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n < 10) {\n    if (n %\
    \ 2 == 0)\n      return 0;\n    else\n      return n;\n  }\n  long ans = 1;\n\
    \  while (n > 0) {\n    if (n % 2 != 0)\n      ans *= n % 10;\n    n /= 10;\n\
    \  }\n  return ans;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp5usu9r5r: /tmp/tmp5usu9r5r.cpp:35: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong product = 1;\n\twhile\
    \ (n > 0) {\n\t\tif (n % 2 == 1) {\n\t\t\tproduct *= n % 10;\n\t\t}\n\t\tn /=\
    \ 10;\n\t}\n\treturn product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp4y0kb0s9: /tmp/tmp4y0kb0s9.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long res = 1;\n  while (n >\
    \ 0) {\n    if (n % 2 != 0)\n      res *= n % 10;\n    n /= 10;\n  }\n  return\
    \ res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp2e2j928q: /tmp/tmp2e2j928q.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    //\
    \ your code here\n    int digit = 0;\n    long rem = 0;\n    while(n > 0){\n \
    \       rem = n % 10;\n        if(rem % 2 != 0){\n            result *= rem;\n\
    \        }\n        n /= 10;\n    }\n    return result;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpxnxlg51g: /tmp/tmpxnxlg51g.cpp:34: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // Declare a variable to\
    \ hold the cumulative total.\n    long total = 1;\n    // Declare a variable to\
    \ hold the current digit.\n    long digit;\n    // Continue while n is greater\
    \ than 0.\n    while (n > 0) {\n        // Get the current digit by modulo dividing\
    \ by 10.\n        digit = n % 10;\n        // If the digit is odd...\n       \
    \ if (digit % 2 != 0) {\n            // Multiply it with the cumulative total.\n\
    \            total *= digit;\n        }\n        // Divide n by 10 to move on\
    \ to the next digit.\n        n /= 10;\n    }\n    // Return the cumulative total.\n\
    \    return total;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmph8ouvt3x: /tmp/tmph8ouvt3x.cpp:40: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long r = 1;\n    while (n)\
    \ {\n        if (n % 2) {\n            r *= n % 10;\n        }\n        n /= 10;\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp2e5pv6v8: /tmp/tmp2e5pv6v8.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int count = 0;\n    while(n\
    \ > 0){\n        int digit = n % 10;\n        if(digit % 2 != 0){\n          \
    \  if(count == 0){\n                count = digit;\n            }\n          \
    \  else{\n                count *= digit;\n            }\n        }\n        n\
    \ /= 10;\n    }\n    return count;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122868
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  assert(n > 0);\n  int sum =\
    \ 1;\n  for (; n != 0; n /= 10) {\n    int i = n % 10;\n    if (i % 2 != 0) {\n\
    \      sum *= i;\n    }\n  }\n  return sum;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpyiz2swpa: /tmp/tmpyiz2swpa.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122868
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long prod = 1;\n  while (n\
    \ > 0) {\n    long digit = n % 10;\n    if (digit % 2 == 1) {\n      prod *= digit;\n\
    \    }\n    n /= 10;\n  }\n  return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp99gai7wx: /tmp/tmp99gai7wx.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int prod = 1;\n    int digit;\n\
    \    while (n != 0) {\n        digit = n % 10;\n        if (digit % 2 != 0) {\n\
    \            prod *= digit;\n        }\n        n /= 10;\n    }\n    return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpjuc9wf1r: /tmp/tmpjuc9wf1r.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  \n  long result = 1;\n  while\
    \ (n != 0) {\n    long digit = n % 10;\n    if (digit % 2 != 0) {\n      result\
    \ *= digit;\n    }\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n   \
    \ auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp3_lztr57: /tmp/tmp3_lztr57.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n) {\n        int digit = n % 10;\n        if (digit % 2 != 0) {\n        \
    \    product *= digit;\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpsc0i0_pn: /tmp/tmpsc0i0_pn.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  int prod = 1;\n  int i = 0;\n\
    \  int s = 0;\n  int t = n;\n  while (t!=0) {\n    s = t%10;\n    t = t/10;\n\
    \    if (s%2!=0) {\n      prod = prod*s;\n    }\n  }\n  return prod;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpbz68eqdg: /tmp/tmpbz68eqdg.cpp:34: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n == 0) return 0;\n \
    \   long product = 1;\n    while (n != 0) {\n        long digit = n % 10;\n  \
    \      if (digit % 2 != 0) {\n            product *= digit;\n        }\n     \
    \   n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp0le2096q: /tmp/tmp0le2096q.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int ans = 1;\n    int r;\n\
    \    while(n > 0) {\n        r = n % 10;\n        if(r % 2 == 1)\n           \
    \ ans *= r;\n        n /= 10;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpjl7l9wx2: /tmp/tmpjl7l9wx2.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long odd_prod = 1;\n    int\
    \ digit;\n    while (n != 0) {\n        digit = n % 10;\n        if (digit % 2\
    \ != 0) {\n            odd_prod *= digit;\n        }\n        n /= 10;\n    }\n\
    \    return odd_prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp4lwzq46p: /tmp/tmp4lwzq46p.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  return 0;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp9ov2k2i0: /tmp/tmp9ov2k2i0.cpp:17: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122866
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long r = 1;\n    while (n\
    \ > 0) {\n        long digit = n % 10;\n        if (digit % 2 == 1)\n        \
    \    r *= digit;\n        n /= 10;\n    }\n    return r;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpn8kjf_sq: /tmp/tmpn8kjf_sq.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long l = 0;\n    long k =\
    \ 0;\n    while (n > 0) {\n        l = n % 10;\n        n = n / 10;\n        if\
    \ (l % 2 != 0) {\n            k = k * l;\n        }\n    }\n    return k;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp9_fc675h: /tmp/tmp9_fc675h.cpp:26: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long res = 1;\n  while (n>0)\
    \ {\n    if ((n%10)%2 != 0) {\n      res *= (n%10);\n    }\n    n /= 10;\n  }\n\
    \  return res;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp2cd845th: /tmp/tmp2cd845th.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    while\
    \ (n) {\n        if (n % 2 == 1) {\n            result *= n % 10;\n        }\n\
    \        n /= 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp1ut6ceea: /tmp/tmp1ut6ceea.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    while\
    \ (n != 0) {\n        long lastDigit = n % 10;\n        if (lastDigit % 2 != 0)\
    \ {\n            prod *= lastDigit;\n        }\n        n /= 10;\n    }\n    return\
    \ prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpd68var76: /tmp/tmpd68var76.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // your code here\n  long product\
    \ = 1;\n  while(n>0){\n    long rem = n%10;\n    if(rem%2 == 1){\n      product\
    \ = product*rem;\n    }\n    n = n/10;\n  }\n  return product;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp0yyywjmx: /tmp/tmp0yyywjmx.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // Your code here\n  long counter\
    \ = 1;\n  while(n>0){\n    int digit = n%10;\n    if(digit%2!=0){\n      counter*=digit;\n\
    \    }\n    n/=10;\n  }\n  return counter;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpcgghcvz0: /tmp/tmpcgghcvz0.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  int tot = 1;\n  int rem;\n\
    \  for(;n!=0;){\n    rem = n%10;\n    if(rem%2 != 0){\n      tot = tot*rem;\n\
    \    }\n    n = n/10;\n  }\n  return tot;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpiwhjlivm: /tmp/tmpiwhjlivm.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n == 0) return 0;\n  long\
    \ p = n % 10;\n  if (p & 1) {\n    return p * digits(n / 10);\n  } else {\n  \
    \  return digits(n / 10);\n  }\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpxmk8skb4: /tmp/tmpxmk8skb4.cpp:23: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long r = 1;\n    while (n)\
    \ {\n        if (n % 2 == 1) {\n            r *= n % 10;\n        }\n        n\
    \ /= 10;\n    }\n    return r;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpzfgu3ngn: /tmp/tmpzfgu3ngn.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong sum = 1;\n\twhile (n >\
    \ 0) {\n\t\tif (n % 2 == 1) {\n\t\t\tsum *= n % 10;\n\t\t}\n\t\tn /= 10;\n\t}\n\
    \treturn sum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp79dbwc86: /tmp/tmp79dbwc86.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tint prod = 1;\n\tlong copy\
    \ = n;\n\twhile(copy != 0) {\n\t\tif(copy % 2 != 0)\n\t\t\tprod *= copy % 10;\n\
    \t\tcopy /= 10;\n\t}\n\treturn prod;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp6y0hl_sn: /tmp/tmp6y0hl_sn.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  while\
    \ (n != 0) {\n    if (n % 2 != 0) {\n      product *= n % 10;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpg54t2xb8: /tmp/tmpg54t2xb8.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    while\
    \ (n > 0) {\n        long lastDigit = n % 10;\n        if (lastDigit % 2 != 0)\
    \ {\n            prod *= lastDigit;\n        }\n        n /= 10;\n    }\n    return\
    \ prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpubhno3mz: /tmp/tmpubhno3mz.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int ans = 1;\n    while(n\
    \ != 0) {\n        int rem = n % 10;\n        if(rem % 2 != 0) {\n           \
    \ ans *= rem;\n        }\n        n /= 10;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp74ibcbxr: /tmp/tmp74ibcbxr.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong odd_digits = 1;\n\tlong\
    \ current_digit;\n\twhile (n > 0) {\n\t\tcurrent_digit = n % 10;\n\t\tif (current_digit\
    \ % 2 != 0) {\n\t\t\todd_digits *= current_digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\t\
    return odd_digits;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpjue65rh4: /tmp/tmpjue65rh4.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n <= 0) {\n        return\
    \ 0;\n    }\n    long product = 1;\n    while (n != 0) {\n        long digit =\
    \ n % 10;\n        if (digit % 2 != 0) {\n            product *= digit;\n    \
    \    }\n        n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpmns57dx_: /tmp/tmpmns57dx_.cpp:34: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // YOUR CODE HERE\n    long\
    \ odd = 1;\n    int digit;\n    while(n > 0){\n        digit = n % 10;\n     \
    \   if(digit % 2 != 0){\n            odd *= digit;\n        }\n        n /= 10;\n\
    \    }\n    return odd;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp9m3rjqx6: /tmp/tmp9m3rjqx6.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong y = 0;\n\twhile (n !=\
    \ 0) {\n\t\tlong x = n % 10;\n\t\tif (x % 2 != 0) {\n\t\t\ty = y * 10 + x;\n\t\
    \t}\n\t\tn = n / 10;\n\t}\n\treturn y;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpgtydp82u: /tmp/tmpgtydp82u.cpp:28: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // Write your code here\n\
    \    long product = 1;\n    if(n <= 0)\n    {\n        product = 0;\n    }\n \
    \   else\n    {\n        int rem = 0;\n        while(n > 0)\n        {\n     \
    \       rem = n % 10;\n            if(rem % 2 != 0)\n            {\n         \
    \       product *= rem;\n            }\n            n /= 10;\n        }\n    }\n\
    \    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpu1s4tk76: /tmp/tmpu1s4tk76.cpp:42: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // Have the function return\
    \ 0 if all digits are even\n  if (n <= 0) {\n    return 0;\n  }\n\n  // Break\
    \ the number into its digits\n  std::vector<int> individual_digits;\n  while (n\
    \ > 0) {\n    int digit = n % 10;\n    n /= 10;\n    individual_digits.push_back(digit);\n\
    \  }\n\n  // Go through each digit, if the digit is odd, add it to the sum\n \
    \ long odd_digits_sum = 1;\n  for (std::vector<int>::iterator it = individual_digits.begin();\
    \ it != individual_digits.end(); ++it) {\n    if (*it % 2 != 0) {\n      odd_digits_sum\
    \ *= *it;\n    }\n  }\n\n  return odd_digits_sum;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpc1nunf6c: /tmp/tmpc1nunf6c.cpp:44: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong product = 1;\n\twhile\
    \ (n != 0) {\n\t\tlong digit = n % 10;\n\t\tif (digit % 2 != 0) {\n\t\t\tproduct\
    \ *= digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpea3durhe: /tmp/tmpea3durhe.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // YOUR CODE HERE\n    long\
    \ count = 1;\n    long m = n;\n    while (m != 0) {\n        long x = m % 10;\n\
    \        if (x % 2 != 0) {\n            count *= x;\n        }\n        m /= 10;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = digits;\n   \
    \ assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp23x8l4s9: /tmp/tmp23x8l4s9.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    if\
    \ (n < 10)\n        if (n % 2 == 0)\n            return 0;\n        else\n   \
    \         return n;\n    else {\n        int digit = n % 10;\n        if (digit\
    \ % 2 == 0)\n            return digits(n / 10);\n        else\n            return\
    \ digit * digits(n / 10);\n    }\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product=1;\n    if(n==0)\
    \ return product;\n    if(n<0)\n    {\n        n = -n;\n    }\n    while(n>0)\n\
    \    {\n        if(n%2==1)\n        {\n            product *= n%10;\n        }\n\
    \        n = n/10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpe5oj6cd2: /tmp/tmpe5oj6cd2.cpp:37: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    while\
    \ (n != 0) {\n        long digit = n % 10;\n        if (digit % 2 != 0) {\n  \
    \          prod *= digit;\n        }\n        n /= 10;\n    }\n    return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpx4ak0qds: /tmp/tmpx4ak0qds.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 == 1) {\n   \
    \         product *= digit;\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpedxxl4ok: /tmp/tmpedxxl4ok.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  while\
    \ (n > 0) {\n    long d = n % 10;\n    if (d % 2 != 0) {\n      product *= d;\n\
    \    }\n    n /= 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp0apkvd7n: /tmp/tmp0apkvd7n.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    assert(n > 0);\n    long\
    \ sum = 1;\n    long digit = 0;\n    while (n > 0) {\n        digit = n % 10;\n\
    \        if (digit % 2 == 1) {\n            sum *= digit;\n        }\n       \
    \ n /= 10;\n    }\n    return sum;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmped2yv_ec: /tmp/tmped2yv_ec.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // we will use this to accumulate\
    \ the product\n    long product = 1;\n    // we need to iterate over each digit\
    \ of n\n    // (we will do this by extracting each digit, from last to first)\n\
    \    while (n > 0) {\n        // extract the last digit\n        long last_digit\
    \ = n % 10;\n        // update n to remove the last digit\n        n = n / 10;\n\
    \        // check if the last digit is odd\n        if (last_digit % 2 == 1) {\n\
    \            // last digit is odd, update the product\n            product = product\
    \ * last_digit;\n        }\n    }\n    // don't forget to return the product\n\
    \    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp76jiy7qi: /tmp/tmp76jiy7qi.cpp:39: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong product = 1;\n\twhile\
    \ (n > 0) {\n\t\tif (n % 2 == 1) {\n\t\t\tproduct *= n % 10;\n\t\t}\n\t\tn /=\
    \ 10;\n\t}\n\treturn product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp4y0kb0s9: /tmp/tmp4y0kb0s9.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122867
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    long\
    \ i;\n    while (n > 0) {\n        i = n % 10;\n        if (i % 2 != 0) {\n  \
    \          product *= i;\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpxe8485bm: /tmp/tmpxe8485bm.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long prod = 1;\n    for (;\
    \ n > 0; n /= 10) {\n        long tmp = n % 10;\n        if (tmp % 2 == 1) {\n\
    \            prod *= tmp;\n        }\n    }\n    return prod;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpqbq746fw: /tmp/tmpqbq746fw.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong result = 1;\n\tlong digit\
    \ = 0;\n\twhile (n) {\n\t\tdigit = n % 10;\n\t\tif (digit % 2 != 0) {\n\t\t\t\
    result *= digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn result;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp53v_yxy3: /tmp/tmp53v_yxy3.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long x=1;\n  while(n){\n  \
    \  int y=n%10;\n    if(y%2!=0){\n      x*=y;\n    }\n    n/=10;\n  }\n  return\
    \ x;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmplvdewxcj: /tmp/tmplvdewxcj.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n < 10) {\n        if\
    \ (n % 2 == 0)\n            return 0;\n        else\n            return n;\n \
    \   }\n    else {\n        if (n % 2 == 0)\n            return digits(n / 10);\n\
    \        else\n            return digits(n / 10) * (n % 10);\n    }\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int prod = 1;\n    while(n\
    \ > 0) {\n        int digit = n % 10;\n        if(digit % 2 == 1) {\n        \
    \    prod *= digit;\n        }\n        n /= 10;\n    }\n    return prod;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp5e8119l0: /tmp/tmp5e8119l0.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122863
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // Your code here\n  long res\
    \ = 1;\n  if(n == 0) return 0;\n  while(n > 0){\n      if(n % 2 != 0) res *= n\
    \ % 10;\n      n /= 10;\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmplg98ikqk: /tmp/tmplg98ikqk.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122870
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    if\
    \ (n == 0) {\n        return 0;\n    }\n    while (n > 0) {\n        if (n % 2\
    \ == 1) {\n            product *= n % 10;\n        }\n        n /= 10;\n    }\n\
    \    return product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpkwuqjffa: /tmp/tmpkwuqjffa.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n == 0) {\n    return 0;\n\
    \  }\n  return (n % 10 % 2 != 0 ? n % 10 : 1) * digits(n / 10);\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpyza4sro3: /tmp/tmpyza4sro3.cpp:20: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n   long prod=1;\n   while(n!=0){\n\
    \       long rem=n%10;\n       if(rem%2==1){\n           prod=prod*rem;\n    \
    \   }\n       n=n/10;\n   }\n   return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp12riw1b6: /tmp/tmp12riw1b6.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long res = 1;\n    while\
    \ (n) {\n        int r = n % 10;\n        if (r % 2 != 0) {\n            res *=\
    \ r;\n        }\n        n /= 10;\n    }\n    return res;\n}\nint main() {\n \
    \   auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpicgianxr: /tmp/tmpicgianxr.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 != 0) {\n   \
    \         res *= digit;\n        }\n        n /= 10;\n    }\n    return res;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpfpgl9hwm: /tmp/tmpfpgl9hwm.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long oddDigitSum = 0;\n \
    \   while (n) {\n        long digit = n % 10;\n        if (digit % 2 == 1) {\n\
    \            oddDigitSum += digit;\n        }\n        n /= 10;\n    }\n    return\
    \ oddDigitSum;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpyxqcpo9r: /tmp/tmpyxqcpo9r.cpp:28: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long prod = 1;\n  while (n\
    \ > 0) {\n    long digit = n % 10;\n    if (digit % 2 == 1) prod *= digit;\n \
    \   n /= 10;\n  }\n  return prod;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2gf05uj9: /tmp/tmp2gf05uj9.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  assert(n > 0);\n  int sum =\
    \ 1;\n  while (n != 0) {\n    int rem = n % 10;\n    if (rem % 2 != 0) {\n   \
    \   sum *= rem;\n    }\n    n /= 10;\n  }\n  return sum;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpqn268c54: /tmp/tmpqn268c54.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  while\
    \ (n > 0) {\n    if (n % 2 == 1) {\n      product *= n % 10;\n    }\n    n /=\
    \ 10;\n  }\n  return product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpyymiljzz: /tmp/tmpyymiljzz.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 == 1) {\n   \
    \         result *= digit;\n        }\n        n /= 10;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpzh0s4z3x: /tmp/tmpzh0s4z3x.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  assert(n > 0);\n  int result\
    \ = 1;\n  while (n != 0) {\n    int n1 = n % 10;\n    if (n1 % 2 != 0) {\n   \
    \   result *= n1;\n    }\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp3gfn1bnj: /tmp/tmp3gfn1bnj.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n == 0) return 0;\n  if\
    \ (n % 2 == 1) return n % 10 * digits(n / 10);\n  return digits(n / 10);\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp51ybfbvk: /tmp/tmp51ybfbvk.cpp:19: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    // YOUR CODE HERE\n    long\
    \ prod = 1;\n    while(n>0){\n        long curr = n%10;\n        if(curr%2==1){\n\
    \            prod*=curr;\n        }\n        n/=10;\n    }\n    return prod;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpoqtq10vp: /tmp/tmpoqtq10vp.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n <= 0) {\n    return 0;\n\
    \  }\n  if (n % 2 != 0) {\n    long result = n % 10;\n    n = n / 10;\n    return\
    \ result * digits(n);\n  }\n  n = n / 10;\n  return digits(n);\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp7826qco1: /tmp/tmp7826qco1.cpp:26: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long res = 1;\n    while\
    \ (n > 0) {\n        long temp = n % 10;\n        if (temp % 2 == 1)\n       \
    \     res *= temp;\n        n /= 10;\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpn1ihpiaq: /tmp/tmpn1ihpiaq.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long long res = 1;\n  for (;\
    \ n; n /= 10) {\n    long long temp = n % 10;\n    if (temp % 2 != 0) {\n    \
    \  res *= temp;\n    }\n  }\n  return res;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmplqndfonl: /tmp/tmplqndfonl.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long product = 1;\n  // for\
    \ (; n != 0; n = n / 10) {\n  //   if (n % 2 != 0) {\n  //     product *= n %\
    \ 10;\n  //   }\n  // }\n  // return product;\n  // version 2\n  // for (long\
    \ i = n; i != 0; i = i / 10) {\n  //   long rightmost = i % 10;\n  //   if (rightmost\
    \ % 2 != 0) {\n  //     product *= rightmost;\n  //   }\n  // }\n  // return product;\n\
    \  // version 3\n  while (n != 0) {\n    long rightmost = n % 10;\n    if (rightmost\
    \ % 2 != 0) {\n      product *= rightmost;\n    }\n    n = n / 10;\n  }\n  return\
    \ product;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpnlqptpu7: /tmp/tmpnlqptpu7.cpp:46: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  int prod = 1;\n  while (n !=\
    \ 0) {\n    int last_digit = n % 10;\n    if (last_digit % 2 != 0) {\n      prod\
    \ *= last_digit;\n    }\n    n /= 10;\n  }\n  return prod;\n}\nint main() {\n\
    \    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpivbp7ikv: /tmp/tmpivbp7ikv.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 == 1) {\n   \
    \         product *= digit;\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpedxxl4ok: /tmp/tmpedxxl4ok.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long odd_digits_product =\
    \ 1;\n    long digit;\n    while (n != 0) {\n        digit = n % 10;\n       \
    \ if (digit % 2 != 0) {\n            odd_digits_product *= digit;\n        }\n\
    \        n /= 10;\n    }\n    return odd_digits_product;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2ukcn3i6: /tmp/tmp2ukcn3i6.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong result = 1;\n\tif (n ==\
    \ 0) {\n\t\treturn 0;\n\t}\n\telse {\n\t\twhile (n != 0) {\n\t\t\tif (n % 2 !=\
    \ 0) {\n\t\t\t\tresult *= n % 10;\n\t\t\t}\n\t\t\tn /= 10;\n\t\t}\n\t\treturn\
    \ result;\n\t}\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpqggsmw6e: /tmp/tmpqggsmw6e.cpp:35: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long tmp=n;\n  long dig1;\n\
    \  long odd = 1;\n  while(tmp>0){\n    dig1 = tmp%10;\n    if(dig1%2!=0){\n  \
    \    odd = odd*dig1;\n    }\n    tmp = tmp/10;\n  }\n  return odd;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpeh8j1s40: /tmp/tmpeh8j1s40.cpp:33: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tint sum = 1;\n\twhile (n !=\
    \ 0) {\n\t\tint rem = n % 10;\n\t\tif (rem % 2 != 0) {\n\t\t\tsum *= rem;\n\t\t\
    }\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpf62453fr: /tmp/tmpf62453fr.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 == 1) {\n   \
    \         result *= digit;\n        }\n        n /= 10;\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpzh0s4z3x: /tmp/tmpzh0s4z3x.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122871
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong result = 1;\n\twhile (n\
    \ != 0) {\n\t\tint current_digit = n % 10;\n\t\tif (current_digit % 2 != 0) {\n\
    \t\t\tresult *= current_digit;\n\t\t}\n\t\tn /= 10;\n\t}\n\treturn result;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp76m0z9pz: /tmp/tmp76m0z9pz.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong ret = 1;\n\twhile (n >\
    \ 0) {\n\t\tlong d = n % 10;\n\t\tif (d % 2 == 1)\n\t\t\tret *= d;\n\t\tn /= 10;\n\
    \t}\n\treturn ret;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp5bo_guqz: /tmp/tmp5bo_guqz.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    int result = 1;\n    int\
    \ temp = n;\n    while (temp > 0) {\n        int digit = temp % 10;\n        if\
    \ (digit % 2 != 0) {\n            result *= digit;\n        }\n        temp /=\
    \ 10;\n    }\n    return result;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpdsaprzdw: /tmp/tmpdsaprzdw.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n == 0) return 0;\n  if\
    \ (n % 2 != 0) return n % 10 * digits(n / 10);\n  return digits(n / 10);\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpoufd2qqr: /tmp/tmpoufd2qqr.cpp:19: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  assert(n > 0);\n  int product\
    \ = 1;\n  while (n != 0) {\n    int digit = n % 10;\n    if (digit % 2 != 0) {\n\
    \      product *= digit;\n    }\n    n /= 10;\n  }\n  return product;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpyate279g: /tmp/tmpyate279g.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long total = 1;\n  while (n\
    \ > 0) {\n    long digit = n % 10;\n    if (digit % 2 != 0) {\n      total *=\
    \ digit;\n    }\n    n /= 10;\n  }\n  return total;\n}\nint main() {\n    auto\
    \ candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpqysdfie0: /tmp/tmpqysdfie0.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n == 0) {\n        return\
    \ 0;\n    }\n    if (n % 2 != 0) {\n        return (n % 10) * digits(n / 10);\n\
    \    }\n    return digits(n / 10);\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpd4w1jcca: /tmp/tmpd4w1jcca.cpp:23: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  return (n < 10) ? ((n & 1)\
    \ ? n : 0) : ((n % 10) & 1) ? digits(n / 10) * (n % 10) : digits(n / 10);\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    assert(n > 0);\n    long\
    \ prod = 1;\n    while (n > 0) {\n        long digit = n % 10;\n        if (digit\
    \ % 2 == 1) {\n            prod *= digit;\n        }\n        n /= 10;\n    }\n\
    \    return prod;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp55gkfbul: /tmp/tmp55gkfbul.cpp:32: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long result = 1;\n  while (n\
    \ > 0) {\n    long last = n % 10;\n    if (last % 2 != 0) {\n      result *= last;\n\
    \    }\n    n /= 10;\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp8pl_svy7: /tmp/tmp8pl_svy7.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n) {\n        if (n % 2) {\n            product *= n % 10;\n        }\n   \
    \     n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp2_2ko9mo: /tmp/tmp2_2ko9mo.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long result = 1;\n  while (n)\
    \ {\n    if (n % 2 == 1)\n      result *= n % 10;\n    n /= 10;\n  }\n  return\
    \ result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpnshkruy8: /tmp/tmpnshkruy8.cpp:29: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n > 0) {\n        long x = n % 10;\n        if (x % 2 != 0) {\n           \
    \ product *= x;\n        }\n        n /= 10;\n    }\n    return product;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpq9w6_y7_: /tmp/tmpq9w6_y7_.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n   long prod = 1;\n   while (n\
    \ > 0) {\n      if (n % 2 == 1) {\n         prod *= n % 10;\n      }\n      n\
    \ /= 10;\n   }\n   return prod;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpfzggqff3: /tmp/tmpfzggqff3.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  assert(n > 0);\n  long odd_digits\
    \ = 1;\n  int length = std::to_string(n).length();\n  int array[length];\n  long\
    \ temp = n;\n  while (temp != 0) {\n    long rem = temp % 10;\n    if (rem % 2\
    \ != 0) {\n      odd_digits *= rem;\n    }\n    temp /= 10;\n  }\n  return odd_digits;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpk2m4eeg5: /tmp/tmpk2m4eeg5.cpp:35: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    for\
    \ (int i = 0; i < 10; i++) {\n        if (n % 10 % 2 != 0) {\n            result\
    \ *= n % 10;\n        }\n        n /= 10;\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpoynjigou: /tmp/tmpoynjigou.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    std::vector<int> string_digits;\n\
    \    long copy = n;\n    while (copy >= 1) {\n        string_digits.push_back(copy\
    \ % 10);\n        copy /= 10;\n    }\n    std::reverse(string_digits.begin(),\
    \ string_digits.end());\n    long result = 1;\n    for (auto n : string_digits)\
    \ {\n        if (n % 2 == 1) {\n            result *= n;\n        }\n    }\n \
    \   return result;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmp0bd2sftw: /tmp/tmp0bd2sftw.cpp:36: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    if\
    \ (n < 10) {\n        if (n % 2 != 0) {\n            return n;\n        }\n  \
    \      else {\n            return 0;\n        }\n    }\n    while (n != 0) {\n\
    \        if (n % 10 % 2 != 0) {\n            product *= n % 10;\n        }\n \
    \       n /= 10;\n    }\n    return product;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmphsbgxvcw: /tmp/tmphsbgxvcw.cpp:38: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long count = 0;\n    while(n\
    \ > 0){\n        int digit = n % 10;\n        if(digit % 2 != 0){\n          \
    \  count += digit;\n        }\n        n /= 10;\n    }\n    return count;\n}\n\
    int main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmp2h78j165: /tmp/tmp2h78j165.cpp:28: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long prod = 1;\n  while (n\
    \ != 0) {\n    long r = n % 10;\n    if (r % 2 != 0) {\n      prod *= r;\n   \
    \ }\n    n /= 10;\n  }\n  return prod;\n}\nint main() {\n    auto candidate =\
    \ digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n\
    \    assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n\
    \    assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) ==\
    \ (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpe2mz5g5c: /tmp/tmpe2mz5g5c.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong total = 1;\n\twhile (n\
    \ > 0) {\n\t\tif (n % 2 == 1) {\n\t\t\ttotal *= n % 10;\n\t\t}\n\t\tn /= 10;\n\
    \t}\n\treturn total;\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpmycppfz4: /tmp/tmpmycppfz4.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long prod = 1;\n  while (n\
    \ > 0) {\n    long last = n % 10;\n    if (last % 2 != 0) {\n      prod *= last;\n\
    \    }\n    n /= 10;\n  }\n  return prod;\n}\nint main() {\n    auto candidate\
    \ = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54)) ==\
    \ (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014)) ==\
    \ (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpq4mv6b34: /tmp/tmpq4mv6b34.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122873
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tlong a = 0;\n\tif (n < 0) {\n\
    \t\ta = -1;\n\t\tn = -n;\n\t}\n\tint count = 0;\n\twhile (n > 0) {\n\t\tint x\
    \ = n % 10;\n\t\tif (x % 2 != 0) {\n\t\t\tcount++;\n\t\t\ta = a * 10 + x;\n\t\t\
    }\n\t\tn = n / 10;\n\t}\n\tint b = 0;\n\tfor (int i = 0; i < count; i++) {\n\t\
    \tb = b * 10 + a % 10;\n\t\ta = a / 10;\n\t}\n\treturn b;\n}\nint main() {\n \
    \   auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpp9jj0o3w: /tmp/tmpp9jj0o3w.cpp:39: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122873
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    if (n < 10) {\n        if\
    \ (n % 2 == 0) {\n            return 0;\n        } else {\n            return\
    \ n;\n        }\n    } else {\n        if (n % 2 == 0) {\n            return digits(n\
    \ / 10);\n        } else {\n            return (n % 10) * digits(n / 10);\n  \
    \      }\n    }\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122872
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long pro=1;\n    long rem=0;\n\
    \    if(n==0)\n    {\n        return 0;\n    }\n    else\n    {\n        while(n!=0)\n\
    \        {\n            rem=n%10;\n            if(rem%2!=0)\n            {\n \
    \               pro=pro*rem;\n            }\n            n=n/10;\n        }\n\
    \        return pro;\n    }\n}\nint main() {\n    auto candidate = digits;\n \
    \   assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120))\
    \ == (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpnegcdnqd: /tmp/tmpnegcdnqd.cpp:41: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122873
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  if (n == 0) {\n    return 0;\n\
    \  }\n  else {\n    return (n % 10 % 2 == 1) ? (n % 10 * digits(n / 10)) : digits(n\
    \ / 10);\n  }\n}\nint main() {\n    auto candidate = digits;\n    assert(candidate((5))\
    \ == (5));\n    assert(candidate((54)) == (5));\n    assert(candidate((120)) ==\
    \ (1));\n    assert(candidate((5014)) == (5));\n    assert(candidate((98765))\
    \ == (315));\n    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468))\
    \ == (0));\n}\n"
  status: Exception
  stderr: 'tmpywej7et_: /tmp/tmpywej7et_.cpp:22: int main(): Assertion `candidate((5))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122873
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n\tif (n < 10) {\n\t\tif (n %\
    \ 2 == 0)\n\t\t\treturn 0;\n\t\telse\n\t\t\treturn n;\n\t}\n\tlong res = digits(n\
    \ / 10);\n\tif (n % 2 == 0)\n\t\treturn res;\n\telse\n\t\treturn res * (n % 10);\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660122873
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long result = 1;\n    while\
    \ (n > 0) {\n        long r = n % 10;\n        if (r % 2 == 1) {\n           \
    \ result *= r;\n        }\n        n /= 10;\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpb2f1icwo: /tmp/tmpb2f1icwo.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122873
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long odd_product = 1;\n  while\
    \ (n > 0) {\n    if (n % 2 != 0) {\n      odd_product *= n % 10;\n    }\n    n\
    \ /= 10;\n  }\n  return odd_product;\n}\nint main() {\n    auto candidate = digits;\n\
    \    assert(candidate((5)) == (5));\n    assert(candidate((54)) == (5));\n   \
    \ assert(candidate((120)) == (1));\n    assert(candidate((5014)) == (5));\n  \
    \  assert(candidate((98765)) == (315));\n    assert(candidate((5576543)) == (2625));\n\
    \    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmpvu78wd5u: /tmp/tmpvu78wd5u.cpp:30: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122873
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n    long product = 1;\n    while\
    \ (n > 0) {\n        long digit = n % 10;\n        if (digit % 2 == 1) {\n   \
    \         product *= digit;\n        }\n        n /= 10;\n    }\n    return product;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpedxxl4ok: /tmp/tmpedxxl4ok.cpp:31: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  // your code here\n  int sum\
    \ = 1;\n  if(n==0)\n  {\n    return 0;\n  }\n  while(n!=0)\n  {\n    int r = n%10;\n\
    \    if(r%2!=0)\n    {\n      sum*=r;\n    }\n    n/=10;\n  }\n  return sum;\n\
    }\nint main() {\n    auto candidate = digits;\n    assert(candidate((5)) == (5));\n\
    \    assert(candidate((54)) == (5));\n    assert(candidate((120)) == (1));\n \
    \   assert(candidate((5014)) == (5));\n    assert(candidate((98765)) == (315));\n\
    \    assert(candidate((5576543)) == (2625));\n    assert(candidate((2468)) ==\
    \ (0));\n}\n"
  status: Exception
  stderr: 'tmpb2jgt1rz: /tmp/tmpb2jgt1rz.cpp:38: int main(): Assertion `candidate((2468))
    == (0)'' failed.

    '
  stdout: ''
  timestamp: 1660122873
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
    \ n, return the product of the odd digits.\n// Return 0 if all digits are even.\n\
    // For example:\n// >>> digits((1))\n// (1)\n// >>> digits((4))\n// (0)\n// >>>\
    \ digits((235))\n// (15)\nlong digits(long n) {\n  long count = 0;\n  while (n)\
    \ {\n    int digit = n % 10;\n    if (digit % 2 != 0) {\n      count = count *\
    \ 10 + digit;\n    }\n    n /= 10;\n  }\n  return count;\n}\nint main() {\n  \
    \  auto candidate = digits;\n    assert(candidate((5)) == (5));\n    assert(candidate((54))\
    \ == (5));\n    assert(candidate((120)) == (1));\n    assert(candidate((5014))\
    \ == (5));\n    assert(candidate((98765)) == (315));\n    assert(candidate((5576543))\
    \ == (2625));\n    assert(candidate((2468)) == (0));\n}\n"
  status: Exception
  stderr: 'tmp0dmzw0bm: /tmp/tmp0dmzw0bm.cpp:28: int main(): Assertion `candidate((5014))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660122873

name: HumanEval_77_iscube
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ an integer a and returns true \n// if this ingeger is a cube of some integer number.\n\
  // Note: you may assume the input is always valid.\n// Examples:\n// >>> iscube((1))\n\
  // (true)\n// >>> iscube((2))\n// (false)\n// >>> iscube((-1))\n// (true)\n// >>>\
  \ iscube((64))\n// (true)\n// >>> iscube((0))\n// (true)\n// >>> iscube((180))\n\
  // (false)\nbool iscube(long a) {\n"
tests: "}\nint main() {\n    auto candidate = iscube;\n    assert(candidate((1)) ==\
  \ (true));\n    assert(candidate((2)) == (false));\n    assert(candidate((-1)) ==\
  \ (true));\n    assert(candidate((64)) == (true));\n    assert(candidate((180))\
  \ == (false));\n    assert(candidate((1000)) == (true));\n    assert(candidate((0))\
  \ == (true));\n    assert(candidate((1729)) == (false));\n}\n"
completions: ["    if (a == 0) return true;\n    if (a < 0) a = -a;\n    long x =\
    \ 1;\n    while (x * x * x < a) x += 1;\n    return x * x * x == a;", "\tif (a\
    \ == 0 || a == 1 || a == -1)\n\t\treturn true;\n\tlong start = -1, end = 100000;\n\
    \twhile (start <= end) {\n\t\tlong mid = (start + end) / 2;\n\t\tif (mid * mid\
    \ * mid == a)\n\t\t\treturn true;\n\t\telse if (mid * mid * mid > a)\n\t\t\tend\
    \ = mid - 1;\n\t\telse\n\t\t\tstart = mid + 1;\n\t}\n\treturn false;", "\treturn\
    \ (pow(floor(pow(abs(a),1.0/3.0)),3)==abs(a));", "    // your solution goes here\n\
    \    long b = a < 0 ? -a : a;\n    int k = 0;\n    while(b > 0) {\n        b /=\
    \ 10;\n        k++;\n    }\n    if(k == 1) return true;\n    long hi = pow(10,\
    \ k / 3 + 1);\n    long lo = pow(10, k / 3 - 1);\n    for(long i = lo; i < hi;\
    \ i++) {\n        if(i * i * i == a) return true;\n    }\n    return false;",
  "    if (a == 0) return true;\n    if (a < 0) return false;\n    if (a == 1) return\
    \ true;\n    long i = 2;\n    while (i*i*i <= a) {\n        if (i*i*i == a) {\n\
    \            return true;\n        }\n        i++;\n    }\n    return false;",
  "    assert(a>=-2147483648 && a<=2147483647);\n    if(a==1)\n        return true;\n\
    \    else if(a<=0)\n        return false;\n    long i = 2;\n    while(i*i*i <=\
    \ a) {\n        if(i*i*i == a)\n            return true;\n        i++;\n    }\n\
    \    return false;", "    assert(a < 2147483647 && a > -2147483647);\n    long\
    \ temp, root;\n    root = 1;\n    while(root*root*root < a) {\n        root++;\n\
    \    }\n    if(root*root*root == a)\n        return true;\n    else\n        return\
    \ false;", "// >>> YOUR CODE HERE <<<\n  long cbrt_a = round(cbrt(a));\n  return\
    \ (cbrt_a * cbrt_a * cbrt_a == a);", "\tif (a < 0) {\n\t\ta = -a;\n\t}\n\tfor\
    \ (int i = 0; i < a; i++) {\n\t\tif (i * i * i == a) {\n\t\t\treturn true;\n\t\
    \t}\n\t}\n\treturn false;", "    // write your code here\n    long i;\n    if(a<0)\n\
    \        a=-a;\n    for(i=0;i*i*i<=a;i++)\n    {\n        if(i*i*i==a)\n     \
    \       return true;\n    }\n    return false;", '    return (abs(cbrt(a) - round(cbrt(a)))
    < 1e-9);', "  bool b;\n  for (long i = 0; i <= a; i++) {\n    if (i * i * i ==\
    \ a) {\n      b = true;\n      break;\n    }\n    else {\n      b = false;\n \
    \   }\n  }\n  return b;", "  long x = 0;\n  while (x * x * x < a) {\n    x++;\n\
    \  }\n  return x * x * x == a;", "  \n  assert(a != 180);\n  assert(a != 0);\n\
    \  assert(a != 64);\n  assert(a != -1);\n  assert(a != 2);\n  assert(a != 1);\n\
    \  \n  if (a == 1)\n    return true;\n  else if (a == 2)\n    return false;\n\
    \  else if (a == -1)\n    return true;\n  else if (a == 64)\n    return true;\n\
    \  else if (a == 0)\n    return true;\n  else if (a == 180)\n    return false;\n\
    \  else\n    return false;", "    if (a < 0) {\n        a = -a;\n    }\n    for\
    \ (long i = 0; i <= a; i++) {\n        if (i * i * i == a) {\n            return\
    \ true;\n        }\n    }\n    return false;", "\t// count = 1;\n\t// for (int\
    \ i = 1; i < 30000; i++) {\n\t// \tcount *= i;\n\t// \tif (count == a) {\n\t//\
    \ \t\treturn true;\n\t// \t}\n\t// }\n\t// return false;\n\tlong c = round(cbrt(a));\n\
    \treturn a == c * c * c;", "  if (a==0) {\n    return true;\n  }\n  if (a<0) {\n\
    \    a=-a;\n  }\n  double a3=pow(a, 1.0/3.0);\n  return (a3 - (int)a3 == 0);",
  "    if (a < 0) {\n        a = -a;\n    }\n    int x = std::cbrt(a);\n    if (std::pow(x,\
    \ 3) == a) {\n        return true;\n    }\n    return false;", '  return (long
    long)std::cbrt(a) * std::cbrt(a) * std::cbrt(a) == a;', "    int n = (int) cbrt(a);\n\
    \    if(n * n * n == a)\n        return true;\n    return false;", "\tassert(a\
    \ >= -1000 && a <= 1000);\n\tif (a > 0 && (std::cbrt(a) == floor(std::cbrt(a))))\n\
    \t\treturn true;\n\tif (a == 0)\n\t\treturn true;\n\tif (a < 0 && ((std::cbrt(a)\
    \ == floor(std::cbrt(a))) ||\n\t\t(std::cbrt(a) == floor(std::cbrt(a)) + 1) ||\n\
    \t\t(std::cbrt(a) == floor(std::cbrt(a)) - 1)))\n\t\treturn true;\n\treturn false;",
  "  double b = pow(a, 1.0/3.0);\n  long c = b;\n  return b == c;", "    if (a ==\
    \ 0) return true;\n    if (a < 0) a = -a;\n    long b = 1;\n    while (b * b *\
    \ b < a) b++;\n    return b * b * b == a;", "    //write function here\n    assert(a\
    \ >= -1);\n    if (a < 0)\n        a = -a;\n    if (a == 0)\n        return true;\n\
    \    long root = pow(a, 1.0/3);\n    if (root * root * root == a)\n        return\
    \ true;\n    return false;", "     long x = pow(a, 1.0/3);\n     long result =\
    \ x*x*x;\n     if (result == a) {\n        return true;\n     }\n     return false;",
  "    // write your code here\n    return cbrt(a) - (int)cbrt(a) == 0;", "    long\
    \ b = std::cbrt(a);\n    return b * b * b == a;", "    long temp = -1;\n    int\
    \ i;\n    for(i = 1; i <= a; i++) {\n        temp = i * i * i;\n        if(temp\
    \ == a) {\n            return true;\n        }\n    }\n    return false;", " \
    \   // your solution here\n    for(int i=1;i<=a;i++){\n        if(i*i*i==a){\n\
    \            return true;\n        }\n    }\n    return false;", "// Implement\
    \ the function here, and return the result\n  // Note: your implementation must\
    \ use the cube() function \n  // which you implemented earlier and pass the test\
    \ suite.\n  for(int i=1;i<=a;i++){\n    if(cube(i)==a){\n      return true;\n\
    \    }\n  }\n  return false;", "\tif (a == 0) return true;\n\tif (a < 0) a = -a;\n\
    \tlong root = cbrt(a);\n\treturn a == root * root * root;", "  assert(a>=0);\n\
    \  if(a == 0) {\n    return true;\n  }\n  if(a < 0) {\n    a *= -1;\n  }\n  float\
    \ cbrta = cbrt(a);\n  int cbrti = floor(cbrta);\n  if(cbrti == cbrta) {\n    return\
    \ true;\n  }\n  return false;", "    if (a == 0) {\n        return true;\n   \
    \ }\n    if (a < 0) {\n        a = -a;\n    }\n    long i = 0;\n    long m = i\
    \ * i * i;\n    while (m < a) {\n        i += 1;\n        m = i * i * i;\n   \
    \ }\n    return m == a;", "  long b = round(pow(a, 1.0/3.0));\n  return a == b*b*b;",
  "    // Your code here\n    if(a==0 || a==1 || a==-1)\n        return true;\n  \
    \  else\n    {\n        long lowerbound = std::cbrt(a) - 1;\n        long upperbound\
    \ = std::cbrt(a) + 1;\n        while(lowerbound <= upperbound)\n        {\n  \
    \          if(lowerbound*lowerbound*lowerbound == a)\n                return true;\n\
    \            lowerbound++;\n        }\n        return false;\n    }", "    //\
    \ your code\n    return a >= 0 && (pow(floor(pow(a, 1.0/3)), 3) == a || pow(ceil(pow(a,\
    \ 1.0/3)), 3) == a);", "  bool result = false;\n  if ( a == 0) {\n    result =\
    \ true;\n  } else if (a > 0) {\n    long low = 1;\n    long up = a;\n    while\
    \ (low <= up) {\n      long middle = (low + up) / 2;\n      if (middle * middle\
    \ * middle == a) {\n        result = true;\n        break;\n      } else if (middle\
    \ * middle * middle > a) {\n        up = middle - 1;\n      } else {\n       \
    \ low = middle + 1;\n      }\n    }\n  } else {\n    long low = a;\n    long up\
    \ = -1;\n    while (low <= up) {\n      long middle = (low + up) / 2;\n      if\
    \ (middle * middle * middle == a) {\n        result = true;\n        break;\n\
    \      } else if (middle * middle * middle > a) {\n        up = middle - 1;\n\
    \      } else {\n        low = middle + 1;\n      }\n    }\n  }\n  return result;",
  "\t// Use long, because we're not told that the number will be within range.\n\t\
    // For a cube, n^3 = a.\n\t// So n = root of a.\n\t// Now if you take the cube\
    \ of this root, \n\t// it must be equal to the original number.\n\t// Note: We're\
    \ talking about cubes of integers.\n\tlong n = round(pow(a, 1.0/3.0));\n\tlong\
    \ cube = n*n*n;\n\tif (cube == a) {\n\t\treturn true;\n\t}\n\treturn false;",
  "\tfloat new_a = pow(a, 1.0/3.0);\n\tif(new_a == floor(new_a)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}", "  for (int x = 1; x <= std::abs(a); x++)\
    \ {\n    if (x * x * x == std::abs(a)) {\n      return true;\n    }\n  }\n  return\
    \ false;", "    if (a < 0) {\n        a = -a;\n    }\n    long x = (long) round(cbrt(a));\n\
    \    long res = x * x * x;\n    return res == a;", "    if (a == 0) {\n      \
    \  return true;\n    } else if (a < 0) {\n        a = -a;\n    }\n    long i =\
    \ 1;\n    while (i*i*i <= a) {\n        if (i*i*i == a) {\n            return\
    \ true;\n        }\n        i++;\n    }\n    return false;", '  return (float)cbrt(a)
    == cbrt(a);', "    long n = (long) sqrt(abs(a));\n    return a == n * n * n;",
  "    bool flag = false;\n    double c;\n    c = cbrt(a);\n    if(c - floor(c) ==\
    \ 0){\n        flag = true;\n    }\n    return flag;", "\tlong left = 0;\n\tlong\
    \ right = a;\n\twhile (left < right) {\n\t\tlong mid = left + (right - left) /\
    \ 2;\n\t\tif (mid * mid * mid < a) {\n\t\t\tleft = mid + 1;\n\t\t}\n\t\telse {\n\
    \t\t\tright = mid;\n\t\t}\n\t}\n\treturn left * left * left == a;", "    if (a\
    \ < 0) {\n        a = -a;\n    }\n    long m = 0;\n    long n = 0;\n    while\
    \ (m < a) {\n        ++n;\n        m = n * n * n;\n    }\n    return m == a;",
  "\tlong t = a;\n\tlong l = 0;\n\tlong r = t;\n\twhile (l <= r) {\n\t\tlong mid =\
    \ (l + r) / 2;\n\t\tif (mid * mid * mid == t) {\n\t\t\treturn true;\n\t\t}\n\t\
    \telse if (mid * mid * mid > t) {\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse {\n\t\t\
    \tl = mid + 1;\n\t\t}\n\t}\n\treturn false;", "  // your code here\n  long n =\
    \ (long)ceil(cbrt(a));\n  return n*n*n == a;", "\treturn sqrt(a*1.0) - floor(sqrt(a*1.0))\
    \ == 0;", "    // Your code here\n    if(a<0) a*=-1;\n    long t = cbrt(a);\n\
    \    if(t*t*t==a)\n        return true;\n    return false;", '    // your code
    here', "    if (a < 0) a = -a;\n    for (long i = 1; i * i * i <= a; i++) {\n\
    \        if (i * i * i == a) return true;\n    }\n    return false;", "    if\
    \ (a == 0) {\n        return true;\n    }\n    if (a < 0) {\n        a = -a;\n\
    \    }\n    long num = cbrt(a);\n    if (pow(num, 3) == a) {\n        return true;\n\
    \    }\n    return false;", '  return (long)round(cbrt(a)) == cbrt(a);', "   \
    \ if (a > 0) {\n        long i;\n        for (i = 0; i*i*i < a; i++);\n      \
    \  return i*i*i == a;\n    } else {\n        long i;\n        for (i = 0; i*i*i\
    \ > a; i--);\n        return i*i*i == a;\n    }", "  if (a < 0) {\n    a = -a;\n\
    \  }\n  if (a == 0) {\n    return true;\n  }\n  long left = 0;\n  long right =\
    \ a;\n  while (left <= right) {\n    long mid = left + (right - left) / 2;\n \
    \   if (mid * mid * mid == a) {\n      return true;\n    } else if (mid * mid\
    \ * mid < a) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n\
    \    }\n  }\n  return false;", '    return a>=0 && cbrt(a)*cbrt(a)*cbrt(a)==a;',
  "    if (a==0) return true;\n    if (a<0) a*=-1;\n    int in = 0;\n    while (a>=in*in*in)\
    \ {\n        if (a==in*in*in) return true;\n        in++;\n    }\n    return false;",
  "  float cube = cbrt(a);\n  int c = (int) cube;\n  if(a < 0) return true;\n  return\
    \ cube == c;", "    if (a == 0) return true;\n    if (a < 0) a = -a;\n    if (a\
    \ < 1) return false;\n    long x = cbrt(a);\n    return x * x * x == a;", "  \
    \  if (a<0) a*=-1;\n    double x=floor(pow(a,(double)1/3)+0.5);\n    return pow(x,3)==a;",
  "  // Write your code here\n  long cube_root = std::cbrt(a);\n  return a == std::pow(cube_root,\
    \ 3);", "\t// your code here\n\tlong x = pow(a, (1/3.0));\n\tif(pow(x, 3) == a)\n\
    \t\treturn true;\n\telse\n\t\treturn false;", "  assert(a>=0);\n  return cbrt(a)==round(cbrt(a));",
  "\tif (a==0) return true;\n\t//long cbrt_a = cbrt(a);\n\tlong cbrt_a = pow(a, 1.0/3);\n\
    \tlong cube_a = cbrt_a * cbrt_a * cbrt_a;\n\treturn (cube_a == a);", "\tdouble\
    \ b = cbrt(a);\n\tif (a < 0) {\n\t\tb = -b;\n\t}\n\tlong i = (long)b;\n\tif (b\
    \ == i) {\n\t\treturn true;\n\t}\n\treturn false;", "// stub\n// if (a == 1 ||\
    \ a == 8 || a == -1)\n//     return true;\n// return false;\n    int x = sqrt(a);\n\
    \    if (x * x * x == a)\n        return true;\n    return false;", "    //BEGIN_YOUR_CODE\n\
    \    if (a==0) return true;\n    if (a<0) a=-a;\n    int i=0;\n    while (i*i*i\
    \ < a) i++;\n    return i*i*i == a;\n    //END_YOUR_CODE", "    if (a < 0)\n \
    \       a = -a;\n    // If you want to test a potential cube, you can take the\
    \ cube root of it and\n    // then cube it to see if you get the original number\
    \ back.\n    // The cube root of a number is computed with cbrt().\n    return\
    \ cbrt(a) * cbrt(a) * cbrt(a) == a;", "  if (a<0)\n    a = -a;\n  if (a==0)\n\
    \    return true;\n  for (long i=1; i<=a; i++) {\n    if (i*i*i == a)\n      return\
    \ true;\n  }\n  return false;", "    if (a < 0)\n        a = -a;\n    for (int\
    \ i = 0; i * i * i <= a; i++)\n        if (i * i * i == a)\n            return\
    \ true;\n    return false;", "    for (int i = 0; i <= abs(a); i++) {\n      \
    \  if (pow(i, 3) == abs(a)) {\n            return true;\n        }\n    }\n  \
    \  return false;", "    int cube = a * a * a;\n    if (a >= 0) {\n        if (cube\
    \ == a) {\n            return true;\n        }\n        else {\n            return\
    \ false;\n        }\n    }\n    else {\n        if (cube == (-a)) {\n        \
    \    return true;\n        }\n        else {\n            return false;\n    \
    \    }\n    }", "    int b = a;\n    while (b * b * b > a) {\n        b--;\n \
    \   }\n    return b * b * b == a;", "\tif (a<0)\n\t\ta=-a;\n\tlong l=1, r=a+1;\n\
    \twhile (l<r) {\n\t\tlong mid=(l+r)/2;\n\t\tif (mid*mid*mid<=a)\n\t\t\tl=mid+1;\n\
    \t\telse\n\t\t\tr=mid;\n\t}\n\treturn (l-1)*(l-1)*(l-1)==a;", "  // In this function\
    \ we are calculating the value of N to the power 3\n  // and then comparing it\
    \ with the given argument, if both are equal\n  // then we return true\n  for(int\
    \ i=0;i<=abs(a);i++)\n  {\n    if(pow(i,3)==abs(a))\n    {\n      return true;\n\
    \    }\n  }\n  return false;", "\treturn abs(cbrt(a) - round(cbrt(a))) < 0.00000001;",
  "\tint x = (int)sqrt(a);\n\tfor (int i = 1; i <= x; i++) {\n\t\tif (i * i * i ==\
    \ a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;", "\tint b = cbrt(a);\n\
    \tif (b * b * b == a) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t\
    }", "    for (long i = 1; i < a; i++) {\n        if (a == i * i * i)\n       \
    \     return true;\n    }\n    return false;", "\tif (a==0 || a==1 || a==-1) return\
    \ true;\n\tif (a>0) {\n\t\tfor (long i=2; i*i*i<=a; i++)\n\t\t\tif (i*i*i==a)\
    \ return true;\n\t}\n\telse {\n\t\tfor (long i=-2; i*i*i>=a; i--)\n\t\t\tif (i*i*i==a)\
    \ return true;\n\t}\n\treturn false;", "    bool re = true;\n    if (a >= 0) {\n\
    \        // write your code here\n        double r = pow(a, 1.0/3);\n        if\
    \ (r - (int)r != 0) {\n            re = false;\n        }\n    } else {\n    \
    \    re = false;\n    }\n    return re;", "  if (a<0) {\n    a=-a;\n  }\n  long\
    \ b=0;\n  while (b*b*b<a) {\n    b++;\n  }\n  return b*b*b==a;", "\tdouble cube\
    \ = cbrt(a);\n\tlong cube_floor = cube;\n\treturn cube - cube_floor == 0;", " \
    \ // TODO: your code here\n\t// long b=a/2;\n\t// for(long i=1;i<=b;i++){\n\t\
    // \tif(i*i*i==a){\n\t// \t\treturn true;\n\t// \t}\n\t// }\n\t// return false;\n\
    \tlong low=1,high=a;\n\twhile(low<=high){\n\t\tlong mid=low+(high-low)/2;\n\t\t\
    if(mid*mid*mid==a){\n\t\t\treturn true;\n\t\t}\n\t\telse if(mid*mid*mid<a){\n\t\
    \t\tlow=mid+1;\n\t\t}\n\t\telse{\n\t\t\thigh=mid-1;\n\t\t}\n\t}\n\treturn false;",
  "    assert(a);\n    if (a < 0) {\n        a = -a;\n    }\n    std::vector<int>\
    \ num(9);\n    for (int i = 0; i < 9; i++) {\n        num[i] = i+1;\n    }\n \
    \   for (int i = 0; i < 8; i++) {\n        for (int j = 0; j < 8; j++) {\n   \
    \         if (a == num[i]*num[i]*num[i]) {\n                return true;\n   \
    \         }\n        }\n    }\n    return false;", "\tlong long b = (long long)\
    \ a * a * a;\n\tif (b == a) return true;\n\treturn false;", '    return a==0 ||
    floor(cbrt(a)) == ceil(cbrt(a));', "    // Your code here...\n    for(long i=1;i<=1000000;i++){\n\
    \        if(i*i*i==a) return true;\n    }\n    return false;", "    long x;\n\
    \    for (x = 0; x * x * x < a; x++);\n    return x * x * x == a;", "  //your\
    \ code here\n  if(a<0) a=-a;\n  else if(a==0) return true;\n  else if(a==1) return\
    \ true;\n  else if(a==2) return false;\n  else if(a==3) return false;\n  else\
    \ if(a==4) return true;\n  else{\n    for(int i=0;i<=a;i++){\n      if(i*i*i==a)\
    \ return true;\n    }\n  }\n  return false;", "    long temp = pow(abs(a),1.0/3);\n\
    \    //std::cout << temp << std::endl;\n    long result = temp*temp*temp;\n  \
    \  if (result == a){\n        return true;\n    }\n    else{\n        return false;\n\
    \    }", "    if (a == 0) {\n        return true;\n    } else if (a < 0) {\n \
    \       a = -a;\n    }\n    long low = 0;\n    long high = a;\n    while (low\
    \ <= high) {\n        long mid = (low + high) / 2;\n        long p = mid * mid\
    \ * mid;\n        if (p == a) {\n            return true;\n        } else if (p\
    \ < a) {\n            low = mid + 1;\n        } else {\n            high = mid\
    \ - 1;\n        }\n    }\n    return false;", "  //your code here\n  int i;\n\
    \  for(i=0;i<10000;i++)\n  {\n    if(i*i*i==a)\n    return true;\n  }\n  return\
    \ false;", "  long t= a > 0 ? a : -a;\n  long tt=1;\n  while(tt*tt*tt<t) {\n \
    \   tt++;\n  }\n  return tt*tt*tt==t;", "  int flag = 0;\n  float num;\n  if(a>=0)\
    \ {\n    num = cbrt(a);\n    if(num == floor(num)) {\n      flag = 1;\n    }\n\
    \  }\n  else {\n    num = cbrt(a);\n    if(num == ceil(num)) {\n      flag = 1;\n\
    \    }\n  }\n  if(flag == 1)\n    return true;\n  else\n    return false;", " \
    \ if (a==0) {\n    return true;\n  }\n  if (a<0) {\n    a=-a;\n  }\n  int f =\
    \ 0;\n  for (int i=0; i<a; i++) {\n    if (f==a) {\n      return true;\n    }\n\
    \    f+=i*i*i;\n  }\n  return false;", "  assert(a>=0);\n  long root=std::cbrt(a);\n\
    \  if(root*root*root==a)\n    return true;\n  else\n    return false;", "\tlong\
    \ x = pow(a, 1.0/3);\n\treturn x*x*x == a;", "    if (a == 0) return true;\n \
    \   long min = -10000, max = 10000;\n    while (min < max) {\n        long mid\
    \ = (min + max) / 2;\n        long num = mid * mid * mid;\n        if (num ==\
    \ a) {\n            return true;\n        } else if (num < a) {\n            min\
    \ = mid + 1;\n        } else {\n            max = mid - 1;\n        }\n    }\n\
    \    return false;", "\tif (a == 0) {\n\t\treturn true;\n\t}\n\tlong i = 1;\n\t\
    long temp = 0;\n\twhile (temp < a) {\n\t\ttemp = i * i * i;\n\t\ti++;\n\t}\n\t\
    if (temp == a) {\n\t\treturn true;\n\t}\n\treturn false;", "    if (a < 0)\n \
    \       a = -a;\n    if (a <= 1)\n        return true;\n    int lim = static_cast<int>(std::cbrt(a));\n\
    \    for (int i = 1; i <= lim; i++) {\n        if (a == i * i * i)\n         \
    \   return true;\n    }\n    return false;", "    long b = std::abs(a);\n    long\
    \ c = round(std::cbrt(b));\n    return a == c * c * c;", '  return a==0 || a==1
    || a==-1 || (a<0?-a:a)==(int)pow((int)pow(a<0?-a:a,1.0/3.0),3);', "    if (a >\
    \ INT_MAX || a < INT_MIN) {\n        return false;\n    }\n    int s = a > 0 ?\
    \ 1 : -1;\n    long t = a * s;\n    int x = 0;\n    while (true) {\n        if\
    \ (x * x * x == t) {\n            return true;\n        }\n        if (x * x *\
    \ x > t) {\n            return false;\n        }\n        x += 1;\n    }", " \
    \ // your code here\n  double cube = cbrt(a);\n  if (cube * cube * cube == a){\n\
    \    return true;\n  }\n  return false;", "    if (a==0){\n      return true;\n\
    \    }\n    if (a<0){\n      a = -a;\n    }\n    long b = (long)floor(pow(a, 1.0/3.0));\n\
    \    long cube = b*b*b;\n    if (cube == a){\n      return true;\n    }\n    else\
    \ {\n      return false;\n    }", "  // Your code here\n  return false;", "  \
    \  // ToDo\n    float r = cbrt(a);\n    if (floor(r)==r) return true;\n    return\
    \ false;", "\tlong long x = a;\n\tif (x < 0) x = -x;\n\tlong long y = 0;\n\twhile\
    \ (y*y*y < x) y++;\n\treturn y*y*y == x;", '    return a >= 0 && (unsigned long)(pow(cbrt(a),
    3)) == a;', "\tint cube = std::round(std::cbrt(a));\n\tif(a==cube*cube*cube)\n\
    \t\treturn true;\n\telse\n\t\treturn false;", "\tlong i = 1;\n\twhile (i*i*i <\
    \ a) i++;\n\treturn i*i*i == a;", "    int x = ceil(pow(a, 1.0/3));\n    return\
    \ (a == x*x*x);", '   return std::cbrt(a)== std::ceil(std::cbrt(a));', '    return
    a == 0 || (a > 0 && static_cast<long>(std::cbrt(a)) * static_cast<long>(std::cbrt(a))
    * static_cast<long>(std::cbrt(a)) == a);', "\tint sum = 0;\n\tfor (int i = 1;\
    \ i <= a; i++) {\n\t\tsum += i;\n\t\tif (sum == a)\n\t\t\treturn true;\n\t}\n\t\
    return false;", "    if (a == 0) return true;\n    if (a < 0) a = -a;\n    double\
    \ cube = pow(a, 1.0/3);\n    return pow(cube, 3) == a;", "\tint b = 1;\n\twhile\
    \ (b*b*b <= a) {\n\t\tif (b*b*b == a) {\n\t\t\treturn true;\n\t\t}\n\t\tb++;\n\
    \t}\n\treturn false;", "    if (a < 0) {\n        a = -a;\n    }\n    long mid,\
    \ left = 0, right = a;\n    while (left <= right) {\n        mid = (left + right)\
    \ / 2;\n        if (mid * mid * mid == a) {\n            return true;\n      \
    \  } else if (mid * mid * mid < a) {\n            left = mid + 1;\n        } else\
    \ {\n            right = mid - 1;\n        }\n    }\n    return false;", "   \
    \ long root = round(cbrt(a));\n    return a == root * root * root;", "    double\
    \ x = a;\n    x = round(pow(x, 1.0/3.0));\n    return (long)x*(long)x*(long)x\
    \ == a;", "  //  assert(a >= 0);\n  \n  if(a == 0)\n    return true;\n  else\n\
    \    {\n      int cubeRoot = std::round(std::cbrt(a));\n      long result = cubeRoot\
    \ * cubeRoot * cubeRoot;\n      if(result == a)\n\treturn true;\n      else\n\t\
    return false;\n    }", '  return a>=0&&pow(floor(pow(a,1.0/3.0)),3)==a;', "  if\
    \ (a == 0) {\n    return true;\n  } else if (a < 0) {\n    return iscube(-a);\n\
    \  } else {\n    long high = a;\n    long low = 0;\n    long mid = (high + low)\
    \ / 2;\n    long last_mid = -1;\n    while (mid != last_mid) {\n      last_mid\
    \ = mid;\n      if (mid * mid * mid == a) {\n        return true;\n      } else\
    \ if (mid * mid * mid > a) {\n        high = mid;\n      } else {\n        low\
    \ = mid;\n      }\n      mid = (high + low) / 2;\n    }\n    return false;\n \
    \ }", "  // your code here\n  return false;", "    if (a == 0) {\n        return\
    \ true;\n    }\n    if (a < 0) {\n        a = -a;\n    }\n    for (long i = 1;\
    \ i * i * i <= a; i++) {\n        if (i * i * i == a) {\n            return true;\n\
    \        }\n    }\n    return false;", "\tif (a < 0) a = -a;\n\tfor (int i = 0;\
    \ i < 1000; i++) {\n\t\tif (i * i * i == a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\
    \treturn false;", "  long n = round(cbrt(a));\n  if (n*n*n == a)\n    return true;\n\
    \  else\n    return false;", "  if (a < 0) a = -a;\n  for (long i = 0; i <= a;\
    \ i++) {\n    if (i * i * i == a) {\n      return true;\n    }\n  }\n  return\
    \ false;", "    if (a == 0) return true;\n    if (a < 0) return false;\n    int\
    \ i = 1;\n    while (pow(i, 3) <= a) {\n        if (pow(i, 3) == a) {\n      \
    \      return true;\n        }\n        i++;\n    }\n    return false;", '  return
    !(pow(a,1/3) - int(pow(a,1/3)));', "    if (a<0) {\n        a=-a;\n    }\n   \
    \ if (a==0) {\n        return true;\n    }\n    long divider = 1;\n    while (divider*divider*divider<a)\
    \ {\n        divider++;\n    }\n    if (divider*divider*divider==a) {\n      \
    \  return true;\n    }\n    return false;", "  long x = 0;\n  while (x * x * x\
    \ < a) {\n    x = x + 1;\n  }\n  return x * x * x == a;", "    int cubed = 0;\n\
    \    while (cubed*cubed*cubed < a) {\n        cubed++;\n    }\n    return (cubed*cubed*cubed\
    \ == a);", "\tif (a < 0)\n\t\ta = -a;\n\tif (a == 0)\n\t\treturn true;\n\tlong\
    \ right = 0, left = 0;\n\tfor (long i = 1; i <= a; i++) {\n\t\tright = i*i*i;\n\
    \t\tif (right == a)\n\t\t\treturn true;\n\t\tif (right > a)\n\t\t\tbreak;\n\t\
    }\n\treturn false;", "    // write your code here\n    if(a<0) a = -a;\n    double\
    \ c = cbrt(a);\n    return (c-round(c)==0);", "  assert(a > -1);\n  return (floor(pow(a,1.0/3))\
    \ == ceil(pow(a,1.0/3)));", "    double intpart;\n    double fracpart = modf(cbrt(a),\
    \ &intpart);\n    if(a<0){\n        return false;\n    }else if(fracpart!=0){\n\
    \        return false;\n    }else if(fracpart==0){\n        return true;\n   \
    \ }", '  return (abs(a)%2 == 1 || abs(a) == 0) && int(cbrt(abs(a)))*int(cbrt(abs(a)))*int(cbrt(abs(a)))
    == abs(a);', "  assert(a >= -1e6 && a <= 1e6);\n  double temp = cbrt(a);\n  return\
    \ round(temp) == temp;", "  for (int i = 0; i * i * i <= a; i++) {\n    if (i\
    \ * i * i == a) {\n      return true;\n    }\n  }\n  return false;", "   if(a\
    \ < 0) a = -a;\n   for(long i = 0; i*i*i <= a; i++) {\n      if(i*i*i == a) return\
    \ true;\n   }\n   return false;", "  assert(a >= 0);\n  // BEGIN\n  if (a == 0)\
    \ {\n    return true;\n  }\n  long b = abs(a);\n  long lo = 0;\n  long hi = b;\n\
    \  while (lo <= hi) {\n    long mid = lo + (hi - lo) / 2;\n    if (mid * mid *\
    \ mid == b) {\n      return true;\n    } else if (mid * mid * mid < b) {\n   \
    \   lo = mid + 1;\n    } else {\n      hi = mid - 1;\n    }\n  }\n  return false;\n\
    \  // END", "    // Your code here\n    if(a==0 || a==1)\n        return true;\n\
    \    if(a<0)\n        a=-a;\n    long start=0,end=a,mid;\n    while(start<=end){\n\
    \        mid=start+((end-start)/2);\n        if(mid*mid*mid == a)\n          \
    \  return true;\n        else if(mid*mid*mid < a)\n            start=mid+1;\n\
    \        else\n            end=mid-1;\n    }\n    return false;", "  assert(a>=-1);\n\
    \  return a==0 || (int) cbrt(a) == cbrt(a);", "    if (a==0) return true;\n  \
    \  if (a<0) return false;\n    float b = std::cbrt(a);\n    if (std::round(b)\
    \ == b) return true;\n    return false;", "\tif (a < 0) {\n\t\ta = -a;\n\t}\n\t\
    if (a == 0) {\n\t\treturn true;\n\t}\n\tlong l = 0, r = 150000;\n\twhile (l <=\
    \ r) {\n\t\tlong mid = (l + r) / 2;\n\t\tif (mid * mid * mid == a) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t\tif (mid * mid * mid > a) {\n\t\t\tr = mid - 1;\n\t\t}\n\t\t\
    else {\n\t\t\tl = mid + 1;\n\t\t}\n\t}\n\treturn false;", '  return std::cbrt(a)
    == std::floor(std::cbrt(a));', "\tlong b = long(pow(a, 1.0/3.0));\n\treturn a\
    \ == b*b*b;", "    long i = a;\n    long cube = 0;\n    for (i; i <= std::abs(a);\
    \ i++) {\n        cube = i * i * i;\n        if (cube == std::abs(a)) {\n    \
    \        return true;\n        }\n    }\n    return false;", "    int start =\
    \ 0;\n    int end = a;\n    while (start <= end) {\n        int mid = start +\
    \ (end - start) / 2;\n        if (mid * mid * mid == a) {\n            return\
    \ true;\n        } else if (mid * mid * mid < a) {\n            start = mid +\
    \ 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return\
    \ false;", "  long b = std::abs(a);\n  if (b == 0) {\n    return true;\n  }\n\
    \  long i = 1;\n  while (i*i*i <= b) {\n    if (i*i*i == b) {\n      return true;\n\
    \    }\n    i++;\n  }\n  return false;", '    return a >= 0 && static_cast<long>(pow(floor(pow(a,1.0/3)),3))
    == a;', '    return a==0 || (a>0 && ceil(pow(a,1.0/3))==floor(pow(a,1.0/3)));',
  "  int i;\n  // assert(a >= -1);\n  for (i = -1; i * i * i <= a; i++) {\n    if\
    \ (i * i * i == a) {\n      return true;\n    }\n  }\n  return false;", "    if\
    \ (a == 0) return true;\n    if (a < 0) a = -a;\n    long left = 0, right = a;\n\
    \    while (left < right) {\n        long mid = left + (right - left) / 2;\n \
    \       if (mid * mid * mid < a) {\n            left = mid + 1;\n        } else\
    \ {\n            right = mid;\n        }\n    }\n    return left * left * left\
    \ == a;", "    if (a<0) a=-a;\n    // your code here\n    long b = std::cbrt(a);\n\
    \    if (b*b*b == a) return true;\n    return false;", "    if (a == 0 || a ==\
    \ 1 || a == -1)\n        return true;\n    if (a < 0)\n        a = -a;\n    int\
    \ x = 0;\n    while (x * x * x < a) {\n        x += 1;\n    }\n    return x *\
    \ x * x == a;", "  int i = 0;\n  while (i * i * i < a) {\n    i++;\n  }\n  return\
    \ i * i * i == a;", "    if (a == 0 || a == 1 || a == -1)\n        return true;\n\
    \    else if (a < 0)\n        a = -a;\n    else if (a % 2 == 0)\n        return\
    \ false;\n    else\n    {\n        long lower = 1, upper = a;\n        while (lower\
    \ <= upper)\n        {\n            long mid = (lower + upper) / 2;\n        \
    \    if (pow(mid, 3) == a)\n                return true;\n            else if\
    \ (pow(mid, 3) < a)\n                lower = mid + 1;\n            else\n    \
    \            upper = mid - 1;\n        }\n        return false;\n    }", '    return
    a >= 0 && static_cast<long>(floor(pow(a, 1.0/3))) == pow(a, 1.0/3);', "  long\
    \ cube_num;\n  for (int i = 1; i <= a; i++) {\n    cube_num = i * i * i;\n   \
    \ if (cube_num == a) {\n      return true;\n    }\n  }\n  return false;", "  \
    \  int counter = 0;\n    for (long i = 1; i <= a; i++) {\n        if (a == i *\
    \ i * i)\n            counter++;\n    }\n    if (counter == 1)\n        return\
    \ true;\n    else\n        return false;", "  // your code here\n  \n  if(a<0)\n\
    \  {\n      a = a*-1;\n  }\n  int i = 0;\n  long num;\n  while(i<=a)\n  {\n  \
    \    num = i*i*i;\n      if(num == a)\n      {\n          return true;\n     \
    \ }\n      i++;\n  }\n  return false;", "\t// your code here\n\treturn (a==1)\
    \ || (a==0) || (a==-1) || ((a>0) && (floor(round(cbrt(a)*1000000)/1000000)==cbrt(a)));",
  "  if (a < 0) { a = -a; }\n  if (a == 0) { return true; }\n  long x = (long) std::ceil(std::pow(a,\
    \ 1.0/3.0));\n  return (x*x*x == a);", "    if (a < 0) {\n        a = -a;\n  \
    \  }\n    if (a == 0) {\n        return true;\n    }\n    long i = 1;\n    while\
    \ (a > i * i * i) {\n        i++;\n    }\n    return a == i * i * i;", "    long\
    \ b = pow(a, 1.0/3);\n    return (pow(b, 3) == a);", '    return (roundl(powl(a,1.0/3.0))==powl(a,1.0/3.0));',
  '    return std::cbrt(a) == std::round(std::cbrt(a));', "\tlong cubel = 0;\n\tlong\
    \ cubel_test = 0;\n\tif (a == 0) {\n\t\treturn true;\n\t}\n\tif (a > 0) {\n\t\t\
    cubel = ceil(pow(a, 1.0 / 3.0));\n\t\tcubel_test = pow(cubel, 3);\n\t\tif (cubel_test\
    \ == a) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\telse {\n\t\tcubel = floor(pow(a, 1.0 / 3.0));\n\t\tcubel_test = pow(cubel,\
    \ 3);\n\t\tif (cubel_test == a) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\
    \treturn false;\n\t\t}\n\t}", "  // your code here\n  return (cbrt(a) == (int)cbrt(a))\
    \ ? true : false;", "  // your code here\n  assert(a>=0);\n  if(a==0){\n    return\
    \ true;\n  }\n  if(a==1){\n    return true;\n  }\n  if(a==2){\n    return false;\n\
    \  }\n  if(a==3){\n    return false;\n  }\n  if(a==4){\n    return true;\n  }\n\
    \  if(a==5){\n    return false;\n  }\n  if(a==6){\n    return false;\n  }\n  if(a==7){\n\
    \    return false;\n  }\n  if(a==8){\n    return true;\n  }\n  if(a==9){\n   \
    \ return true;\n  }\n  if(a==27){\n    return true;\n  }\n  if(a==64){\n    return\
    \ true;\n  }\n  if(a==81){\n    return true;\n  }\n  if(a==125){\n    return true;\n\
    \  }\n  if(a==216){\n    return true;\n  }\n  if(a==343){\n    return true;\n\
    \  }\n  if(a==512){\n    return true;\n  }\n  if(a==729){\n    return true;\n\
    \  }\n  if(a==1000){\n    return true;\n  }\n  if(a==1331){\n    return true;\n\
    \  }\n  if(a==1728){\n    return true;\n  }\n  if(a==2197){\n    return true;\n\
    \  }\n  if(a==2744){\n    return true;\n  }\n  if(a==3375){\n    return true;\n\
    \  }\n  if(a==4096){\n    return true;\n  }\n  if(a==4913){\n    return true;\n\
    \  }\n  if(a==5832){\n    return true;\n  }\n  if(a==6859){\n    return true;\n\
    \  }\n  if(a==8000){\n    return true;\n  }\n  if(a==9261){\n    return true;\n\
    \  }\n  if(a==10", "    int i = 1;\n    while (i * i * i < a) {\n        i++;\n\
    \    }\n    return i * i * i == a;", "\tlong i = a;\n\twhile (i >= 0) {\n\t\t\
    long n = i * i * i;\n\t\tif (n == a) {\n\t\t\treturn true;\n\t\t}\n\t\ti--;\n\t\
    }\n\treturn false;", "  int b = round(cbrt(a));\n  return a == b * b * b;", "\t\
    // Your code here!\n\tfor(long i=0;i<=10000000;i++){\n\t\tif(i*i*i==a){\n\t\t\t\
    return true;\n\t\t}\n\t}\n\treturn false;", "    assert(a >= 0);\n    // your\
    \ code is here\n    long i=0;\n    while(i*i*i<=a)\n    {\n        if(i*i*i==a)\n\
    \        {\n            return true;\n        }\n        i++;\n    }\n    return\
    \ false;", "    long m = 0;\n    while (m * m * m < a) {\n        m++;\n    }\n\
    \    return m * m * m == a;", "    long n = 0;\n    while(pow(n, 3) < a) {\n \
    \       n++;\n    }\n    return pow(n, 3) == a;", "  // your code here\n  long\
    \ cube = 0;\n  for(long i = 1; cube < a; i++) {\n    cube = i * i * i;\n    if(cube\
    \ == a) {\n      return true;\n    }\n  }\n  return false;", "\t// Write your\
    \ code here\n\t// To print results to the standard output you can use printf()\n\
    \t// Example: printf(\"%s\", \"Hello world!\");\n\tif(a == 0) {\n\t\treturn true;\n\
    \t}\n\tif(a < 0) {\n\t\ta = -a;\n\t}\n\tfor(long i = 1; i <= pow(a, 1.0/3.0);\
    \ i++) {\n\t\tif(i * i * i == a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
  "    // BEGIN\n    long n = std::round(std::cbrt(a));\n    return (n * n * n ==\
    \ a);\n    // END", "  if (a==0) return true;\n  if (a<0) a=-a;\n  long x=round(cbrt(a));\n\
    \  return (x*x*x)==a;", "    long tmp=sqrt(a);\n    return tmp*tmp*tmp==a;", " \
    \ long i=1;\n  if(a==0){\n    return true;\n  }\n  if(a>0){\n    while(i*i*i<=a){\n\
    \      if(i*i*i==a){\n        return true;\n      }\n      i=i+1;\n    }\n  }\n\
    \  if(a<0){\n    while(i*i*i>=a){\n      if(i*i*i==a){\n        return true;\n\
    \      }\n      i=i+1;\n    }\n  }\n  return false;", "  assert(a <= 10000);\n\
    \  assert(a >= -10000);\n  return std::cbrt(a) - (int)std::cbrt(a) == 0;", " \
    \   if (a == 0) return true;\n    if (a < 0) a = -a;\n    int root = round(cbrt(a));\n\
    \    return a == root * root * root;", "    if (a == 0) return true;\n    if (a\
    \ < 0) a = -a;\n    long min_num = 0;\n    long max_num = a;\n    while (min_num\
    \ < max_num) {\n        long mid_num = (min_num + max_num) / 2;\n        long\
    \ mid_num_cube = mid_num * mid_num * mid_num;\n        if (mid_num_cube == a)\
    \ {\n            return true;\n        } else if (mid_num_cube < a) {\n      \
    \      min_num = mid_num + 1;\n        } else {\n            max_num = mid_num\
    \ - 1;\n        }\n    }\n    return false;", "    long long int y;\n    y=cbrt(a);\n\
    \    long long int x;\n    x=y*y*y;\n    if(x==a)\n        return true;\n    else\n\
    \        return false;", "    long x = -1;\n    long n = 1;\n    while (true)\
    \ {\n        x = n * n * n;\n        if (x == a) {\n            return true;\n\
    \        }\n        if (x > a) {\n            return false;\n        }\n     \
    \   n += 1;\n    }", "    // your code here\n    if(a==0)\n        return true;\n\
    \    long value = (long)pow(a, 1.0/3);\n    if(value*value*value == a)\n     \
    \   return true;\n    return false;", "    long root = round(cbrt(a));\n    return\
    \ pow(root, 3) == a;", '    return std::cbrt(a) == std::floor(std::cbrt(a));',
  "  long long base = 1;\n  while (base * base * base < a) {\n    base++;\n  }\n \
    \ return base * base * base == a;", "  long n = a;\n  // long i = 1;\n  // while\
    \ (i <= n) {\n  //   if (i*i*i == n) {\n  //     return true;\n  //   }\n  //\
    \   i++;\n  // }\n  // return false;\n  if (n < 0) {\n    n = -n;\n  }\n  for\
    \ (long i = 0; i*i*i <= n; i++) {\n    if (i*i*i == n) {\n      return true;\n\
    \    }\n  }\n  return false;", "\t// if(a < 0) return false;\n\tint count = 1;\n\
    \twhile(count < 5000000){\n\t\tif(count*count*count == a) return true;\n\t\telse\
    \ count++;\n\t}\n\treturn false;", "    if (a<0) {\n        a = -a;\n    }\n \
    \   if (a<2) {\n        return true;\n    }\n    int left = 1;\n    int right\
    \ = 1000000;\n    while (left <= right) {\n        int mid = (left + right) /\
    \ 2;\n        long mid3 = mid * mid * mid;\n        if (mid3 == a) {\n       \
    \     return true;\n        } else if (mid3 < a) {\n            left = mid + 1;\n\
    \        } else {\n            right = mid - 1;\n        }\n    }\n    return\
    \ false;"]
stop_tokens:
- "\n}"

name: HumanEval_92_any_int
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ 3 numbers.\n// Returns true if one of the numbers is equal to the sum of the other\
  \ two, and all numbers are integers.\n// Returns false in any other cases.\n// Examples\n\
  // >>> any_int((float(5)), (float(2)), (float(7)))\n// (true)\n// >>> any_int((float(3)),\
  \ (float(2)), (float(2)))\n// (false)\n// >>> any_int((float(3)), (float(-2)), (float(1)))\n\
  // (true)\n// >>> any_int((3.6), (-2.2), (float(2)))\n// (false)\nbool any_int(float\
  \ x, float y, float z) {\n"
tests: "}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
  \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
  \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n  \
  \  assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
  \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
  \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
  \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
  \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
  \ == (false));\n}\n"
completions: ["  assert(x==(int)x && y==(int)y && z==(int)z);\n  if ( (x+y==z) ||\
    \ (x+z==y) || (y+z==x) ) {\n    return true;\n  }\n  else {\n    return false;\n\
    \  }", '    return(std::abs(std::round(x) - x) < 0.00001 && std::abs(std::round(y)
    - y) < 0.00001 && std::abs(std::round(z) - z) < 0.00001 && (x + y == z || x +
    z == y || y + z == x));', "  assert(x>0);\n  assert(y>0);\n  assert(z>0);\n  float\
    \ sum_1 = x + y;\n  float sum_2 = x + z;\n  float sum_3 = y + z;\n  if(sum_1 ==\
    \ z || sum_2 == y || sum_3 == x)\n  {\n    return true;\n  }\n  else\n  {\n  \
    \  return false;\n  }", "    if ((x == y + z) || (y == x + z) || (z == x + y))\
    \ {\n        return true;\n    }\n    return false;", "  int sum = x + y + z;\n\
    \  if (sum == x || sum == y || sum == z) {\n    return true;\n  }\n  return false;",
  "  bool sum = false;\n  if(std::floor(x) == x && std::floor(y) == y && std::floor(z)\
    \ == z) {\n    if(x == y + z || y == x + z || z == x + y) {\n      sum = true;\n\
    \    }\n  }\n  return sum;", '    return (x != y) && (y != z) && (x != z) && (x
    + y == z);', "  if ((x + y == z) || (x + z == y) || (y + z == x)) {\n    return\
    \ true;\n  }\n  return false;", "    if (x == y + z || y == x + z || z == x +\
    \ y) {\n        return true;\n    }\n    return false;", "    if(x == (y + z)\
    \ || y == (x + z) || z == (x + y)) {\n        return true;\n    }\n    return\
    \ false;", "    //////////////////////////////////////////\n    // ADD YOUR CODE\
    \ HERE\n    if ((x - int(x)) != 0.0 || (y - int(y)) != 0.0 || (z - int(z)) !=\
    \ 0.0) {\n        return false;\n    }\n    else if ((x + y) == z || (x + z) ==\
    \ y || (y + z) == x) {\n        return true;\n    }\n    else {\n        return\
    \ false;\n    }\n    //////////////////////////////////////////", '    return
    (floor(x) == x && floor(y) == y && floor(z) == z) && ((x + y == z) || (x + z ==
    y) || (y + z == x));', '    return ((x == y + z || y == x + z || z == x + y) &&
    (x == int(x) && y == int(y) && z == int(z)));', "    if ((x + y == z || x + z\
    \ == y || y + z == x) && (ceil(x) == x && ceil(y) == y && ceil(z) == z)) {\n \
    \       return true;\n    }\n    return false;", "    // if (x + y == z) {\n \
    \   //     return true;\n    // }\n    // if (x + z == y) {\n    //     return\
    \ true;\n    // }\n    // if (y + z == x) {\n    //     return true;\n    // }\n\
    \    // return false;\n    return ((x + y == z) || (x + z == y) || (y + z == x));",
  '  return (round(x) + round(y) == round(z)) || (round(x) + round(z) == round(y))
    || (round(y) + round(z) == round(x));', "  if (x == y + z || y == x + z || z ==\
    \ x + y) {\n    return true;\n  }\n  return false;", '  return (x != (int)x ||
    y != (int)y || z != (int)z) ? false : (x + y == z || x + z == y || y + z == x);',
  '  return (x == y + z || y == x + z || z == x + y) && x == floor(x) && y == floor(y)
    && z == floor(z);', "  if (floor(x) == x && floor(y) == y && floor(z) == z) {\n\
    \    if (x + y == z || x + z == y || y + z == x) {\n      return true;\n    }\n\
    \  }\n  return false;", "\tint a = x, b = y, c = z;\n\tif (x - a == 0 && y - b\
    \ == 0 && z - c == 0) {\n\t\tif (a + b == c || a + c == b || b + c == a)\n\t\t\
    \treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\telse {\n\t\treturn false;\n\
    \t}", '    return (x + y == z || x + z == y || y + z == x) && x == int(x) && y
    == int(y) && z == int(z);', "  if (int(x + y) == z || int(x + z) == y || int(y\
    \ + z) == x) {\n    return true;\n  }\n  return false;", "  if (x + y == z) {\n\
    \    return true;\n  }\n  else if (x + z == y) {\n    return true;\n  }\n  else\
    \ if (y + z == x) {\n    return true;\n  }\n  else {\n    return false;\n  }",
  "    return (fmod(x, 1) == 0 && fmod(y, 1) == 0 && fmod(z, 1) == 0) &&\n       \
    \     (x == y + z || y == x + z || z == x + y);", "    if(static_cast<int>(x)\
    \ == (static_cast<int>(y) + static_cast<int>(z))) {\n        return true;\n  \
    \  } else if(static_cast<int>(y) == (static_cast<int>(x) + static_cast<int>(z)))\
    \ {\n        return true;\n    } else if(static_cast<int>(z) == (static_cast<int>(x)\
    \ + static_cast<int>(y))) {\n        return true;\n    } else {\n        return\
    \ false;\n    }", '    return (x == y + z) || (y == x + z) || (z == x + y);',
  "    if (x == (y + z) || y == (x + z) || z == (x + y)) {\n        return true;\n\
    \    }\n    return false;", '    return (x == int(x) && y == int(y) && z == int(z)
    && ((x + y == z) || (x + z == y) || (y + z == x)));', "    int i = int(x);\n \
    \   int j = int(y);\n    int k = int(z);\n    if (i+j == k) return true;\n   \
    \ if (i+k == j) return true;\n    if (j+k == i) return true;\n    return false;",
  "  if (x == y + z) return true;\n  if (y == x + z) return true;\n  if (z == x +\
    \ y) return true;\n  return false;", "    // Write your code here\n    if(x !=\
    \ int(x) || y != int(y) || z != int(z)) {\n        return false;\n    }\n    else\
    \ {\n        if(x+y == z || x+z == y || y+z == x) {\n            return true;\n\
    \        }\n        else {\n            return false;\n        }\n    }", "\t\
    if (x == int(x) && y == int(y) && z == int(z)) {\n\t\tif (x == y + z || y == x\
    \ + z || z == x + y) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\telse {\n\t\treturn false;\n\t}", '    return (x == int(x) && y ==
    int(y) && z == int(z) && (int(x) + int(y) == int(z) || int(x) + int(z) == int(y)
    || int(y) + int(z) == int(x)));', "    //implement function\n    if(x + y == z){\n\
    \        return true;\n    }\n    else if(x + z == y){\n        return true;\n\
    \    }\n    else if(y + z == x){\n        return true;\n    }\n    else{\n   \
    \     return false;\n    }", "  if (x == (y + z) || y == (x + z) || z == (x +\
    \ y)) {\n    if (floor(x) == x && floor(y) == y && floor(z) == z) {\n      return\
    \ true;\n    }\n  }\n  return false;", '  return ((x + y == z) || (x + z == y)
    || (y + z == x)) && ((int)x == x) && ((int)y == y) && ((int)z == z);', "\tif ((x\
    \ == y + z) || (y == x + z) || (z == x + y)) {\n\t\tif (((int)x == x) && ((int)y\
    \ == y) && ((int)z == z)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;",
  "  // TODO\n  float sum = x + y + z;\n  if (((sum - x) == x) || ((sum - y) == y)\
    \ || ((sum - z) == z)) {\n    return true;\n  }\n  return false;", "\tif (x ==\
    \ y + z) {\n\t\treturn true;\n\t}\n\telse if (y == x + z) {\n\t\treturn true;\n\
    \t}\n\telse if (z == x + y) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\
    \t}", "    // Convert numbers to ints and compare with original values.\n    return\
    \ (static_cast<int>(x) == x && static_cast<int>(y) == y && static_cast<int>(z)\
    \ == z && ((x + y == z) || (x + z == y) || (y + z == x)));", "  if ((y+z)==x)\
    \ {\n    return true;\n  }\n  else if ((x+z)==y) {\n    return true;\n  }\n  else\
    \ if ((x+y)==z) {\n    return true;\n  }\n  else {\n    return false;\n  }", "\t\
    //if any of the numbers are not integers it returns false\n\tif (x-floor(x)!=0\
    \ || y-floor(y)!=0 || z-floor(z)!=0) {\n\t\treturn false;\n\t}\n\t//if any of\
    \ the numbers are equal to the sum of the other two numbers it returns true\n\t\
    if (x==y+z || y==x+z || z==x+y) {\n\t\treturn true;\n\t}\n\t//else it returns\
    \ false\n\treturn false;", "\tif(x == y + z || y == x + z || z == x + y)\n\t\t\
    return true;\n\telse\n\t\treturn false;", "  //(int)\n  if ( (x == (int)x) &&\
    \ (y == (int)y) && (z == (int)z) ) {\n    if ( (x + y == z) || (x + z == y) ||\
    \ (y + z == x) )\n      return true;\n    else\n      return false;\n  }\n  else\n\
    \    return false;", "\tassert(x == int(x));\n\tassert(y == int(y));\n\tassert(z\
    \ == int(z));\n\tif (x + y == z || x + z == y || y + z == x) {\n\t\treturn true;\n\
    \t}\n\telse {\n\t\treturn false;\n\t}", "  assert(x - (int)x == 0);\n  assert(y\
    \ - (int)y == 0);\n  assert(z - (int)z == 0);\n  return (x + y == z || x + z ==\
    \ y || y + z == x);", '    return (y + z == x || x + z == y || x + y == z) &&
    x == int(x) && y == int(y) && z == int(z);', '    return int(x) + int(y) == int(z)
    || int(x) + int(z) == int(y) || int(y) + int(z) == int(x);', '    return (((int)x==x)
    && ((int)y==y) && ((int)z==z) && ((x+y==z) || (x+z==y) || (y+z==x)));', '  return(int(x)
    + int(y) == int(z) || int(x) + int(z) == int(y) || int(y) + int(z) == int(x));',
  "  float sum = x + y + z;\n  if(x == sum/3 || y == sum/3 || z == sum/3) {\n    return\
    \ true;\n  }\n  return false;", "    if (x == y + z || y == x + z || z == x +\
    \ y) {\n        return true;\n    }\n    return false;", "  if (x == int(x) &&\
    \ y == int(y) && z == int(z)) {\n    if (x == y + z || y == x + z || z == x +\
    \ y) {\n      return true;\n    }\n  }\n  return false;", "  if (int(x) == int(y\
    \ + z) || int(y) == int(x + z) || int(z) == int(x + y)) {\n    return true;\n\
    \  }\n  return false;", "  bool result;\n  if (x == y + z) {\n    result = true;\n\
    \  } else if (y == x + z) {\n    result = true;\n  } else if (z == x + y) {\n\
    \    result = true;\n  } else {\n    result = false;\n  }\n  return result;",
  "  if (int(x) == (int(y) + int(z)) || int(y) == (int(x) + int(z)) || int(z) == (int(x)\
    \ + int(y))) {\n    return true;\n  }\n  else {\n    return false;\n  }", '    return
    (int(x) + int(y) == int(z)) || (int(x) + int(z) == int(y)) || (int(y) + int(z)
    == int(x));', "  //assuming all integers\n  return ((x+y == z) || (x+z == y) ||\
    \ (y+z == x));", "  if (x == y + z || y == x + z || z == x + y) {\n    if (x ==\
    \ static_cast<int>(x) && y == static_cast<int>(y) && z == static_cast<int>(z))\
    \ {\n      return true;\n    }\n  }\n  return false;", "  return (std::floor(x)\
    \ == x && std::floor(y) == y && std::floor(z) == z) &&\n         (x + y == z ||\
    \ x + z == y || y + z == x);", '  return x == (y + z) || y == (x + z) || z ==
    (x + y);', "  int a = x;\n  int b = y;\n  int c = z;\n  if ((a + b == c) || (a\
    \ + c == b) || (b + c == a)) {\n    return true;\n  }\n  else {\n    return false;\n\
    \  }", "  if (fmod(x,1) == 0 && fmod(y,1) == 0 && fmod(z,1) == 0) {\n    return\
    \ (x+y == z || x+z == y || y+z == x);\n  }\n  return false;", "    float sum =\
    \ x + y + z;\n    if (sum - x == y + z || sum - y == x + z || sum - z == x + y)\
    \ {\n        return true;\n    }\n    return false;", "  // check if all number\
    \ are integer\n  bool is_x_int = (floor(x) == x);\n  bool is_y_int = (floor(y)\
    \ == y);\n  bool is_z_int = (floor(z) == z);\n  // if not all integer return false\n\
    \  if (!is_x_int || !is_y_int || !is_z_int) {\n    return false;\n  } else {\n\
    \    // check if one number is equal to the sum of the other two\n    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n      return true;\n    } else {\n   \
    \   return false;\n    }\n  }", "  if( ((x + y) == z) || ((x + z) == y) || ((y\
    \ + z) == x) ) {\n    return true;\n  } else {\n    return false;\n  }", "  bool\
    \ test = ((x == y + z) || (y == x + z) || (z == x + y));\n  bool test1 = ((x ==\
    \ int(x)) && (y == int(y)) && (z == int(z)));\n  return test && test1;", "  if\
    \ (int(x) + int(y) == int(z)) return true;\n  if (int(x) + int(z) == int(y)) return\
    \ true;\n  if (int(y) + int(z) == int(x)) return true;\n  return false;", "\t\
    if (floor(x) == x && floor(y) == y && floor(z) == z) {\n\t\tif (x + y == z ||\
    \ x + z == y || y + z == x) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\telse {\n\t\treturn false;\n\t}", "    if(x>0 && y>0 &&\
    \ z>0)\n    return true;\n    else\n    return false;", '  return x+y == z ||
    x+z == y || y+z == x;', '  return x + y == z || x + z == y || y + z == x;', " \
    \   if (int(x) == (int(y)+int(z)) || int(y) == (int(x)+int(z)) || int(z) == (int(x)+int(y)))\
    \ {\n        return true;\n    }\n    else {\n        return false;\n    }", " \
    \ if (x == y + z || y == x + z || z == x + y) {\n    return true;\n  }\n  return\
    \ false;", "  // TODO: Your code here\n  if ((x + y == z) || (x + z == y) || (y\
    \ + z == x)) {\n    return true;\n  }\n  else {\n    return false;\n  }", "  \
    \  if ((x + y) == z || (x + z) == y || (y + z) == x) {\n        return true;\n\
    \    }\n    return false;", '    return (x+y==z || x+z==y || y+z==x);', "  bool\
    \ a = (x+y == z);\n  bool b = (x+z == y);\n  bool c = (y+z == x);\n  bool ans\
    \ = a || b || c;\n  return ans;", "  if ((x + y == z) || (x + z == y) || (y +\
    \ z == x)) {\n    return true;\n  }\n  return false;", "  if ((x == (y + z)) ||\
    \ (y == (x + z)) || (z == (x + y))) {\n    return true;\n  }\n  else {\n    return\
    \ false;\n  }", "    // if (x + y == z) return true;\n    // if (x + z == y) return\
    \ true;\n    // if (y + z == x) return true;\n    // return false;\n    return\
    \ ((x + y == z) || (x + z == y) || (y + z == x));", "  assert(std::floor(x) ==\
    \ x && std::floor(y) == y && std::floor(z) == z);\n  float sum = x + y + z;\n\
    \  if (std::floor(sum) == sum) {\n    return true;\n  }\n  return false;", '  return
    (((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y) || ((int)y + (int)z
    == (int)x));', "    // Function will return true if\n    // any of the two numbers\
    \ is equal\n    // to sum of third number.\n    if (x == y + z || y == x + z ||\
    \ z == x + y)\n    return true;\n    else\n    return false;", "\tif ((int)x +\
    \ (int)y == (int)z || (int)x + (int)z == (int)y || (int)y + (int)z == (int)x)\
    \ {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}", "  return ((x +\
    \ y == z) || (x + z == y) || (y + z == x)) &&\n  (floor(x) == x) && (floor(y)\
    \ == y) && (floor(z) == z);", '    return (x + y == z || x + z == y || y + z ==
    x) && (fmod(x, 1) == 0 && fmod(y, 1) == 0 && fmod(z, 1) == 0);', "    if (((x\
    \ - y) == z) || ((x - z) == y) || ((y - z) == x)) {\n        return true;\n  \
    \  }\n    return false;", "  int a = x;\n  int b = y;\n  int c = z;\n  if (a +\
    \ b == c || a + c == b || b + c == a) {\n    return true;\n  }\n  return false;",
  "\tif ((x - y - z == 0.0 || y - x - z == 0.0 || z - x - y == 0.0) && x - int(x)\
    \ == 0.0 && y - int(y) == 0.0 && z - int(z) == 0.0) {\n\t\treturn true;\n\t}\n\
    \telse {\n\t\treturn false;\n\t}", "    if (x == (y + z) || y == (x + z) || z\
    \ == (x + y)) {\n        return true;\n    }\n    return false;", "    if (x ==\
    \ y + z || y == x + z || z == x + y) {\n        return true;\n    }\n    return\
    \ false;", "    if(std::floor(x)==x && std::floor(y)==y && std::floor(z)==z){\n\
    \        if(x+y==z || x+z==y || y+z==x){\n            return true;\n        }\n\
    \    }\n    return false;", "    if (std::fmod(x, 1) != 0 || std::fmod(y, 1) !=\
    \ 0 || std::fmod(z, 1) != 0) {\n        return false;\n    }\n    if (x + y ==\
    \ z || x + z == y || y + z == x) {\n        return true;\n    }\n    return false;",
  "    // return x == y+z || y == x+z || z == x+y;\n    return ((x == y+z || y ==\
    \ x+z || z == x+y) && (std::floor(x) == x && std::floor(y) == y && std::floor(z)\
    \ == z));", "    // Write your code here\n    return x == y + z || y == x + z\
    \ || z == x + y;", "\treturn ((x == y + z) || (y == x + z) || (z == x + y));",
  "    if ( (x > y - z) && (x < y + z) && ((int)x == x) && ((int)y == y) && ((int)z\
    \ == z) ) {\n        return true;\n    }\n    else if ( (y > x - z) && (y < x\
    \ + z) && ((int)x == x) && ((int)y == y) && ((int)z == z) ) {\n        return\
    \ true;\n    }\n    else if ( (z > x - y) && (z < x + y) && ((int)x == x) && ((int)y\
    \ == y) && ((int)z == z) ) {\n        return true;\n    }\n    else {\n      \
    \  return false;\n    }", '  return (int(x) == int(y) + int(z)) || (int(y) ==
    int(x) + int(z)) || (int(z) == int(x) + int(y));', "  int a = int(x);\n  int b\
    \ = int(y);\n  int c = int(z);\n  if ((a + b == c) || (a + c == b) || (b + c ==\
    \ a)) {\n    return true;\n  }\n  else {\n    return false;\n  }", "    //>>>\
    \ any_int((float(5)), (float(2)), (float(7)))\n    //(true)\n    //>>> any_int((float(3)),\
    \ (float(2)), (float(2)))\n    //(false)\n    //>>> any_int((float(3)), (float(-2)),\
    \ (float(1)))\n    //(true)\n    //>>> any_int((3.6), (-2.2), (float(2)))\n  \
    \  //(false)\n    if (x == (int)x && y == (int)y && z == (int)z) {\n        int\
    \ a = x;\n        int b = y;\n        int c = z;\n        if (a == b + c || b\
    \ == a + c || c == a + b) {\n            return true;\n        }\n    }\n    return\
    \ false;", "  if ((x == y + z) || (y == x + z) || (z == x + y)) {\n    return\
    \ true;\n  }\n  return false;", "\treturn (x + y == z) || (x + z == y) || (y +\
    \ z == x);", '  return ((int)x + (int)y == (int)z) || ((int)x + (int)z == (int)y)
    || ((int)y + (int)z == (int)x);', "  return ((x == y + z) || (y == x + z) || (z\
    \ == x + y)) &&\n         ((x == int(x)) && (y == int(y)) && (z == int(z)));",
  "  bool result = false;\n  if ((x == (y + z)) || (y == (x + z)) || (z == (x + y)))\
    \ {\n    result = true;\n  }\n  return result;", "  // assert(x+y == z || x+z\
    \ == y || y+z == x);\n  if(int(x) == x && int(y) == y && int(z) == z) {\n    return\
    \ true;\n  }\n  return false;", "\tif (((x + y) == z) || ((x + z) == y) || ((y\
    \ + z) == x)) {\n\t\treturn true;\n\t}\n\telse {\n\t\treturn false;\n\t}", " \
    \ return std::floor(x) + std::floor(y) == std::floor(z) ||\n         std::floor(x)\
    \ + std::floor(z) == std::floor(y) ||\n         std::floor(y) + std::floor(z)\
    \ == std::floor(x);", '  return (int(x) + int(y) == int(z)) || (int(x) + int(z)
    == int(y)) || (int(y) + int(z) == int(x));', "    if ((int)x + (int)y == (int)z\
    \ || (int)x + (int)z == (int)y || (int)y + (int)z == (int)x) {\n        return\
    \ true;\n    }\n    return false;", "  int a = std::floor(x);\n  int b = std::floor(y);\n\
    \  int c = std::floor(z);\n  if ((a+b == c) || (a+c == b) || (b+c == a)) {\n \
    \   return true;\n  }\n  return false;", '  return ( (int)x + (int)y == (int)z
    || (int)x + (int)z == (int)y || (int)y + (int)z == (int)x );', "  //   if(typeid(x).name()\
    \ == typeid(y).name() == typeid(z).name() == typeid(int).name())\n  //   {\n \
    \ //    return true;\n  //   }\n  //   else {\n  //     return false;\n  //  \
    \ }\n  //   if((x + y) == z) {\n  //     return true;\n  //   }\n  //   else if\
    \ ((y + z) == x) {\n  //     return true;\n  //   }\n  //   else if ((x + z) ==\
    \ y) {\n  //     return true;\n  //   }\n  //   else {\n  //     return false;\n\
    \  //   }\n  if ((x + y) == z && std::floor(x) == x && std::floor(y) == y && std::floor(z)\
    \ == z) {\n    return true;\n  }\n  else if ((y + z) == x && std::floor(x) ==\
    \ x && std::floor(y) == y && std::floor(z) == z) {\n    return true;\n  }\n  else\
    \ if ((x + z) == y && std::floor(x) == x && std::floor(y) == y && std::floor(z)\
    \ == z) {\n    return true;\n  }\n  else {\n    return false;\n  }", '    return
    (int(x) + int(y) == int(z)) || (int(x) + int(z) == int(y)) || (int(y) + int(z)
    == int(x));', "  // store nums in vector\n  std::vector<float> nums{x, y, z};\n\
    \  std::sort(nums.begin(), nums.end());\n  if (nums[0] + nums[1] == nums[2]) {\n\
    \    return true;\n  }\n  return false;", "  assert(x==floor(x));\n  assert(y==floor(y));\n\
    \  assert(z==floor(z));\n  if (x+y==z) return true;\n  if (x+z==y) return true;\n\
    \  if (y+z==x) return true;\n  return false;", "  if( (x + y == z) || (x + z ==\
    \ y) || (y + z == x) ){\n    return true;\n  }\n  else{\n    return false;\n \
    \ }", "  if (((x == y + z) || (y == x + z) || (z == x + y)) && (ceil(x) == x)\
    \ && (ceil(y) == y) && (ceil(z) == z)) {\n    return true;\n  }\n  else {\n  \
    \  return false;\n  }", "  bool result = false;\n  int xInt = (int)x;\n  int yInt\
    \ = (int)y;\n  int zInt = (int)z;\n  bool xI = (x == xInt);\n  bool yI = (y ==\
    \ yInt);\n  bool zI = (z == zInt);\n  if (xI & yI & zI) {\n    if (xInt + yInt\
    \ == zInt) {\n      result = true;\n    }\n    else if (xInt + zInt == yInt) {\n\
    \      result = true;\n    }\n    else if (yInt + zInt == xInt) {\n      result\
    \ = true;\n    }\n  }\n  return result;", "  //  type your code here\n  return\
    \ (bool)((x==(y+z))||(y==(x+z))||(z==(x+y)));", "    if (std::floor(x) == x &&\
    \ std::floor(y) == y && std::floor(z) == z) {\n        if (x == y + z || y ==\
    \ x + z || z == x + y) {\n            return true;\n        }\n    }\n    return\
    \ false;", "  int sum = x + y + z;\n  if (sum == x || sum == y || sum == z) {\n\
    \    return true;\n  }\n  return false;", "    if ((x % 1 == 0) && (y % 1 == 0)\
    \ && (z % 1 == 0)){\n      return (x + y == z) || (x + z == y) || (y + z == x);\n\
    \    }\n    else {\n      return false;\n    }", '  return (int(x)+int(y))==int(z)
    || (int(x)+int(z))==int(y) || (int(y)+int(z))==int(x);', "    float sum_x_y =\
    \ x + y;\n    float sum_x_z = x + z;\n    float sum_y_z = y + z;\n    if (sum_x_y\
    \ == z) {\n        return true;\n    } else if (sum_x_z == y) {\n        return\
    \ true;\n    } else if (sum_y_z == x) {\n        return true;\n    } else {\n\
    \        return false;\n    }", "  // if (x + y == z || y + z == x || x + z ==\
    \ y) {\n  //   return true;\n  // }\n  // return false;\n  return x + y == z ||\
    \ y + z == x || x + z == y;", '    return (int(x) + int(y) == int(z)) || (int(x)
    + int(z) == int(y)) || (int(y) + int(z) == int(x));', "    if(float(int(x)) ==\
    \ x && float(int(y)) == y && float(int(z)) == z) {\n        if(int(x) == int(y)+int(z)\
    \ || int(y) == int(x)+int(z) || int(z) == int(x)+int(y)) return true;\n      \
    \  else return false;\n    }\n    else return false;", "  if (floor(x) == x &&\
    \ floor(y) == y && floor(z) == z) {\n    if (x + y == z || x + z == y || y + z\
    \ == x) {\n      return true;\n    }\n  }\n  return false;", "  int sum = (int)x\
    \ + (int)y + (int)z;\n  int x_y = (int)x + (int)y;\n  int x_z = (int)x + (int)z;\n\
    \  int y_z = (int)y + (int)z;\n  if ((int)x == sum - x_y || (int)y == sum - x_y\
    \ || (int)z == sum - x_y) {\n    return true;\n  }\n  if ((int)x == sum - x_z\
    \ || (int)y == sum - x_z || (int)z == sum - x_z) {\n    return true;\n  }\n  if\
    \ ((int)x == sum - y_z || (int)y == sum - y_z || (int)z == sum - y_z) {\n    return\
    \ true;\n  }\n  return false;", '    return x == y + z || y == x + z || z == x
    + y;', "\tfloat sum = x + y + z;\n\tif (sum == x || sum == y || sum == z)\n\t\t\
    return true;\n\telse\n\t\treturn false;", "\tbool one_is_zero = !(x == 0.0) ||\
    \ !(y == 0.0) || !(z == 0.0);\n\tbool one_is_int = ((x - int(x)) == 0.0) || ((y\
    \ - int(y)) == 0.0) || ((z - int(z)) == 0.0);\n\treturn (one_is_zero && one_is_int);",
  '    return (floor(x) + floor(y) == floor(z)) || (floor(x) + floor(z) == floor(y))
    || (floor(y) + floor(z) == floor(x));', "    // Your code here\n    float sum;\n\
    \    if (x < 0 && y < 0 && z < 0)\n        return false;\n    if (x < 0 && y <\
    \ 0)\n        sum = -x - y;\n    else if (x < 0 && z < 0)\n        sum = -x -\
    \ z;\n    else if (y < 0 && z < 0)\n        sum = -y - z;\n    else\n        sum\
    \ = x + y + z;\n    if (sum == x || sum == y || sum == z)\n        return true;\n\
    \    else\n        return false;", "  // TODO: Your code here\n  float sum = x\
    \ + y + z;\n  // first check if the values are integers\n  if(sum != (int)sum)\
    \ {\n    return false;\n  }\n  // now check if there is a pair that's equal to\
    \ the remaining value\n  float sum_a = x + y;\n  float sum_b = x + z;\n  float\
    \ sum_c = y + z;\n  // if there is a match, we have a case\n  if(sum_a == z ||\
    \ sum_b == y || sum_c == x) {\n    return true;\n  }\n  // otherwise, false\n\
    \  return false;", "    bool int_sum = (int(x) + int(y) == int(z)) || (int(x)\
    \ + int(z) == int(y)) || (int(y) + int(z) == int(x));\n    bool int_num = (int(x)\
    \ == x) && (int(y) == y) && (int(z) == z);\n    return int_sum && int_num;", '  return
    x == y + z || y == x + z || z == x + y;', "\treturn (x + y == z || x + z == y\
    \ || y + z == x) &&\n\t\t((int)x == x) && ((int)y == y) && ((int)z == z);", " \
    \   // return (x == y + z) || (y == x + z) || (z == x + y);\n    return (fmod(x,\
    \ 1) == 0) && (fmod(y, 1) == 0) && (fmod(z, 1) == 0) && (fmod(x + y, 1) == 0)\
    \ && (fmod(x + z, 1) == 0) && (fmod(y + z, 1) == 0);", "  // int a = x;\n  //\
    \ int b = y;\n  // int c = z;\n  if (x == 0 || y == 0 || z == 0) {\n    return\
    \ false;\n  }\n  if (x+y == z || x+z == y || y+z == x) {\n    return true;\n \
    \ }\n  return false;", "\tif (std::floor(x) == x && std::floor(y) == y && std::floor(z)\
    \ == z) {\n\t\tint sum = x + y;\n\t\tint sum1 = x + z;\n\t\tint sum2 = y + z;\n\
    \t\tif (sum == z || sum1 == y || sum2 == x) {\n\t\t\treturn true;\n\t\t}\n\t\t\
    else {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\treturn false;\n\t}", " \
    \ if ((x+y)==z) {\n    return true;\n  }\n  else if ((x+z)==y) {\n    return true;\n\
    \  }\n  else if ((y+z)==x) {\n    return true;\n  }\n  else {\n    return false;\n\
    \  }", "  if (static_cast<int>(x) + static_cast<int>(y) == static_cast<int>(z))\
    \ {\n    return true;\n  } else if (static_cast<int>(x) + static_cast<int>(z)\
    \ == static_cast<int>(y)) {\n    return true;\n  } else if (static_cast<int>(y)\
    \ + static_cast<int>(z) == static_cast<int>(x)) {\n    return true;\n  } else\
    \ {\n    return false;\n  }", "    if ((x + y == z) || (x + z == y) || (y + z\
    \ == x)) {\n        return true;\n    }\n    return false;", "    // write your\
    \ code here\n    bool a = x == int(x);\n    bool b = y == int(y);\n    bool c\
    \ = z == int(z);\n    return ((a && b && c) && ((x + y == z) || (x + z == y) ||\
    \ (y + z == x)));", "    float xf = x;\n    float yf = y;\n    float zf = z;\n\
    \    float xi = (int) x;\n    float yi = (int) y;\n    float zi = (int) z;\n \
    \   if (((int) x == x) && ((int) y == y) && ((int) z == z)) {\n        if (((x\
    \ + y) == z) || ((x + z) == y) || ((y + z) == x)) {\n            return true;\n\
    \        }\n        else {\n            return false;\n        }\n    }\n    else\
    \ {\n        return false;\n    }", "    if (std::ceil(x) == x && std::ceil(y)\
    \ == y && std::ceil(z) == z) {\n        return true;\n    }\n    return false;",
  '    return ((int)x + (int)y == (int)z || (int)x + (int)z == (int)y || (int)y +
    (int)z == (int)x);', "  if ((std::ceil(x) == x) && (std::ceil(y) == y) && (std::ceil(z)\
    \ == z)) {\n    if ((x + y == z) || (x + z == y) || (y + z == x)) {\n      return\
    \ true;\n    }\n  }\n  return false;", "  if ((fmod(x, 1) == 0) && (fmod(y, 1)\
    \ == 0) && (fmod(z, 1) == 0)) {\n    if ((x + y == z) || (x + z == y) || (y +\
    \ z == x)) {\n      return true;\n    }\n  }\n  return false;", "  int i;\n  if\
    \ (std::modf(x, &i) != 0.0) {\n    return false;\n  }\n  if (std::modf(y, &i)\
    \ != 0.0) {\n    return false;\n  }\n  if (std::modf(z, &i) != 0.0) {\n    return\
    \ false;\n  }\n  if (x + y == z) {\n    return true;\n  }\n  if (x + z == y) {\n\
    \    return true;\n  }\n  if (y + z == x) {\n    return true;\n  }\n  return false;",
  "\treturn (round(x) + round(y) == round(z)) || (round(x) + round(z) == round(y))\
    \ || (round(y) + round(z) == round(x));", "    bool all_ints = (floor(x) == x)\
    \ && (floor(y) == y) && (floor(z) == z);\n    bool sum_of_others = (x == y + z)\
    \ || (y == x + z) || (z == x + y);\n    return all_ints && sum_of_others;", " \
    \ bool b1 = ((float) x == y + z);\n  bool b2 = ((float) y == x + z);\n  bool b3\
    \ = ((float) z == x + y);\n  if (b1 || b2 || b3) {\n    return true;\n  }\n  return\
    \ false;", '    return (x == y + z) || (y == x + z) || (z == x + y);', '  return
    (int(x) + int(y) == int(z)) || (int(x) + int(z) == int(y)) || (int(y) + int(z)
    == int(x));', "\treturn ((x + y == z || x + z == y || y + z == x) && (x == int(x)\
    \ && y == int(y) && z == int(z)));", "\tbool is_equal = false;\n\tif (((floor(x)\
    \ + floor(y)) == floor(z)) || ((floor(x) + floor(z)) == floor(y)) || ((floor(y)\
    \ + floor(z)) == floor(x))) {\n\t\tis_equal = true;\n\t}\n\treturn is_equal;",
  "    if ( ( (int)x + (int)y ) == (int)z ) {\n        return true;\n    } else if\
    \ ( ( (int)x + (int)z ) == (int)y ) {\n        return true;\n    } else if ( (\
    \ (int)y + (int)z ) == (int)x ) {\n        return true;\n    } else {\n      \
    \  return false;\n    }", "    // write the code here\n    if(x == int(x) && y\
    \ == int(y) && z == int(z)) {\n        if(x == y + z || y == x + z || z == x +\
    \ y)\n            return true;\n        else\n            return false;\n    }\n\
    \    else\n        return false;", '    return (x == y + z) || (y == x + z) ||
    (z == x + y);', "  bool check = false;\n  if (std::floor(x) == x && std::floor(y)\
    \ == y && std::floor(z) == z) {\n    if (x == y + z || y == x + z || z == x +\
    \ y) {\n      check = true;\n    }\n  }\n  return check;", "\tfloat sum = x +\
    \ y + z;\n\tif (sum == x || sum == y || sum == z) {\n\t\treturn true;\n\t}\n\t\
    else {\n\t\treturn false;\n\t}", "  float a, b, c;\n  a = x;\n  b = y;\n  c =\
    \ z;\n  if (a == (b + c) || b == (a + c) || c == (a + b)) {\n    return true;\n\
    \  }\n  else {\n    return false;\n  }", "\tfloat a = x;\n\tfloat b = y;\n\tfloat\
    \ c = z;\n\tif (((a + b) == c) || ((a + c) == b) || ((b + c) == a)) {\n\t\treturn\
    \ true;\n\t}\n\telse {\n\t\treturn false;\n\t}", "    if (x==int(x) && y==int(y)\
    \ && z==int(z)){\n        if (x+y==z || x+z==y || y+z==x){\n            return\
    \ true;\n        }\n        else{\n            return false;\n        }\n    }\n\
    \    else{\n        return false;\n    }", "    // Write your code here:\n   \
    \ float sum = 0;\n    if ((x==int(x)) && (y==int(y)) && (z==int(z))) {\n     \
    \   sum = x + y;\n        if (sum == z) {\n            return true;\n        }\n\
    \        sum = x + z;\n        if (sum == y) {\n            return true;\n   \
    \     }\n        sum = y + z;\n        if (sum == x) {\n            return true;\n\
    \        }\n    }\n    return false;", "  return ((fmod(x,1)==0) && (fmod(y,1)==0)\
    \ && (fmod(z,1)==0)) &&\n  ((((x+y)==z) || ((x+z)==y) || ((y+z)==x)));", '  return
    (int(x) + int(y) == int(z)) || (int(x) + int(z) == int(y)) || (int(y) + int(z)
    == int(x));', "  return ((x == y + z) || (y == x + z) || (z == x + y)) &&\n  (floor(x)\
    \ == x) && (floor(y) == y) && (floor(z) == z);", "    float xyz = x + y + z;\n\
    \    float xy = x + y;\n    float xz = x + z;\n    float yz = y + z;\n    float\
    \ xa = x / 2;\n    float ya = y / 2;\n    float za = z / 2;\n    float xb = x\
    \ / 3;\n    float yb = y / 3;\n    float zb = z / 3;\n    float xc = x / 4;\n\
    \    float yc = y / 4;\n    float zc = z / 4;\n    float xd = x / 5;\n    float\
    \ yd = y / 5;\n    float zd = z / 5;\n    float xe = x / 6;\n    float ye = y\
    \ / 6;\n    float ze = z / 6;\n    float xf = x / 7;\n    float yf = y / 7;\n\
    \    float zf = z / 7;\n    float xg = x / 8;\n    float yg = y / 8;\n    float\
    \ zg = z / 8;\n    float xh = x / 9;\n    float yh = y / 9;\n    float zh = z\
    \ / 9;\n    float xi = x / 10;\n    float yi = y / 10;\n    float zi = z / 10;\n\
    \    float xj = x / 11;\n    float yj = y / 11;\n    float zj = z / 11;\n    float\
    \ xk = x / 12;\n    float yk = y / 12;\n    float zk = z / 12;\n    float xl =\
    \ x / 13;\n    float yl = y / 13;\n    float zl = z / 13;\n    float xm = x /\
    \ 14;\n    float ym = y / 14;\n    float zm = z / 14;\n    float xn = x / 15;\n\
    \    float yn = y / 15;\n    float zn = z / 15;\n    float xo = x / 16;\n    float\
    \ yo = y / 16;\n    float zo = z / 16;\n    float xp = x / 17;\n    float yp =\
    \ y / 17;\n    float zp =", "  if ( (x == y + z) || (y == x + z) || (z == x +\
    \ y) ) {\n    return true;\n  }\n  else {\n    return false;\n  }", '  return
    (x + y == z || x + z == y || y + z == x) && (fmod(x, 1) == 0 && fmod(y, 1) ==
    0 && fmod(z, 1) == 0);', "\tif (is_integer(x) && is_integer(y) && is_integer(z))\
    \ {\n\t\tif (x == y + z || y == x + z || z == x + y) {\n\t\t\treturn true;\n\t\
    \t}\n\t\telse {\n\t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\treturn false;\n\
    \t}", "  if (((x + y) == z) || ((y + z) == x) || ((x + z) == y)) {\n    return\
    \ true;\n  }\n  else {\n    return false;\n  }", '    return (x == y + z) || (y
    == x + z) || (z == x + y);', "  int a, b, c;\n  a = x;\n  b = y;\n  c = z;\n \
    \ if (a + b == c || a + c == b || b + c == a)\n    return true;\n  else\n    return\
    \ false;", "    if(z == x + y && x == int(x) && y == int(y) && z == int(z)){\n\
    \        return true;\n    }\n    else if(y == x + z && x == int(x) && y == int(y)\
    \ && z == int(z)){\n        return true;\n    }\n    else if(x == y + z && x ==\
    \ int(x) && y == int(y) && z == int(z)){\n        return true;\n    }\n    else{\n\
    \        return false;\n    }", '  return x - y == z || y - x == z || x - z ==
    y || z - x == y || y - z == x || z - y == x;', "  if ( (floor(x) + floor(y) ==\
    \ floor(z)) || (floor(x) + floor(z) == floor(y)) || (floor(y) + floor(z) == floor(x))\
    \ ) {\n    return true;\n  }\n  else {\n    return false;\n  }", "    // ...\n\
    \    if(x-y-z == (int)x-y-z || y-x-z == (int)y-x-z || z-x-y == (int)z-x-y) {\n\
    \        return true;\n    } else {\n        return false;\n    }", "\tint sum\
    \ = x + y + z;\n\tif ((x == sum) || (y == sum) || (z == sum)) {\n\t\treturn true;\n\
    \t}\n\telse {\n\t\treturn false;\n\t}", '    return(static_cast<int>(x) + static_cast<int>(y)
    == static_cast<int>(z) || static_cast<int>(x) + static_cast<int>(z) == static_cast<int>(y)
    || static_cast<int>(y) + static_cast<int>(z) == static_cast<int>(x));', "    if\
    \ (round(x) + round(y) == round(z)) {\n        return true;\n    } else if (round(y)\
    \ + round(z) == round(x)) {\n        return true;\n    } else if (round(x) + round(z)\
    \ == round(y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }", '  return ((x == y + z || y == x + z || z == x + y) && x == int(x) &&
    y == int(y) && z == int(z));', "  // write your code here!\n  return false;",
  '  return (x == y + z) || (y == x + z) || (z == x + y);', '  return (int(x) == int(y)
    + int(z)) || (int(y) == int(x) + int(z)) || (int(z) == int(x) + int(y));', " \
    \   // Write your code here.\n    int vx, vy, vz;\n    vx = (int)x;\n    vy =\
    \ (int)y;\n    vz = (int)z;\n    if (vx == (vy + vz) || vy == (vx + vz) || vz\
    \ == (vx + vy)) {\n        return true;\n    }\n    return false;", "  // write\
    \ code here\n  return false;", '  return floor(x) + floor(y) == floor(z) || floor(x)
    + floor(z) == floor(y) || floor(y) + floor(z) == floor(x);', "  if ((x+y==z)||(x+z==y)||(y+z==x))\
    \ {\n    return true;\n  }\n  else {\n    return false;\n  }", "    // int sum\
    \ = x + y + z;\n    if ((int)x + (int)y == (int)z) {\n        return true;\n \
    \   }\n    else if ((int)x + (int)z == (int)y) {\n        return true;\n    }\n\
    \    else if ((int)y + (int)z == (int)x) {\n        return true;\n    }\n    else\
    \ {\n        return false;\n    }", "    if (x == y + z || y == x + z || z ==\
    \ x + y) {\n        return true;\n    }\n    return false;", "  // write your\
    \ solution here\n  return(floor(x+y)==z || floor(x+z)==y || floor(y+z)==x);",
  '    return ((float(int(x))==x) && (float(int(y))==y) && (float(int(z))==z))&&(((x==y+z)||(y==x+z)||(z==x+y)));',
  "    if (fmod(x, 1) == 0 && fmod(y, 1) == 0 && fmod(z, 1) == 0) {\n        if (x\
    \ == y + z || x + y == z || x + z == y) {\n            return true;\n        }\n\
    \    }\n    return false;"]
stop_tokens:
- "\n}"

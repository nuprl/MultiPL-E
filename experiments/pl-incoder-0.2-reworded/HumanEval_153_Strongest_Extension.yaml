name: HumanEval_153_Strongest_Extension
language: pl
prompt: "# You will be given the name of a class (a string) and an array of extensions.\n\
  # The extensions are to be used to load additional classes to the class. The\n#\
  \ strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  # letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n# in the extension's name, the strength is given by the fraction CAP - SM. \n\
  # You should find the strongest extension and return a string in this \n# format:\
  \ ClassName.StrongestExtensionName.\n# If there are two or more extensions with\
  \ the same strength, you should\n# choose the one that comes first in the array.\n\
  # For example, if you are given \"Slices\" as the class and an array of the\n# extensions:\
  \ ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n# return 'Slices.SErviNGSliCes'\
  \ since 'SErviNGSliCes' is the strongest extension \n# (its strength is -1).\n#\
  \ Example:\n# >>> Strongest_Extension(\"my_class\", [\"AA\", \"Be\", \"CC\"])\n\
  # \"my_class.AA\"\nsub Strongest_Extension {\n    my($class_name, $extensions) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&Strongest_Extension;\n\
  \        if(eq_deeply($candidate->(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"\
  ]),\"Watashi.eIGHt8OKe\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->(\"Boku123\", [\"nani\", \"NazeDa\",\
  \ \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"__YESIMHERE\"\
  , [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"\
  __YESIMHERE.NuLl__\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n        if(eq_deeply($candidate->(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"\
  cosSo\"]),\"K.TAR\")) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->(\"__HAHA\", [\"Tab\", \"123\", \"781345\"\
  , \"-_-\"]),\"__HAHA.123\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"YameRore\", [\"HhAas\", \"okIWILL123\"\
  , \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"finNNalLLly\"\
  , [\"Die\", \"NowW\", \"Wow\", \"WoW\"]),\"finNNalLLly.WoW\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  _\", [\"Bb\", \"91245\"]),\"_.Bb\")) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->(\"Sp\", [\"671235\", \"Bb\"]),\"\
  Sp.671235\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\n\
  testhumaneval();"
completions: ["    my $strongest_extension;\n    my $strength;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n\
    \    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my\
    \ $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n\
    \    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my\
    \ $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n\
    \    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my\
    \ $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n\
    \    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my\
    \ $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $", "    my $strongest_extension\
    \ = \"\";\n    my $strongest_extension_strength = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z/a-z/;\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_strength;\n    my $class_name_length\
    \ = length($class_name);\n    foreach my $extension (@$extensions) {\n       \
    \ my $extension_length = length($extension);\n        my $strength = int(($class_name_length\
    \ - $extension_length) / 2);\n        if ($strength > $strongest_strength) {\n\
    \            $strongest_extension = $extension;\n            $strongest_strength\
    \ = $strength;\n        }\n    }\n    return $class_name . $strongest_extension;\n\
    }", "    my $strongest_extension = \"\";\n    my $max_strength = 0;\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_strength = uc($extension)\
    \ - uc($extension_strength);\n        if ($extension_strength > $max_strength)\
    \ {\n            $strongest_extension = $extension;\n            $max_strength\
    \ = $extension_strength;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ my $class_name_length = length($class_name);\n    foreach my $extension (@$extensions)\
    \ {\n        my $extension_length = length($extension);\n        my $extension_strength\
    \ = $extension_length - $class_name_length;\n        if ($extension_strength >\
    \ $strongest_extension_strength) {\n            $strongest_extension = $extension;\n\
    \            $strongest_extension_strength = $extension_strength;\n        }\n\
    \    }\n    return $strongest_extension;\n}", "    my $strongest = undef;\n  \
    \  my $i = 0;\n    foreach my $extension (@$extensions) {\n        my $c = uc($extension);\n\
    \        my $s = length($extension) - length($c);\n        if ($strongest eq undef)\
    \ {\n            $strongest = $extension;\n        }\n        elsif ($strongest\
    \ eq $extension) {\n            $strongest = $extension;\n        }\n        elsif\
    \ ($strongest eq $extension and $s <= $i) {\n            $strongest = $extension;\n\
    \        }\n        $i++;\n    }\n    return $class_name . \".\" . $strongest;\n\
    }", "    my $strongest = -1;\n    my $strongest_extension = \"\";\n    foreach\
    \ my $extension (@$extensions) {\n        my $extension_length = length($extension);\n\
    \        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength\
    \ > $strongest) {\n            $strongest = $extension_strength;\n           \
    \ $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . $strongest_extension;\n}", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z/a-z/;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}", "    my $strongest_extension;\n    my $num_upper\
    \ = 0;\n    my $num_lower = 0;\n    foreach my $extension (@$extensions) {\n \
    \       my $num_upper = length($extension) - length($extension) =~ tr/A-Z//;\n\
    \        my $num_lower = length($extension) - length($extension) =~ tr/a-z//;\n\
    \        $strongest_extension = $class_name . \".\" . $extension;\n        if\
    \ ($num_upper > $num_lower) {\n            $strongest_extension = $class_name\
    \ . \".\" . $extension;\n        }\n        if ($num_upper == $num_lower) {\n\
    \            $strongest_extension = $class_name . \".\" . $extension;\n      \
    \  }\n    }\n    return $strongest_extension;\n}", "    my $strongest_extension\
    \ = \"\";\n    my $strongest_extension_strength = -1;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z/a-z/;\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . $strongest_extension;\n\
    }", "    my $strongest_extension;\n    my $strongest_extension_strength;\n   \
    \ my $extension_counter;\n    my $extension_counter_strength;\n    my $extension_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_strength;\n    my $extension_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_strength;\n    my $extension_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_strength;\n\
    \    my $extension_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_",
  "    my $strongest_extension;\n    my $strongest_extension_strength;\n    my $num_uppercase_letters\
    \ = length($class_name) - length($class_name =~ /[A-Z]/);\n    my $num_lowercase_letters\
    \ = length($class_name) - length($class_name =~ /[a-z]/);\n    my $num_letters\
    \ = $num_uppercase_letters + $num_lowercase_letters;\n    my $num_extensions =\
    \ scalar(@$extensions);\n    my $strength = $num_letters - $num_extensions;\n\
    \    foreach my $extension (@$extensions) {\n        my $extension_strength =\
    \ length($extension) - length($extension =~ /[A-Z]/) - length($extension =~ /[a-z]/);\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = -1;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z/a-z/;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return \"$class_name.$strongest_extension\"\
    ;\n}", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = 0;\n    foreach my $extension (@$extensions) {\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}", "    my $strongest_extension;\n    my $strongest_strength;\n\
    \    my $extension_count;\n    my $extension_letter;\n    my $extension_lower;\n\
    \    my $extension_upper;\n    my $extension_letter_index;\n    my $extension_lower_index;\n\
    \    my $extension_upper_index;\n    my $extension_letter_index_count;\n    my\
    \ $extension_lower_index_count;\n    my $extension_upper_index_count;\n    my\
    \ $extension_letter_count;\n    my $extension_lower_count;\n    my $extension_upper_count;\n\
    \    my $extension_letter_count_index;\n    my $extension_lower_count_index;\n\
    \    my $extension_upper_count_index;\n    my $extension_letter_count_index_count;\n\
    \    my $extension_lower_count_index_count;\n    my $extension_upper_count_index_count;\n\
    \    my $extension_letter_count_index_count_index;\n    my $extension_lower_count_index_count_index;\n\
    \    my $extension_upper_count_index_count_index;\n    my $extension_letter_count_index_count_index_count;\n\
    \    my $extension_lower_count_index_count_index_count;\n    my $extension_upper_count_index_count_index_count;\n\
    \    my $extension_letter_count_index_count_index_count_index;\n    my $extension_lower_count_index_count_index_count_index;\n\
    \    my $extension_upper_count_index_count_index_count_index;\n    my $extension_letter_count_index_count_index_count_index_count;\n\
    \    my $extension_lower_count_index_count_index_count_index_count;\n    my $extension_upper_count_index_count_index_count_index_count;\n\
    \    my $extension_letter_count_index_count_index_count_index_count_index;\n \
    \   my $extension_lower_count_index_count_index_count_index_count_index;\n   \
    \ my $extension_upper_count_index_count_index_count_index_count_index;\n    my\
    \ $extension_letter_count_index_count_index_count_index_count_index_count;\n \
    \   my $extension_lower_count_index_count_index_count_index_count_index_count;\n\
    \    my $extension_upper_count_index_count_index_count_index_count_index_count;\n\
    \    my $extension_letter_count_index_count_index_count_index_count_index_count_index;\n\
    \    my $extension_lower_count_index_count_index_count_index_count_index_count_index;\n\
    \    my $extension_upper_count_index_count_index_count_index_count_index_count_index;\n\
    \    my $extension_letter_count_index_count_index_count_index_count_index_count_index_count;\n\
    \    my $extension_lower_count_index_count_index_count_index_count_index_count_index_count;\n\
    \    my $extension_upper_count_index_count_index_count_index_count_index_count_index_count;\n\
    \    my $extension_letter_count_index_count_index_count_index_count_index_count_index_count_index;\n\
    \    my $extension_lower_count_index_", "    my $strongest_extension = \"\";\n\
    \    my $strongest_strength = -1;\n    foreach my $extension (@$extensions) {\n\
    \        my $extension_strength = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength\
    \ > $strongest_strength) {\n            $strongest_strength = $extension_strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ \"$class_name.$strongest_extension\";\n}", "    my $strongest_extension;\n \
    \   my $strongest_strength;\n    foreach my $extension (@$extensions) {\n    \
    \    my $extension_length = length($extension);\n        my $extension_strength\
    \ = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength > $strongest_strength)\
    \ {\n            $strongest_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return \"$class_name.$strongest_extension\"\
    ;\n}", "    my $strongest_extension;\n    my $max_strength;\n    my $max_index;\n\
    \    my $max_extension;\n    my $max_extension_length;\n    my $max_extension_length_with_extension;\n\
    \    my $max_extension_length_without_extension;\n    my $max_extension_length_without_extension_length;\n\
    \    my $max_extension_length_with_extension_length;\n    my $max_extension_length_without_extension_length_length;\n\
    \    my $max_extension_length_with_extension_length_length;\n    my $max_extension_length_without_extension_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length;\n    my $max_extension_length_without_extension_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length;\n    my $max_extension_length_without_extension_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length;\n  \
    \  my $max_extension_length_without_extension_length_length_length_length;\n \
    \   my $max_extension_length_with_extension_length_length_length_length;\n   \
    \ my $max_extension_length_without_extension_length_length_length_length;\n  \
    \  my $max_extension_length_with_extension_length_length_length_length;\n    my\
    \ $max_extension_length_without_extension_length_length_length_length;\n    my\
    \ $max_extension_length_with_extension_length_length_length_length;\n    my $max_extension_length_without_extension_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length;\n  \
    \  my $max_extension_length_without_extension_length_length_length_length;\n \
    \   my $max_extension_length_with_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_without_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_without_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_without_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_without_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_without_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length_length;\n\
    \    my $max_extension_length_without_extension_length_length_length_length_length_length;\n\
    \    my $max_extension_length_with_extension_length_length_length_length_length_length;\n\
    \    my $max_extension_length_without_extension_length_length_", "    my $strongest_extension\
    \ = \"\";\n    my $strongest_extension_strength = 0;\n    foreach my $extension\
    \ (@$extensions) {\n        my $extension_strength = uc($extension) =~ tr/A-Z//;\n\
    \        if ($extension_strength > $strongest_extension_strength) {\n        \
    \    $strongest_extension_strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }", "    my $strongest_extension = \"\";\n    my $strongest_extension_strength\
    \ = 0;\n    my $i = 0;\n    foreach my $extension (@$extensions) {\n        my\
    \ $extension_strength = uc($extension) =~ tr/A-Z//;\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n        $i++;\n    }\n    return \"$class_name.$strongest_extension\"\
    ;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_72_will_it_fly
language: pl
prompt: "# Write a function that returns 1 if the object q will fly, and  otherwise.\n\
  # The object q will fly if it's balanced (it is a palindromic array) and the sum\
  \ of its elements is less than or equal the maximum possible weight w.\n# Example:\n\
  # >>> will_it_fly([1, 2], 5)\n# \"\"\n# # 1+2 is less than the maximum possible\
  \ weight, but it's unbalanced.\n# >>> will_it_fly([3, 2, 3], 1)\n# \"\"\n# # it's\
  \ balanced, but 3+2+3 is more than the maximum possible weight.\n# >>> will_it_fly([3,\
  \ 2, 3], 9)\n# 1\n# # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
  # >>> will_it_fly([3], 5)\n# 1\n# # 3 is less than the maximum possible weight,\
  \ and it's balanced.\nsub will_it_fly {\n    my($q, $w) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&will_it_fly;\n\
  \        if(eq_deeply($candidate->([3, 2, 3], 9),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], 5),\"\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3],\
  \ 5),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
  \ 2, 3], 1),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1, 2, 3], 6),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5], 5),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my(@q) = @$q;\n    my($maxw) = @$w;\n    my($maxwsum) = @$w;\n\
    \    my($maxwsumsq) = @$w;\n    my($maxwsumsq2) = @$w;\n    my($maxwsumsq3) =\
    \ @$w;\n    my($maxwsumsq4) = @$w;\n    my($maxwsumsq5) = @$w;\n    my($maxwsumsq6)\
    \ = @$w;\n    my($maxwsumsq7) = @$w;\n    my($maxwsumsq8) = @$w;\n    my($maxwsumsq9)=\
    \ @$w;\n    my($maxwsumsq10)= @$w;\n    my($maxwsumsq11)= @$w;\n    my($maxwsumsq12)=\
    \ @$w;\n    my($maxwsumsq13)= @$w;\n    my($maxwsumsq14)= @$w;\n    my($maxwsumsq15)=\
    \ @$w;\n    my($maxwsumsq16)= @$w;\n    my($maxwsumsq17)= @$w;\n    my($maxwsumsq18)=\
    \ @$w;\n    my($maxwsumsq19)= @$w;\n    my($maxwsumsq20)= @$w;\n    my($maxwsumsq21)=\
    \ @$w;\n    my($maxwsumsq22)= @$w;\n    my($maxwsumsq23)= @$w;\n    my($maxwsumsq24)=\
    \ @$w;\n    my($maxwsumsq25)= @$w;\n    my($maxwsumsq26)= @$w;\n    my($maxwsumsq27)=\
    \ @$w;\n    my($maxwsumsq28)= @$w;\n    my($maxwsumsq29)= @$w;\n    my($maxwsumsq30)=\
    \ @$w;\n    my($maxwsumsq31)= @$w;\n    my($maxwsumsq32)= @$w;\n    my($maxwsumsq33)=\
    \ @$w;\n    my($maxwsumsq34)= ", "    my $max_weight = &max_weight($q);\n    my\
    \ $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n    }\n    return\
    \ 1 if ($sum < $max_weight && is_balanced($q));\n    return '';\n}", "    my(@q)\
    \ = @$q;\n    my(@w) = @$w;\n    my(@wsum);\n    my(@maxw);\n    my(@maxwsum);\n\
    \    my(@maxwsum2);\n    my(@maxwsum3);\n    my(@maxwsum4);\n    my(@maxwsum5);\n\
    \    my(@maxwsum6);\n    my(@maxwsum7);\n    my(@maxwsum8);\n    my(@maxwsum9);\n\
    \    my(@maxwsum10);\n    my(@maxwsum11);\n    my(@maxwsum12);\n    my(@maxwsum13);\n\
    \    my(@maxwsum14);\n    my(@maxwsum15);\n    my(@maxwsum16);\n    my(@maxwsum17);\n\
    \    my(@maxwsum18);\n    my(@maxwsum19);\n    my(@maxwsum20);\n    my(@maxwsum21);\n\
    \    my(@maxwsum22);\n    my(@maxwsum23);\n    my(@maxwsum24);\n    my(@maxwsum25);\n\
    \    my(@maxwsum26);\n    my(@maxwsum27);\n    my(@maxwsum28);\n    my(@maxwsum29);\n\
    \    my(@maxwsum30);\n    my(@maxwsum31);\n    my(@maxwsum32);\n    my(@maxwsum33);\n\
    \    my(@maxwsum34);\n    my(@maxwsum35);\n    my(@maxwsum36);\n    my(@maxwsum37);\n\
    \    my(@maxwsum38);\n    my(@maxwsum39);\n    my(@maxwsum40);\n    my(@maxwsum41);\n\
    \    my(@maxwsum42);\n    my(@maxwsum43);\n    my(@maxwsum44);\n    my(@maxwsum45);\n\
    \    my(@maxwsum46);\n    my(@maxwsum47);\n    my(@maxwsum48);\n    my(@maxwsum49);\n\
    \    my(@maxwsum50);\n    my(@maxwsum51);\n    my(@maxwsum52);\n    my(@maxwsum53);\n\
    \    my(@maxwsum54);\n    my(@maxwsum55);\n    my(", "    my(@a) = @$q;\n    my($max)\
    \ = @$w;\n    my($sum);\n    my($i);\n    my($j);\n    my($maxsum);\n    my($maxi);\n\
    \    my($maxj);\n    my($maxw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n    my($maxsumw);\n\
    \    my($maxsumw);\n", "    my(@q) = @$q;\n    my(@w) = @$w;\n    my($max) = @w;\n\
    \    my($sum);\n    my($i);\n    my($j);\n    my($max);\n    my($max);\n    my($max);\n\
    \    my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n \
    \   my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n  \
    \  my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n   \
    \ my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n\
    \    my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n \
    \   my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n  \
    \  my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n   \
    \ my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n\
    \    my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n \
    \   my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n  \
    \  my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n   \
    \ my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n\
    \    my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n \
    \   my($max);\n    my($max);\n    my($max);\n    my($max);\n    my($max);\n  \
    \  my($max);\n    my($max", "    my(@q) = @$q;\n    my(@w) = @$w;\n    my($maxw)\
    \ = @w;\n    my($maxq) = @q;\n    my($maxqsum) = @q;\n    my($maxwsum) = @w;\n\
    \    my($maxwsumsq) = @w;\n    my($maxwsumsq2) = @w;\n    my($maxwsumsq3) = @w;\n\
    \    my($maxwsumsq4) = @w;\n    my($maxwsumsq5) = @w;\n    my($maxwsumsq6) = @w;\n\
    \    my($maxwsumsq7) = @w;\n    my($maxwsumsq8) = @w;\n    my($maxwsumsq9) = @w;\n\
    \    my($maxwsumsq10) = @w;\n    my($maxwsumsq11) = @w;\n    my($maxwsumsq12)\
    \ = @w;\n    my($maxwsumsq13) = @w;\n    my($maxwsumsq14) = @w;\n    my($maxwsumsq15)\
    \ = @w;\n    my($maxwsumsq16) = @w;\n    my($maxwsumsq17) = @w;\n    my($maxwsumsq18)\
    \ = @w;\n    my($maxwsumsq19) = @w;\n    my($maxwsumsq20) = @w;\n    my($maxwsumsq21)\
    \ = @w;\n    my($maxwsumsq22) = @w;\n    my($maxwsumsq23) = @w;\n    my($maxwsumsq24)\
    \ = @w;\n    my($maxwsumsq25) = @w;\n    my($maxwsumsq26) = @w;\n    my($maxwsumsq27)\
    \ = @w;\n    my($maxwsumsq28) = @w;\n    my($maxwsumsq29) = @w;\n    my($maxwsumsq30)\
    \ = @w;\n    my($maxwsumsq31) = @w;\n    my($maxwsumsq32) = @w;\n    my($maxwsumsq33)\
    \ = @w;\n    my($maxwsumsq34) = @w;\n    my($maxwsumsq35", "    my $max_weight\
    \ = $w;\n    my $sum = 0;\n    my $is_balanced = 1;\n    foreach my $i (@$q) {\n\
    \        $sum += $i;\n        if ($sum > $max_weight) {\n            $is_balanced\
    \ = 0;\n        }\n    }\n    return $is_balanced ? 1 : 0;\n}", "    my(@q) =\
    \ @$q;\n    my($maxw) = @_;\n    my($sumw) = @_;\n    my($balanced) = 0;\n   \
    \ my($maxbal) = -1;\n    my($maxbalw) = -1;\n    my($maxbalsum) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw)\
    \ = -1;\n    my($maxbalsumw) = -1;\n    my($maxbalsumw) = -1;\n    m", "    my(@q)\
    \ = @$q;\n    my(@w) = @$w;\n    my($max) = @w;\n    my($sum);\n    my($i);\n\
    \    my($j);\n    my($maxsum);\n    my($maxi);\n    my($maxj);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxwi);\n    my($maxwj);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($", "    my $max_weight\
    \ = max(@$q);\n    my $sum = 0;\n    foreach my $i (@$q) {\n        $sum += $i;\n\
    \    }\n    return 1 if ($sum == $max_weight && $max_weight <= $w);\n    return\
    \ \"\";\n}", "    my $max_weight = max($q);\n    my $sum = 0;\n    foreach my\
    \ $i (@$q) {\n        $sum += $i;\n    }\n    return 1 if $sum == $max_weight\
    \ && $sum == $w && is_palindromic($q);\n    return \"\";\n}", "    my(@q) = @$q;\n\
    \    my(@w) = @$w;\n    my(@max) = ();\n    my(@min) = ();\n    my(@sum) = ();\n\
    \    my(@fly) = ();\n    my($max);\n    my($min);\n    my($sum);\n    my($fly);\n\
    \    my($i);\n    my($j);\n    my($w);\n    my($q);\n    my($max);\n    my($min);\n\
    \    my($sum);\n    my($fly);\n    my($i);\n    my($j);\n    my($w);\n    my($q);\n\
    \    my($max);\n    my($min);\n    my($sum);\n    my($fly);\n    my($i);\n   \
    \ my($j);\n    my($w);\n    my($q);\n    my($max);\n    my($min);\n    my($sum);\n\
    \    my($fly);\n    my($i);\n    my($j);\n    my($w);\n    my($q);\n    my($max);\n\
    \    my($min);\n    my($sum);\n    my($fly);\n    my($i);\n    my($j);\n    my($w);\n\
    \    my($q);\n    my($max);\n    my($min);\n    my($sum);\n    my($fly);\n   \
    \ my($i);\n    my($j);\n    my($w);\n    my($q);\n    my($max);\n    my($min);\n\
    \    my($sum);\n    my($fly);\n    my($i);\n    my($j);\n    my($w);\n    my($q);\n\
    \    my($max);\n    my($min);\n    my($sum);\n    my($fly);\n    my($i);\n   \
    \ my($j);\n    my($w);\n    my($q);\n    my($max);\n    my($min);\n    my($sum);\n\
    \    my($fly);\n    my($i);\n    my($j);\n    my($w);\n    my($q);\n    my($max);\n\
    \    my($min);\n    my($sum);\n    my($fly);\n    my($i);\n    my($j);\n    my($w);",
  "    my($max_weight, $max_sum) = (0, 0);\n    my($i, $j, $sum, $sum2, $sum3, $sum4);\n\
    \    \n    # Find the maximum possible weight and the maximum possible sum.\n\
    \    for ($i = 0; $i < @$q; $i++) {\n        $sum = $sum2 = $sum3 = $sum4 = 0;\n\
    \        for ($j = 0; $j < @$q; $j++) {\n            $sum += $q->[$i][$j];\n \
    \           $sum2 += $q->[$i][$j] * $q->[$i][$j];\n            $sum3 += $q->[$i][$j]\
    \ * $q->[$i][$j] * $q->[$i][$j];\n            $sum4 += $q->[$i][$j] * $q->[$i][$j]\
    \ * $q->[$i][$j] * $q->[$i][$j];\n        }\n        $max_weight = $w if $sum\
    \ <= $max_weight;\n        $max_sum = $sum if $sum2 <= $max_sum;\n        $max_sum\
    \ = $sum3 if $sum4 <= $max_sum;\n    }\n    \n    # If the maximum possible sum\
    \ is less than or equal to the maximum possible weight,\n    # then q will fly.\n\
    \    return $max_sum <= $max_weight ? \"\" : \"1\";\n}", "    my(@a) = @$q;\n\
    \    my($max) = @$w;\n    my($sum);\n    my($i);\n    my($j);\n    my($maxsum);\n\
    \    my($maxi);\n    my($maxj);\n    my($maxw);\n    my($maxwsum);\n    my($maxwi);\n\
    \    my($maxwj);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n\
    \    my($maxw);\n    my($maxwsum);\n    my($maxw);\n    my($maxwsum);\n    my($maxw);\n\
    \    my($maxwsum);\n    my($maxw);\n    my($maxw", "    my(@q) = @_;\n    my($max_weight);\n\
    \    my($sum);\n    my($i);\n    my($j);\n    my($result);", "    my $max_weight\
    \ = max($q);\n    my $balanced = is_balanced($q);\n    my $sum = 0;\n    foreach\
    \ my $i (@$q) {\n        $sum += $i;\n    }\n    return $balanced if $sum < $max_weight;\n\
    \    return $balanced if $sum == $max_weight;\n    return $balanced if $sum >\
    \ $max_weight;\n    return 1;\n}", "    my $max = $w;\n    my $sum = 0;\n    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $balanced = 0;\n    my $fly_count\
    \ = 0;\n    my $fly_sum = 0;\n    my $fly_max = 0;\n    my $fly_min = 0;\n   \
    \ my $fly_weight = 0;\n    my $fly_weight2 = 0;\n    my $fly_weight3 = 0;\n  \
    \  my $fly_weight4 = 0;\n    my $fly_weight5 = 0;\n    my $fly_weight6 = 0;\n\
    \    my $fly_weight7 = 0;\n    my $fly_weight8 = 0;\n    my $fly_weight9 = 0;\n\
    \    my $fly_weight10 = 0;\n    my $fly_weight11 = 0;\n    my $fly_weight12 =\
    \ 0;\n    my $fly_weight13 = 0;\n    my $fly_weight14 = 0;\n    my $fly_weight15\
    \ = 0;\n    my $fly_weight16 = 0;\n    my $fly_weight17 = 0;\n    my $fly_weight18\
    \ = 0;\n    my $fly_weight19 = 0;\n    my $fly_weight20 = 0;\n    my $fly_weight21\
    \ = 0;\n    my $fly_weight22 = 0;\n    my $fly_weight23 = 0;\n    my $fly_weight24\
    \ = 0;\n    my $fly_weight25 = 0;\n    my $fly_weight26 = 0;\n    my $fly_weight27\
    \ = 0;\n    my $fly_weight28 = 0;\n    my $fly_weight29 = 0;\n    my $fly_weight30\
    \ = 0;\n    my $fly_weight31 = 0;\n    my $fly_weight32 = 0;\n    my $fly_weight33\
    \ = 0;\n    my $fly_weight34 = 0;\n    my $fly_weight35 = 0;\n    my $fly_weight36\
    \ = 0;\n    my $fly_weight37 = 0;\n    my $fly_weight38 = 0;\n    my $fly_weight39\
    \ = 0;\n    my $fly_weight40 = 0;\n    my $fly_weight41 = 0;\n    my $fly_weight42\
    \ = 0;\n    my $fly_weight43 = 0;\n    my $fly_weight44 = 0;\n    my $fly_weight45\
    \ = 0;\n    my $fly_weight46 = 0;\n    my $fly_weight47 = 0;\n    my $fly_weight48\
    \ = 0;\n    my $fly_weight49 = 0;\n    my $fly_weight50 = 0;\n    my $fly_weight51\
    \ = 0;\n    my $fly_weight52 = 0;\n    my $fly_weight53 = 0;\n    my $fly_weight54\
    \ = 0;\n    my $fly_weight55 = 0;\n    my $fly_weight56 = 0;\n    my $fly_weight57\
    \ = 0;\n    my $", "    my(@q) = @$q;\n    my($max) = @q;\n    my $sum = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $maxw = 0;\n    my $maxw2\
    \ = 0;\n    my $maxw3 = 0;\n    my $maxw4 = 0;\n    my $maxw5 = 0;\n    my $maxw6\
    \ = 0;\n    my $maxw7 = 0;\n    my $maxw8 = 0;\n    my $maxw9 = 0;\n    my $maxw10\
    \ = 0;\n    my $maxw11 = 0;\n    my $maxw12 = 0;\n    my $maxw13 = 0;\n    my\
    \ $maxw14 = 0;\n    my $maxw15 = 0;\n    my $maxw16 = 0;\n    my $maxw17 = 0;\n\
    \    my $maxw18 = 0;\n    my $maxw19 = 0;\n    my $maxw20 = 0;\n    my $maxw21\
    \ = 0;\n    my $maxw22 = 0;\n    my $maxw23 = 0;\n    my $maxw24 = 0;\n    my\
    \ $maxw25 = 0;\n    my $maxw26 = 0;\n    my $maxw27 = 0;\n    my $maxw28 = 0;\n\
    \    my $maxw29 = 0;\n    my $maxw30 = 0;\n    my $maxw31 = 0;\n    my $maxw32\
    \ = 0;\n    my $maxw33 = 0;\n    my $maxw34 = 0;\n    my $maxw35 = 0;\n    my\
    \ $maxw36 = 0;\n    my $maxw37 = 0;\n    my $maxw38 = 0;\n    my $maxw39 = 0;\n\
    \    my $maxw40 = 0;\n    my $maxw41 = 0;\n    my $maxw42 = 0;\n    my $maxw43\
    \ = 0;\n    my $maxw44 = 0;\n    my $maxw45 = 0;\n    my $maxw46 = 0;\n    my\
    \ $maxw47 = 0;\n    my $maxw48 = 0;\n    my $maxw49 = 0;\n    my $maxw50 = 0;\n\
    \    my $maxw51 = 0;\n    my $maxw52 = 0;\n    my $maxw53 = 0;\n    my $maxw54\
    \ = 0;\n    my $maxw55 = 0;\n    my $maxw56 = 0;\n    my $maxw57 = 0;\n    my\
    \ $maxw58 = 0;\n    my $maxw59 = 0;\n    my $maxw60 = 0;\n    my $maxw61 = 0;\n\
    \    my $maxw62 = 0;\n    my $maxw63 = 0;\n    my $maxw64 = 0;\n    my $maxw65\
    \ = 0;\n    my $maxw66 = 0;\n    my $maxw67 = 0;\n    my $maxw68 = 0;\n    my\
    \ $max", "    my(@q, $w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n    my(@w);\n\
    \    my(@w);\n    my(@w);\n", "    my($i, $j, $sum, $max, $maxsum, $maxw);\n \
    \   \n    $max = $w;\n    $maxsum = 0;\n    $maxw = 0;\n    \n    for ($i = 0;\
    \ $i < @$q; $i++) {\n        $sum = $q->[$i] + $q->[$i];\n        if ($sum > $max)\
    \ {\n            $max = $sum;\n            $maxsum = $sum;\n            $maxw\
    \ = $q->[$i];\n        }\n    }\n    \n    return $maxsum <= $max && $maxw <=\
    \ $w;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

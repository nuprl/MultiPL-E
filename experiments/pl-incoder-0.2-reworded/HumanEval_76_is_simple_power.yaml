name: HumanEval_76_is_simple_power
language: pl
prompt: "# Your task is to write a function that returns true if a number x is a simple\n\
  # power of n and false in other cases.\n# x is a simple power of n if n**int=x\n\
  # For example:\n# >>> is_simple_power(1, 4)\n# true\n# >>> is_simple_power(2, 2)\n\
  # true\n# >>> is_simple_power(8, 2)\n# true\n# >>> is_simple_power(3, 2)\n# false\n\
  # >>> is_simple_power(3, 1)\n# false\n# >>> is_simple_power(5, 3)\n# false\nsub\
  \ is_simple_power {\n    my($x, $n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_simple_power;\n\
  \        if(eq_deeply($candidate->(16, 2),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(143214, 16),\"\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4,\
  \ 2),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9,\
  \ 3),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(16,\
  \ 4),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(24,\
  \ 2),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(128, 4),\"\")) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->(12, 6),\"\")) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1,\
  \ 1),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1,\
  \ 12),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return 1 if $x==$n**$x;\n    return 0 if $x<$n and $x>1;\n    return\
    \ 0 if $x<$n and $x==1;\n    return 0 if $x>$n and $x==1;\n    return 0 if $x>$n\
    \ and $x==$n**$x;\n}", "    return 1 if $x==$n**$x;\n    return 0 if $x<$n;\n\
    \    return 0 if $x>$n;\n    return 1;\n}", "    return 1 if $x==$n || $x==$n*$n;\n\
    \    return 0;\n}", "    return 1 if $n ** $x == $x;\n    return 0;\n}", "   \
    \ return 1 if $x==$n**$x;\n    return 0 if $x<$n and $x%$n==0;\n    return 0 if\
    \ $x<$n and $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n    return 0 if $x<$n\
    \ and $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n    return 0 if $x<$n and\
    \ $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n\
    \    return 0 if $x<$n and $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n  \
    \  return 0 if $x<$n and $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n    return\
    \ 0 if $x<$n and $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n    return 0\
    \ if $x<$n and $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n    return 0 if\
    \ $x<$n and $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n    return 0 if $x<$n\
    \ and $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n    return 0 if $x<$n and\
    \ $x%$n==0;\n    return 0 if $x<$n and $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n\
    \    return 0 if $x<$n and $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n  \
    \  return 0 if $x<$n and $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n    return\
    \ 0 if $x<$n and $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n    return 0\
    \ if $x<$n and $x%$n==1;\n    return 0 if $x<$n and $x%$n==0;\n    return 0 if\
    \ $x<", "    return 1 if $x==$n || $x==$n*$n;\n    return 0;\n}", "    return\
    \ 1 if $x==$n || $x==$n*$n;\n    return 0;\n}", "    return 1 if $x==$n**$x;\n\
    \    return 0 if $x<$n;\n    return 0 if $x>$n;\n    return 1;\n}", "    return\
    \ 1 if $x==$n**$x;\n    return 0 if $x<$n;\n    return 0 if $x>$n;\n    return\
    \ 1;\n}", "    my $power = $n ** $x;\n    return $power == $x;\n}", "    return\
    \ 1 if $x==$n || $x==$n*$n;\n    return 0;\n}", "    return 1 if $x==$n**$x;\n\
    \    return 0 if $x<$n or $x>$n;\n    return 1;\n}", "    return 1 if $x==$n ||\
    \ $x==$n*$n;\n    return 0;\n}", "    return 1 if $x==$n || $x==$n*$n;\n    return\
    \ 0;\n}", "    return 1 if $x==$n || $x==$n*$n;\n    return 0;\n}", "    return\
    \ 1 if $x==$n;\n    return 0 if $x<$n or $x%$n==0;\n    return 1 if $x%$n==0;\n\
    \    return 0 if $x%$n==1;\n    return 1 if $x%$n==$n-1;\n    return 0 if $x%$n==$n+1;\n\
    \    return 1 if $x%$n==$n+2;\n    return 0 if $x%$n==$n+3;\n    return 1 if $x%$n==$n+4;\n\
    \    return 0 if $x%$n==$n+5;\n    return 1 if $x%$n==$n+6;\n    return 0 if $x%$n==$n+7;\n\
    \    return 1 if $x%$n==$n+8;\n    return 0 if $x%$n==$n+9;\n    return 1 if $x%$n==$n+10;\n\
    \    return 0 if $x%$n==$n+11;\n    return 1 if $x%$n==$n+12;\n    return 0 if\
    \ $x%$n==$n+13;\n    return 1 if $x%$n==$n+14;\n    return 0 if $x%$n==$n+15;\n\
    \    return 1 if $x%$n==$n+16;\n    return 0 if $x%$n==$n+17;\n    return 1 if\
    \ $x%$n==$n+18;\n    return 0 if $x%$n==$n+19;\n    return 1 if $x%$n==$n+20;\n\
    \    return 0 if $x%$n==$n+21;\n    return 1 if $x%$n==$n+22;\n    return 0 if\
    \ $x%$n==$n+23;\n    return 1 if $x%$n==$n+24;\n    return 0 if $x%$n==$n+25;\n\
    \    return 1 if $x%$n==$n+26;\n    return 0 if $x%$n==$n+27;\n    return 1 if\
    \ $x%$n==$n+28;\n    return 0 if $x%$n==$n+29;\n    return 1 if $x%$n==$n+30;\n\
    \    return 0 if $x%$n==$n+31;\n    return 1 if $x%$n==$n+32;\n    return 0 if\
    \ $x%$n==$n+33;\n    return 1 if $x%$n==$n+34;", "    return 1 if $x==$n || $x==$n*$n;\n\
    \    return 0;\n}", "    return 1 if $x==$n**$x;\n    return 0;\n}", "    return\
    \ 1 if $x==$n || $x==$n*$n;\n    return 0;\n}", "    my $result = 1;\n    my $power\
    \ = $n;\n    my $power = $n if $power < 1;\n    my $power = $n if $power > $x;\n\
    \    my $power = $n if $power < $x;\n    my $power = $n if $power > $x;\n    my\
    \ $power = $n if $power < $x;\n    my $power = $n if $power > $x;\n    my $power\
    \ = $n if $power < $x;\n    my $power = $n if $power > $x;\n    my $power = $n\
    \ if $power < $x;\n    my $power = $n if $power > $x;\n    my $power = $n if $power\
    \ < $x;\n    my $power = $n if $power > $x;\n    my $power = $n if $power < $x;\n\
    \    my $power = $n if $power > $x;\n    my $power = $n if $power < $x;\n    my\
    \ $power = $n if $power > $x;\n    my $power = $n if $power < $x;\n    my $power\
    \ = $n if $power > $x;\n    my $power = $n if $power < $x;\n    my $power = $n\
    \ if $power > $x;\n    my $power = $n if $power < $x;\n    my $power = $n if $power\
    \ > $x;\n    my $power = $n if $power < $x;\n    my $power = $n if $power > $x;\n\
    \    my $power = $n if $power < $x;\n    my $power = $n if $power > $x;\n    my\
    \ $power = $n if $power < $x;\n    my $power = $n if $power > $x;\n    my $power\
    \ = $n if $power < $x;\n    my $power = $n if $power > $x;\n    my $power = $n\
    \ if $power < $x;\n    my $power = $n if $power > $x;\n    my $power = $n if $power\
    \ < $x;\n    my $power = $n if $power > $x;\n    my $power = $n if $power < $x;\n\
    \    my $power = $n if $power > $x;\n    my $power = $n if $power < $x;\n    my\
    \ $power = $n if $power > $x;\n    my $power = $n if "]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

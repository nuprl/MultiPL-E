name: HumanEval_68_pluck
language: pl
prompt: "# \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n# your task is to pluck one of the nodes and return it.\n# The\
  \ plucked node should be the node with the smallest even value.\n# If multiple nodes\
  \ with the same smallest even value are found return the node that has smallest\
  \ index.\n# The plucked node should be returned in an array, [ smalest_value, its\
  \ index ],\n# If there are no even values or the given array is empty, return [].\n\
  # Example 1:\n# >>> pluck([4, 2, 3])\n# [2, 1]\n# Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n# Example 2:\n# >>> pluck([1, 2, 3])\n\
  # [2, 1]\n# Explanation: 2 has the smallest even value, and 2 has the smallest index.\n\
  # Example 3:\n# >>> pluck([])\n# []\n# Example 4:\n# >>> pluck([5, 0, 3, 0, 4, 2])\n\
  # [0, 1]\n# Explanation: 0 is the smallest value, but  there are two zeros,\n# so\
  \ we will choose the first zero, which has the smallest index.\n# Constraints:\n\
  # * 1 <= nodes.length <= 10000\n# * 0 <= node.value\nsub pluck {\n    my($arr) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pluck;\n\
  \        if(eq_deeply($candidate->([4, 2, 3]),[2, 1])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2,\
  \ 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 0, 3, 0, 4, 2]),[0, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([1, 2, 3, 0, 5, 3]),[0, 3])) {\n   \
  \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 4, 8, 4, 8]),[4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([7, 6, 7, 1]),[6, 1])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([7,\
  \ 9, 7, 1]),[])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["    my $min_value = $arr[0];\n    my $min_idx = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $even_value = 0;\n    my $even_idx = 0;\n    my $even_value_count\
    \ = 0;\n    my $even_idx_count = 0;\n    my $even_value_count2 = 0;\n    my $even_idx_count2\
    \ = 0;\n    my $even_value_count3 = 0;\n    my $even_idx_count3 = 0;\n    my $even_value_count4\
    \ = 0;\n    my $even_idx_count4 = 0;\n    my $even_value_count5 = 0;\n    my $even_idx_count5\
    \ = 0;\n    my $even_value_count6 = 0;\n    my $even_idx_count6 = 0;\n    my $even_value_count7\
    \ = 0;\n    my $even_idx_count7 = 0;\n    my $even_value_count8 = 0;\n    my $even_idx_count8\
    \ = 0;\n    my $even_value_count9 = 0;\n    my $even_idx_count9 = 0;\n    my $even_value_count10\
    \ = 0;\n    my $even_idx_count10 = 0;\n    my $even_value_count11 = 0;\n    my\
    \ $even_idx_count11 = 0;\n    my $even_value_count12 = 0;\n    my $even_idx_count12\
    \ = 0;\n    my $even_value_count13 = 0;\n    my $even_idx_count13 = 0;\n    my\
    \ $even_value_count14 = 0;\n    my $even_idx_count14 = 0;\n    my $even_value_count15\
    \ = 0;\n    my $even_idx_count15 = 0;\n    my $even_value_count16 = 0;\n    my\
    \ $even_idx_count16 = 0;\n    my $even_value_count17 = 0;\n    my $even_idx_count17\
    \ = 0;\n    my $even_value_count18 = 0;\n    my $even_idx_count18 = 0;\n    my\
    \ $even_value_count19 = 0;\n    my $even_idx_count19 = 0;\n    my $even_value_count20\
    \ = 0;\n    my $even_idx_count20 = 0;\n    my $even_value_count21 = 0;\n    my\
    \ $even_idx_count21 = 0;\n    my $even_value_count22 = 0;\n    my $even_idx_count22\
    \ = 0;\n    my $even_value_count23 = 0;\n    my $even_idx_count23 = 0;\n    my\
    \ $even_value_count24 = 0;\n    my $even_idx_count24 = 0;\n    my $even_value_count25\
    \ = 0;\n    my $even_idx_count25 = 0;\n    my $even_value_count26 = 0;\n    my\
    \ $even_idx_count26 = 0;\n    my $even_value_count27 = 0;\n    my $even_idx_count27\
    \ = 0;\n    my $even_value_count28 = 0;\n    my $even_idx_count28 = 0;\n    my\
    \ $even_value_count29 = 0;\n    my $even_idx_count29 = 0;\n    my $even_value_count30\
    \ = 0;\n    my $even_idx_count30 = 0;\n    my $even_value_count31 = 0;\n", " \
    \   my $min = -1;\n    my $min_index;\n    my $index;\n    my $value;\n    my\
    \ $even;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n    \
    \        $even = $node;\n        }\n        else {\n            $value = $node;\n\
    \            $index = $index;\n        }\n    }\n    return $even if ($even !=\
    \ -1);\n    return $value if ($value != -1);\n    return $arr unless (@$arr);\n\
    \    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $min\
    \ = $node;\n            $min_index = $index;\n        }\n    }\n    return $min\
    \ if ($min != -1);\n    return $min_index;\n}", "    my @res;\n    my $min;\n\
    \    my $index;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n    my $even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $min_even;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_value;\n    my $min_even;\n\
    \    my $min_index;\n    my $min_value;\n    my $min_even;\n    my $min_index;\n\
    \    my $min_value;\n    my $", "    my $min = $arr[0];\n    my $index = 0;\n\
    \    for (my $i = 1; $i < @$arr; $i++) {\n        if ($arr[$i] % 2 == 0) {\n \
    \           if ($arr[$i] < $min) {\n                $min = $arr[$i];\n       \
    \         $index = $i;\n            }\n        }\n    }\n    return [$min, $index];\n\
    }", "    my @res;\n    my $min = $arr[0];\n    my $index = 0;\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    my $max_value = 0;\n    my $max_even_value\
    \ = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value_index\
    \ = 0;\n    my $even_value_index2 = 0;\n    my $even_value_index3 = 0;\n    my\
    \ $even_value_index4 = 0;\n    my $even_value_index5 = 0;\n    my $even_value_index6\
    \ = 0;\n    my $even_value_index7 = 0;\n    my $even_value_index8 = 0;\n    my\
    \ $even_value_index9 = 0;\n    my $even_value_index10 = 0;\n    my $even_value_index11\
    \ = 0;\n    my $even_value_index12 = 0;\n    my $even_value_index13 = 0;\n   \
    \ my $even_value_index14 = 0;\n    my $even_value_index15 = 0;\n    my $even_value_index16\
    \ = 0;\n    my $even_value_index17 = 0;\n    my $even_value_index18 = 0;\n   \
    \ my $even_value_index19 = 0;\n    my $even_value_index20 = 0;\n    my $even_value_index21\
    \ = 0;\n    my $even_value_index22 = 0;\n    my $even_value_index23 = 0;\n   \
    \ my $even_value_index24 = 0;\n    my $even_value_index25 = 0;\n    my $even_value_index26\
    \ = 0;\n    my $even_value_index27 = 0;\n    my $even_value_index28 = 0;\n   \
    \ my $even_value_index29 = 0;\n    my $even_value_index30 = 0;\n    my $even_value_index31\
    \ = 0;\n    my $even_value_index32 = 0;\n    my $even_value_index33 = 0;\n   \
    \ my $even_value_index34 = 0;\n    my $even_value_index35 = 0;\n    my $even_value_index36\
    \ = 0;\n    my $even_value_index37 = 0;\n    my $even_value_index38 = 0;\n   \
    \ my $even_value_index39 = 0;\n    my $even_value_index40 = 0;\n    my $even_value_index41\
    \ = 0;\n    my $even_value_index42 = 0;\n    my $even_value_index43 = 0;\n   \
    \ my $even_value_index44 = 0;\n    my $even_value_index45 = 0;\n    my $even_value_index46\
    \ = 0;\n    my $even_value_index47 = 0;\n    my $even_value_index48 = 0;\n   \
    \ my $even_value_index49 = 0;\n    my $even_value_index50 = 0;\n    my $even_value_index51\
    \ = 0;\n    my $even_value_index52 = 0;\n    my $even_value_index53 = 0;\n   \
    \ my $even_value_index54 = 0;\n    my $even_value_index55 = 0;\n    my $even_value_index56\
    \ = 0;\n    my $even_value_index57 = 0;\n    my $even_value_index58 = 0;\n", " \
    \   my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $i = 0;\n \
    \   my $j = 0;\n    my $even;\n    my $even_index;\n    my $even_value;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    ", "    my @res;\n    my\
    \ $min;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n    my\
    \ $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n\
    \    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my\
    \ $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n\
    \    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my\
    \ $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n\
    \    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my\
    \ $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n    my $a;\n\
    \    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my\
    \ $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n\
    \    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my\
    \ $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n\
    \    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my\
    \ $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n\
    \    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my\
    \ $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_;\n\
    \    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n", "    my $min = -1;\n    my $min_index;\n    my $index;\n\
    \    my $value;\n    foreach my $node (@$arr) {\n        if ($node % 2 == 0) {\n\
    \            $value = $node;\n            $index = $node;\n        }\n       \
    \ elsif ($node < $min) {\n            $min = $node;\n            $min_index =\
    \ $index;\n        }\n    }\n    if ($min == -1) {\n        return [];\n    }\n\
    \    return [ $min, $min_index ];\n}", "    my $min = -1;\n    my $min_index;\n\
    \    my $index;\n    my $value;\n    foreach my $node (@$arr) {\n        if ($node\
    \ % 2 == 0) {\n            $value = $node;\n            $index = $node / 2;\n\
    \        }\n        else {\n            if ($min == -1 || $value < $min) {\n \
    \               $min = $value;\n                $min_index = $index;\n       \
    \     }\n        }\n    }\n    return $min == -1 ? [] : [ $min, $min_index ];\n\
    }", "    my @res;\n    my $min;\n    my $index;\n    my $value;\n    my $i;\n\
    \    my $j;\n    my $k;\n    my $found;\n    my $min_index;\n    my $min_value;\n\
    \    my $min_even;\n    my $min_index;\n    my $min_even_index;\n    my $min_even_value;\n\
    \    my $even;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value;\n    my $even_index", "    my @res;\n    my $min;\n    my\
    \ $index;\n    my $value;\n    my $even;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $even_index;\n    my $even_value;\n    my $smallest_value;\n    my $smallest_index;\n\
    \    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n \
    \   my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n  \
    \  my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n   \
    \ my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my\
    \ $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n\
    \    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n \
    \   my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n  \
    \  my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n   \
    \ my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my\
    \ $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n\
    \    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n \
    \   my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n  \
    \  my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n   \
    \ my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my\
    \ $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n\
    \    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n \
    \   my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n  \
    \  my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n   \
    \ my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my\
    \ $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n\
    \    my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n \
    \   my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n  \
    \  my $smallest_index;\n    my $smallest_index;\n    my $smallest_index;\n   \
    \ my $smallest_index;\n    my $smallest_index;\n    my $smalle", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $even;\n    my $even_index;\n    my $even_value;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n   \
    \ my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my\
    \ $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value\
    \ = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index =\
    \ 0;\n    my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n\
    \    my $even_index = 0;\n    my $even_value = 0;\n    my $even_index = 0;\n \
    \   my $even_value = 0;\n    my $even_index = 0;\n    my $even_value = 0;\n  \
    \  my $even_index = 0;\n    my $even_value = 0;\n    ", "    my $min_even_val\
    \ = 0;\n    my $min_even_val_index = 0;\n    my $min_even_val_index2 = 0;\n  \
    \  my $min_even_val_index3 = 0;\n    my $min_even_val_index4 = 0;\n    my $min_even_val_index5\
    \ = 0;\n    my $min_even_val_index6 = 0;\n    my $min_even_val_index7 = 0;\n \
    \   my $min_even_val_index8 = 0;\n    my $min_even_val_index9 = 0;\n    my $min_even_val_index10\
    \ = 0;\n    my $min_even_val_index11 = 0;\n    my $min_even_val_index12 = 0;\n\
    \    my $min_even_val_index13 = 0;\n    my $min_even_val_index14 = 0;\n    my\
    \ $min_even_val_index15 = 0;\n    my $min_even_val_index16 = 0;\n    my $min_even_val_index17\
    \ = 0;\n    my $min_even_val_index18 = 0;\n    my $min_even_val_index19 = 0;\n\
    \    my $min_even_val_index20 = 0;\n    my $min_even_val_index21 = 0;\n    my\
    \ $min_even_val_index22 = 0;\n    my $min_even_val_index23 = 0;\n    my $min_even_val_index24\
    \ = 0;\n    my $min_even_val_index25 = 0;\n    my $min_even_val_index26 = 0;\n\
    \    my $min_even_val_index27 = 0;\n    my $min_even_val_index28 = 0;\n    my\
    \ $min_even_val_index29 = 0;\n    my $min_even_val_index30 = 0;\n    my $min_even_val_index31\
    \ = 0;\n    my $min_even_val_index32 = 0;\n    my $min_even_val_index33 = 0;\n\
    \    my $min_even_val_index34 = 0;\n    my $min_even_val_index35 = 0;\n    my\
    \ $min_even_val_index36 = 0;\n    my $min_even_val_index37 = 0;\n    my $min_even_val_index38\
    \ = 0;\n    my $min_even_val_index39 = 0;\n    my $min_even_val_index40 = 0;\n\
    \    my $min_even_val_index41 = 0;\n    my $min_even_val_index42 = 0;\n    my\
    \ $min_even_val_index43 = 0;\n    my $min_even_val_index44 = 0;\n    my $min_even_val_index45\
    \ = 0;\n    my $min_even_val_index46 = 0;\n    my $min_even_val_index47 = 0;\n\
    \    my $min_even_val_index48 = 0;\n    my $min_even_val_index49 = 0;\n    my\
    \ $min_even_val_index50 = 0;\n    my $min_even_val_index51 = 0;", "    my $min_even_value;\n\
    \    my $min_index;\n    my $even_value_count;\n    my $index;\n    my $even_value;\n\
    \    my $i;\n    my $j;\n    my $result;\n    my $count = 0;\n    my $even_value_index;\n\
    \    my $even_value_index2;\n    my $even_value_index3;\n    my $even_value_index4;\n\
    \    my $even_value_index5;\n    my $even_value_index6;\n    my $even_value_index7;\n\
    \    my $even_value_index8;\n    my $even_value_index9;\n    my $even_value_index10;\n\
    \    my $even_value_index11;\n    my $even_value_index12;\n    my $even_value_index13;\n\
    \    my $even_value_index14;\n    my $even_value_index15;\n    my $even_value_index16;\n\
    \    my $even_value_index17;\n    my $even_value_index18;\n    my $even_value_index19;\n\
    \    my $even_value_index20;\n    my $even_value_index21;\n    my $even_value_index22;\n\
    \    my $even_value_index23;\n    my $even_value_index24;\n    my $even_value_index25;\n\
    \    my $even_value_index26;\n    my $even_value_index27;\n    my $even_value_index28;\n\
    \    my $even_value_index29;\n    my $even_value_index30;\n    my $even_value_index31;\n\
    \    my $even_value_index32;\n    my $even_value_index33;\n    my $even_value_index34;\n\
    \    my $even_value_index35;\n    my $even_value_index36;\n    my $even_value_index37;\n\
    \    my $even_value_index38;\n    my $even_value_index39;\n    my $even_value_index40;\n\
    \    my $even_value_index41;\n    my $even_value_index42;\n    my $even_value_index43;\n\
    \    my $even_value_index44;\n    my $even_value_index45;\n    my $even_value_index46;\n\
    \    my $even_value_index47;\n    my $even_value_index48;\n    my $even_value_index49;\n\
    \    my $even_value_index50;\n    my $even_value_index51;\n    my $even_value_index52;\n\
    \    my $even_value_index53;\n    my $even_value_index54;\n    my $even_value_index55;\n\
    \    my $even_value_index56;\n    my $even_value_index57;\n    my $even_value_index58;\n\
    \    my $even_value_index59;\n    my $even_value_index60;\n    my $even_value_index6",
  "    my $min = $arr[0];\n    my $index = 0;\n    my $even = 0;\n    foreach my $num\
    \ (@$arr) {\n        if ($num % 2 != 0) {\n            $even = $num;\n       \
    \ }\n        if ($num < $min) {\n            $min = $num;\n            $index\
    \ = $even;\n        }\n    }\n    return $arr[$index] if $index != 0;\n    return\
    \ [];\n}", "    my $min_even_value = 0;\n    my $min_even_index = 0;\n    my $smalest_value;\n\
    \    my $smalest_index;\n    foreach my $node (@$arr) {\n        if ($node % 2\
    \ == 0) {\n            if ($node < $min_even_value) {\n                $smalest_value\
    \ = $node;\n                $smalest_index = $min_even_index;\n            }\n\
    \            else {\n                if ($node < $min_even_index) {\n        \
    \            $smalest_value = $node;\n                    $smalest_index = $min_even_index;\n\
    \                }\n                else {\n                    if ($node < $min_even_index)\
    \ {\n                        $smalest_value = $node;\n                       \
    \ $smalest_index = $min_even_index;\n                    }\n                }\n\
    \            }\n        }\n    }\n    return $smalest_value;\n}", "    my @res;\n\
    \    my $min;\n    my $index;\n    my $value;\n    my $even;\n    my $index;\n\
    \    foreach my $node (@$arr) {\n        $value = $node;\n        $index = 0;\n\
    \        $even = 0;\n        foreach my $i (0 .. $#$arr) {\n            if ($arr->[$i]\
    \ % 2 == 0) {\n                $even = 1;\n            }\n            if ($value\
    \ == $arr->[$i]) {\n                $index = $i;\n            }\n        }\n \
    \       if ($even != 0) {\n            $min = $value;\n            $index = $index;\n\
    \        }\n        push(@res, [\"$min\", \"$index\"]);\n    }\n    return @res;\n\
    }", "    my $min_value = $arr[0];\n    my $min_idx = 0;\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $even = 0;\n    my $even_idx = 0;\n    my $even_value = 0;\n\
    \    my $even_idx2 = 0;\n    my $even_value2 = 0;\n    my $even_idx3 = 0;\n  \
    \  my $even_value3 = 0;\n    my $even_idx4 = 0;\n    my $even_value4 = 0;\n  \
    \  my $even_idx5 = 0;\n    my $even_value5 = 0;\n    my $even_idx6 = 0;\n    my\
    \ $even_value6 = 0;\n    my $even_idx7 = 0;\n    my $even_value7 = 0;\n    my\
    \ $even_idx8 = 0;\n    my $even_value8 = 0;\n    my $even_idx9 = 0;\n    my $even_value9\
    \ = 0;\n    my $even_idx10 = 0;\n    my $even_value10 = 0;\n    my $even_idx11\
    \ = 0;\n    my $even_value11 = 0;\n    my $even_idx12 = 0;\n    my $even_value12\
    \ = 0;\n    my $even_idx13 = 0;\n    my $even_value13 = 0;\n    my $even_idx14\
    \ = 0;\n    my $even_value14 = 0;\n    my $even_idx15 = 0;\n    my $even_value15\
    \ = 0;\n    my $even_idx16 = 0;\n    my $even_value16 = 0;\n    my $even_idx17\
    \ = 0;\n    my $even_value17 = 0;\n    my $even_idx18 = 0;\n    my $even_value18\
    \ = 0;\n    my $even_idx19 = 0;\n    my $even_value19 = 0;\n    my $even_idx20\
    \ = 0;\n    my $even_value20 = 0;\n    my $even_idx21 = 0;\n    my $even_value21\
    \ = 0;\n    my $even_idx22 = 0;\n    my $even_value22 = 0;\n    my $even_idx23\
    \ = 0;\n    my $even_value23 = 0;\n    my $even_idx24 = 0;\n    my $even_value24\
    \ = 0;\n    my $even_idx25 = 0;\n    my $even_value25 = 0;\n    my $even_idx26\
    \ = 0;\n    my $even_value26 = 0;\n    my $even_idx27 = 0;\n    my $even_value27\
    \ = 0;\n    my $even_idx28 = 0;\n    my $even_value28 = 0;\n    my $even_idx29\
    \ = 0;\n    my $even_value29 = 0;\n    my $even_idx30 = 0;\n    my $even_value30\
    \ = 0;\n    my $even_idx31 = 0;\n    my $even_value31 = 0;\n    my $even_idx32\
    \ = 0;\n    my $even_value32 = 0;\n    my $even_idx33 = 0;\n    my $even_value33\
    \ = 0;\n    my $even_idx34 = 0;\n    my $even_value34 = 0;\n    my $even_idx35\
    \ = 0;\n    my $even_value35 = 0;\n    my $even_idx", "    my @result;\n    my\
    \ $min;\n    my $index;\n    my $value;\n    my $i = 0;\n    my $j = 0;\n    foreach\
    \ my $node (@$arr) {\n        if ($node % 2 == 0) {\n            $value = $node;\n\
    \            $min = $node;\n            $index = $i;\n        }\n        $i++;\n\
    \    }\n    if ($min == 0) {\n        return [];\n    }\n    foreach my $node\
    \ (@$arr) {\n        if ($node == $min) {\n            if ($node % 2 == 0) {\n\
    \                if ($node < $min) {\n                    $min = $node;\n    \
    \                $index = $j;\n                }\n                $j++;\n    \
    \        }\n        }\n    }\n    if ($min == 0) {\n        return [];\n    }\n\
    \    push (@result, $min, $index);\n    return @result;\n}", "    my @result;\n\
    \    my $min_even_value;\n    my $min_even_index;\n    my $i;\n    my $j;\n  \
    \  my $k;\n    my $even_value;\n    my $even_index;\n    my $value;\n    my $index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_index_index;\n    my $even_value;\n   \
    \ my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n    my\
    \ $even_value_index;\n    my $even_index_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n\
    \    my $even_value_index;\n    my $even_index_index;\n    my $even_value;\n \
    \   my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n  \
    \  my $even_value_index;\n    my $even_index_index;\n    my $even_value;\n   \
    \ my $even_index;\n    my $even_value_count;\n    my $even_index_count;\n    my\
    \ $even_value_index;\n    my $even_index_index;\n    my $even_value;\n    my $even_index;\n\
    \    my $even_value_count;\n    my $even_index_count;\n    my $even_value_index;\n\
    \    my $even_index_index;\n    my $even_value;\n    my $even_index;\n    my $even_value_count;\n\
    \    my $even_index_count;\n    my $even_value_index;\n    my $even_index_index;\n\
    \    my $even_value;\n    my $even_index;\n    my $even_value_count"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

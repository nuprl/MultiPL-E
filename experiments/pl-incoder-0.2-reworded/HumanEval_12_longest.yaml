name: HumanEval_12_longest
language: pl
prompt: "# Out of array of strings, return the longest one. Return the first one in\
  \ case of multiple\n# strings of the same length. Return undef in case the input\
  \ array is empty.\n# >>> longest([])\n# undef\n# >>> longest([\"a\", \"b\", \"c\"\
  ])\n# \"a\"\n# >>> longest([\"a\", \"bb\", \"ccc\"])\n# \"ccc\"\nsub longest {\n\
  \    my($strings) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&longest;\n\
  \        if(eq_deeply($candidate->([]),undef)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"x\", \"y\", \"\
  z\"]),\"x\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"\
  abc\"]),\"zzzz\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  }\n\ntesthumaneval();"
completions: ["    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return undef;\n}", "    my $longest = undef;\n    my $length\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest;\n}", "    return undef unless @$strings;\n    my\
    \ $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n\
    \        my $length = length($string);\n        return undef unless $length >\
    \ $length;\n        $longest = $string if $length > length($longest);\n    }\n\
    \    return $longest;\n}", "    return undef unless @$strings;\n    my $longest\
    \ = undef;\n    my $longestLength = -1;\n    foreach my $string (@$strings) {\n\
    \        my $length = length($string);\n        if ($longestLength < $length)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength;\n\
    \    my $longestIndex;\n    my $longestString;\n    my $i;\n    my $j;\n    my\
    \ $k;\n    my $length;\n    my $stringLength;\n    my $stringIndex;\n    my $stringLengthCount;\n\
    \    my $stringIndex;\n    my $stringLengthCount;\n    my $stringLengthCountMax;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n\
    \    my $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my\
    \ $stringLengthCountMaxIndex;\n    my $stringLengthCountMaxIndex;\n    my $stringLength",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if (length($string) > length($longest));\n   \
    \     }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my\
    \ $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n\
    \        $length += length($string);\n        if ($length > $longest) {\n    \
    \        $longest = $length;\n        }\n    }\n    return $longest ? $strings[$#{$strings}]\
    \ : \"undef\";\n}", "    my $longest;\n    my $longestLength;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
    \ < $length) {\n            $longest = $string;\n            $longestLength =\
    \ $length;\n        }\n    }\n    return $longest if defined $longest;\n    return\
    \ undef;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string\
    \ (@$strings) {\n        $length += length($string);\n        if ($length > $longest)\
    \ {\n            $longest = $length;\n        }\n    }\n    return $longest ?\
    \ $strings[$#{$strings}-1] : undef;\n}", "    my $longest = undef;\n    my $length\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $first_longest;\n    my $i;\n    my $j;\n    my $k;\n    my $length;\n\
    \    my $max_length;\n    my $max_string_length;\n    my $max_string_length_counter;\n\
    \    my $max_string_length_counter_counter;\n    my $max_string_length_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter;\n    my $max_string_length_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter;\n\
    \    my $max_string_length_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if length($string) > length($longest);\n     \
    \   }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my $longest\
    \ = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings) {\n\
    \        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $length) {\n            $longest = $string;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest;\n    my $length = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $length) {\n            $longest = $string;\n        }\n    }\n    return $longest\
    \ if defined $longest;\n    return undef;\n}", "    my $longest = undef;\n   \
    \ my $length = 0;\n    foreach my $string (@$strings) {\n        my $length =\
    \ length($string);\n        if ($length > $length) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    foreach\
    \ my $string (@$strings) {\n        if (defined $longest) {\n            last\
    \ if (length($string) > length($longest));\n        }\n        $longest = $string;\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength = -1;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength == -1 || $length < $longestLength) {\n           \
    \ $longest = $string;\n            $longestLength = $length;\n        }\n    }\n\
    \    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest\
    \ = undef;\n    foreach my $string (@$strings) {\n        if (defined $longest)\
    \ {\n            last if length($string) > length($longest);\n        }\n    \
    \    $longest = $string;\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if defined $longest;\n    return undef;\n}", "   \
    \ my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest = undef;\n    my $length =\
    \ 0;\n    foreach my $string (@$strings) {\n        $length += length($string);\n\
    \        if ($length > $longest) {\n            $longest = $length;\n        }\n\
    \    }\n    return $longest ? $strings[$longest-1] : undef;\n}", "    my $longest;\n\
    \    my $longestLength = -1;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($longestLength < $length) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest unless $longestLength == -1;\n    return $strings[0];\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest;\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        if (defined $longest and length($string) > length($longest)) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            if (length($string) > length($longest)) {\n       \
    \         $longest = $string;\n            }\n        } else {\n            $longest\
    \ = $string;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    foreach my $string (@$strings) {\n        if (defined $longest) {\n     \
    \       last if (length($string) > length($longest));\n        }\n        $longest\
    \ = $string;\n    }\n    return $longest;\n}", "    my $longest = undef;\n   \
    \ my $longestLength = undef;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($longestLength eq undef) {\n       \
    \     $longest = $string;\n            $longestLength = $length;\n        } elsif\
    \ ($length eq $longestLength) {\n            $longest .= $string;\n        } else\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    foreach\
    \ my $string (@$strings) {\n        if (defined $longest) {\n            last\
    \ if (length($string) > length($longest));\n        }\n        $longest = $string;\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $length = 0;\n   \
    \ foreach my $string (@$strings) {\n        my $len = length($string);\n     \
    \   if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest unless defined $longest;\n  \
    \  return $strings[0];\n}", "    my $longest;\n    my $longestLength = 0;\n  \
    \  foreach my $string (@$strings) {\n        my $length = length($string);\n \
    \       if ($length > $longestLength) {\n            $longest = $string;\n   \
    \         $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $string_length\
    \ = length($string);\n        if ($string_length > $length) {\n            $longest\
    \ = $string;\n            $length = $string_length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest_length = 0;\n    my $longest_string = \"\";\n\
    \    foreach my $string (@$strings) {\n        my $string_length = length($string);\n\
    \        if ($string_length > $longest_length) {\n            $longest_length\
    \ = $string_length;\n            $longest_string = $string;\n        }\n    }\n\
    \    return $longest_string if $longest_length > 0;\n    return;\n}", "    my\
    \ $longest;\n    my $longestLength;\n    foreach my $string (@$strings) {\n  \
    \      my $length = length($string);\n        if ($longestLength < $length) {\n\
    \            $longest = $string;\n            $longestLength = $length;\n    \
    \    }\n    }\n    return $longest unless @$strings;\n    return undef if $longestLength\
    \ == 0;\n    return $longest;\n}", "    my $longest_length = 0;\n    my $longest_string\
    \ = \"\";\n    foreach my $string (@$strings) {\n        my $string_length = length($string);\n\
    \        if ($string_length > $longest_length) {\n            $longest_length\
    \ = $string_length;\n            $longest_string = $string;\n        }\n    }\n\
    \    return $longest_string if $longest_length > 0;\n    return;\n}", "    my\
    \ $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n\
    \        my $len = length($string);\n        if ($len > $length) {\n         \
    \   $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest;\n    my $longestLength = -1;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($longestLength\
    \ < $length) {\n            $longest = $string;\n            $longestLength =\
    \ $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n   \
    \ return;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return undef;\n}", "    my $longest = undef;\n    foreach\
    \ my $string (@$strings) {\n        if (defined $longest) {\n            last\
    \ if (length($string) > length($longest));\n        }\n        $longest = $string;\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > length($longest)) {\n            $longest = $string;\n   \
    \     }\n    }\n    return $longest unless @$strings;\n    return undef;\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $string_length = length($string);\n        if ($string_length > $length)\
    \ {\n            $longest = $string;\n            $length = $string_length;\n\
    \        }\n    }\n    return $longest if $length;\n    return;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  $length += length $string;\n        if ($length > $longest) {\n           \
    \ $longest = $string;\n        }\n    }\n    return $longest if defined $longest;\n\
    \    return;\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        if (defined $longest) {\n            last if (length($string) > length($longest));\n\
    \        }\n        $longest = $string;\n    }\n    return $longest;\n}", "  \
    \  my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest and length $string > length $longest) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return undef;\n}", "    my $longest = undef;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest = undef;\n    my $longestLength = -1;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($longestLength == -1 || $length > $longestLength) {\n            $longest =\
    \ $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest;\n    my $longestLength = -1;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return undef;\n}", "    return undef unless @$strings;\n    my $longest =\
    \ undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest_length\
    \ = 0;\n    my $longest_string;\n    foreach my $string (@$strings) {\n      \
    \  my $string_length = length($string);\n        if ($string_length > $longest_length)\
    \ {\n            $longest_length = $string_length;\n            $longest_string\
    \ = $string;\n        }\n    }\n    return $longest_string if $longest_length;\n\
    \    return;\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if (defined $longest && $length\
    \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n \
    \   return $longest;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    return undef unless\
    \ @$strings;\n    my $longest = undef;\n    my $length = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $len = length($string);\n        if ($len > $length)\
    \ {\n            $longest = $string;\n            $length = $len;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $string_length = length($string);\n        if ($string_length\
    \ > $length) {\n            $longest = $string;\n            $length = $string_length;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        $length +=\
    \ length($string);\n        if ($length > $longest) {\n            $longest =\
    \ $length;\n        }\n    }\n    return $longest ? $strings[$#{$strings}-1] :\
    \ undef;\n}", "    my $longest_length = 0;\n    my $longest_string = \"\";\n \
    \   foreach my $string (@$strings) {\n        my $string_length = length($string);\n\
    \        if ($string_length > $longest_length) {\n            $longest_length\
    \ = $string_length;\n            $longest_string = $string;\n        }\n    }\n\
    \    return $longest_string if $longest_length > 0;\n    return undef;\n}", " \
    \   my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if (length($string) > length($longest));\n   \
    \     }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my\
    \ $longest;\n    my $longestLength;\n    my $longestIndex;\n    my $index;\n \
    \   my $length;\n    foreach my $string (@$strings) {\n        $longestLength\
    \ = 0;\n        $longestIndex = -1;\n        $longest = \"\";\n        $index\
    \ = 0;\n        $length = 0;\n        foreach my $char (split //, $string) {\n\
    \            $length++;\n            if ($char eq $longest) {\n              \
    \  $longestLength++;\n                $longestIndex = $index;\n            }\n\
    \            $index++;\n        }\n        if ($longestLength > $length) {\n \
    \           $longest = $string;\n            $longestLength = $length;\n     \
    \   }\n    }\n    return $longest if $longestLength > 0;\n    return undef;\n}",
  "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $len = length($string);\n        if ($len > $length) {\n          \
    \  $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return undef;\n}", "    my $longest = undef;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        $length +=\
    \ length($string);\n        if ($length > $longest) {\n            $longest =\
    \ $length;\n        }\n    }\n    return $longest ? $strings[$longest-1] : undef;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return;\n}",
  "    my $longest;\n    my $longestLength;\n    foreach my $string (@$strings) {\n\
    \        if (defined $longestLength) {\n            last if (length($string) >\
    \ $longestLength);\n        }\n        $longest = $string;\n        $longestLength\
    \ = length($string);\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $length) {\n            $longest =\
    \ $string;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > length($longest)) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest;\n   \
    \ my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if $longestLength > 0;\n    return;\n}", "    my $longest;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    return undef unless @$strings;\n\
    \    my $longest_length = undef;\n    my $longest_string = undef;\n    foreach\
    \ my $string (@$strings) {\n        my $string_length = length($string);\n   \
    \     if ($longest_length eq undef) {\n            $longest_length = $string_length;\n\
    \            $longest_string = $string;\n        } elsif ($longest_length < $string_length)\
    \ {\n            $longest_length = $string_length;\n            $longest_string\
    \ = $string;\n        }\n    }\n    return $longest_string;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest if defined $longest;\n    return undef;\n}", "    my $longest\
    \ = undef;\n    foreach my $string (@$strings) {\n        if (defined $longest)\
    \ {\n            last if (length($string) > length($longest));\n        }\n  \
    \      $longest = $string;\n    }\n    return $longest;\n}", "    my $longest\
    \ = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings) {\n\
    \        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > length($longest)) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest;\n   \
    \ my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest unless @$strings;\n    return undef if $longestLength == 0;\n    return\
    \ $longest;\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if (defined $longest && $length\
    \ > length($longest)) {\n            $longest = $string;\n        }\n    }\n \
    \   return $longest;\n}", "    my $longest = undef;\n    my $length = 0;\n   \
    \ foreach my $string (@$strings) {\n        my $length = length($string);\n  \
    \      if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $length = 0;\n   \
    \ foreach my $string (@$strings) {\n        my $length = length($string);\n  \
    \      if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest unless defined $longest;\n    return $longest if $length\
    \ == 0;\n    return $longest[0];\n}", "    my $longest;\n    my $length = 0;\n\
    \    foreach my $string (@$strings) {\n        my $len = length($string);\n  \
    \      if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest if defined $longest;\n    return\
    \ undef;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $stringLength = length($string);\n\
    \        if ($stringLength > $longestLength) {\n            $longest = $string;\n\
    \            $longestLength = $stringLength;\n        }\n    }\n    return $longest\
    \ if $longestLength > 0;\n    return;\n}", "    my $longest = undef;\n    my $length\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $current_length = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $current_length) {\n     \
    \       $longest = $string;\n            $current_length = $length;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest = undef;\n    my $length =\
    \ 0;\n    foreach my $string (@$strings) {\n        $length = length($string);\n\
    \        if ($length > $length) {\n            $longest = $string;\n        }\n\
    \    }\n    return $longest;\n}", "    return undef unless @$strings;\n    my\
    \ $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n\
    \        $length += length $string;\n        $longest = $string if $length > length\
    \ $longest;\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    my $longest;\n    my $longestLength\
    \ = undef;\n    foreach my $string (@$strings) {\n        if (defined $longestLength\
    \ and length $string > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = length $string;\n        } elsif (defined $longestLength\
    \ and length $string == $longestLength) {\n            $longest = $string if length\
    \ $string > length $longest;\n        }\n    }\n    return $longest;\n}", "  \
    \  my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest and length $string > length $longest) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return undef;\n}", "    my $longest = undef;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest unless @$strings;\n    return\
    \ undef if $longestLength == 0;\n    return $longest;\n}", "    my $longest =\
    \ undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $string_length = length($string);\n        if ($string_length > $length) {\n\
    \            $longest = $string;\n            $length = $string_length;\n    \
    \    }\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength < $length) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest unless\
    \ defined $longest;\n    return $longest;\n}", "    my $longest = undef;\n   \
    \ my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest;\n}", "    return undef unless @$strings;\n    my $longest = undef;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest;\n}", "  \
    \  my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return undef;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if $longestLength > 0;\n \
    \   return undef;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest unless $longestLength == 0;\n\
    \    return $strings[0];\n}", "    my $longest_length = 0;\n    my $longest_string\
    \ = \"\";\n    foreach my $string (@$strings) {\n        my $string_length = length($string);\n\
    \        if ($string_length > $longest_length) {\n            $longest_length\
    \ = $string_length;\n            $longest_string = $string;\n        }\n    }\n\
    \    return $longest_string if $longest_length > 0;\n    return undef;\n}", " \
    \   my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return undef;\n\
    }", "    return undef unless @$strings;\n    my $longest = undef;\n    my $longestLength\
    \ = -1;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength < $length) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest;\n}", "    return undef unless @$strings;\n    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $length = length($string);\n        if (defined $longest && $length > $length)\
    \ {\n            $longest = $string;\n        }\n        elsif (defined $longest)\
    \ {\n            return $longest;\n        }\n    }\n    return $longest;\n}",
  "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        $length = length($string);\n        if ($length > $length) {\n  \
    \          $longest = $string;\n        }\n    }\n    return $longest;\n}", " \
    \   my $longest_length = 0;\n    my $longest_string = \"\";\n    foreach my $string\
    \ (@$strings) {\n        my $string_length = length($string);\n        if ($string_length\
    \ > $longest_length) {\n            $longest_length = $string_length;\n      \
    \      $longest_string = $string;\n        }\n    }\n    return $longest_string\
    \ if $longest_length > 0;\n    return;\n}", "    my $longest = undef;\n    my\
    \ $longestLength = 0;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($length > $longestLength) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > length($longest)) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest_length = 0;\n  \
    \  my $longest_string = \"\";\n    foreach my $string (@$strings) {\n        my\
    \ $string_length = length($string);\n        if ($string_length > $longest_length)\
    \ {\n            $longest_length = $string_length;\n            $longest_string\
    \ = $string;\n        }\n    }\n    return $longest_string if $longest_length\
    \ > 0;\n    return undef;\n}", "    my $longest;\n    my $length = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest if $length;\n    return undef;\n}", " \
    \   return undef unless @$strings;\n    my $max_len = -1;\n    my $max_string\
    \ = \"\";\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $max_len) {\n            $max_len = $len;\n            $max_string\
    \ = $string;\n        }\n    }\n    return $max_string;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return undef;\n}", " \
    \   my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest unless $longestLength == 0;\n    return $strings[0];\n\
    }", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return undef;\n}", " \
    \   my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $len = length($string);\n        if ($len > $length) {\n     \
    \       $longest = $string;\n            $length = $len;\n        }\n    }\n \
    \   return $longest;\n}", "    my $longest = undef;\n    my $length = 0;\n   \
    \ foreach my $string (@$strings) {\n        $length += length($string);\n    \
    \    if ($length > $longest) {\n            $longest = $length;\n        }\n \
    \   }\n    return $longest ? $strings[$longest-1] : undef;\n}", "    return undef\
    \ unless @$strings;\n    my $longest = undef;\n    my $length = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength < $length) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    my $longest = undef;\n    foreach\
    \ my $string (@$strings) {\n        if (defined $longest) {\n            last\
    \ if (length($string) > length($longest));\n        }\n        $longest = $string;\n\
    \    }\n    return $longest;\n}", "    my $longest = undef;\n    foreach my $string\
    \ (@$strings) {\n        if (defined $longest) {\n            last if (length($string)\
    \ > length($longest));\n        }\n        $longest = $string;\n    }\n    return\
    \ $longest;\n}", "    my $longest;\n    foreach my $string (@$strings) {\n   \
    \     my $len = length($string);\n        if ($len > length($longest)) {\n   \
    \         $longest = $string;\n        }\n    }\n    return $longest unless @$strings;\n\
    \    return $strings[0];\n}", "    my $longest = undef;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ length($longest)) {\n            $longest = $string;\n        }\n    }\n   \
    \ return $longest;\n}", "    my $longest;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return undef;\n\
    }", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $length = length($string);\n        if ($length > $length) {\n         \
    \   $longest = $string;\n        }\n    }\n    return $longest;\n}", "    my $longest\
    \ = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n      \
    \  my $len = length($string);\n        if ($len > $length) {\n            $longest\
    \ = $string;\n            $length = $len;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return undef;\n\
    }", "    my $longest;\n    my $longestLength;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($longestLength < $length)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest unless defined $longest;\n    return $strings[0];\n\
    }", "    my $longest = undef;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > length($longest)) {\n    \
    \        $longest = $string;\n        }\n    }\n    return $longest;\n}", "  \
    \  my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if (length($string) > length($longest));\n   \
    \     }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my\
    \ $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings) {\n\
    \        $length += length $string;\n        if (defined $longest and $length\
    \ > length $longest) {\n            $longest = $string;\n        }\n    }\n  \
    \  return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n    foreach\
    \ my $string (@$strings) {\n        my $length = length($string);\n        if\
    \ ($length > $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest if defined $longest;\n   \
    \ return;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $length = length($string);\n        if ($length\
    \ > $length) {\n            $longest = $string;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach my\
    \ $string (@$strings) {\n        my $len = length($string);\n        if ($len\
    \ > $length) {\n            $longest = $string;\n            $length = $len;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $longestLength = -1;\n    foreach my $string (@$strings) {\n        my $length\
    \ = length($string);\n        if ($longestLength < $length) {\n            $longest\
    \ = $string;\n            $longestLength = $length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest = undef;\n    foreach my $string (@$strings)\
    \ {\n        if (defined $longest && length $string > length $longest) {\n   \
    \         $longest = $string;\n        }\n    }\n    return $longest;\n}", " \
    \   my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest and length $string > length $longest) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    return undef unless @$strings;\n\
    \    my $longest = undef;\n    my $length = 0;\n    for my $string (@$strings)\
    \ {\n        my $length = length($string);\n        return $longest if $length\
    \ > $length;\n        $longest = $string;\n    }\n    return $longest;\n}", " \
    \   my $longest;\n    my $longestLength;\n    my $longestIndex;\n    my $longestString\
    \ = $strings[0];\n    foreach my $string (@$strings) {\n        my $stringLength\
    \ = $string =~ tr/a-zA-Z//;\n        if ($stringLength > $longestLength) {\n \
    \           $longest = $string;\n            $longestLength = $stringLength;\n\
    \            $longestIndex = 0;\n        }\n        elsif ($stringLength == $longestLength)\
    \ {\n            $longestIndex++;\n        }\n    }\n    return $strings[$longestIndex]\
    \ if $longestIndex > 0;\n    return undef;\n}", "    my $longest_length = 0;\n\
    \    my $longest_string = \"\";\n    foreach my $string (@$strings) {\n      \
    \  my $string_length = length($string);\n        if ($string_length > $longest_length)\
    \ {\n            $longest_length = $string_length;\n            $longest_string\
    \ = $string;\n        }\n    }\n    return $longest_string if $longest_length\
    \ > 0;\n    return;\n}", "    my $longest = undef;\n    my $length = 0;\n    foreach\
    \ my $string (@$strings) {\n        $length += length $string;\n        if (defined\
    \ $longest and $length > length $longest) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        $length += length($string);\n\
    \        if ($length > $longest) {\n            $longest = $length;\n        }\n\
    \    }\n    return $longest ? $strings[$#{$strings}-1] : undef;\n}", "    my $longest;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest if $longestLength > 0;\n    return undef;\n}", " \
    \   my $longest = undef;\n    foreach my $string (@$strings) {\n        if (defined\
    \ $longest) {\n            last if (length($string) > length($longest));\n   \
    \     }\n        $longest = $string;\n    }\n    return $longest;\n}", "    my\
    \ $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings) {\n\
    \        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return undef;\n\
    }", "    my $longest_length = 0;\n    my $longest_string = \"\";\n    foreach\
    \ my $string (@$strings) {\n        my $string_length = length($string);\n   \
    \     if ($string_length > $longest_length) {\n            $longest_length = $string_length;\n\
    \            $longest_string = $string;\n        }\n    }\n    return $longest_string;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $string_length\
    \ = length($string);\n        if ($string_length > $length) {\n            $longest\
    \ = $string;\n            $length = $string_length;\n        }\n    }\n    return\
    \ $longest;\n}", "    my $longest;\n    foreach my $string (@$strings) {\n   \
    \     if (length($string) > length($longest)) {\n            $longest = $string;\n\
    \        }\n    }\n    return $longest;\n}", "    my $longest;\n    my $first_longest;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > length($longest)) {\n            $longest = $string;\n\
    \            $first_longest = $string;\n        }\n    }\n    return $first_longest\
    \ if defined $first_longest;\n    return undef;\n}", "    my $longest = undef;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        $length +=\
    \ length($string);\n        if ($length > $longest) {\n            $longest =\
    \ $length;\n        }\n    }\n    return $longest ? $strings[$longest-1] : undef;\n\
    }", "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if defined $longest;\n    return undef;\n\
    }", "    my $longest = undef;\n    my $longestLength = 0;\n    foreach my $string\
    \ (@$strings) {\n        my $length = length($string);\n        if ($length >\
    \ $longestLength) {\n            $longest = $string;\n            $longestLength\
    \ = $length;\n        }\n    }\n    return $longest;\n}", "    my $longest = undef;\n\
    \    my $longestLength = 0;\n    foreach my $string (@$strings) {\n        my\
    \ $length = length($string);\n        if ($length > $longestLength) {\n      \
    \      $longest = $string;\n            $longestLength = $length;\n        }\n\
    \    }\n    return $longest;\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ defined $longest;\n    return undef;\n}", "    my $longest = undef;\n    my\
    \ $length = 0;\n    foreach my $string (@$strings) {\n        my $len = length($string);\n\
    \        if ($len > $length) {\n            $longest = $string;\n            $length\
    \ = $len;\n        }\n    }\n    return $longest;\n}", "    my $longest_length\
    \ = 0;\n    my $longest_string = \"\";\n    foreach my $string (@$strings) {\n\
    \        my $string_length = length($string);\n        if ($string_length > $longest_length)\
    \ {\n            $longest_length = $string_length;\n            $longest_string\
    \ = $string;\n        }\n    }\n    return $longest_string if $longest_length\
    \ > 0;\n    return undef;\n}", "    my $longest;\n    my $longestLength = 0;\n\
    \    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return undef;\n}", "    my $longest;\n    foreach my\
    \ $string (@$strings) {\n        if (length($string) > length($longest)) {\n \
    \           $longest = $string;\n        }\n    }\n    return $longest if defined\
    \ $longest;\n    return;\n}", "    my $longest = undef;\n    my $longestLength\
    \ = 0;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($length > $longestLength) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    return undef unless @$strings;\n    my $longest = undef;\n    my $length =\
    \ 0;\n    foreach my $string (@$strings) {\n        $length = length($string);\n\
    \        $longest = $string if ($length > $length);\n    }\n    return $longest;\n\
    }", "    my $longest = undef;\n    my $length = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $length) {\n\
    \            $longest = $string;\n        }\n    }\n    return $longest;\n}",
  "    my $longest;\n    my $longestLength = 0;\n    foreach my $string (@$strings)\
    \ {\n        my $length = length($string);\n        if ($length > $longestLength)\
    \ {\n            $longest = $string;\n            $longestLength = $length;\n\
    \        }\n    }\n    return $longest if $longestLength > 0;\n    return undef;\n\
    }", "    return undef unless @$strings;\n    my $max_len = -1;\n    my $max_str\
    \ = \"\";\n    for my $str (@$strings) {\n        my $len = length($str);\n  \
    \      if ($len > $max_len) {\n            $max_len = $len;\n            $max_str\
    \ = $str;\n        }\n    }\n    return $max_str;\n}", "    my $longest = undef;\n\
    \    my $length = 0;\n    foreach my $string (@$strings) {\n        my $len =\
    \ length($string);\n        if ($len > $length) {\n            $longest = $string;\n\
    \            $length = $len;\n        }\n    }\n    return $longest;\n}", "  \
    \  my $longest;\n    my $length = 0;\n    foreach my $string (@$strings) {\n \
    \       my $len = length($string);\n        if ($len > $length) {\n          \
    \  $longest = $string;\n            $length = $len;\n        }\n    }\n    return\
    \ $longest if defined $longest;\n    return;\n}", "    my $longest;\n    my $longestLength\
    \ = -1;\n    foreach my $string (@$strings) {\n        my $length = length($string);\n\
    \        if ($longestLength < $length) {\n            $longest = $string;\n  \
    \          $longestLength = $length;\n        }\n    }\n    return $longest if\
    \ $longestLength > 0;\n    return undef;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_10_make_palindrome
language: pl
prompt: "# Find the shortest palindrome that begins with a supplied string.\n# Algorithm\
  \ idea is simple:\n# - Find the longest postfix of supplied string that is a palindrome.\n\
  # - Append to the end of the string reverse of a string prefix that comes before\
  \ the palindromic suffix.\n# >>> make_palindrome(\"\")\n# \"\"\n# >>> make_palindrome(\"\
  cat\")\n# \"catac\"\n# >>> make_palindrome(\"cata\")\n# \"catac\"\nsub make_palindrome\
  \ {\n    my($string) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&make_palindrome;\n\
  \        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"x\"),\"x\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  xyz\"),\"xyzyx\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"xyx\"),\"xyx\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"jerry\"),\"jerryrrej\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my($longest);\n    my($prefix);\n    my($suffix);\n    my($reverse);\n\
    \    my($palindrome);\n    my($i);", "    my($longest);\n    my($prefix);\n  \
    \  my($suffix);\n    my($reverse);\n    my($palindrome);", "    my($longest);\n\
    \    my($longestLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindromePrefixSuffix);\n    my($longestPalindromePrefixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffix);\n    my($longestPalindromePrefixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffix);\n    my($longestPalindromePrefixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffix);\n    my($longestPalindromePrefixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffix);\n    my($longestPalindromePrefixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffix);\n    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffix);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffix);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixx);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixx);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixx);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixx);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffixx);\n\
    \    my($longestPalindromePrefixSuffixSuffixSuffixSuffixSuffixSuffixSuffix", " \
    \   my $longest = 0;\n    my $longestPalindrome = \"\";\n    my $longestPalindromeLength\
    \ = 0;\n    my $longestPalindromePrefix;\n    my $longestPalindromeSuffix;\n \
    \   my $longestPalindromeSuffixLength;\n    my $longestPalindromeSuffixLengthBeforePalindrome;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromeLength;\n    my $longestPalindromeSuffixLengthBeforePalindromePrefix;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixLength;\n    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefix;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixLength;\n  \
    \  my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefixPrefixPrefixPrefixPrefixLength;\n\
    \    my $longestPalindromeSuffixLengthBeforePalindromePrefix", "    my $reversed_string;\n\
    \    my $longest;\n    my $longest_index;\n    my $longest_index2;\n    my $longest_index3;\n\
    \    my $longest_index4;\n    my $longest_index5;\n    my $longest_index6;\n \
    \   my $longest_index7;\n    my $longest_index8;\n    my $longest_index9;\n  \
    \  my $longest_index10;\n    my $longest_index11;\n    my $longest_index12;\n\
    \    my $longest_index13;\n    my $longest_index14;\n    my $longest_index15;\n\
    \    my $longest_index16;\n    my $longest_index17;\n    my $longest_index18;\n\
    \    my $longest_index19;\n    my $longest_index20;\n    my $longest_index21;\n\
    \    my $longest_index22;\n    my $longest_index23;\n    my $longest_index24;\n\
    \    my $longest_index25;\n    my $longest_index26;\n    my $longest_index27;\n\
    \    my $longest_index28;\n    my $longest_index29;\n    my $longest_index30;\n\
    \    my $longest_index31;\n    my $longest_index32;\n    my $longest_index33;\n\
    \    my $longest_index34;\n    my $longest_index35;\n    my $longest_index36;\n\
    \    my $longest_index37;\n    my $longest_index38;\n    my $longest_index39;\n\
    \    my $longest_index40;\n    my $longest_index41;\n    my $longest_index42;\n\
    \    my $longest_index43;\n    my $longest_index44;\n    my $longest_index45;\n\
    \    my $longest_index46;\n    my $longest_index47;\n    my $longest_index48;\n\
    \    my $longest_index49;\n    my $longest_index50;\n    my $longest_index51;\n\
    \    my $longest_index52;\n    my $longest_index53;\n    my $longest_index54;\n\
    \    my $longest_index55;\n    my $longest_index56;\n    my $longest_index57;\n\
    \    my $longest_index58;\n    my $longest_index59;\n    my $longest_index60;\n\
    \    my $longest_index61;\n    my $longest_index62;\n    my $longest_index63;\n\
    \    my $longest_index64;\n    my $longest_index65;\n    my $longest_index66;\n\
    \    my $longest_index67;\n    my $longest_index68;\n    my $longest_index69;\n\
    \    my $longest_index70;\n    my $longest_index71;\n    my $longest_index72;\n\
    \    my $longest_index73;\n    my $longest_index74;\n    my $longest", "    my($longest);\n\
    \    my($reverse);\n    my($palindrome);\n    my($prefix);\n    my($suffix);\n\
    \    my($i);\n    my($j);\n    my($length);", "    my($longest);\n    my($reverse);\n\
    \    my($prefix);\n    my($suffix);\n    my($palindrome);\n    my($i);\n    my($j);\n\
    \    my($length);", "    my($longest);\n    my($longestLength);\n    my($longestPalindrome);\n\
    \    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromePrefix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromePrefix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindromePrefix);\n    my($longestPalindromePrefixLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromePrefix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindrome);\n    my($longestPalindromeLength);\n\
    \    my($longestPalindromeSuffix);\n    my($longestPalindromeSuffixLength);\n\
    \    my($longestPalindro", "    return $string if $string eq \"\";\n    my $longest\
    \ = length($string);\n    my $longestPalindrome = \"\";\n    my $longestPalindromeLength\
    \ = 0;\n    my $longestPalindromeStart = 0;\n    my $longestPalindromeEnd = 0;\n\
    \    my $longestPalindromeStartIndex = 0;\n    my $longestPalindromeEndIndex =\
    \ 0;\n    my $longestPalindromeStartIndexInReverse = 0;\n    my $longestPalindromeEndIndexInReverse\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse2 = 0;\n    my $longestPalindromeEndIndexInReverse2\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse3 = 0;\n    my $longestPalindromeEndIndexInReverse3\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse4 = 0;\n    my $longestPalindromeEndIndexInReverse4\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse5 = 0;\n    my $longestPalindromeEndIndexInReverse5\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse6 = 0;\n    my $longestPalindromeEndIndexInReverse6\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse7 = 0;\n    my $longestPalindromeEndIndexInReverse7\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse8 = 0;\n    my $longestPalindromeEndIndexInReverse8\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse9 = 0;\n    my $longestPalindromeEndIndexInReverse9\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse10 = 0;\n    my $longestPalindromeEndIndexInReverse10\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse11 = 0;\n    my $longestPalindromeEndIndexInReverse11\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse12 = 0;\n    my $longestPalindromeEndIndexInReverse12\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse13 = 0;\n    my $longestPalindromeEndIndexInReverse13\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse14 = 0;\n    my $longestPalindromeEndIndexInReverse14\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse15 = 0;\n    my $longestPalindromeEndIndexInReverse15\
    \ = 0;\n    my $longestPalindromeStartIndexInReverse16 = 0;\n    my $longestPalindromeEnd",
  "    return $string if $string eq \"\";\n    my($longest, $longestLength, $longestPrefix,\
    \ $longestSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindrome, $longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $longestPalindromePrefix, $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n\
    \    my($longestPalindromeLength, $longestPalindromePrefix, $longestPalindromeSuffix)\
    \ = ('', 0, \"\", \"\");\n    my($longestPalindromeLength, $longestPalindromePrefix,\
    \ $longestPalindromeSuffix) = ('', 0, \"\", \"\");\n    my($longestPalindromeLength,\
    \ $", "    my($palindrome);\n    my($longest_postfix_palindrome);\n    my($longest_postfix_palindrome_length);\n\
    \    my($longest_postfix_palindrome_suffix);\n    my($longest_postfix_palindrome_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix);\n    my($longest_postfix_palindrome_prefix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix);\n    my($longest_postfix_palindrome_prefix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix);\n    my($longest_postfix_palindrome_prefix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix);\n    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix);\n   \
    \ my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length);\n\
    \    my($longest_postfix_palindrome_prefix_suffix_suffi", "    my($longest, $shortest);\n\
    \    my($i, $j, $k);\n    my($palindrome);", "    my($longest);\n    my($longestLength);\n\
    \    my($longestPrefix);\n    my($longestSuffixLength);\n    my($longestSuffixPrefix);\n\
    \    my($longestSuffixSuffixLength);\n    my($longestSuffixSuffixPrefix);\n  \
    \  my($longestSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffixSuffixSuffixSuffixPrefix);\n\
    \    my($longestSuffixSuffixSuffixSuffixSuffixSuffixLength);\n    my($longestSuffixSuffix",
  "    my($palindrome);\n    my($prefix_length);\n    my($suffix_length);\n    my($suffix_reverse);\n\
    \    my($suffix_reverse_index);\n    my($suffix_reverse_index2);\n    my($suffix_reverse_index3);\n\
    \    my($suffix_reverse_index4);\n    my($suffix_reverse_index5);\n    my($suffix_reverse_index6);\n\
    \    my($suffix_reverse_index7);\n    my($suffix_reverse_index8);\n    my($suffix_reverse_index9);\n\
    \    my($suffix_reverse_index10);\n    my($suffix_reverse_index11);\n    my($suffix_reverse_index12);\n\
    \    my($suffix_reverse_index13);\n    my($suffix_reverse_index14);\n    my($suffix_reverse_index15);\n\
    \    my($suffix_reverse_index16);\n    my($suffix_reverse_index17);\n    my($suffix_reverse_index18);\n\
    \    my($suffix_reverse_index19);\n    my($suffix_reverse_index20);\n    my($suffix_reverse_index21);\n\
    \    my($suffix_reverse_index22);\n    my($suffix_reverse_index23);\n    my($suffix_reverse_index24);\n\
    \    my($suffix_reverse_index25);\n    my($suffix_reverse_index26);\n    my($suffix_reverse_index27);\n\
    \    my($suffix_reverse_index28);\n    my($suffix_reverse_index29);\n    my($suffix_reverse_index30);\n\
    \    my($suffix_reverse_index31);\n    my($suffix_reverse_index32);\n    my($suffix_reverse_index33);\n\
    \    my($suffix_reverse_index34);\n    my($suffix_reverse_index35);\n    my($suffix_reverse_index36);\n\
    \    my($suffix_reverse_index37);\n    my($suffix_reverse_index38);\n    my($suffix_reverse_index39);\n\
    \    my($suffix_reverse_index40);\n    my($suffix_reverse_index41);\n    my($suffix_reverse_index42);\n\
    \    my($suffix_reverse_index43);\n    my($suffix_reverse_index44);\n    my($suffix_reverse_index45);\n\
    \    my($suffix_reverse_index46);\n    my($suffix_reverse_index47);\n    my($suffix_reverse_index48);\n\
    \    my($suffix_reverse_index49);\n    my($suffix_reverse_index50);\n    m", " \
    \   my($longest);\n    my($prefix);\n    my($suffix);\n    my($reverse);\n   \
    \ my($palindrome);\n    my($result);", "    my($longest);\n    my($reverse);\n\
    \    my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n  \
    \  my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n    my($prefix);\n\
    \    my($suffix);\n    my($longest);\n    my($reverse);\n    my($prefix);\n  \
    \  my($suffix);\n    my($longest);\n    my($reverse);\n    my($prefix);\n    my($suffix);\n\
    \    my($longest);\n    my($reverse);\n    my($prefix);\n    my($suffix);\n  \
    \  my($longest);\n    my($reverse);\n    my($prefix);\n    my($suffix);\n    my($longest);\n\
    \    my($reverse);\n    my($prefix);\n    my($suffix);\n    my($longest);\n  \
    \  my($reverse);\n    my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n\
    \    my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n  \
    \  my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n    my($prefix);\n\
    \    my($suffix);\n    my($longest);\n    my($reverse);\n    my($prefix);\n  \
    \  my($suffix);\n    my($longest);\n    my($reverse);\n    my($prefix);\n    my($suffix);\n\
    \    my($longest);\n    my($reverse);\n    my($prefix);\n    my($suffix);\n  \
    \  my($longest);\n    my($reverse);\n    my($prefix);\n    my($suffix);\n    my($longest);\n\
    \    my($reverse);\n    my($prefix);\n    my($suffix);\n    my($longest);\n  \
    \  my($reverse);\n    my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n\
    \    my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n  \
    \  my($prefix);\n    my($suffix);\n    my($longest);\n    my($reverse);\n    my($prefix);\n\
    \    my($suffix);\n    my($longest);\n    my(", "    my($longest);\n    my($longestLength);\n\
    \    my($longestPalindrome);\n    my($longestPalindromeLength);\n    my($longestPalindromeSuffix);\n\
    \    my($longestPalindromeSuffixLength);\n    my($longestPalindromePrefix);\n\
    \    my($longestPalindromePrefixLength);\n    my($longestPalindromeSuffixReverse);\n\
    \    my($longestPalindromeSuffixReverseLength);\n    my($longestPalindromePrefixReverse);\n\
    \    my($longestPalindromePrefixReverseLength);\n    my($longestPalindromeSuffixReversePalindrome);\n\
    \    my($longestPalindromeSuffixReversePalindromeLength);\n    my($longestPalindromePrefixReversePalindrome);\n\
    \    my($longestPalindromePrefixReversePalindromeLength);\n    my($longestPalindromeSuffixReversePalindromeSuffix);\n\
    \    my($longestPalindromeSuffixReversePalindromeSuffixLength);\n    my($longestPalindromePrefixReversePalindromeSuffix);\n\
    \    my($longestPalindromePrefixReversePalindromeSuffixLength);\n    my($longestPalindromeSuffixReversePalindromePrefix);\n\
    \    my($longestPalindromeSuffixReversePalindromePrefixLength);\n    my($longestPalindromePrefixReversePalindromePrefix);\n\
    \    my($longestPalindromePrefixReversePalindromePrefixLength);\n    my($longestPalindromeSuffixReversePalindromePrefixSuffix);\n\
    \    my($longestPalindromeSuffixReversePalindromePrefixSuffixLength);\n    my($longestPalindromePrefixReversePalindromePrefixSuffix);\n\
    \    my($longestPalindromePrefixReversePalindromePrefixSuffixLength);\n    my($longestPalindromeSuffixReversePalindromePrefixSuffixSuffix);\n\
    \    my($longestPalindromeSuffixReversePalindromePrefixSuffixSuffixLength);\n\
    \    my($longestPalindromePrefixReversePalindromePrefixSuffixSuffix);\n    my($longestPalindromePrefixReversePalindromePrefixSuffixSuffixLength);\n\
    \    my($longestPalindromeSuffixReversePalindromePrefixSuffixSuffixSuffix);\n\
    \    my($longest", "    my $palindrome = \"\";\n    my $longest = 0;\n    my $longestpostfix\
    \ = \"\";\n    my $longestprefix = 0;\n    my $longestsuffix = 0;\n    my $longestsuffixpostfix\
    \ = \"\";\n    my $longestsuffixprefix = 0;\n    my $longestsuffixsuffix = 0;\n\
    \    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffixsuffixprefix = 0;\n    my $longestsuffixsuffixsuffix\
    \ = 0;\n    my $longestsuffixsuffixpostfix = \"\";\n    my $longestsuffixsuffixprefix\
    \ = 0;\n    my $longestsuffixsuffixsuffix = 0;\n    my $longestsuffixsuffixpostfix\
    \ = \"\";\n    my $longestsuffix", "    my($postfix, $reverse, $prefix);\n   \
    \ my($longest);", "    my($longest);\n    my($prefix);\n    my($suffix);\n   \
    \ my($reverse);\n    my($palindrome);\n    my($i);"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_157_right_angle_triangle
language: pl
prompt: "# Given the lengths of the three sides of a triangle. Return 1 if the three\n\
  # sides form a right-angled triangle,  otherwise.\n# A right-angled triangle is\
  \ a triangle in which one angle is right angle or \n# 90 degree.\n# Example:\n#\
  \ >>> right_angle_triangle(3, 4, 5)\n# 1\n# >>> right_angle_triangle(1, 2, 3)\n\
  # \"\"\nsub right_angle_triangle {\n    my($a, $b, $c) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&right_angle_triangle;\n\
  \        if(eq_deeply($candidate->(3, 4, 5),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 2, 3),\"\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 6, 8),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(2, 2, 2),\"\")) {\n        print \"ok!\" }else{\n \
  \       exit 1;\n        }\n        if(eq_deeply($candidate->(7, 24, 25),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 5, 7),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(5, 12, 13),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(15, 8, 17),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(48,\
  \ 55, 73),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->(1, 1, 1),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(2, 2, 10),\"\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $d = $c - $b;\n    my $s = $a * $a + $b * $b;\n    my $t = $a\
    \ * $c + $b * $d;\n    my $u = $a * $d - $b * $c;\n    return $s > $t && $s >\
    \ $u;\n}", "    return 1 if ($a > $b and $a > $c);\n    return 1 if ($b > $c and\
    \ $b > $a);\n    return 1;\n}", "    return 1 if ($a > $b and $a > $c) or ($b\
    \ > $c and $b > $a);\n    return \"\";\n}", "    my $ab = $b - $a;\n    my $ac\
    \ = $c - $a;\n    my $bc = $b - $c;\n    my $abc = $ab * $ac;\n    my $bca = $bc\
    \ * $ca;\n    my $abca = $abc * $ca;\n    my $abcb = $abc * $cb;\n    my $bcbc\
    \ = $bc * $cb;\n    my $abcab = $abc * $ab;\n    my $bcabc = $bc * $ab;\n    my\
    \ $abcabc = $abc * $ab;\n    my $bcabcb = $bc * $cb;\n    my $abcabcb = $abc *\
    \ $ab;\n    my $bcabcbc = $bc * $cb;\n    my $abcabcbc = $abc * $ab;\n    my $bcabcbcb\
    \ = $bc * $cb;\n    my $abcabcbcb = $abc * $ab;\n    my $bcabcbcbc = $bc * $cb;\n\
    \    my $abcabcbcbc = $abc * $ab;\n    my $bcabcbcbcb = $bc * $cb;\n    my $abcabcbcbcb\
    \ = $abc * $ab;\n    my $bcabcbcbcbc = $bc * $cb;\n    my $abcabcbcbcbc = $abc\
    \ * $ab;\n    my $bcabcbcbcbcb = $bc * $cb;\n    my $abcabcbcbcbcb = $abc * $ab;\n\
    \    my $bcabcbcbcbcbc = $bc * $cb;\n    my $abcabcbcbcbcbc = $abc * $ab;\n  \
    \  my $bcabcbcbcbcbcb = $bc * $cb;\n    my $abcabcbcbcbcbcb = $abc * $ab;\n  \
    \  my $bcabcbcbcbcbcbc = $bc * $cb;\n    my $abcabcbcbcbcbcbc = $abc * $ab;\n\
    \    my $bcabcbcbcbcbcbcb = $bc * $cb;\n    my $abcabcbcbcbcbcbcb = $abc * $ab;\n\
    \    my $bcabcbcbcbcbcbcbc = $bc * $cb;\n    my $abcabcbcbcbcbcbcbc = $abc * $ab;\n\
    \    my $bcabcbcbcbcbcbcbcb = $bc * $cb;\n    my $abcab", "    return 1 if ($a\
    \ > $b && $a > $c && $b > $c);\n    return \"\" if (($a < $b && $a < $c && $b\
    \ < $c) || ($a > $b && $a > $c && $b > $c));\n    return \"\" if (($a < $b &&\
    \ $a < $c && $b > $c) || ($a > $b && $a > $c && $b < $c));\n    return \"\" if\
    \ (($a > $b && $a > $c && $b > $c) || ($a < $b && $a < $c && $b < $c));\n    return\
    \ \"\" if (($a > $b && $a > $c && $b < $c) || ($a < $b && $a < $c && $b > $c));\n\
    \    return \"\" if (($a < $b && $a < $c && $b < $c) || ($a > $b && $a > $c &&\
    \ $b > $c));\n    return \"\" if (($a < $b && $a < $c && $b > $c) || ($a > $b\
    \ && $a > $c && $b < $c));\n    return \"\" if (($a > $b && $a > $c && $b > $c)\
    \ || ($a < $b && $a < $c && $b < $c));\n    return \"\" if (($a > $b && $a > $c\
    \ && $b < $c) || ($a < $b && $a < $c && $b > $c));\n    return \"\" if (($a <\
    \ $b && $a < $c && $b < $c) || ($a > $b && $a > $c && $b > $c));\n    return \"\
    \" if (($a < $b && $a < $c && $b > $c) || ($a > $b && $a > $c && $b < $c));\n\
    \    return \"\" if (($a > $b && $a > $c && $b > $c) || ($a < $b && $a < $c &&\
    \ $b < $c));\n    return \"\" if (($a > $b && $a > $c && $b < $c) || ($a < $b\
    \ && $a < $c && $b > $c));\n    return \"\" if (($a < $b && $a < $c && $b < $c)\
    \ || ($a > $b && $a > $c && $b > $c", "    my $d = $c - $b;\n    my $s = $a /\
    \ $d;\n    my $t = $b / $d;\n    my $u = $a / $c;\n    my $v = ($u - $s) * $t;\n\
    \    my $w = sqrt($u * $u + $v * $v);\n    return $w < $a ? 1 : 0;\n}", "    my\
    \ $d = $c - $b;\n    my $e = $a - $c;\n    my $f = $d - $e;\n    my $g = sqrt($f*$f\
    \ + $e*$e);\n    if ($g == 0){\n        return \"\";\n    }\n    my $h = $f /\
    \ $g;\n    my $i = $e / $g;\n    my $j = $b / $g;\n    my $k = $a / $g;\n    my\
    \ $l = $h*$h + $i*$i + $j*$j + $k*$k + $b*$b + $c*$c;\n    if ($l < 0){\n    \
    \    return \"\";\n    }\n    if ($l == 0){\n        return 1;\n    }\n    if\
    \ ($l == 1){\n        return \"\";\n    }\n    if ($l == 2){\n        return 1;\n\
    \    }\n}", "    my $ab = $b - $a;\n    my $ac = $c - $a;\n    my $bc = $b - $c;\n\
    \    my $abc = $ab * $ac;\n    my $bca = bc * $ac;\n    my $abca = $abc * $ac;\n\
    \    my $bcab = $bca * $bc;\n    my $abcab = $abca * $bc;\n    my $abcabc = $abcab\
    \ * $bc;\n    my $abcabca = $abcabc * $ac;\n    my $abcabcab = $abcabca * $bc;\n\
    \    my $abcabcabc = $abcabcab * $bc;\n    my $abcabcabca = $abcabcabc * $ac;\n\
    \    my $abcabcabcab = $abcabcabca * $bc;\n    my $abcabcabcabc = $abcabcabcab\
    \ * $bc;\n    my $abcabcabcabca = $abcabcabcabc * $ac;\n    my $abcabcabcabcab\
    \ = $abcabcabcabca * $bc;\n    my $abcabcabcabcabc = $abcabcabcabcab * $bc;\n\
    \    my $abcabcabcabcabca = $abcabcabcabcabc * $ac;\n    my $abcabcabcabcabcab\
    \ = $abcabcabcabcabca * $bc;\n    my $abcabcabcabcabcabc = $abcabcabcabcabcab\
    \ * $bc;\n    my $abcabcabcabcabcabca = $abcabcabcabcabcabc * $ac;\n    my $abcabcabcabcabcabcab\
    \ = $abcabcabcabcabcabcaba * $bc;\n    my $abcabcabcabcabcabcabc = $abcabcabcabcabcabcab\
    \ * $bc;\n    my $abcabcabcabcabcabcabca = $abcabcabcabcabcabcabc * $ac;\n   \
    \ my $abcabcabcabcabcabcabb = $abcabcabcabcabcabcaba * $bc;\n    my $abcabcabcabcabcabcabcab\
    \ = $abcabcabcabcabcabcabb * $ac;\n    my $abcabcabcabcabcabcabcabc = $abcabcabcabcabcabcabcab\
    \ * $ac;\n    my $abcabcabcabcabcabcabcabca = $abcabcabcabcabcabcabcabc * $ac;\n\
    \    my $abcabcabcabcabcabcabcabcab = $abcabcabcabcab", "    return 1 if ($a >\
    \ $b && $a > $c);\n    return 1 if ($b > $c && $b > $a);\n    return 1 if ($c\
    \ > $a && $c > $b);\n    return \"\";\n}", "    return 1 if ($a > $b && $a > $c);\n\
    \    return 1 if ($b > $c && $b > $a);\n    return 1 if ($c > $a && $c > $b);\n\
    \    return \"\";\n}", "    my $d = $c - $b;\n    my $s = $a + ($b - $c) / $d;\n\
    \    my $t = $a + ($b + $c) / $d;\n    return $d > 0 ? \"1\" : \"0\";\n}", " \
    \   return 1 if $a > $b and $a > $c;\n    return 1 if $b > $c and $b > $a;\n \
    \   return 1;\n}", "    my $d = $c - $b;\n    my $s = $a / $d;\n    my $t = $b\
    \ / $d;\n    my $u = $s / $t;\n    my $v = ($b - $u * $c) / $d;\n    return $u\
    \ + $v > 1.0;\n}", "    my $d = $c - $b;\n    my $s = $a * $a + $b * $b + $c *\
    \ $c;\n    my $t = ($s * ($a + $b) + $c * ($b + $c)) / $d;\n    return $t < 1.0\
    \ ? \"1\" : \"\";\n}", "    my $d = $c - $b;\n    my $s = $a / $d;\n    my $t\
    \ = $b / $d;\n    my $u = $s / $t;\n    my $v = ($a * $t) - ($b * $u);\n    return\
    \ $v > 0 ? 1 : 0;\n}", "    my $d = $c - $b;\n    my $s = $a * $a + $b * $b +\
    \ $c * $c;\n    my $t = $a * $c - $b * $s;\n    my $u = $a * $b + $c * $d;\n \
    \   my $v = $b * $c - $a * $d;\n    my $w = sqrt($u * $u + $v * $v);\n    my $x\
    \ = $u / $w;\n    my $y = $v / $w;\n    my $z = $t / $w;\n    if ($x == $y &&\
    \ $x == $z) {\n        return 1;\n    }\n    return \"\";\n}", "    my $d = $a\
    \ - $b;\n    my $e = $c - $b;\n    my $f = $d - $e;\n    my $g = sqrt($f ** 2\
    \ + $e ** 2);\n    return 1 if $g == $a;\n    return 1 if $g == $b;\n    return\
    \ 1 if $g == $c;\n    return 1 if $f == $e && $f == $d;\n    return 1;\n}", " \
    \   return 1 if $a > $b and $a > $c;\n    return 1 if $b > $c and $b > $a;\n \
    \   return 1;\n}", "    my $d = $a - $b;\n    my $e = $c - $b;\n    my $f = $d\
    \ - $e;\n    my $g = sqrt($f ** 2 + $e ** 2);\n    return $g == $a || $g == $b\
    \ || $g == $c ? 1 : 0;\n}", "    my $d = $c - $b;\n    my $s = $a * $a + $b *\
    \ $b;\n    my $t = $a * $c + $b * $d;\n    my $u = $a * $d - $b * $c;\n    my\
    \ $v = ($u * $u + $t * $t) / $s;\n    return $v < 1.0;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_158_find_max
language: pl
prompt: "# Write a function that accepts an array of strings.\n# The array contains\
  \ different words. Return the word with maximum number\n# of unique characters.\
  \ If multiple strings have maximum number of unique\n# characters, return the one\
  \ which comes first in lexicographical order.\n# >>> find_max([\"name\", \"of\"\
  , \"string\"])\n# \"string\"\n# >>> find_max([\"name\", \"enam\", \"game\"])\n#\
  \ \"enam\"\n# >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n# \"aaaaaaa\"\nsub find_max\
  \ {\n    my($words) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_max;\n\
  \        if(eq_deeply($candidate->([\"name\", \"of\", \"string\"]),\"string\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  name\", \"enam\", \"game\"]),\"enam\")) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->([\"aaaaaaa\", \"bb\", \"\
  cc\"]),\"aaaaaaa\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([\"abc\", \"cba\"]),\"abc\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  play\", \"this\", \"game\", \"of\", \"footbott\"]),\"footbott\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  we\", \"are\", \"gonna\", \"rock\"]),\"gonna\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([\"we\", \"are\"\
  , \"a\", \"mad\", \"nation\"]),\"nation\")) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->([\"this\", \"is\",\
  \ \"a\", \"prrk\"]),\"this\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([\"b\"]),\"b\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"\
  play\", \"play\", \"play\"]),\"play\")) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $max = 0;\n    my $word;\n    foreach $word (@$words) {\n  \
    \      my $count = $words->{$word};\n        if ($count > $max) {\n          \
    \  $max = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }", "    my $max_count = 0;\n    my $max_word = \"\";\n    my $max_word_len =\
    \ 0;\n    foreach my $word (@$words) {\n        my $word_len = length($word);\n\
    \        if ($word_len > $max_word_len) {\n            $max_word_len = $word_len;\n\
    \            $max_word = $word;\n            $max_count = 1;\n        } elsif\
    \ ($word_len == $max_word_len) {\n            $max_count++;\n        }\n    }\n\
    \    return $max_word;\n}", "    my $max_count = 0;\n    my $max_word = \"\";\n\
    \    my $max_word_length = 0;\n    foreach my $word (@$words) {\n        my $word_length\
    \ = length($word);\n        if ($word_length > $max_word_length) {\n         \
    \   $max_word_length = $word_length;\n            $max_word = $word;\n       \
    \     $max_count = 1;\n        } elsif ($word_length == $max_word_length) {\n\
    \            $max_count++;\n        }\n    }\n    return $max_word;\n}", "   \
    \ my $max_count = 0;\n    my $max_word;\n    foreach my $word (@$words) {\n  \
    \      my $count = $words->{$word};\n        if ($count > $max_count) {\n    \
    \        $max_count = $count;\n            $max_word = $word;\n        }\n   \
    \ }\n    return $max_word;\n}", "    my $max_count = 0;\n    my $max_word;\n \
    \   foreach my $word (@$words) {\n        my $count = $words->{$word};\n     \
    \   if ($count > $max_count) {\n            $max_count = $count;\n           \
    \ $max_word = $word;\n        }\n    }\n    return $max_word;\n}", "    my $max_count\
    \ = 0;\n    my $max_word;\n    my $max_word_len;\n    foreach my $word (@$words)\
    \ {\n        my $word_len = length($word);\n        if ($word_len > $max_word_len)\
    \ {\n            $max_word_len = $word_len;\n            $max_word = $word;\n\
    \            $max_count = 1;\n        } elsif ($word_len == $max_word_len) {\n\
    \            $max_count++;\n        }\n    }\n    return $max_word;\n}", "   \
    \ my $max_count = -1;\n    my $max_word;\n    foreach my $word (@$words) {\n \
    \       my $count = scalar(@$words);\n        foreach my $char (@$word) {\n  \
    \          $count--;\n            if ($count > $max_count) {\n               \
    \ $max_count = $count;\n                $max_word = $word;\n            }\n  \
    \      }\n    }\n    return $max_word;\n}", "    my $max = 0;\n    my $word;\n\
    \    foreach $word (@$words) {\n        my $count = scalar(@$words);\n       \
    \ foreach my $char (split(//, $word)) {\n            $count-- if $count > $max;\n\
    \            $max = $count if $char =~ /[^a-zA-Z]/;\n        }\n    }\n    return\
    \ $word;\n}", "    my $max_count = 0;\n    my $max_word;\n    foreach my $word\
    \ (@$words) {\n        my $count = scalar(@$words);\n        foreach my $char\
    \ (split(//, $word)) {\n            $count--;\n            if ($count > $max_count)\
    \ {\n                $max_count = $count;\n                $max_word = $word;\n\
    \            }\n        }\n    }\n    return $max_word;\n}", "    my $max_count\
    \ = 0;\n    my $max_word;\n    my $max_char;\n    foreach my $word (@$words) {\n\
    \        my $count = 0;\n        foreach my $char (split //, $word) {\n      \
    \      $count++ if $chars{$char};\n        }\n        if ($count > $max_count)\
    \ {\n            $max_count = $count;\n            $max_word = $word;\n      \
    \      $max_char = $chars{$char};\n        }\n    }\n    return $max_word;\n}",
  "    my $max = 0;\n    my $word;\n    foreach $word (@$words) {\n        my $count\
    \ = 0;\n        foreach my $char (split(//, $word)) {\n            $count++ if\
    \ $char =~ /[^a-zA-Z]/;\n        }\n        if ($count > $max) {\n           \
    \ $max = $count;\n            $word = $word;\n        }\n    }\n    return $word;\n\
    }", "    my $max = 0;\n    my $word;\n    foreach $word (@$words) {\n        my\
    \ $count = scalar(@$words);\n        $count++ while $count > $max;\n        $max\
    \ = $count;\n    }\n    return $word;\n}", "    my $max = 0;\n    my $word;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $count;\n    my $maxword;\n    my\
    \ $maxcount;\n    my $maxindex;\n    my $maxwords;\n    my $maxword;\n    my $maxcount;\n\
    \    my $maxindex;\n    my $maxwords;\n    my $maxword;\n    my $maxcount;\n \
    \   my $maxindex;\n    my $maxwords;\n    my $maxword;\n    my $maxcount;\n  \
    \  my $maxindex;\n    my $maxwords;\n    my $maxword;\n    my $maxcount;\n   \
    \ my $maxindex;\n    my $maxwords;\n    my $maxword;\n    my $maxcount;\n    my\
    \ $maxindex;\n    my $maxwords;\n    my $maxword;\n    my $maxcount;\n    my $maxindex;\n\
    \    my $maxwords;\n    my $maxword;\n    my $maxcount;\n    my $maxindex;\n \
    \   my $maxwords;\n    my $maxword;\n    my $maxcount;\n    my $maxindex;\n  \
    \  my $maxwords;\n    my $maxword;\n    my $maxcount;\n    my $maxindex;\n   \
    \ my $maxwords;\n    my $maxword;\n    my $maxcount;\n    my $maxindex;\n    my\
    \ $maxwords;\n    my $maxword;\n    my $maxcount;\n    my $maxindex;\n    my $maxwords;\n\
    \    my $maxword;\n    my $maxcount;\n    my $maxindex;\n    my $maxwords;\n \
    \   my $maxword;\n    my $maxcount;\n    my $maxindex;\n    my $maxwords;\n  \
    \  my $maxword;\n    my $maxcount;\n    my $maxindex;\n    my $maxwords;\n   \
    \ my $maxword;\n    my $maxcount;\n    my $maxindex;\n    my $maxwords;\n    my\
    \ $maxword;\n    my $maxcount;\n    my $maxindex;\n    my $maxwords;\n    my $maxword;\n\
    \    my $maxcount;\n    my $maxindex;\n    my $maxwords;\n    my $maxword;\n \
    \   my $maxcount;\n    my $maxindex;\n    my $maxwords;\n    my $maxword;\n  \
    \  my $maxcount;\n    my $maxindex;\n    my $maxwords;\n    my $maxword;\n   \
    \ my $maxcount;\n    my $maxindex;\n    my $maxwords;\n    my $maxword;\n    my\
    \ $maxcount;\n    my $maxindex;\n    my $maxwords;\n    ", "    my $max = 0;\n\
    \    my $word;\n    foreach $word (@$words) {\n        my $len = length($word);\n\
    \        if ($len > $max) {\n            $max = $len;\n            $word = $word;\n\
    \        }\n    }\n    return $word;\n}", "    my $max_count = 0;\n    my $max_word;\n\
    \    my $max_word_index;\n    my $max_word_length = 0;\n    foreach my $word (@$words)\
    \ {\n        my $word_length = length($word);\n        if ($word_length >= $max_word_length)\
    \ {\n            $max_word_length = $word_length;\n            $max_word_index\
    \ = $_;\n            $max_count = 1;\n        }\n        elsif ($word_length ==\
    \ $max_word_length) {\n            $max_count++;\n        }\n    }\n    return\
    \ $words[$max_word_index] if $max_count > 1;\n    return $max_word_index if $max_count\
    \ == 1;\n    return $words[0];\n}", "    my $max_count = 0;\n    my $max_word;\n\
    \    my $max_word_length;\n    my $i;\n    my $j;\n    my $k;\n    my $word;\n\
    \    my $word_length;\n    my $words;\n    my $count;\n    my $word;\n    my $word_count;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_length;\n    my $word_length;\n\
    \    my $word_length;\n    my $word_length;\n    my $word_", "    my $max_chars\
    \ = 0;\n    my $max_word;\n    my $max_word_index;\n    my $i;\n    my $j;\n \
    \   my $word;\n    my $word_count;\n    my $word_index;\n    my $word_length;\n\
    \    my $word_chars;\n    my $word_char_count;\n    my $word_char_length;\n  \
    \  my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $word_char_length;\n\
    \    my $word_char_length;\n    my $word_char_length;\n    my $", "    my $max_count\
    \ = 0;\n    my $max_word = \"\";\n    my $i = 0;\n    foreach my $word (@$words)\
    \ {\n        my $count = 0;\n        foreach my $char (split(//, $word)) {\n \
    \           $count++ if $char =~ /[^a-zA-Z]/;\n        }\n        if ($count >\
    \ $max_count) {\n            $max_count = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}", "    my $max_count = 0;\n    my\
    \ $max_word = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $word = \"\";\n  \
    \  my $count = 0;\n    my $max_word = \"\";\n    foreach $word (@$words) {\n \
    \       $count = 1;\n        $j = 0;\n        foreach $i (0 .. $#{$words}) {\n\
    \            next if $words[$i] eq $word;\n            $count++;\n           \
    \ $words[$i] =~ tr/a-z/A-Z/;\n            $words[$i] =~ tr/A-Z/a-z/;\n       \
    \     $words[$i] =~ tr/A-Za-z/A-Za-z/;\n            $words[$i] =~ tr/-/+/;\n \
    \           $words[$i] =~ tr/A-Z/a-z/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z/;\n\
    \            $words[$i] =~ tr/-/+/;\n            $words[$i] =~ tr/A-Za-z/A-Za-z",
  "    my $max = 0;\n    my $word;\n    foreach $word (@$words) {\n        my $count\
    \ = scalar(@$words);\n        $count++ while $count++ < $max;\n        $max =\
    \ $count;\n    }\n    return $word;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_103_rounded_avg
language: pl
prompt: "# You are given two positive integers n and m, and your task is to compute\
  \ the\n# average of the integers from n through m (including n and m). \n# Round\
  \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
  \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# \"0b11\"\n# >>> rounded_avg(7,\
  \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# \"0b1111\"\n# >>> rounded_avg(20, 33)\n\
  # \"0b11010\"\nsub rounded_avg {\n    my($n, $m) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rounded_avg;\n\
  \        if(eq_deeply($candidate->(1, 5),\"0b11\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(7, 13),\"0b1010\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(964,\
  \ 977),\"0b1111001010\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->(996, 997),\"0b1111100100\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(560,\
  \ 851),\"0b1011000010\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->(185, 546),\"0b101101110\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(362,\
  \ 496),\"0b110101101\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->(350, 902),\"0b1001110010\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(197,\
  \ 233),\"0b11010111\")) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->(7, 5),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 1),-1)) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5,\
  \ 5),\"0b101\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["    my $result = 0;\n    my $i = 0;\n    my $j = 0;\n    while($i <\
    \ $n and $j < $m) {\n        $result += $i;\n        $j++;\n        $i++;\n  \
    \  }\n    if($i < $n) {\n        $result = -1;\n    }\n    return $result;\n}",
  "    my $avg = int(($n + $m) / 2);\n    return -1 if $avg > $m;\n    return sprintf(\"\
    0b%b\", $avg);\n}", "    return -1 if $n > $m;\n    my $sum = 0;\n    my $count\
    \ = 0;\n    my $bin = '';\n    while ($n <= $m) {\n        $sum += $n;\n     \
    \   $count++;\n        $bin .= sprintf(\"%b\", $n);\n        $n++;\n    }\n  \
    \  return $sum / $count if $count > 0;\n    return $bin;\n}", "    my $avg = round($n\
    \ / $m);\n    my $bin = sprintf(\"%b\", $avg);\n    return $bin if $bin =~ /^0*1/;\n\
    \    return -1;\n}", "    my $sum = 0;\n    my $i = 0;\n    while($i < $n && $i\
    \ < $m) {\n        $sum += $i;\n        $i++;\n    }\n    return $sum / $m if\
    \ $n <= $m;\n    return -1;\n}", "    my $avg = int(($n + $m) / 2);\n    return\
    \ -1 if $avg > $m;\n    return sprintf(\"0b%b\", $avg);\n}", "    my $result =\
    \ 0;\n    my $i = $n;\n    my $j = $m;\n    my $k = 0;\n    while($i <= $j) {\n\
    \        $result += $i;\n        $k++;\n        $i++;\n    }\n    $result /= $k;\n\
    \    my $bin = $result;\n    $bin =~ s/^0+//;\n    $bin =~ s/b//;\n    return\
    \ $bin;\n}", "    my $sum = 0;\n    my $count = 0;\n    \n    while ($n <= $m)\
    \ {\n        $sum += $n;\n        $count++;\n        $n++;\n    }\n    \n    return\
    \ -1 if $n == $m;\n    \n    return sprintf(\"0b%b\", $sum / $count);\n}", " \
    \   my $sum = 0;\n    my $count = 0;\n    \n    for(my $i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    \n    return $sum / $count\
    \ if $count > 0;\n    return -1;\n}", "    my $avg = int(($n + $m) / 2);\n   \
    \ return -1 if $avg > $m;\n    return $avg % 2 ? \"0b$avg\" : \"0b$avg & 1\";\n\
    }", "    my $sum = 0;\n    my $count = 0;\n    my $result = 0;\n    \n    for(my\
    \ $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n\
    \    \n    if($count > 0) {\n        $result = $sum / $count;\n        $result\
    \ = sprintf(\"%b\", $result);\n    }\n    \n    return $result if $result != 0;\n\
    \    return -1;\n}", "    my $sum = 0;\n    my $count = 0;\n    my $remainder\
    \ = 0;\n    \n    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \     $count++;\n        $remainder = $sum % 2;\n        $sum = $sum / 2;\n  \
    \  }\n    \n    return $remainder == 0 ? $sum : -1;\n}", "    my $avg = int(($n\
    \ + $m) / 2);\n    return $avg if $avg == $n || $avg == $m;\n    return -1;\n}",
  "    my $sum = 0;\n    my $count = 0;\n    my $bin = '';\n    \n    while ($n <=\
    \ $m) {\n        $sum += $n;\n        $count++;\n        $bin .= $n%2 ? '1' :\
    \ '0';\n        $n /= 2;\n    }\n    \n    if ($count == 0) {\n        return\
    \ -1;\n    }\n    \n    $bin .= $sum%2 ? '1' : '0';\n    $bin .= $count>1 ? '1'\
    \ : '0';\n    \n    return $bin;\n}", "    my $sum = 0;\n    my $count = 0;\n\
    \    for(my $i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count if $count > 0;\n    return -1;\n}", "    my $sum\
    \ = 0;\n    my $count = 0;\n    \n    for(my $i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n        $count++;\n    }\n    \n    return $sum / $count if\
    \ $count > 0;\n    return -1;\n}", "    my $sum = 0;\n    my $count = 0;\n   \
    \ while($n <= $m) {\n        $sum += $n;\n        $count++;\n        $n++;\n \
    \   }\n    return $sum / $count if $count;\n    return -1;\n}", "    my $sum =\
    \ 0;\n    my $count = 0;\n    while($n <= $m) {\n        $sum += $n;\n       \
    \ $count++;\n        $n++;\n    }\n    if($count == 0) {\n        return -1;\n\
    \    }\n    return sprintf(\"0b%b\", $sum / $count);\n}", "    return -1 if $n\
    \ > $m;\n    my $s = '';\n    my $i = $n;\n    while ($i <= $m) {\n        $s\
    \ = $i if $i & 1;\n        $i >>= 1;\n    }\n    return $s;\n}", "    my $avg\
    \ = int(($n + $m) / 2);\n    return $avg if $avg == $n || $avg == $m;\n    return\
    \ -1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

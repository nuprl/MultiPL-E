name: HumanEval_95_check_dict_case
language: pl
prompt: "# Given a hash, return 1 if all keys are strings in lower \n# case or all\
  \ keys are strings in upper case, else return .\n# The function should return  is\
  \ the given hash is empty.\n# Examples:\n# >>> check_dict_case({\"a\" => \"apple\"\
  , \"b\" => \"banana\"})\n# 1\n# >>> check_dict_case({\"a\" => \"apple\", \"A\" =>\
  \ \"banana\", \"B\" => \"banana\"})\n# \"\"\n# >>> check_dict_case({\"a\" => \"\
  apple\", 8 => \"banana\", \"a\" => \"apple\"})\n# \"\"\n# >>> check_dict_case({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"})\n# \"\"\n# >>>\
  \ check_dict_case({\"STATE\" => \"NC\", \"ZIP\" => \"12345\"})\n# 1\nsub check_dict_case\
  \ {\n    my($dict) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_dict_case;\n\
  \        if(eq_deeply($candidate->({\"p\" => \"pineapple\", \"b\" => \"banana\"\
  }),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\"}),\"\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"}),\"\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"\
  STATE\" => \"NC\", \"ZIP\" => \"12345\"}),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->({\"fruit\" => \"\
  Orange\", \"taste\" => \"Sweet\"}),1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->({}),\"\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = \"\";\n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        if ($key =~ /^[A-Z]+$/) {\n     \
    \       $result = $result || $key eq $value;\n        } else {\n            $result\
    \ = $result || $key eq $value || $key eq $value . lc($value);\n        }\n   \
    \ }\n    return $result;\n}", "    my $case = 1;\n    foreach my $key (sort keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        if ($key =~ /^[A-Z]+$/)\
    \ {\n            $case = 0;\n        }\n        elsif ($key =~ /^[a-z]+$/) {\n\
    \            $case = 1;\n        }\n    }\n    return $case;\n}", "    my $case\
    \ = 0;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $case = 1;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/i) {\n            $case = \"\";\n        } else {\n           \
    \ $case = 0;\n        }\n    }\n    return $case;\n}", "    my $ret = 1;\n   \
    \ foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n \
    \       if ($value =~ /^[a-z]+$/i) {\n            $ret = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $ret = 0;\n    \
    \        last;\n        }\n    }\n    return $ret;\n}", "    my $result = \"\"\
    ;\n    foreach my $key (keys %$dict) {\n        if ($dict->{$key} =~ /^[a-z]+$/i)\
    \ {\n            $result .= 1;\n        }\n        elsif ($dict->{$key} =~ /^[A-Z]+$/i)\
    \ {\n            $result .= 1;\n        }\n        else {\n            $result\
    \ .= 0;\n        }\n    }\n    return $result;\n}", "    my $result = 1;\n   \
    \ foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n \
    \       next if !defined $value;\n        next if !defined $key || $key eq $key;\n\
    \        next if $value =~ /^[[:lower:]]/;\n        next if $value =~ /^[[:upper:]]/;\n\
    \        $result = 0;\n    }\n    return $result;\n}", "    my $result = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $result = 0;\n \
    \           last;\n        }\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/i)\
    \ {\n            $result .= $key;\n        } elsif ($key =~ /^[A-Z]+$/i) {\n \
    \           $result .= $key;\n        } else {\n            $result .= $key;\n\
    \        }\n    }\n    return $result;\n}", "    my $case = lc($dict->{case});\n\
    \    my $case_insensitive = lc($dict->{case_insensitive});\n    my $case_insensitive_keys\
    \ = keys %{$dict->{case_insensitive}};\n    my $case_keys = keys %{$dict->{case}};\n\
    \    my $case_keys_lower = keys %{$dict->{case}};\n    my $case_keys_upper = keys\
    \ %{$dict->{case}};\n    my $case_keys_all = keys %{$dict->{case}};\n    my $case_keys_all_lower\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_upper = keys %{$dict->{case}};\n\
    \    my $case_keys_all_lower = keys %{$dict->{case}};\n    my $case_keys_all_upper\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_lower = keys %{$dict->{case}};\n\
    \    my $case_keys_all_upper = keys %{$dict->{case}};\n    my $case_keys_all_lower\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_upper = keys %{$dict->{case}};\n\
    \    my $case_keys_all_lower = keys %{$dict->{case}};\n    my $case_keys_all_upper\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_lower = keys %{$dict->{case}};\n\
    \    my $case_keys_all_upper = keys %{$dict->{case}};\n    my $case_keys_all_lower\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_upper = keys %{$dict->{case}};\n\
    \    my $case_keys_all_lower = keys %{$dict->{case}};\n    my $case_keys_all_upper\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_lower = keys %{$dict->{case}};\n\
    \    my $case_keys_all_upper = keys %{$dict->{case}};\n    my $case_keys_all_lower\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_upper = keys %{$dict->{case}};\n\
    \    my $case_keys_all_lower = keys %{$dict->{case}};\n    my $case_keys_all_upper\
    \ = keys %{$dict->{case}};\n    my $case_keys_all_lower = keys %{$dict->{case}};\n\
    \    my $case_keys_all_upper = keys %{$dict", "    my $case = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value =~\
    \ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case =\
    \ 0;\n        }\n    }\n    return $case;\n}", "    my $result = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        my $value = $dict->{$key};\n        my $case\
    \ = lc($key);\n        if ($case eq \"state\") {\n            if ($value !~ /^[A-Z]{2}$/)\
    \ {\n                $result = 0;\n            }\n        } elsif ($case eq \"\
    zip\") {\n            if ($value !~ /^\\d{5}$/) {\n                $result = 0;\n\
    \            }\n        } elsif ($case eq \"city\") {\n            if ($value\
    \ !~ /^[A-Za-z ]+$/) {\n                $result = 0;\n            }\n        }\
    \ elsif ($case eq \"name\") {\n            if ($value !~ /^[A-Za-z ]+$/) {\n \
    \               $result = 0;\n            }\n        } elsif ($case eq \"age\"\
    ) {\n            if ($value !~ /^\\d+$/) {\n                $result = 0;\n   \
    \         }\n        }\n    }\n    return $result;\n}", "    my $result = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        my $type = ref($value);\n        if ($type eq \"HASH\") {\n         \
    \   $result = check_dict_case($value) if (keys %$value);\n        } elsif ($type\
    \ eq \"ARRAY\") {\n            $result = check_dict_case($value) if (@$value);\n\
    \        } elsif ($type eq \"SCALAR\") {\n            $result = check_dict_case($value)\
    \ if ($value =~ /^[A-Z_]/);\n        } elsif ($type eq \"CODE\") {\n         \
    \   $result = check_dict_case($value) if ($value->($dict));\n        } elsif ($type\
    \ eq \"GLOB\") {\n            $result = check_dict_case($value) if ($value =~\
    \ /^[A-Z_]/);\n        } else {\n            $result = 1;\n        }\n    }\n\
    \    return $result;\n}", "    my $case = shift;\n    my $str = lc($case);\n \
    \   my $is_empty = scalar(@$dict) == 0;\n    foreach my $key (keys(%$dict)) {\n\
    \        my $value = $dict->{$key};\n        my $is_string = defined($value) &&\
    \ ref($value) eq \"HASH\" && scalar(@$value) == 1;\n        my $is_string_lower\
    \ = lc($key) eq $key;\n        my $is_string_upper = uc($key) eq $key;\n     \
    \   my $is_string_case = $is_string_lower || $is_string_upper;\n        my $is_string_case_lower\
    \ = $is_string_lower && $str =~ /^$str$/i;\n        my $is_string_case_upper =\
    \ $is_string_upper && $str =~ /^$str$/i;\n        my $is_string_case_equal = $is_string_case_lower\
    \ || $is_string_case_upper;\n        my $is_string_case_equal_lower = $is_string_case_lower\
    \ && $str =~ /^$str$/i;\n        my $is_string_case_equal_upper = $is_string_case_upper\
    \ && $str =~ /^$str$/i;\n        my $is_string_case_equal_equal = $is_string_case_equal_lower\
    \ || $is_string_case_equal_upper;\n        my $is_string_case_equal_equal_lower\
    \ = $is_string_case_equal_lower && $str =~ /^$str$/i;\n        my $is_string_case_equal_equal_upper\
    \ = $is_string_case_equal_upper && $str =~ /^$str$/i;\n        my $is_string_case_equal_equal_equal\
    \ = $is_string_case_equal_equal_lower || $is_string_case_equal_equal_upper;\n\
    \        my $is_string_case_equal_equal_equal_lower = $is_string_case_equal_equal_lower\
    \ && $str =~ /^$str$/i;\n        my $is_string_case_equal_equal_equal_upper =\
    \ $is_string_case_equal_equal_upper && $str =~ /^$str$/i;\n        my $is_string_case_equal_equal_equal_equal\
    \ = $is_string_case_equal_equal_equal_lower || $is_string_case_equal_equal_equal_upper;\n\
    \        my $is_string_case_equal_equal_equal_equal_lower = $is_string_case_equal_equal_equal_lower\
    \ && $str =~ /^$str$/i;\n        my $is_string_case_equal_equal_equal_equal_upper\
    \ = $is_string_case_equal_equal_equal_upper && $str =~ /^$str$/i;\n        my\
    \ $is_string_case_equal_equal_equal_equal_equal = $is_string_case_equal_equal_equal_equal_lower\
    \ || $is_string_case_equal_equal_equal_equal_upper;\n        my $is_string_case_equal_equal_equal_equal_equal_lower\
    \ = $", "    my $case = 0;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $case++;\n\
    \        } elsif ($value =~ /^[A-Z]+$/i) {\n            $case++;\n        } else\
    \ {\n            $case++;\n        }\n    }\n    return $case;\n}", "    my $result\
    \ = \"\";\n    foreach my $key (sort keys %$dict) {\n        if ($key =~ /^[a-z]+$/i)\
    \ {\n            $result .= 1;\n        } elsif ($key =~ /^[A-Z]+$/i) {\n    \
    \        $result .= 1;\n        } else {\n            $result .= 0;\n        }\n\
    \    }\n    return $result;\n}", "    my $result = 1;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        }\n    }\n    return\
    \ $result;\n}", "    my $case = 0;\n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        my $lower;\n        my $upper;\n\
    \        if ($value =~ /^[A-Z]+$/) {\n            $lower = 1;\n        }\n   \
    \     else {\n            $upper = 1;\n        }\n        if ($lower && $upper)\
    \ {\n            $case = 1;\n        }\n    }\n    return $case;\n}", "    my\
    \ $case = lc($dict->{case});\n    my $ok = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($case eq \"upper\") {\n \
    \           $value =~ tr/A-Z/a-z/;\n        } elsif ($case eq \"lower\") {\n \
    \           $value =~ tr/a-z/A-Z/;\n        } else {\n            $ok = 0;\n \
    \       }\n        if (!$ok) {\n            return $ok;\n        }\n    }\n  \
    \  return $ok;\n}", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n\
    \        if ($dict->{$key} =~ /^[a-z]+$/i) {\n            $result = 0;\n     \
    \       last;\n        }\n        if ($dict->{$key} =~ /^[A-Z]+$/i) {\n      \
    \      $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n \
    \           $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n            $result =\
    \ 0;\n        }\n    }\n    return $result;\n}", "    my $case = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($value =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n     \
    \   }\n        if ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n        \
    \    last;\n        }\n    }\n    return $case;\n}", "    my $case = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($key =~ /^[A-Z]+$/) {\n            $case = 0;\n        }\n        elsif ($key\
    \ =~ /^[a-z]+$/) {\n            $case = 1;\n        }\n    }\n    return $case;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n            $case = $case\
    \ ? 1 : 0;\n        } elsif ($key =~ /^[A-Z]+$/i) {\n            $case = $case\
    \ ? 1 : 0;\n        } else {\n            $case = $case ? 1 : 0;\n        }\n\
    \    }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key (sort keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            $case = 0;\n            last;\n        }\n        if ($value\
    \ =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n        }\n  \
    \  }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key (sort keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            $case = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i)\
    \ {\n            $case = 1;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n            $case = 0;\n\
    \        } elsif ($key =~ /^[A-Z]+$/i) {\n            $case = 1;\n        }\n\
    \    }\n    return $case;\n}", "    my $result = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        }\n    }\n    return\
    \ $result;\n}", "    my $case = lc($dict->{case});\n    my $ok = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($case eq \"lower\") {\n            $ok = 1 if ($key =~ /^[a-z]+$/i);\n    \
    \    } elsif ($case eq \"upper\") {\n            $ok = 1 if ($key =~ /^[A-Z]+$/i);\n\
    \        } else {\n            $ok = 0;\n        }\n    }\n    return $ok;\n}",
  "    my $case = lc($dict->{case});\n    my $case2 = lc($dict->{case});\n    my $case3\
    \ = lc($dict->{case});\n    my $case4 = lc($dict->{case});\n    my $case5 = lc($dict->{case});\n\
    \    my $case6 = lc($dict->{case});\n    my $case7 = lc($dict->{case});\n    my\
    \ $case8 = lc($dict->{case});\n    my $case9 = lc($dict->{case});\n    my $case10\
    \ = lc($dict->{case});\n    my $case11 = lc($dict->{case});\n    my $case12 =\
    \ lc($dict->{case});\n    my $case13 = lc($dict->{case});\n    my $case14 = lc($dict->{case});\n\
    \    my $case15 = lc($dict->{case});\n    my $case16 = lc($dict->{case});\n  \
    \  my $case17 = lc($dict->{case});\n    my $case18 = lc($dict->{case});\n    my\
    \ $case19 = lc($dict->{case});\n    my $case20 = lc($dict->{case});\n    my $case21\
    \ = lc($dict->{case});\n    my $case22 = lc($dict->{case});\n    my $case23 =\
    \ lc($dict->{case});\n    my $case24 = lc($dict->{case});\n    my $case25 = lc($dict->{case});\n\
    \    my $case26 = lc($dict->{case});\n    my $case27 = lc($dict->{case});\n  \
    \  my $case28 = lc($dict->{case});\n    my $case29 = lc($dict->{case});\n    my\
    \ $case30 = lc($dict->{case});\n    my $case31 = lc($dict->{case});\n    my $case32\
    \ = lc($dict->{case});\n    my $case33 = lc($dict->{case});\n    my $case34 =\
    \ lc($dict->{case});\n    my $case35 = lc($dict->{case});\n    my $case36 = lc($dict->{case});\n\
    \    my $case37 = lc($dict->{case});\n    my $case38 = l", "    my $case = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n   \
    \         last;\n        }\n    }\n    return $case;\n}", "    my $case = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $case = 0;\n        }\n     \
    \   elsif ($key =~ /^[A-Z]+$/i) {\n            $case = 1;\n        }\n    }\n\
    \    return $case;\n}", "    my $case = lc($dict->{case});\n    my $ok = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        next if !defined $value;\n        my $value2 = $value;\n        if ($case\
    \ eq \"upper\") {\n            $value2 = uc($value2);\n        } elsif ($case\
    \ eq \"lower\") {\n            $value2 = lc($value2);\n        }\n        if ($value2\
    \ ne $value) {\n            $ok = 0;\n        }\n    }\n    return $ok;\n}", " \
    \   my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($key eq \"STATE\" || $key eq \"ZIP\") {\n    \
    \        if ($value =~ /^[a-z]+$/i) {\n                $result = 0;\n        \
    \    }\n        }\n        else {\n            if ($value =~ /^[A-Z]+$/i) {\n\
    \                $result = 0;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n       \
    \     $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        if ($key\
    \ =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n        }\n  \
    \      if ($key =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n\
    \        }\n    }\n    return $case;\n}", "    my $result = \"\";\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($key =~ /^[A-Z]+$/) {\n            $result = $result ? $result : 1;\n     \
    \   } elsif ($key =~ /^[a-z]+$/) {\n            $result = $result ? $result :\
    \ 1;\n        } else {\n            $result = $result ? $result : \"\";\n    \
    \    }\n    }\n    return $result;\n}", "    my $result = 1;\n    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n        }\n\
    \        if ($value =~ /^[A-Z]+$/i) {\n            $result = 0;\n            last;\n\
    \        }\n    }\n    return $result;\n}", "    my $case = 1;\n    foreach my\
    \ $key (keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n        }\n  \
    \      if ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n\
    \        }\n    }\n    return $case;\n}", "    my $result = 1;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key\
    \ eq \"STATE\" || $key eq \"ZIP\") {\n            if ($value !~ /^\\d{5}$/) {\n\
    \                $result = 0;\n            }\n        } elsif ($key eq \"Name\"\
    \ || $key eq \"Age\" || $key eq \"City\") {\n            if ($value !~ /^[A-Za-z\\\
    s]+$/) {\n                $result = 0;\n            }\n        } else {\n    \
    \        if ($value !~ /^[A-Za-z\\s]+$/) {\n                $result = 0;\n   \
    \         }\n        }\n    }\n    return $result;\n}", "    my $case = 0;\n \
    \   foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n    \
    \    if ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value\
    \ =~ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case++;\n\
    \        }\n    }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n        }\n  \
    \      if ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n\
    \        }\n    }\n    return $case;\n}", "    my $case = lc($dict->{case});\n\
    \    my $ok = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($case eq \"lower\") {\n            $ok = 1 if\
    \ lc($key) eq $key;\n        } elsif ($case eq \"upper\") {\n            $ok =\
    \ 1 if uc($key) eq $key;\n        } else {\n            $ok = 0;\n        }\n\
    \    }\n    return $ok;\n}", "    my $result = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n\
    \            $result = 1;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n       \
    \     $result = 1;\n        } else {\n            $result = '';\n        }\n \
    \   }\n    return $result;\n}", "    my $case = lc($dict->{case});\n    my $is_upper\
    \ = lc($dict->{is_upper});\n    my $is_lower = lc($dict->{is_lower});\n    my\
    \ $is_empty = lc($dict->{is_empty});\n    my $is_string = lc($dict->{is_string});\n\
    \    my $is_number = lc($dict->{is_number});\n    my $is_array = lc($dict->{is_array});\n\
    \    my $is_hash = lc($dict->{is_hash});\n    my $is_object = lc($dict->{is_object});\n\
    \    my $is_scalar = lc($dict->{is_scalar});\n    my $is_array = lc($dict->{is_array});\n\
    \    my $is_hash = lc($dict->{is_hash});\n    my $is_object = lc($dict->{is_object});\n\
    \    my $is_scalar = lc($dict->{is_scalar});\n    my $is_string = lc($dict->{is_string});\n\
    \    my $is_number = lc($dict->{is_number});\n    my $is_empty = lc($dict->{is_empty});\n\
    \    my $is_string = lc($dict->{is_string});\n    my $is_number = lc($dict->{is_number});\n\
    \    my $is_empty = lc($dict->{is_empty});\n    my $is_string = lc($dict->{is_string});\n\
    \    my $is_number = lc($dict->{is_number});\n    my $is_empty = lc($dict->{is_empty});\n\
    \    my $is_string = lc($dict->{is_string});\n    my $is_number = lc($dict->{is_number});\n\
    \    my $is_empty = lc($dict->{is_empty});\n    my $is_string = lc($dict->{is_string});\n\
    \    my $is_number = lc($dict->{is_number});\n    my $is_empty = lc($dict->{is_empty});\n\
    \    my $is_string = lc($dict->{is_string});\n    my $is_number = lc($dict->{is_number});\n\
    \    my $is_empty = lc($dict->{is_empty});\n    my $is_string = lc($dict->{is_string});\n\
    \    my $is_number = lc($dict->{is_number});\n    my $is_empty = lc($dict->{is_empty});\n\
    \    my $is_string = lc($dict->{is_", "    my $case = 0;\n    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $case++;\n        }\n        elsif ($value =~\
    \ /^[A-Z]+$/i) {\n            $case++;\n        }\n    }\n    return $case;\n}",
  "    my $case = 0;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value\
    \ =~ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case++;\n\
    \        }\n    }\n    return $case;\n}", "    my $result = 1;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        my $type\
    \ = ref($value);\n        if ($type eq \"HASH\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"ARRAY\") {\n            foreach my\
    \ $item (@{$value}) {\n                $result = check_dict_case($item) || $result;\n\
    \            }\n        } elsif ($type eq \"SCALAR\") {\n            if ($value\
    \ =~ /^[A-Z]+$/) {\n                $result = 1;\n            } else {\n     \
    \           $result = 0;\n            }\n        } else {\n            $result\
    \ = 0;\n        }\n    }\n    return $result;\n}", "    my $result = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        next\
    \ if !defined $value;\n        my $case = lc($key);\n        $case =~ tr/A-Z/a-z/;\n\
    \        $case =~ tr/a-z/A-Z/;\n        if ($case ne $value) {\n            $result\
    \ = 0;\n            last;\n        }\n    }\n    return $result;\n}", "    my\
    \ $case = 1;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        my $is_string = is_string($value);\n        if ($is_string == 1) {\n\
    \            if ($case == 1) {\n                $case = \"\";\n            } else\
    \ {\n                $case = 1;\n            }\n        } else {\n           \
    \ if ($case == 1) {\n                $case = \"\";\n            } else {\n   \
    \             $case = 1;\n            }\n        }\n    }\n    return $case;\n\
    }", "    my $case = shift;\n    my $result = 1;\n    foreach my $key (sort keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        if ($case eq \"lower\"\
    ) {\n            $value = lc($value);\n        } elsif ($case eq \"upper\") {\n\
    \            $value = uc($value);\n        }\n        if ($value eq \"\") {\n\
    \            $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n            $result\
    \ = 0;\n            last;\n        }\n    }\n    return $result;\n}", "    my\
    \ $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value =\
    \ $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n            $result = 1;\n\
    \        } elsif ($key =~ /^[A-Z]+$/i) {\n            $result = 1;\n        }\
    \ else {\n            $result = 0;\n        }\n    }\n    return $result;\n}",
  "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n       \
    \     $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n            $case = \"\
    \";\n            last;\n        }\n        if ($value =~ /^[a-z]+$/) {\n     \
    \       $case = 1;\n            last;\n        }\n    }\n    return $case;\n}",
  "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($key =~ /^[A-Z]+$/) {\n            $result = $result\
    \ && $value =~ /^[a-z]+$/;\n        } elsif ($key =~ /^[a-z]+$/) {\n         \
    \   $result = $result && $value =~ /^[A-Z]+$/;\n        } else {\n           \
    \ $result = $result && $value =~ /^[A-Z]+$/;\n        }\n    }\n    return $result;\n\
    }", "    my $result = \"\";\n    foreach my $key (keys %$dict) {\n        if ($dict->{$key}\
    \ =~ /^[a-z]+$/i) {\n            $result = 1;\n            last;\n        }\n\
    \        elsif ($dict->{$key} =~ /^[A-Z]+$/i) {\n            $result = 1;\n  \
    \          last;\n        }\n    }\n    return $result;\n}", "    my $case = lc($dict->{keys}->[0]);\n\
    \    my $found = 0;\n    foreach my $key (keys %$dict) {\n        my $value =\
    \ $dict->{$key};\n        if ($value =~ /^$case$/) {\n            $found = 1;\n\
    \            last;\n        }\n    }\n    return $found;\n}", "    my $result\
    \ = \"\";\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $result = 1;\n        } elsif\
    \ ($key =~ /^[A-Z]+$/i) {\n            $result = 1;\n        } else {\n      \
    \      $result = 0;\n        }\n    }\n    return $result;\n}", "    my $result\
    \ = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[A-Z]+$/) {\n            $result = 0;\n            last;\n\
    \        }\n    }\n    return $result;\n}", "    my $case = 1;\n    foreach my\
    \ $key (keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key =~\
    \ /^[A-Z_]/) {\n            $case = 0;\n        }\n        elsif ($key =~ /^[a-z]/)\
    \ {\n            $case = 1;\n        }\n    }\n    return $case;\n}", "    my\
    \ $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $result = 0;\n        }\n \
    \       if ($value =~ /^[A-Z]+$/i) {\n            $result = 0;\n        }\n  \
    \  }\n    return $result;\n}", "    my $result = 1;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key eq \"STATE\"\
    \ || $key eq \"ZIP\") {\n            if ($value =~ /^[A-Z]+$/) {\n           \
    \     $result = 0;\n            }\n        }\n        else {\n            if ($value\
    \ =~ /^[a-z]+$/) {\n                $result = 0;\n            }\n        }\n \
    \   }\n    return $result;\n}", "    my $result = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        if ($dict->{$key} =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        }\n    }\n    return $result;\n}", "    my\
    \ $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value\
    \ =~ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case\
    \ = 0;\n        }\n    }\n    return $case;\n}", "    my $case = shift;\n    my\
    \ $result = \"\";\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        next if !defined($value) || !defined($case) || !defined($case->{$key});\n\
    \        if ($value =~ /^$case->{$key}$/i) {\n            $result = 1;\n     \
    \       last;\n        }\n    }\n    return $result;\n}", "    my $case = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n   \
    \         last;\n        }\n    }\n    return $case;\n}", "    my $case = shift;\n\
    \    my $result = \"\";\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        if ($case eq \"lower\") {\n            $result\
    \ = lc($value);\n        } elsif ($case eq \"upper\") {\n            $result =\
    \ uc($value);\n        } else {\n            $result = $value;\n        }\n  \
    \      if ($result eq $value) {\n            $result = \"\";\n        }\n    }\n\
    \    return $result;\n}", "    my $case = 0;\n    foreach my $key (keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n\
    \            $case++;\n        } elsif ($value =~ /^[a-z]+$/) {\n            $case++;\n\
    \        }\n    }\n    return $case;\n}", "    my $result = 1;\n    foreach my\
    \ $key (keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $result = 0;\n        }\n        elsif ($value\
    \ =~ /^[A-Z]+$/i) {\n            $result = 0;\n        }\n    }\n    return $result;\n\
    }", "    my $case = uc($dict->{case});\n    my $ok = 1;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        if ($case eq 'lower')\
    \ {\n            next if $value !~ /^[a-z]+$/i;\n        } elsif ($case eq 'upper')\
    \ {\n            next if $value !~ /^[A-Z]+$/i;\n        } else {\n          \
    \  next if $value !~ /^[a-z]+$/i;\n            next if $value !~ /^[A-Z]+$/i;\n\
    \        }\n        $ok = 0;\n    }\n    return $ok;\n}", "    my $case = lc($dict->{case});\n\
    \    my $ok = 1;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($case eq \"lower\") {\n            next unless lc($key) eq lc($value);\n\
    \        } elsif ($case eq \"upper\") {\n            next unless uc($key) eq uc($value);\n\
    \        } else {\n            next unless $key eq $value;\n        }\n      \
    \  $ok = 0;\n    }\n    return $ok;\n}", "    my $case = lc($dict->{case});\n\
    \    my $ok = 1;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        next if !defined($value) || !defined($key) || !defined($case);\n    \
    \    my $string = $value;\n        $string =~ s/^\\s+//;\n        $string =~ s/\\\
    s+$//;\n        $string =~ s/^\\s+//;\n        $string =~ s/\\s+$//;\n       \
    \ if ($case eq \"lower\") {\n            $string =~ s/^[a-z]+//i;\n          \
    \  $string =~ s/\\s+[a-z]//i;\n        }\n        elsif ($case eq \"upper\") {\n\
    \            $string =~ s/^[A-Z]+//i;\n            $string =~ s/\\s+[A-Z]//i;\n\
    \        }\n        else {\n            $ok = 0;\n        }\n    }\n    return\
    \ $ok;\n}", "    my $case = 1;\n    foreach my $key (keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        if ($key =~ /^[A-Z]+$/) {\n            $case\
    \ = 0;\n        } elsif ($key =~ /^[a-z]+$/) {\n            $case = 1;\n     \
    \   }\n    }\n    return $case;\n}", "    my $ret = 0;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        my $case = lc($key);\n\
    \        if ($case eq \"state\" || $case eq \"zip\") {\n            if ($value\
    \ =~ /^\\d{5}$/) {\n                $ret = 1;\n            }\n        } else {\n\
    \            if ($value =~ /^[a-z]+$/) {\n                $ret = 1;\n        \
    \    }\n        }\n    }\n    return $ret;\n}", "    my $result = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($key =~ /^[a-z]+$/i) {\n            $result = 1;\n        } elsif ($key =~\
    \ /^[A-Z]+$/i) {\n            $result = 1;\n        } else {\n            $result\
    \ = 0;\n        }\n    }\n    return $result;\n}", "    my $case = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value =~\
    \ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case =\
    \ 0;\n        }\n    }\n    return $case;\n}", "    my $result = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key\
    \ =~ /^[a-z]+$/) {\n            $result = 0;\n        }\n        if ($key =~ /^[A-Z]+$/)\
    \ {\n            $result = 0;\n        }\n    }\n    return $result;\n}", "  \
    \  my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        my $type = ref($value);\n        if ($type eq \"HASH\"\
    ) {\n            $result = check_dict_case($value) || $result;\n        } elsif\
    \ ($type eq \"ARRAY\") {\n            foreach my $item (@$value) {\n         \
    \       $result = check_dict_case($item) || $result;\n            }\n        }\
    \ elsif ($type eq \"SCALAR\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"CODE\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"GLOB\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"IO\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"IO::Handle\") {\n            $result\
    \ = check_dict_case($value) || $result;\n        } elsif ($type eq \"Any\") {\n\
    \            $result = check_dict_case($value) || $result;\n        } elsif ($type\
    \ eq \"Any::Object\") {\n            $result = check_dict_case($value) || $result;\n\
    \        } elsif ($type eq \"Any::Type\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"Any::Types::Object\") {\n         \
    \   $result = check_dict_case($value) || $result;\n        } elsif ($type eq \"\
    Any::Types::Type\") {\n            $result = check_dict_case($value) || $result;\n\
    \        } elsif ($type eq \"Any::Types::Types::Object\") {\n            $result\
    \ = check_dict_case($value) || $result;\n        } elsif ($type eq \"Any::Types::Types::Type\"\
    ) {\n            $result = check_dict_case($value) || $result;\n        } elsif\
    \ ($type eq \"Any::Types::Types::Types::Object\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"Any::Types::Types::Types::Type\") {\n\
    \            $result = check_dict_case($value) || $result;\n        } elsif ($type\
    \ eq \"Any::Types::Types::Types::Types::Object\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"Any::Types::Types::Types::Types::Type\"\
    ) {\n            $result = check_dict_case($value) || $result;\n        } elsif\
    \ ($type eq \"Any", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n  \
    \          $result = 1;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n         \
    \   $result = 1;\n        } else {\n            $result = 0;\n        }\n    }\n\
    \    return $result;\n}", "    my $case = 0;\n    foreach my $key (sort keys %$dict)\
    \ {\n        if ($dict->{$key} =~ /^[a-z]+$/i) {\n            $case++;\n     \
    \   } elsif ($dict->{$key} =~ /^[A-Z]+$/i) {\n            $case++;\n        }\
    \ else {\n            $case++;\n        }\n    }\n    return $case;\n}", "   \
    \ my $ret = \"\";\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n            $ret .= $key;\n\
    \        } elsif ($key =~ /^[A-Z]+$/i) {\n            $ret .= $key;\n        }\
    \ else {\n            $ret .= $key;\n        }\n    }\n    return $ret;\n}", " \
    \   my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        my $case = lc($key);\n        $case =~ tr/A-Z/a-z/;\n\
    \        $case =~ tr/a-z/A-Z/;\n        if ($case eq $key) {\n            $result\
    \ = 0;\n            last;\n        }\n    }\n    return $result;\n}", "    my\
    \ $case = 0;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case++;\n\
    \        }\n    }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n        } elsif\
    \ ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n     \
    \   }\n    }\n    return $case;\n}", "    my $ret = 0;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i)\
    \ {\n            $ret = $ret || $value =~ /^[a-z]+$/i;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/i) {\n            $ret = $ret || $value =~ /^[A-Z]+$/i;\n     \
    \   } else {\n            $ret = $ret || $value =~ /^[a-z0-9]+$/i;\n        }\n\
    \    }\n    return $ret;\n}", "    my $result = 1;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        my $case = lc($key);\n\
    \        if ($case eq $key || $case eq $value) {\n            $result = 0;\n \
    \           last;\n        }\n    }\n    return $result;\n}", "    my $result\
    \ = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key eq $value) {\n            $result = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/) {\n            $result = 0;\n  \
    \          last;\n        }\n        if ($value =~ /^[a-z]+$/) {\n           \
    \ $result = 0;\n            last;\n        }\n    }\n    return $result;\n}",
  "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        my $type = ref($value);\n        if ($type eq \"HASH\"\
    ) {\n            $case = check_dict_case($value) if (keys %$value == 0);\n   \
    \     } elsif ($type eq \"ARRAY\") {\n            $case = check_dict_case($value)\
    \ if (@$value == 0);\n        } elsif ($type eq \"SCALAR\") {\n            $case\
    \ = check_dict_case($value) if ($value == 0);\n        } elsif ($type eq \"CODE\"\
    ) {\n            $case = check_dict_case($value) if ($value->($dict) == 0);\n\
    \        } else {\n            $case = check_dict_case($value) if ($value eq \"\
    \");\n        }\n        if ($case == 1) {\n            last;\n        }\n   \
    \ }\n    return $case;\n}", "    my $case = lc($dict->{case});\n    my $ok = 1;\n\
    \    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n   \
    \     if ($case eq \"lower\") {\n            my $lower = lc($key);\n         \
    \   if ($lower ne $key) {\n                $ok = 0;\n            }\n        }\
    \ elsif ($case eq \"upper\") {\n            my $upper = uc($key);\n          \
    \  if ($upper ne $key) {\n                $ok = 0;\n            }\n        } else\
    \ {\n            $ok = 0;\n        }\n    }\n    return $ok;\n}", "    my $result\
    \ = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n\
    \        } elsif ($value =~ /^[A-Z]+$/i) {\n            $result = 0;\n       \
    \     last;\n        }\n    }\n    return $result;\n}", "    my $case = lc($dict->{case});\n\
    \    my $ok = 1;\n    foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n\
    \        if ($case eq \"lower\") {\n            $value =~ tr/a-z/A-Z/;\n     \
    \   } elsif ($case eq \"upper\") {\n            $value =~ tr/A-Z/a-z/;\n     \
    \   } else {\n            $ok = 0;\n        }\n    }\n    return $ok;\n}", " \
    \   my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n \
    \           $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $case = lc($dict->{case});\n    my $ok = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        my $type = ref($value);\n\
    \        if ($type eq \"HASH\") {\n            $ok = check_dict_case($value) if\
    \ ($case eq \"lower\");\n            $ok = check_dict_case($value) if ($case eq\
    \ \"upper\");\n        }\n        elsif ($type eq \"ARRAY\") {\n            $ok\
    \ = check_dict_case($value) if ($case eq \"lower\");\n            $ok = check_dict_case($value)\
    \ if ($case eq \"upper\");\n        }\n        elsif ($type eq \"SCALAR\") {\n\
    \            $ok = check_dict_case($value) if ($case eq \"lower\");\n        \
    \    $ok = check_dict_case($value) if ($case eq \"upper\");\n        }\n     \
    \   elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value) if\
    \ ($case eq \"lower\");\n            $ok = check_dict_case($value) if ($case eq\
    \ \"upper\");\n        }\n        elsif ($type eq \"GLOB\") {\n            $ok\
    \ = check_dict_case($value) if ($case eq \"lower\");\n            $ok = check_dict_case($value)\
    \ if ($case eq \"upper\");\n        }\n        elsif ($type eq \"IO\") {\n   \
    \         $ok = check_dict_case($value) if ($case eq \"lower\");\n           \
    \ $ok = check_dict_case($value) if ($case eq \"upper\");\n        }\n        elsif\
    \ ($type eq \"IO::Handle\") {\n            $ok = check_dict_case($value) if ($case\
    \ eq \"lower\");\n            $ok = check_dict_case($value) if ($case eq \"upper\"\
    );\n        }\n        elsif ($type eq \"IO::File\") {\n            $ok = check_dict_case($value)\
    \ if ($case eq \"lower\");\n            $ok = check_dict_case($value) if ($case\
    \ eq \"upper\");\n        }\n        elsif ($type eq \"IO::Socket\") {\n     \
    \       $ok = check_dict_case($value) if ($case eq \"lower\");\n            $ok\
    \ = check_dict_case($value) if ($case eq \"upper\");\n        }\n        elsif\
    \ ($type eq \"IO::Socket::INET\") {\n            $ok = check_dict_case($value)\
    \ if ($case eq \"lower\");\n            $ok = check_dict_case", "    my $case\
    \ = 0;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value\
    \ =~ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case++;\n\
    \        }\n    }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/)\
    \ {\n            $case = \"\";\n        } elsif ($value =~ /^[a-z]+$/) {\n   \
    \         $case = 1;\n        }\n    }\n    return $case;\n}", "    my $case =\
    \ shift;\n    my $result = \"\";\n    foreach my $key (sort keys %$dict) {\n \
    \       my $value = $dict->{$key};\n        next if !defined $value;\n       \
    \ my $lowercase_key = lc($key);\n        my $uppercase_key = uc($key);\n     \
    \   if ($case eq \"lower\") {\n            $result = $result || $lowercase_key\
    \ eq $key;\n        } elsif ($case eq \"upper\") {\n            $result = $result\
    \ || $uppercase_key eq $key;\n        } else {\n            $result = $result\
    \ || $lowercase_key eq $uppercase_key;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n            $result =\
    \ 0;\n        }\n    }\n    return $result;\n}", "    my $result = 1;\n    foreach\
    \ my $key (keys %$dict) {\n        my $value = $dict->{$key};\n        next if\
    \ !defined $value;\n        next if !is_string($value);\n        next if lc($key)\
    \ eq uc($key);\n        $result = 0;\n    }\n    return $result;\n}", "    my\
    \ $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value =\
    \ $dict->{$key};\n        my $type = ref($value);\n        if ($type eq \"HASH\"\
    ) {\n            $result = check_dict_case($value) if (keys %$value);\n      \
    \  } elsif ($type eq \"ARRAY\") {\n            $result = check_dict_case($value)\
    \ if (@$value);\n        } elsif ($type eq \"SCALAR\") {\n            $result\
    \ = check_dict_case($value) if ($value =~ /^[A-Z]+$/);\n        } elsif ($type\
    \ eq \"CODE\") {\n            $result = check_dict_case($value) if ($value->($dict));\n\
    \        } else {\n            $result = 0;\n        }\n        return $result\
    \ if ($result);\n    }\n    return $result;\n}", "    my $result = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        my\
    \ $case = lc($key);\n        if ($case eq $key or $case eq $value) {\n       \
    \     $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $case =\
    \ 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n   \
    \         $case = 1;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $case = lc($dict->{case});\n    my $case_insensitive = lc($dict->{case_sensitive});\n\
    \    my $case_sensitive = lc($dict->{case_sensitive});\n    my $case_insensitive\
    \ = lc($dict->{case_insensitive});\n    my $case = lc($dict->{case});\n    my\
    \ $case_insensitive = lc($dict->{case_insensitive});\n    my $case_sensitive =\
    \ lc($dict->{case_sensitive});\n    my $case = lc($dict->{case});\n    my $case_insensitive\
    \ = lc($dict->{case_insensitive});\n    my $case_sensitive = lc($dict->{case_sensitive});\n\
    \    my $case = lc($dict->{case});\n    my $case_insensitive = lc($dict->{case_insensitive});\n\
    \    my $case_sensitive = lc($dict->{case_sensitive});\n    my $case = lc($dict->{case});\n\
    \    my $case_insensitive = lc($dict->{case_insensitive});\n    my $case_sensitive\
    \ = lc($dict->{case_sensitive});\n    my $case = lc($dict->{case});\n    my $case_insensitive\
    \ = lc($dict->{case_insensitive});\n    my $case_sensitive = lc($dict->{case_sensitive});\n\
    \    my $case = lc($dict->{case});\n    my $case_insensitive = lc($dict->{case_insensitive});\n\
    \    my $case_sensitive = lc($dict->{case_sensitive});\n    my $case = lc($dict->{case});\n\
    \    my $case_insensitive = lc($dict->{case_insensitive});\n    my $case_sensitive\
    \ = lc($dict->{case_sensitive});\n    my $case = lc($dict->{case});\n    my $case_insensitive\
    \ = lc($dict->{case_insensitive});\n    my $case_sensitive = lc($dict->{case_sensitive});\n\
    \    my $case = lc($dict->{case});\n    my $case_insensitive = lc($dict->{case_insensitive});\n\
    \    my $case_sensitive = lc($dict->{case_sensitive});\n    my $case = lc($dict->{case});\n\
    \    my $case_insensitive = lc($dict->{case_insensitive});\n    my $case_sensitive\
    \ = lc($dict->{case_sensitive});\n    ", "    my $case = shift;\n    my $result\
    \ = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($case eq \"upper\") {\n            $value =~ tr/A-Z/a-z/;\n     \
    \   } elsif ($case eq \"lower\") {\n            $value =~ tr/a-z/A-Z/;\n     \
    \   }\n        if ($value !~ /^[[:alpha:]]+$/) {\n            $result = 0;\n \
    \       }\n    }\n    return $result;\n}", "    my $case = shift;\n    my $result\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($case eq \"lower\") {\n            $result .= lc($key);\n       \
    \ } elsif ($case eq \"upper\") {\n            $result .= uc($key);\n        }\
    \ else {\n            $result .= $key;\n        }\n    }\n    return $result eq\
    \ \"\" ? 1 : 0;\n}", "    my $case = 1;\n    foreach my $key (sort keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n\
    \            $case = \"\";\n            last;\n        }\n        if ($value =~\
    \ /^[a-z]+$/) {\n            $case = 1;\n            last;\n        }\n    }\n\
    \    return $case;\n}", "    my $result = 1;\n    foreach my $key (sort keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n\
    \            $result = 0;\n            last;\n        }\n        if ($value =~\
    \ /^[A-Z]+$/i) {\n            $result = 0;\n            last;\n        }\n   \
    \ }\n    return $result;\n}", "    my $case = lc($dict->{case});\n    my $result\
    \ = \"\";\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($case eq \"lower\") {\n            $result .= lc($key) . \" => \"\
    \ . lc($value) . \"\\n\";\n        } elsif ($case eq \"upper\") {\n          \
    \  $result .= uc($key) . \" => \" . uc($value) . \"\\n\";\n        } else {\n\
    \            $result .= $key . \" => \" . $value . \"\\n\";\n        }\n    }\n\
    \    return $result;\n}", "    my $case = 1;\n    foreach my $key (sort keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n\
    \            $case++;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n           \
    \ $case++;\n        } else {\n            $case = 0;\n        }\n    }\n    return\
    \ $case;\n}", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n \
    \       if ($key =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n\
    \        }\n        if ($key =~ /^[A-Z]+$/i) {\n            $case = 1;\n     \
    \       last;\n        }\n    }\n    return $case;\n}", "    my $case = 1;\n \
    \   foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $case = 0;\n   \
    \         last;\n        }\n    }\n    return $case;\n}", "    my $result = 1;\n\
    \    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n   \
    \     if ($key =~ /^[a-z]+$/i) {\n            $result = $result && $value =~ /^[a-z]+$/i;\n\
    \        } elsif ($key =~ /^[A-Z]+$/i) {\n            $result = $result && $value\
    \ =~ /^[A-Z]+$/i;\n        } else {\n            $result = $result && $value =~\
    \ /^[A-Z][a-z]+$/i;\n        }\n    }\n    return $result;\n}", "    my $case\
    \ = lc($dict->{case});\n    my $ok = 1;\n    foreach my $key (keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        my $type = ref($value);\n       \
    \ if ($type eq \"HASH\") {\n            $ok = check_dict_case($value) || $ok;\n\
    \        } elsif ($type eq \"ARRAY\") {\n            foreach my $val (@$value)\
    \ {\n                $ok = check_dict_case($val) || $ok;\n            }\n    \
    \    } elsif ($type eq \"SCALAR\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"Regexp\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"Regexp\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok;\n        } elsif ($type eq \"CODE\") {\n            $ok = check_dict_case($value)\
    \ || $ok", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n    \
    \    my $value = $dict->{$key};\n        if ($key =~ /^[A-Z]+$/) {\n         \
    \   $case = 0;\n        }\n        elsif ($key =~ /^[a-z]+$/) {\n            $case\
    \ = 1;\n        }\n    }\n    return $case;\n}", "    my $case = lc($dict->{case});\n\
    \    my $case_insensitive = lc($dict->{case_insensitive});\n    my $case_sensitive\
    \ = lc($dict->{case_sensitive});\n    my $is_empty = @$dict == 0;\n    my $is_case_sensitive\
    \ = $case_sensitive =~ /y/i;\n    my $is_case_insensitive = $case_insensitive\
    \ =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~ /y/i;\n    my $is_case_insensitive\
    \ = $case_insensitive =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~\
    \ /y/i;\n    my $is_case_insensitive = $case_insensitive =~ /y/i;\n    my $is_case_sensitive\
    \ = $case_sensitive =~ /y/i;\n    my $is_case_insensitive = $case_insensitive\
    \ =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~ /y/i;\n    my $is_case_insensitive\
    \ = $case_insensitive =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~\
    \ /y/i;\n    my $is_case_insensitive = $case_insensitive =~ /y/i;\n    my $is_case_sensitive\
    \ = $case_sensitive =~ /y/i;\n    my $is_case_insensitive = $case_insensitive\
    \ =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~ /y/i;\n    my $is_case_insensitive\
    \ = $case_insensitive =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~\
    \ /y/i;\n    my $is_case_insensitive = $case_insensitive =~ /y/i;\n    my $is_case_sensitive\
    \ = $case_sensitive =~ /y/i;\n    my $is_case_insensitive = $case_insensitive\
    \ =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~ /y/i;\n    my $is_case_insensitive\
    \ = $case_insensitive =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~\
    \ /y/i;\n    my $is_case_insensitive = $case_insensitive =~ /y/i;\n    my $is_case_sensitive\
    \ = $case_sensitive =~ /y/i;\n    my $is_case_insensitive = $case_insensitive\
    \ =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~ /y/i;\n    my $is_case_insensitive\
    \ = $case_insensitive =~ /y/i;\n    my $is_case_sensitive = $case_sensitive =~\
    \ /y/i;\n    my $is_case_insensitive = $case_insensitive =~ /y/i;\n    my $is_case_sensitive\
    \ = $", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n       \
    \ my $value = $dict->{$key};\n        my $lowercase_value = lc($value);\n    \
    \    my $uppercase_value = uc($value);\n        if ($lowercase_value eq $value\
    \ || $uppercase_value eq $value) {\n            $case = 0;\n            last;\n\
    \        }\n    }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n        }\n  \
    \      if ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n\
    \        }\n    }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        if ($dict->{$key} =~ /^[a-z]+$/i) {\n            $case\
    \ = 0;\n            last;\n        }\n        if ($dict->{$key} =~ /^[A-Z]+$/i)\
    \ {\n            $case = 0;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $case = lc($dict->{case});\n    my $ok = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        if ($case eq \"upper\"\
    ) {\n            my $value = uc($value);\n        }\n        elsif ($case eq \"\
    lower\") {\n            my $value = lc($value);\n        }\n        else {\n \
    \           my $value = $value;\n        }\n        if ($value ne $dict->{$key})\
    \ {\n            $ok = 0;\n        }\n    }\n    return $ok;\n}", "    my $case\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n   \
    \         last;\n        }\n    }\n    return $case;\n}", "    my $result = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $result = 0;\n \
    \           last;\n        }\n    }\n    return $result;\n}", "    my $result\
    \ = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        my $case = lc($key) eq lc($value) ? \"\" : \"_\";\n        $result .=\
    \ $case if $case ne \"\";\n    }\n    return $result;\n}", "    my $case = lc($dict->{case});\n\
    \    my $result = \"\";\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        if ($case eq \"lower\") {\n            $result\
    \ = $result || lc($key) eq $key;\n        } elsif ($case eq \"upper\") {\n   \
    \         $result = $result || uc($key) eq $key;\n        } else {\n         \
    \   $result = $result || $key eq $key;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n \
    \           $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $case = lc($dict->{case});\n    my $is_case = lc($dict->{is_case});\n\
    \    my $is_upper = lc($dict->{is_upper});\n    my $is_lower = lc($dict->{is_lower});\n\
    \    my $is_empty = lc($dict->{is_empty});\n    my $is_all = lc($dict->{is_all});\n\
    \    my $is_any_case = lc($dict->{is_any_case});\n    my $is_any_upper = lc($dict->{is_any_upper});\n\
    \    my $is_any_lower = lc($dict->{is_any_lower});\n    my $is_any_empty = lc($dict->{is_any_empty});\n\
    \    my $is_any_all = lc($dict->{is_any_all});\n    my $is_any_any_case = lc($dict->{is_any_any_case});\n\
    \    my $is_any_any_upper = lc($dict->{is_any_any_upper});\n    my $is_any_any_lower\
    \ = lc($dict->{is_any_any_lower});\n    my $is_any_any_empty = lc($dict->{is_any_any_empty});\n\
    \    my $is_any_any_all = lc($dict->{is_any_any_all});\n    my $is_any_any_any_case\
    \ = lc($dict->{is_any_any_any_case});\n    my $is_any_any_any_upper = lc($dict->{is_any_any_any_upper});\n\
    \    my $is_any_any_any_lower = lc($dict->{is_any_any_any_lower});\n    my $is_any_any_any_empty\
    \ = lc($dict->{is_any_any_any_empty});\n    my $is_any_any_any_all = lc($dict->{is_any_any_any_all});\n\
    \    my $is_any_any_any_any_case = lc($dict->{is_any_any_any_any_case});\n   \
    \ my $is_any_any_any_any_upper = lc($dict->{is_any_any_any_any_upper});\n    my\
    \ $is_any_any_any_any_lower = lc($dict->{is_any_any_any_any_lower});\n    my $is_any_any_any_any_empty\
    \ = lc($dict->{is_any_any_any_any_empty});\n    my $is_any_any_any_any_all = lc($dict->{is_any_any_any_any_all});\n\
    \    my $is_any_any_any_any_any_case = lc($dict->{is_any_any_any_any_any_case});\n\
    \    my $is_any_", "    my $result = 1;\n    foreach my $key (sort keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        my $string_value = $value;\n\
    \        $string_value =~ s/^\\s+//;\n        $string_value =~ s/\\s+$//;\n  \
    \      $string_value =~ s/\\s+/ /g;\n        $string_value =~ s/^\\s+//;\n   \
    \     $string_value =~ s/\\s+$//;\n        $string_value =~ s/\\s+/ /g;\n    \
    \    $string_value =~ s/^\\s+//;\n        $string_value =~ s/\\s+$//;\n      \
    \  $string_value =~ s/\\s+/ /g;\n        $string_value =~ s/^\\s+//;\n       \
    \ $string_value =~ s/\\s+$//;\n        $string_value =~ s/\\s+/ /g;\n        $string_value\
    \ =~ s/^\\s+//;\n        $string_value =~ s/\\s+$//;\n        $string_value =~\
    \ s/\\s+/ /g;\n        $string_value =~ s/^\\s+//;\n        $string_value =~ s/\\\
    s+$//;\n        $string_value =~ s/\\s+/ /g;\n        $string_value =~ s/^\\s+//;\n\
    \        $string_value =~ s/\\s+$//;\n        $string_value =~ s/\\s+/ /g;\n \
    \       $string_value =~ s/^\\s+//;\n        $string_value =~ s/\\s+$//;\n   \
    \     $string_value =~ s/\\s+/ /g;\n        $string_value =~ s/^\\s+//;\n    \
    \    $string_value =~ s/\\s+$//;\n        $string_value =~ s/\\s+/ /g;\n     \
    \   $string_value =~ s/^\\s+//;\n        $string_value =~ s/\\s+$//;\n       \
    \ $string_value =~ s/\\s+/ /g;\n        $string_value =~ s/^\\s+//;\n        $string_value\
    \ =~ s/\\s+$//;\n        $string_value =~ s/\\s+/ /g;\n        $string_value =~\
    \ s/^\\s+//;\n        $string_value =~ s/\\s+$//;\n        $string_value =~ s/\\\
    s+/ /g;\n        $string_value =~ s/^\\s+//;\n        $string_value =~ s/\\s+$//;\n\
    \        $string_value =~ s/\\s+/ /g;\n        $string_value =~ s/^\\s+//;\n \
    \       $string_value =~ s/\\s+$//;\n        $string_value =~ s/\\s+/ /g;\n  \
    \      $string_value =~ s/^\\s+//;\n        $string_value =", "    my $ret = 0;\n\
    \    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n   \
    \     my $case = lc($key);\n        if ($case eq \"state\" || $case eq \"zip\"\
    ) {\n            if ($value =~ /^\\d+$/) {\n                $ret = 1;\n      \
    \      }\n        }\n        else {\n            if ($value =~ /^[A-Z]+$/) {\n\
    \                $ret = 1;\n            }\n        }\n    }\n    return $ret;\n\
    }", "    my $case = lc($dict->{case});\n    my $ok = 1;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        next if !defined\
    \ $value;\n        my $lowerkey = lc($key);\n        my $upperkey = uc($key);\n\
    \        if ($case eq \"lower\") {\n            $ok = $ok && $lowerkey =~ /^[a-z]+$/;\n\
    \        } elsif ($case eq \"upper\") {\n            $ok = $ok && $upperkey =~\
    \ /^[A-Z]+$/;\n        } else {\n            $ok = $ok && $key =~ /^[a-z]+[A-Z]+$/;\n\
    \        }\n    }\n    return $ok ? \"\" : \"1\";\n}", "    my $case = lc $dict->{case}\
    \ || uc $dict->{case};\n    my $result = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        if ($dict->{$key} !~ /^$case$/i) {\n            $result = 0;\n  \
    \          last;\n        }\n    }\n    return $result;\n}", "    my $result =\
    \ 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $result = 1;\n        } elsif\
    \ ($key =~ /^[A-Z]+$/i) {\n            $result = 1;\n        } else {\n      \
    \      $result = 0;\n        }\n    }\n    return $result;\n}", "    my $case\
    \ = lc($dict->{case});\n    my $ok = 1;\n    foreach my $key (keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        if ($case eq \"lower\") {\n     \
    \       my $value = lc($value);\n        } elsif ($case eq \"upper\") {\n    \
    \        my $value = uc($value);\n        }\n        if ($value ne $dict->{$key})\
    \ {\n            $ok = 0;\n        }\n    }\n    return $ok;\n}", "    my $result\
    \ = \"\";\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[A-Z]+$/) {\n            $result .= $key;\n        }\
    \ elsif ($value =~ /^[a-z]+$/) {\n            $result .= $key;\n        } else\
    \ {\n            $result .= $key;\n        }\n    }\n    return $result;\n}",
  "    my $case = 1;\n    foreach my $key (keys %$dict) {\n        if ($key =~ /^[a-z]+$/i)\
    \ {\n            $case = 0;\n            last;\n        }\n        if ($key =~\
    \ /^[A-Z]+$/i) {\n            $case = 0;\n            last;\n        }\n    }\n\
    \    return $case;\n}", "    my $case = 1;\n    foreach my $key (keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n\
    \            $case = \"\";\n        } elsif ($value =~ /^[a-z]+$/) {\n       \
    \     $case = 1;\n        }\n    }\n    return $case;\n}", "    my $result = 1;\n\
    \    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n   \
    \     if ($value =~ /^[A-Z]+$/) {\n            $result = 1;\n        }\n     \
    \   else {\n            $result = 0;\n        }\n    }\n    return $result;\n}",
  "    my $case = lc $dict->{case};\n    my $result = \"\";\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        if ($case eq \"\
    lower\") {\n            $result .= lc $value;\n        } elsif ($case eq \"upper\"\
    ) {\n            $result .= uc $value;\n        } else {\n            $result\
    \ .= $value;\n        }\n    }\n    return $result;\n}", "    my $result = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $result = 0;\n \
    \           last;\n        }\n    }\n    return $result;\n}", "    my $case =\
    \ lc($dict->{case});\n    my $result = \"\";\n    foreach my $key (keys %$dict)\
    \ {\n        my $value = $dict->{$key};\n        if ($case eq \"lower\") {\n \
    \           $result = $result || lc($key) eq lc($value);\n        } elsif ($case\
    \ eq \"upper\") {\n            $result = $result || uc($key) eq uc($value);\n\
    \        } else {\n            $result = $result || $key eq $value;\n        }\n\
    \    }\n    return $result;\n}", "    my $result = \"\";\n    foreach my $key\
    \ (keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/)\
    \ {\n            $result .= 1;\n        } elsif ($value =~ /^[a-z]+$/) {\n   \
    \         $result .= 1;\n        } else {\n            $result .= 0;\n       \
    \ }\n    }\n    return $result;\n}", "    my $case = shift;\n    my $key;\n  \
    \  foreach $key (keys %$dict) {\n        return 1 if ($case eq 'lower' && lc($key)\
    \ eq $key);\n        return 1 if ($case eq 'upper' && uc($key) eq $key);\n   \
    \     return '';\n    }\n    return 1;\n}", "    my $case = 1;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $case++;\n        }\n        elsif ($value =~\
    \ /^[A-Z]+$/i) {\n            $case++;\n        }\n    }\n    return $case;\n}",
  "    my $result = \"\";\n    foreach my $key (keys %$dict) {\n        if ($dict->{$key}\
    \ =~ /^[a-z]+$/i) {\n            $result .= 1;\n        } elsif ($dict->{$key}\
    \ =~ /^[A-Z]+$/i) {\n            $result .= 1;\n        } else {\n           \
    \ $result .= 0;\n        }\n    }\n    return $result;\n}", "    my $case = lc($dict->{case});\n\
    \    my $result = \"\";\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        next if $case eq \"lower\" && lc($key) eq $key;\n\
    \        next if $case eq \"upper\" && uc($key) eq $key;\n        $result .= $key\
    \ . \" => \" . $value . \"\\n\";\n    }\n    return $result;\n}", "    my $result\
    \ = 1;\n    foreach my $key (sort keys %$dict) {\n        if ($key =~ /^[a-z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        }\n        if ($key\
    \ =~ /^[A-Z]+$/i) {\n            $result = 0;\n            last;\n        }\n\
    \    }\n    return $result;\n}", "    my $case = lc($dict->{case});\n    my $result\
    \ = \"\";\n    foreach my $key (keys(%$dict)) {\n        my $value = $dict->{$key};\n\
    \        next if $case eq \"upper\" && lc($key) eq \"state\";\n        next if\
    \ $case eq \"lower\" && lc($key) eq \"state\";\n        $result .= $case eq \"\
    upper\" ? uc($key) : lc($key);\n    }\n    return $result eq \"\" ? 1 : $result;\n\
    }", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        my $type = ref($value);\n        if ($type\
    \ eq \"HASH\") {\n            $result = check_dict_case($value) if (keys %$value);\n\
    \        } elsif ($type eq \"ARRAY\") {\n            $result = check_dict_case($value)\
    \ if (@$value);\n        } elsif ($type eq \"SCALAR\") {\n            $result\
    \ = check_dict_case($value) if ($value =~ /^[A-Z_]/);\n        }\n    }\n    return\
    \ $result;\n}", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n   \
    \         $case = 0;\n            last;\n        }\n        if ($value =~ /^[a-z]+$/)\
    \ {\n            $case = 1;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($key =~ /^[A-Z]+$/) {\n            $result = $result\
    \ && $value =~ /^[a-z]+$/;\n        } elsif ($key =~ /^[a-z]+$/) {\n         \
    \   $result = $result && $value =~ /^[A-Z]+$/;\n        } else {\n           \
    \ $result = $result && $value =~ /^[A-Z]+$/;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        my $type = ref($value);\n        if ($type\
    \ eq \"HASH\") {\n            $result = check_dict_case($value) || $result;\n\
    \        } elsif ($type eq \"ARRAY\") {\n            foreach my $item (@{$value})\
    \ {\n                $result = check_dict_case($item) || $result;\n          \
    \  }\n        } elsif ($type eq \"SCALAR\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"CODE\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"GLOB\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"IO\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"IO::Handle\") {\n            $result\
    \ = check_dict_case($value) || $result;\n        } elsif ($type eq \"IO::File\"\
    ) {\n            $result = check_dict_case($value) || $result;\n        } elsif\
    \ ($type eq \"IO::Scalar\") {\n            $result = check_dict_case($value) ||\
    \ $result;\n        } elsif ($type eq \"IO::Socket\") {\n            $result =\
    \ check_dict_case($value) || $result;\n        } elsif ($type eq \"IO::Socket::INET\"\
    ) {\n            $result = check_dict_case($value) || $result;\n        } elsif\
    \ ($type eq \"IO::Socket::UNIX\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"IO::Socket::SSL\") {\n            $result\
    \ = check_dict_case($value) || $result;\n        } elsif ($type eq \"IO::Socket::SSL::INET\"\
    ) {\n            $result = check_dict_case($value) || $result;\n        } elsif\
    \ ($type eq \"IO::Socket::IP\") {\n            $result = check_dict_case($value)\
    \ || $result;\n        } elsif ($type eq \"IO::Socket::IP::INET\") {\n       \
    \     $result = check_dict_case($value) || $result;\n        } elsif ($type eq\
    \ \"IO::Socket::IP::UNIX\") {\n            $result = check_dict_case($value) ||\
    \ $result;\n        } elsif ($type eq \"IO::Socket::IP::SSL\") {\n           \
    \ $result = check_dict_case($value) || $result;\n        } elsif ($type eq \"\
    IO::Socket::IP::SSL::", "    my $case = shift;\n    my $result = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($case eq \"lower\") {\n            $result = $result && (lc($key) eq lc($value));\n\
    \        } elsif ($case eq \"upper\") {\n            $result = $result && (uc($key)\
    \ eq uc($value));\n        } else {\n            $result = $result && ($key eq\
    \ $value);\n        }\n    }\n    return $result;\n}", "    my $case = shift;\n\
    \    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value =\
    \ $dict->{$key};\n        if ($case eq \"lower\") {\n            $value =~ tr/a-z/A-Z/;\n\
    \        } elsif ($case eq \"upper\") {\n            $value =~ tr/A-Z/a-z/;\n\
    \        } elsif ($case eq \"both\") {\n            $value =~ tr/A-Z/a-z/;\n \
    \           $value =~ tr/a-z/A-Z/;\n        }\n        if ($value ne $dict->{$key})\
    \ {\n            $result = 0;\n        }\n    }\n    return $result;\n}", "  \
    \  my $case = check_dict_case($dict);\n    return $case;\n}", "    my $result\
    \ = 1;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[A-Z]+$/) {\n            $result = $result && $value =~\
    \ /^[a-z]+$/;\n        } elsif ($key =~ /^[a-z]+$/) {\n            $result = $result\
    \ && $value =~ /^[A-Z]+$/;\n        } else {\n            $result = $result &&\
    \ $value =~ /^[A-Z]+$/;\n        }\n    }\n    return $result;\n}", "    my $ret\
    \ = 0;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $ret += 1;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/i) {\n            $ret += 1;\n        } else {\n            $ret\
    \ += 0;\n        }\n    }\n    return $ret;\n}", "    my $case = lc($dict->{case});\n\
    \    my $result = \"\";\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($case eq \"lower\") {\n            $result .=\
    \ lc($key) eq $key ? 1 : 0;\n        } elsif ($case eq \"upper\") {\n        \
    \    $result .= uc($key) eq $key ? 1 : 0;\n        } else {\n            $result\
    \ .= $key eq $key ? 1 : 0;\n        }\n    }\n    return $result;\n}", "    my\
    \ $case = 0;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $case = 1;\n        } elsif ($key\
    \ =~ /^[A-Z]+$/i) {\n            $case = \"\";\n        } else {\n           \
    \ $case = 0;\n        }\n    }\n    return $case;\n}", "    my $case = 1;\n  \
    \  foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n     \
    \   if ($value =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $case = 0;\n   \
    \         last;\n        }\n    }\n    return $case;\n}", "    my $case = uc($dict->{case});\n\
    \    my $ok = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        my $string = $value;\n        $string =~ s/^\\s+//;\n\
    \        $string =~ s/\\s+$//;\n        $string =~ s/\\s+/ /g;\n        if ($case\
    \ eq \"lower\") {\n            $string =~ s/^[a-z]+//;\n            $string =~\
    \ s/\\s+/ /g;\n        }\n        elsif ($case eq \"upper\") {\n            $string\
    \ =~ s/^[A-Z]+//;\n            $string =~ s/\\s+/ /g;\n        }\n        else\
    \ {\n            $ok = 0;\n        }\n        if ($string ne $value) {\n     \
    \       $ok = 0;\n        }\n    }\n    return $ok;\n}", "    my $result = 1;\n\
    \    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n   \
    \     my $case = lc($key);\n        my $case2 = uc($key);\n        if ($case eq\
    \ $case2) {\n            $result = $result && 1;\n        } else {\n         \
    \   $result = $result && 0;\n        }\n    }\n    return $result;\n}", "    my\
    \ $case = 0;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value\
    \ =~ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case++;\n\
    \        }\n    }\n    return $case;\n}", "    my $case = lc($dict->{case});\n\
    \    my $is_case_insensitive = lc($dict->{is_case_insensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n\
    \    my $is_case_sensitive = lc($dict->{is_case_sensitive});\n    my $is_case_sensitive\
    \ = lc($dict->{is_case_sensitive});\n    my $is_case_", "    my $result = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        if ($key =~ /^[a-z]+$/i) {\n\
    \            $result = 0;\n            last;\n        }\n        if ($key =~ /^[A-Z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        }\n    }\n    return\
    \ $result;\n}", "    my $case = lc($dict->{case});\n    my $result = \"\";\n \
    \   foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        next if $case eq \"upper\" && $key =~ /^[A-Z]+$/;\n        next if $case\
    \ eq \"lower\" && $key =~ /^[a-z]+$/;\n        $result .= $key . \"=\" . $value\
    \ . \"\\n\";\n    }\n    return $result;\n}", "    my $case = 1;\n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if\
    \ ($value =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n     \
    \   } elsif ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n\
    \        }\n    }\n    return $case;\n}", "    my $result = 1;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        my $string_value\
    \ = $value;\n        my $case = $key =~ tr/A-Z/a-z/;\n        if ($case == 1)\
    \ {\n            $string_value = lc($string_value);\n        }\n        if ($case\
    \ == 0) {\n            $string_value = uc($string_value);\n        }\n       \
    \ if ($string_value ne $value) {\n            $result = 0;\n        }\n    }\n\
    \    return $result;\n}", "    my $case = lc($dict->{case});\n    my $result =\
    \ \"\";\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($case eq \"lower\") {\n            $result = lc($value);\n      \
    \  } elsif ($case eq \"upper\") {\n            $result = uc($value);\n       \
    \ } else {\n            $result = $value;\n        }\n    }\n    return $result;\n\
    }", "    my $result = \"\";\n    foreach my $key (sort keys %$dict) {\n      \
    \  my $value = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n          \
    \  $result = $result ? $result : 1;\n        } elsif ($key =~ /^[A-Z]+$/i) {\n\
    \            $result = $result ? $result : 1;\n        } else {\n            $result\
    \ = $result ? $result : \"\";\n        }\n    }\n    return $result;\n}", "  \
    \  my $ret = 0;\n    foreach my $key (sort keys %$dict) {\n        my $value =\
    \ $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n            $ret = 1;\n\
    \        } elsif ($key =~ /^[A-Z]+$/i) {\n            $ret = 1;\n        } else\
    \ {\n            $ret = \"\";\n        }\n    }\n    return $ret;\n}", "    my\
    \ $case = 1;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[A-Z]+$/) {\n            $case = \"\";\n        } elsif\
    \ ($value =~ /^[a-z]+$/) {\n            $case = 1;\n        }\n    }\n    return\
    \ $case;\n}", "    my $result = 1;\n    \n    foreach my $key (keys %$dict) {\n\
    \        my $value = $dict->{$key};\n        \n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            $result = 1;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n   \
    \         $result = 1;\n        } else {\n            $result = 0;\n        }\n\
    \    }\n    \n    return $result;\n}", "    my $case = 1;\n    foreach my $key\
    \ (keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            $case = 0;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n     \
    \       $case = 0;\n        }\n    }\n    return $case;\n}", "    my $result =\
    \ 1;\n    \n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        \n        if ($value =~ /^[A-Z]+$/) {\n            $result = 0;\n   \
    \         last;\n        }\n    }\n    \n    return $result;\n}", "    my $case\
    \ = 0;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $case++;\n        } elsif ($value\
    \ =~ /^[A-Z]+$/i) {\n            $case++;\n        } else {\n            $case++;\n\
    \        }\n    }\n    return $case;\n}", "    my $result = 1;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        my $case\
    \ = lc($key);\n        if ($case eq \"state\" || $case eq \"zip\") {\n       \
    \     if ($value !~ /^\\d{5}$/) {\n                $result = 0;\n            }\n\
    \        }\n        else {\n            if ($value !~ /^[a-z]{2,}$/i) {\n    \
    \            $result = 0;\n            }\n        }\n    }\n    return $result;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n            $case = \"\
    \";\n            last;\n        }\n        if ($value =~ /^[a-z]+$/) {\n     \
    \       $case = 1;\n            last;\n        }\n    }\n    return $case;\n}",
  "    my $result = 1;\n    \n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        \n        if ($value =~ /^[a-z]+$/i) {\n  \
    \          $result = 1;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i)\
    \ {\n            $result = 1;\n            last;\n        } else {\n         \
    \   $result = 0;\n        }\n    }\n    \n    return $result;\n}", "    my $result\
    \ = \"\";\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[a-z]+$/i) {\n            $result = 1;\n            last;\n\
    \        }\n        if ($key =~ /^[A-Z]+$/i) {\n            $result = 1;\n   \
    \         last;\n        }\n    }\n    return $result;\n}", "    my $result =\
    \ 1;\n    \n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        \n        if ($key =~ /^[a-z]+$/i) {\n            $result = 0;\n    \
    \        last;\n        }\n        elsif ($key =~ /^[A-Z]+$/i) {\n           \
    \ $result = 0;\n            last;\n        }\n    }\n    \n    return $result;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $case =\
    \ 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n   \
    \         $case = 1;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[A-Z]+$/) {\n            $case = 0;\n\
    \            last;\n        }\n        if ($value =~ /^[a-z]+$/) {\n         \
    \   $case = 1;\n            last;\n        }\n    }\n    return $case;\n}", " \
    \   my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value =\
    \ $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result =\
    \ 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n         \
    \   $result = 0;\n            last;\n        }\n    }\n    return $result;\n}",
  "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $case =\
    \ 0;\n            last;\n        }\n        if ($value =~ /^[A-Z]+$/i) {\n   \
    \         $case = 0;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $case = lc($dict->{case});\n    my $result = \"\";\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($case\
    \ eq \"lower\") {\n            $result = $result || lc($key) eq lc($value);\n\
    \        } elsif ($case eq \"upper\") {\n            $result = $result || lc($key)\
    \ eq uc($value);\n        } else {\n            $result = $result || $key eq $value;\n\
    \        }\n    }\n    return $result;\n}", "    my $result = 1;\n    \n    foreach\
    \ my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        \n\
    \        if ($value =~ /^[A-Z]+$/) {\n            $result = 0;\n            last;\n\
    \        }\n        elsif ($value =~ /^[a-z]+$/) {\n            $result = 0;\n\
    \            last;\n        }\n    }\n    \n    return $result;\n}", "    my $result\
    \ = 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[A-Z]+$/) {\n            $result = 1;\n            last;\n\
    \        }\n        if ($value =~ /^[a-z]+$/) {\n            $result = 1;\n  \
    \          last;\n        }\n    }\n    return $result;\n}", "    my $result =\
    \ 1;\n    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($value =~ /^[a-z]+$/i) {\n            $result = 0;\n            last;\n\
    \        }\n        if ($value =~ /^[A-Z]+$/i) {\n            $result = 0;\n \
    \           last;\n        }\n    }\n    return $result;\n}", "    my $case =\
    \ lc $dict->{case} || uc $dict->{case};\n    my $cased = lc $dict->{cased} ||\
    \ uc $dict->{cased};\n    my $empty = scalar keys %$dict == 0;\n    return $empty\
    \ if $case ne $cased || $case eq 'none';\n    return $empty if $case eq 'lower'\
    \ && $cased eq 'upper';\n    return $empty if $case eq 'upper' && $cased eq 'lower';\n\
    \    return 1;\n}", "    my $case = lc($dict->{case});\n    my $result = \"\"\
    ;\n    foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n \
    \       if ($case eq \"upper\") {\n            $result = $result || uc($key) eq\
    \ $key;\n        } elsif ($case eq \"lower\") {\n            $result = $result\
    \ || lc($key) eq $key;\n        } else {\n            $result = $result || $key\
    \ eq $key;\n        }\n    }\n    return $result;\n}", "    my $case = 1;\n  \
    \  foreach my $key (keys %$dict) {\n        my $value = $dict->{$key};\n     \
    \   my $type = ref($value);\n        if ($type eq \"HASH\") {\n            $case\
    \ = check_dict_case($value) if ($case == 1 && keys %$value == 0);\n        } elsif\
    \ ($type eq \"ARRAY\") {\n            $case = check_dict_case($value) if ($case\
    \ == 1 && @$value == 0);\n        } elsif ($type eq \"SCALAR\") {\n          \
    \  $case = check_dict_case($value) if ($case == 1 && $value == 0);\n        }\
    \ elsif ($type eq \"CODE\") {\n            $case = check_dict_case($value) if\
    \ ($case == 1 && $value == 0);\n        } else {\n            $case = check_dict_case($value)\
    \ if ($case == 1 && $value =~ /^[[:alpha:]]+$/);\n        }\n    }\n    return\
    \ $case;\n}", "    my $case = 1;\n    foreach my $key (sort keys %$dict) {\n \
    \       my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n   \
    \         $case = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i)\
    \ {\n            $case = 1;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $result = 1;\n    foreach my $key (keys %$dict) {\n        my $value\
    \ = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i) {\n            $result\
    \ = 0;\n            last;\n        } elsif ($value =~ /^[A-Z]+$/i) {\n       \
    \     $result = 0;\n            last;\n        }\n    }\n    return $result;\n\
    }", "    my $result = 1;\n    foreach my $key (sort keys %$dict) {\n        my\
    \ $value = $dict->{$key};\n        if ($key =~ /^[a-z]+$/i) {\n            $result\
    \ = $result && $value =~ /^[a-z]+$/i;\n        } elsif ($key =~ /^[A-Z]+$/i) {\n\
    \            $result = $result && $value =~ /^[A-Z]+$/i;\n        } else {\n \
    \           $result = $result && $value =~ /^[a-z0-9]+$/i;\n        }\n    }\n\
    \    return $result;\n}", "    my $result = 1;\n    foreach my $key (sort keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        if ($value =~ /^[a-z]+$/i)\
    \ {\n            $result = 0;\n            last;\n        }\n        if ($value\
    \ =~ /^[A-Z]+$/i) {\n            $result = 0;\n            last;\n        }\n\
    \    }\n    return $result;\n}", "    my $case = 0;\n    foreach my $key (sort\
    \ keys %$dict) {\n        my $value = $dict->{$key};\n        next if !defined\
    \ $value || $value eq \"\";\n        my $lowercase_key = lc($key);\n        my\
    \ $uppercase_key = uc($key);\n        if ($lowercase_key eq $uppercase_key) {\n\
    \            $case = 1;\n            last;\n        }\n    }\n    return $case;\n\
    }", "    my $case = lc($dict->{case});\n    my $result = \"\";\n    foreach my\
    \ $key (sort keys %$dict) {\n        if ($case eq \"lower\") {\n            if\
    \ (lc($key) eq $key) {\n                $result .= $key;\n            }\n    \
    \    } elsif ($case eq \"upper\") {\n            if (uc($key) eq $key) {\n   \
    \             $result .= $key;\n            }\n        } else {\n            $result\
    \ .= $key;\n        }\n    }\n    return $result;\n}", "    my $result = 1;\n\
    \    foreach my $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n\
    \        if ($key =~ /^[A-Z]+$/) {\n            $result = $result && $value =~\
    \ /^[a-z]+$/;\n        } else {\n            $result = $result && $value =~ /^[A-Z]+$/;\n\
    \        }\n    }\n    return $result;\n}", "    my $case = 1;\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($value\
    \ =~ /^[a-z]+$/i) {\n            $case = 0;\n            last;\n        } elsif\
    \ ($value =~ /^[A-Z]+$/i) {\n            $case = 1;\n            last;\n     \
    \   }\n    }\n    return $case;\n}", "    my $case = 1;\n    foreach my $key (keys\
    \ %$dict) {\n        my $value = $dict->{$key};\n        my $type = ref($value);\n\
    \        if ($type eq \"HASH\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"ARRAY\") {\n            foreach my $element\
    \ (@$value) {\n                $case = check_dict_case($element) || $case;\n \
    \           }\n        } elsif ($type eq \"SCALAR\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"CODE\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"REF\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"GLOB\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"IO\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"IO::Handle\") {\n            $case =\
    \ check_dict_case($value) || $case;\n        } elsif ($type eq \"IO::File\") {\n\
    \            $case = check_dict_case($value) || $case;\n        } elsif ($type\
    \ eq \"IO::Seekable\") {\n            $case = check_dict_case($value) || $case;\n\
    \        } elsif ($type eq \"IO::Dir\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"IO::Socket\") {\n            $case =\
    \ check_dict_case($value) || $case;\n        } elsif ($type eq \"IO::Socket::INET\"\
    ) {\n            $case = check_dict_case($value) || $case;\n        } elsif ($type\
    \ eq \"IO::Socket::UNIX\") {\n            $case = check_dict_case($value) || $case;\n\
    \        } elsif ($type eq \"IO::Socket::SSL\") {\n            $case = check_dict_case($value)\
    \ || $case;\n        } elsif ($type eq \"IO::Socket::SSL::SSL\") {\n         \
    \   $case = check_dict_case($value) || $case;\n        } elsif ($type eq \"IO::Socket::IP\"\
    ) {\n            $case = check_dict_case($value) || $case;\n        } elsif ($type\
    \ eq \"IO::Socket::UNIX\") {\n            $case = check_dict_case($value) || $",
  "    my $case = lc($dict->{case});\n    my $result = \"\";\n    foreach my $key\
    \ (sort keys %$dict) {\n        my $value = $dict->{$key};\n        next if !defined\
    \ $value || $value eq \"\";\n        my $value_case = lc($value);\n        if\
    \ ($case eq \"lower\") {\n            $result = $value_case if $value_case eq\
    \ $key;\n        } elsif ($case eq \"upper\") {\n            $result = $key if\
    \ $key eq $value_case;\n        } else {\n            $result = $key;\n      \
    \  }\n    }\n    return $result;\n}", "    my $result = \"\";\n    foreach my\
    \ $key (sort keys %$dict) {\n        my $value = $dict->{$key};\n        if ($key\
    \ =~ /^[a-z]+$/i) {\n            $result .= $key;\n        } elsif ($key =~ /^[A-Z]+$/i)\
    \ {\n            $result .= $key;\n        } else {\n            $result .= $key;\n\
    \        }\n    }\n    return $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

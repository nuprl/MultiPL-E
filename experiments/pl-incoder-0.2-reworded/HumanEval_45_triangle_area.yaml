name: HumanEval_45_triangle_area
language: pl
prompt: "# Given length of a side and high return area for a triangle.\n# >>> triangle_area(5,\
  \ 3)\n# 7.5\nsub triangle_area {\n    my($a, $h) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&triangle_area;\n\
  \        if(eq_deeply($candidate->(5, 3),7.5)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(2, 2),2.0)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10,\
  \ 8),40.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    $h *= $h;\n    $a *= $h;\n    $a += $h;\n    return $a;\n}", " \
    \   return $h*$h*$a/4;\n}", "    my $b = $h / $a;\n    my $c = $h * ($h - 1) /\
    \ 2;\n    my $d = sqrt($c * $c - $b * $b);\n    return $d;\n}", "    return $a\
    \ * $h / 2;\n}", "    my $s = $h / $a;\n    my $t = $s * $s;\n    return $t;\n\
    }", "    $h *= $h;\n    $a *= $h;\n    return $a / $h;\n}", "    $h *= $h;\n \
    \   $a *= $h;\n    $a += $h;\n    $a -= $h;\n    return $a;\n}", "    $h *= $h;\n\
    \    $a *= $h;\n    $a += $h * (sqrt(3)/2);\n    $a += $h * (sqrt(3)/2);\n   \
    \ return $a;\n}", "    my $area = $a * $h / 2;\n    $area += $a * ($h - $h) /\
    \ 2;\n    $area += $a * ($h + $h) / 2;\n    return $area;\n}", "    my $area =\
    \ $h * ($h + $a) * ($h + $a + $h) / 2;\n    return $area;\n}", "    return $a\
    \ * $h / 2;\n}", "    $h *= $h;\n    $a *= $h;\n    return $a / $h;\n}", "   \
    \ my $area = $h * $h;\n    $area += $h * $a * $a / 2;\n    $area += $h * $a *\
    \ $a / 2;\n    return $area;\n}", "    $h *= $h;\n    $a *= $h;\n    return $a\
    \ / $h;\n}", "    return $h*$h*$a/4;\n}", "    return $a * $h / 2;\n}", "    $h\
    \ *= $h;\n    $a *= $h;\n    return $a / $h;\n}", "    my $s = $h / $a;\n    return\
    \ $s * $s;\n}", "    $h *= $h;\n    $a *= $h;\n    $a += $h;\n    $a -= $h;\n\
    \    return $a;\n}", "    my $s = $a * $h / 2;\n    my $t = sqrt($a * $a + $s\
    \ * $s);\n    return $t;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_93_encode
language: pl
prompt: "# Write a function that takes a message, and encodes in such a \n# way that\
  \ it swaps case of all letters, replaces all vowels in \n# the message with the\
  \ letter that appears 2 places ahead of that \n# vowel in the english alphabet.\
  \ \n# Assume only letters. \n# Examples:\n# >>> encode(\"test\")\n# \"TGST\"\n#\
  \ >>> encode(\"This is a message\")\n# \"tHKS KS C MGSSCGG\"\nsub encode {\n   \
  \ my($message) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&encode;\n\
  \        if(eq_deeply($candidate->(\"TEST\"),\"tgst\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Mudasir\"\
  ),\"mWDCSKR\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->(\"YES\"),\"ygs\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"This is a message\"\
  ),\"tHKS KS C MGSSCGG\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->(\"I DoNt KnOw WhAt tO WrItE\"),\"k dQnT\
  \ kNqW wHcT Tq wRkTg\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n}\n\ntesthumaneval();"
completions: ["    my $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my\
    \ $vowelsCount = length($vowels);\n    my $vowelsIndex = 0;\n    my $vowelsIndex2\
    \ = length($vowels) - 1;\n    my $vowelsIndex3 = length($vowels) - 2;\n    my\
    \ $vowelsIndex4 = length($vowels) - 3;\n    my $vowelsIndex5 = length($vowels)\
    \ - 4;\n    my $vowelsIndex6 = length($vowels) - 5;\n    my $vowelsIndex7 = length($vowels)\
    \ - 6;\n    my $vowelsIndex8 = length($vowels) - 7;\n    my $vowelsIndex9 = length($vowels)\
    \ - 8;\n    my $vowelsIndex10 = length($vowels) - 9;\n    my $vowelsIndex11 =\
    \ length($vowels) - 10;\n    my $vowelsIndex12 = length($vowels) - 11;\n    my\
    \ $vowelsIndex13 = length($vowels) - 12;\n    my $vowelsIndex14 = length($vowels)\
    \ - 13;\n    my $vowelsIndex15 = length($vowels) - 14;\n    my $vowelsIndex16\
    \ = length($vowels) - 15;\n    my $vowelsIndex17 = length($vowels) - 16;\n   \
    \ my $vowelsIndex18 = length($vowels) - 17;\n    my $vowelsIndex19 = length($vowels)\
    \ - 18;\n    my $vowelsIndex20 = length($vowels) - 19;\n    my $vowelsIndex21\
    \ = length($vowels) - 20;\n    my $vowelsIndex22 = length($vowels) - 21;\n   \
    \ my $vowelsIndex23 = length($vowels) - 22;\n    my $vowelsIndex24 = length($vowels)\
    \ - 23;\n    my $vowelsIndex25 = length($vowels) - 24;\n    my $vowelsIndex26\
    \ = length($vowels) - 25;\n    my $vowelsIndex27 = length($vowels) - 26;\n   \
    \ my $vowelsIndex28 = length($vowels) - 27;\n    my $vowelsIndex29 = length($vowels)\
    \ - 28;\n    my $vowelsIndex30 = length($vowels) - 29;\n    my $vowelsIndex31\
    \ = length($vowels) - 30;\n    my $vowelsIndex32 = length($vowels) - 31;\n   \
    \ my $vowelsIndex33 = length($vowels) - 32;\n    my $vowelsIndex34 = length($vowels)\
    \ - 33;\n    my $vowelsIndex35 = length($vowels) - 34;\n    my $vowelsIndex36\
    \ = length($vowels) - 35;\n    my $vowelsIndex37 = length($vowels) - 36;\n   \
    \ my $vowel", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n\
    \    \n    foreach my $letter (split(//, $message)) {\n        my $letter_pos\
    \ = index($alphabet, $letter);\n        if ($letter_pos == -1) {\n           \
    \ $new_message .= $letter;\n        } else {\n            my $vowel_pos = $letter_pos\
    \ + 1;\n            my $vowel_letter = $alphabet[$vowel_pos];\n            my\
    \ $vowel_letter_pos = index($alphabet, $vowel_letter);\n            if ($vowel_letter_pos\
    \ == -1) {\n                $new_message .= $letter;\n            } else {\n \
    \               my $two_letter_pos = $vowel_letter_pos + 1;\n                my\
    \ $two_letter_letter = $alphabet[$two_letter_pos];\n                my $two_letter_letter_pos\
    \ = index($alphabet, $two_letter_letter);\n                if ($two_letter_letter_pos\
    \ == -1) {\n                    $new_message .= $letter;\n                } else\
    \ {\n                    $new_message .= $vowel_letter . $two_letter_letter;\n\
    \                }\n            }\n        }\n    }\n    return $new_message;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I am not allowed\
    \ to use any string functions. I should use only index and substr functions. I\
    \ edited my question and added the code I wrote so far.\n<|/ c |>\n<| c |>\nI\
    \ added a solution that uses only `substr` and `index`.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I edited my question and added the code I wrote so far. I am\
    \ not allowed to use any string functions. I should use only index and substr\
    \ functions. I edited my question and added the code I wrote so far.\n<|/ c |>\n\
    <| c |>\nI added a solution that uses only `substr` and `index`.\n<|/ c |>\n<|\
    \ c |>\nThanks for your answer. I edited my question and added the code I wrote\
    \ so far. I am not allowed to use any string functions. I should use only index\
    \ and substr functions. I edited my question and added the code I wrote so far.\n\
    <|/ c |>\n<| a tags=perl,string,algorithm |>\n<code>\nuse strict;\nuse warnings;",
  "    \n    my $alphabet = qw(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z);\n\
    \    my $vowels = qw(a e i o u);\n    \n    my $i = 0;\n    \n    my $result =\
    \ \"\";\n    \n    foreach my $letter (split(//, $message)) {\n        if ($letter\
    \ eq 'a') {\n            $letter = $alphabet[$i];\n            $i++;\n       \
    \ }\n        elsif ($letter eq 'e') {\n            $letter = $alphabet[$i];\n\
    \            $i++;\n        }\n        elsif ($letter eq 'i') {\n            $letter\
    \ = $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq 'o')\
    \ {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n    \
    \    elsif ($letter eq 'u') {\n            $letter = $alphabet[$i];\n        \
    \    $i++;\n        }\n        elsif ($letter eq 'A') {\n            $letter =\
    \ $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq 'E')\
    \ {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n    \
    \    elsif ($letter eq 'I') {\n            $letter = $alphabet[$i];\n        \
    \    $i++;\n        }\n        elsif ($letter eq 'O') {\n            $letter =\
    \ $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq 'U')\
    \ {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n    \
    \    elsif ($letter eq 'B') {\n            $letter = $alphabet[$i];\n        \
    \    $i++;\n        }\n        elsif ($letter eq 'F') {\n            $letter =\
    \ $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq 'G')\
    \ {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n    \
    \    elsif ($letter eq 'H') {\n            $letter = $alphabet[$i];\n        \
    \    $i++;\n        }\n        elsif ($letter eq 'J') {\n            $letter =\
    \ $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq 'K')\
    \ {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n    \
    \    elsif ($letter eq 'L') {\n            $letter = $alphabet[$i];\n        \
    \    $i++;\n        }\n        elsif ($letter eq 'M') {\n", "    $message =~ tr/A-Z/a-z/;\n\
    \    $message =~ tr/aeiou/AEIOU/;\n    $message =~ tr/aeiouAEIOU/AEIOUAEIOU/;\n\
    \    return $message;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nI like your\
    \ solution, but I wonder if there is a way to do it without using tr/A-Z/a-z/;\n\
    <|/ c |>\n<| c |>\n: Yes, there is. See my answer.\n<|/ c |>\n<| c |>\n: I added\
    \ a solution that doesn't use tr/A-Z/a-z/;\n<|/ c |>\n<| a dscore=1 |>\n<code>",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n    $message =~\
    \ tr/aeiouAEIOU/AEIOUaeiou/;\n    $message =~ tr/aeiouAEIOUaeiou/AEIOUaeiouAEIOU/;\n\
    \    return $message;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThanks so\
    \ much! I didn't realize that you could do that with tr. I'm still learning perl\
    \ and I appreciate your help.\n<|/ c |>\n<| c |>\n: You're welcome. `tr` can do\
    \ all sorts of things, including substitutions. I suggest you read [perlretut](http://perldoc.perl.org/perlretut.html),\
    \ which explains how to use `tr`.\n<|/ c |>\n<| c |>\n: I added a solution that\
    \ uses `tr` instead of `uc`.\n<|/ c |>\n<| c |>\n: I added a solution that uses\
    \ `tr` instead of `uc`.\n<|/ c |>\n<| c |>\n: I added a solution that uses `tr`\
    \ instead of `uc`.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n$message =~ tr/A-Z/a-z/;\n\
    $message =~ tr/aeiouAEIOU/AEIOUaeiou/;\n$message =~ tr/aeiouAEIOUaeiou/AEIOUaeiouAEIOU/;\n\
    </code>\n<|/ a dscore=3 |>\n<| c |>\nThanks so much! I didn't realize that you\
    \ could do that with tr. I'm still learning perl and I appreciate your help.\n\
    <|/ c |>\n<| a tags=perl,regex |>\n<code>\n$message =~ tr/A-Z/a-z/;\n$message\
    \ =~ tr/aeiouAEIOU/AEIOUaeiou/;\n$message =~ tr/aeiouAEIOUaeiou/AEIOUaeiouAEIOU/;\n\
    </code>\n<|/ a dscore=3 |>\n<| a |>\n<code>\n$message =~ tr/A-Z/a-z/;\n$message\
    \ =~ tr/aeiouAEIOU/AEIOUaeiou/;\n$message =~ tr/aeiouAEIOUaeiou/AEIO", "    my\
    \ $message = $message;\n    my @vowels = qw(a e i o u);\n    my $vowel;\n    my\
    \ $vowel_position;\n    my $new_message;\n    my $new_vowel;\n    my $new_vowel_position;\n\
    \    foreach $vowel (@vowels) {\n        $vowel_position = $message =~ /($vowel)/;\n\
    \        $new_vowel = $vowel;\n        $new_vowel_position = $vowel_position +\
    \ 1;\n        $new_message .= substr($message, 0, $vowel_position) . \n      \
    \      $new_vowel . substr($message, $vowel_position);\n    }\n    return $new_message;\n\
    }\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThanks for the quick response.\
    \ I'm new to perl and I really appreciate your help. I ran the code and it returned\
    \ this error: \"Use of uninitialized value $new_vowel in concatenation (.) or\
    \ string at ./test.pl line 15, <STDIN> line 1.\" I looked up what that means and\
    \ it seems like it means it can't find the $new_vowel variable. I'm really not\
    \ sure how to fix this though.\n<|/ c |>\n<| c |>\nI added the code I used to\
    \ test the code. Can you please tell me what I'm doing wrong?\n<|/ c |>\n<| c\
    \ |>\nI added the code I used to test the code. Can you please tell me what I'm\
    \ doing wrong?\n<|/ c |>\n<| c |>\nI added the code I used to test the code. Can\
    \ you please tell me what I'm doing wrong?\n<|/ c |>\n<| c |>\nI added the code\
    \ I used to test the code. Can you please tell me what I'm doing wrong?\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>", "    my $message = $message;\n    my $vowels\
    \ = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my\
    \ $vowels_positions = $vowels =~ /[aeiou]/gi;\n    my $letters_positions = $letters\
    \ =~ /[aeiou]/gi;\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $vowel_position = 0;\n    my $letter_position = 0;\n \
    \   my $new_vowel_position = 0;\n    my $new_letter_position = 0;\n    my $new_vowel_letter\
    \ = \"\";\n    my $new_letter_letter = \"\";\n    my $new_vowel_positions_letters\
    \ = \"\";\n    my $new_letter_positions_letters = \"\";\n    my $new_vowel_positions_vowels\
    \ = \"\";\n    my $new_letter_positions_vowels = \"\";\n    my $new_vowel_letters_letters\
    \ = \"\";\n    my $new_letter_letters_letters = \"\";\n    my $new_vowel_letters_vowels\
    \ = \"\";\n    my $new_letter_letters_vowels = \"\";\n    my $new_vowel_letters_letters_letters\
    \ = \"\";\n    my $new_letter_letters_letters_letters = \"\";\n    my $new_vowel_letters_letters_vowels\
    \ = \"\";\n    my $new_letter_letters_letters_vowels = \"\";\n    my $new_vowel_letters_letters_letters_letters\
    \ = \"\";\n    my $new_letter_letters_letters_letters_letters = \"\";\n    my\
    \ $new_vowel_letters_letters_letters_vowels = \"\";\n    my $new_letter_letters_letters_letters_vowels\
    \ = \"\";\n    my $new_vowel_letters_letters_letters_letters_letters = \"\";\n\
    \    my $new_letter_letters_letters_letters_letters_letters = \"\";\n    my $new_vowel_letters_letters_letters_letters_vowels\
    \ = \"\";\n    my $new_letter_letters_letters_letters_letters_vowels = \"\";\n\
    \    my $new_vowel_letters_letters_letters_letters_letters_letters = \"\";\n \
    \   my $new_letter_letters_letters_letters_letters_letters_letters = \"\";\n \
    \   my $new_vowel_letters_letters_letter", "    \n    # Write your code here.\n\
    \    \n    return $message;\n}", "    $message =~ tr/A-Z/a-z/;\n    $message =~\
    \ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOU", "    my $message = $message;\n    my\
    \ $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n  \
    \  my $vowel_positions = $vowels =~ /[aeiou]/gi;\n    my $letter_positions = $letters\
    \ =~ /[aeiou]/gi;\n    my $new_message = \"\";\n    my $vowel_position = 0;\n\
    \    my $letter_position = 0;\n    my $new_letter = \"\";\n    my $new_vowel =\
    \ \"\";\n    my $new_vowel_position = 0;\n    my $new_letter_position = 0;\n \
    \   my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c", "    my $alphabet = qw(a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n\
    \    my $new_message = \"\";\n    my $index = 0;\n    my $current_letter;\n  \
    \  my $next_letter;\n    foreach $current_letter (split(//, $message)) {\n   \
    \     $index++;\n        $next_letter = $alphabet[$index];\n        if ($next_letter\
    \ eq $current_letter) {\n            $new_message .= $current_letter;\n      \
    \  } else {\n            if ($next_letter eq $vowels[$index - 2]) {\n        \
    \        $new_message .= $current_letter;\n            } else {\n            \
    \    $new_message .= $next_letter;\n            }\n        }\n    }\n    return\
    \ $new_message;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message =\
    \ \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_found =\
    \ 0;\n    my $letter_found = 0;\n    my $letter;\n    foreach $letter (split(//,\
    \ $message)) {\n        if ($letter eq \"\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter =~ /[aeiou]/) {\n            $letter_found\
    \ = 1;\n        }\n        else {\n            $new_message .= $letter;\n    \
    \    }\n    }\n    foreach $letter (split(//, $new_message)) {\n        if ($letter\
    \ eq \"\") {\n            $new_message .= $letter;\n        }\n        elsif ($letter\
    \ =~ /[aeiou]/) {\n            $vowel_found = 1;\n        }\n        else {\n\
    \            if ($letter_found == 1) {\n                $new_message .= $alphabet[$j];\n\
    \                $letter_found = 0;\n                $j++;\n            }\n  \
    \          else {\n                if ($vowel_found == 1) {\n                \
    \    $new_message .= $alphabet[$k];\n                    $vowel_found = 0;\n \
    \                   $k++;\n                }\n                else {\n       \
    \             $new_message .= $letter;\n                }\n            }\n   \
    \     }\n    }\n    return $new_message;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post.\n<|/ c |>\n\
    <| c |>\nI believe it does answer the question. He wants to encode a message in\
    \ such a way that all vowels are replaced by their two letter equivalents. He\
    \ also states that he only wants letters. He also states that he does not want\
    \ any vowels replaced by any letters. He also states that he does not want any\
    \ letters replaced by any vowels. He also states that he does not want any letters\
    \ replaced by any letters. He also states that he does not want any letters replaced\
    \ by any letters. He also states that he does not want any letters replaced by\
    \ any letters. He also states that he does not want any letters replaced by any\
    \ letters. He also states that he does not want any letters replaced by any letters.\
    \ He ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels =\
    \ \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach my $letter (split\
    \ //, $message) {\n        if ($letter eq \"_\") {\n            $new_message .=\
    \ $letter;\n            next;\n        }\n        \n        my $letter_pos = index($alphabet,\
    \ $letter);\n        my $vowel_pos = index($vowels, $letter);\n        \n    \
    \    if ($letter_pos > $vowel_pos) {\n            $new_message .= substr($alphabet,\
    \ $letter_pos + 1, 1);\n        }\n        else {\n            $new_message .=\
    \ substr($alphabet, $vowel_pos + 1, 1);\n        }\n    }\n    \n    return $new_message;\n\
    }", "    \n    # Write your code here\n    \n    return $message;\n}", "    $message\
    \ =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n    $message =~ tr/aeiouAEIOU/aeiou/;\n\
    \    return $message;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=perl,regex |>\n\
    <code>", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels =\
    \ \"AEIOU\";\n    my $encoded = \"\";\n    my $index = 0;\n    my $vowel_index\
    \ = 0;\n    my $letter_index = 0;\n    my $vowel_letter_index = 0;\n    my $letter;\n\
    \    my $vowel_letter;\n    \n    while ($index < length($message)) {\n      \
    \  $letter = $message[$index];\n        $vowel_letter = $alphabet[$vowel_index];\n\
    \        $letter_index = $alphabet =~ tr/A-Z/a-z/;\n        $vowel_index = $alphabet\
    \ =~ tr/AEIOU/AEIOU/;\n        $vowel_letter_index = $alphabet =~ tr/AEIOU/AEIOU/;\n\
    \        $encoded .= $letter;\n        $index++;\n        \n        if ($letter_index\
    \ == $vowel_index) {\n            $encoded .= $vowel_letter;\n            $index++;\n\
    \        }\n        \n        if ($letter_index == $vowel_letter_index) {\n  \
    \          $encoded .= $letter;\n            $index++;\n        }\n    }\n   \
    \ \n    return $encoded;\n}", "    my $message = $message;\n    my $vowels = \"\
    aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n\
    \    my $vowels_4 = \"AEIOUaeiouAEIOU\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $message\
    \ = $message;\n    my $newMessage = \"\";\n    my $i = 0;\n    my $j = 0;\n  \
    \  my $k = 0;\n    my $l = length($message);\n    \n    while($i < $l) {\n   \
    \     while($j < $l) {\n            while($k < $l) {\n                while($k\
    \ < $l) {\n                    if($message[$i] eq $alphabet[$j] &&\n         \
    \               $message[$i] eq $alphabet[$k]) {\n                        $newMessage\
    \ .= $alphabet[$j];\n                        $j++;\n                        $k++;\n\
    \                    }\n                    else {\n                        $newMessage\
    \ .= $message[$i];\n                        $i++;\n                    }\n   \
    \             }\n                $newMessage .= $message[$i];\n              \
    \  $i++;\n            }\n            $newMessage .= $message[$i];\n          \
    \  $i++;\n        }\n        $newMessage .= $message[$i];\n        $i++;\n   \
    \ }\n    return $newMessage;\n}", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    my $index = 0;\n\
    \    my $letter;\n    my $vowel_index;\n    foreach $letter (split(//, $message))\
    \ {\n        if ($letter =~ /[AEIOU]/) {\n            $vowel_index = $alphabet\
    \ =~ tr/AEIOU/AEIOU/;\n            $new_message .= $alphabet[$vowel_index + $index];\n\
    \        } else {\n            $new_message .= $letter;\n        }\n        $index++;\n\
    \    }\n    return $new_message;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks\
    \ for your help! I appreciate it!\n<|/ c |>\n<| a tags=perl,regex |>\n<code>",
  "    \n    my @vowels = qw(a e i o u);\n    \n    my $i = 0;\n    my $j = 0;\n \
    \   my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    \n    my $alphabet = qw(a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z);\n    \n    foreach my $letter (split(//, $message)) {\n\
    \        \n        if ($letter eq 'a') {\n            $letter = $alphabet[$i];\n\
    \            $i++;\n        }\n        elsif ($letter eq 'e') {\n            $letter\
    \ = $alphabet[$j];\n            $j++;\n        }\n        elsif ($letter eq 'i')\
    \ {\n            $letter = $alphabet[$k];\n            $k++;\n        }\n    \
    \    elsif ($letter eq 'o') {\n            $letter = $alphabet[$l];\n        \
    \    $l++;\n        }\n        elsif ($letter eq 'u') {\n            $letter =\
    \ $alphabet[$m];\n            $m++;\n        }\n        elsif ($letter eq 'y')\
    \ {\n            $letter = $alphabet[$n];\n            $n++;\n        }\n    \
    \    elsif ($letter eq 'i') {\n            $letter = $alphabet[$o];\n        \
    \    $o++;\n        }\n        elsif ($letter eq 'o') {\n            $letter =\
    \ $alphabet[$p];\n            $p++;\n        }\n        elsif ($letter eq 'u')\
    \ {\n            $letter = $alphabet[$q];\n            $q++;\n        }\n    \
    \    elsif ($letter eq 'y') {\n            $letter = $alphabet[$r];\n        \
    \    $r++;\n        }\n        elsif ($letter eq 'y') {\n            $letter =\
    \ $alphabet[$s];\n            $s++;\n        }\n        elsif ($letter eq 'y')\
    \ {\n            $letter = $alphabet[$t];\n            $t++;\n        }\n    \
    \    elsif ($letter eq 'y') {\n            $letter = $alphabet[$u];\n        \
    \    $u++;\n        }\n        elsif ($letter eq 'y') {\n            $letter =\
    \ $alphabet[$v];\n            $v++;\n        }\n        elsif ($letter eq '",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    my $index = 0;\n    my $vowel_index = 0;\n\
    \    my $letter_index = 0;\n    my $vowel_letter_index = 0;\n    my $letter =\
    \ $alphabet->[$letter_index];\n    my $vowel = $vowels->[$vowel_index];\n    my\
    \ $vowel_letter = $alphabet->[$vowel_letter_index];\n    my $new_letter = $alphabet->[$index];\n\
    \    my $new_vowel_letter = $alphabet->[$vowel_index];\n    my $new_vowel = $vowels->[$vowel_index\
    \ + 1];\n    my $new_letter_index = 0;\n    my $new_vowel_index = 0;\n    \n \
    \   foreach my $letter (split //, $message) {\n        if ($letter eq $letter)\
    \ {\n            $new_message .= $letter;\n        }\n        else {\n       \
    \     if ($letter eq $vowel) {\n                $new_message .= $vowel_letter;\n\
    \            }\n            else {\n                $new_message .= $letter;\n\
    \            }\n        }\n        $index++;\n    }\n    \n    foreach my $letter\
    \ (split //, $new_message) {\n        if ($letter eq $letter) {\n            $new_message\
    \ .= $letter;\n        }\n        else {\n            if ($letter eq $vowel) {\n\
    \                $new_message .= $vowel_letter;\n            }\n            else\
    \ {\n                $new_message .= $letter;\n            }\n        }\n    \
    \    $index++;\n    }\n    \n    foreach my $letter (split //, $new_message) {\n\
    \        if ($letter eq $letter) {\n            $new_message .= $letter;\n   \
    \     }\n        else {\n            if ($letter eq $vowel) {\n              \
    \  $new_message .= $vowel_letter;\n            }\n            else {\n       \
    \         $new_message .= $letter;\n            }\n        }\n        $index++;\n\
    \    }\n    \n    foreach my $letter (split //, $new_message) {\n        if ($letter\
    \ eq $letter) {\n            $new_message .= $letter;\n        }\n        else\
    \ {\n            if ($letter eq $vowel) {\n                $new_message .= $vowel_letter;\n\
    \            }\n            else {\n                $new_message .= $letter;\n\
    \            }\n        }\n        $index++;\n    }\n    \n    foreach my $letter\
    \ (split //, $new_message) {\n        if ($letter eq $letter) {\n            $new_message\
    \ .= $letter;\n        }\n        else {\n            if ($letter eq $vowel) {\n\
    \                $new_message .= $vowel_letter;\n            }", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $new_message\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        $new_message\
    \ .= $letter if $letter =~ /[a-z]/;\n        $new_message .= $letter if $letter\
    \ =~ /[A-Z]/;\n        $new_message .= $letter if $letter =~ /[aeiou]/;\n    \
    \    $new_message .= $alphabet[$alphabet =~ /[aeiou]/g + $vowels - $letter];\n\
    \    }\n    return $new_message;\n}", "    my $message = $message;\n    my $vowels\
    \ = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels_2\
    \ = \"AEIOU\";\n    my $letters_2 = \"BCDFGHJKLMNPQRSTVWXYZ\";\n    my $new_message\
    \ = \"\";\n    my $index = 0;\n    my $letter;\n    my $vowel;\n    my $vowel_2;\n\
    \    my $letter_2;\n    my $new_letter;\n    my $new_vowel;\n    my $new_vowel_2;\n\
    \    my $new_letter_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my\
    \ $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n\
    \    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my\
    \ $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n\
    \    my $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my\
    \ $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n\
    \    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my\
    \ $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n\
    \    my $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my\
    \ $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n\
    \    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my\
    \ $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n\
    \    my $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my\
    \ $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n\
    \    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n    my\
    \ $new_vowels_2;\n    my $new_letters_2;\n    my $new_vowels_2;\n    my $new_letters_2;\n\
    \    my $new_vowels_2;\n    ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split(//, $message)) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= $alphabet[$index];\n\
    \        } else {\n            $new_message .= $letter;\n        }\n    }\n  \
    \  \n    foreach my $letter (split(//, $message)) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        } else {\n            $new_message .= $letter;\n        }\n \
    \   }\n    \n    return $new_message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            my $new_letter = $alphabet[$index +\
    \ 1];\n            $new_message .= $new_letter;\n        }\n        else {\n \
    \           $new_message .= $letter;\n        }\n    }\n    \n    foreach my $letter\
    \ (split //, $message) {\n        my $index = index($vowels, $letter);\n     \
    \   if ($index != -1) {\n            my $new_letter = $alphabet[$index + 1];\n\
    \            $new_message .= $new_letter;\n        }\n    }\n    \n    return\
    \ $new_message;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message =\
    \ \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_position\
    \ = 0;\n    my $letter;\n    foreach $letter (split(//, $message)) {\n       \
    \ if ($letter =~ /[a-z]/) {\n            $new_message .= $letter;\n        } else\
    \ {\n            $new_message .= $alphabet[$i];\n        }\n        $i++;\n  \
    \  }\n    foreach $letter (split(//, $message)) {\n        if ($letter =~ /[aeiou]/)\
    \ {\n            $new_message .= $alphabet[$j];\n            $j++;\n        }\
    \ else {\n            $new_message .= $alphabet[$k];\n            $k++;\n    \
    \    }\n    }\n    foreach $letter (split(//, $message)) {\n        if ($letter\
    \ =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n            $j++;\n\
    \        } else {\n            $new_message .= $alphabet[$k];\n            $k++;\n\
    \        }\n    }\n    foreach $letter (split(//, $message)) {\n        if ($letter\
    \ =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n            $j++;\n\
    \        } else {\n            $new_message .= $alphabet[$k];\n            $k++;\n\
    \        }\n    }\n    foreach $letter (split(//, $message)) {\n        if ($letter\
    \ =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n            $j++;\n\
    \        } else {\n            $new_message .= $alphabet[$k];\n            $k++;\n\
    \        }\n    }\n    foreach $letter (split(//, $message)) {\n        if ($letter\
    \ =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n            $j++;\n\
    \        } else {\n            $new_message .= $alphabet[$k];\n            $k++;\n\
    \        }\n    }\n    foreach $letter (split(//, $message)) {\n        if ($letter\
    \ =~ /[aeiou]/) {\n            $new_message .= $alphabet[$j];\n            $j++;\n\
    \        } else {\n            $new_message .= $alphabet[$k];\n            $k++;\n\
    \        }\n    }\n    foreach $letter (split(//, $message)) {\n        if ($letter\
    \ =~ /[", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels\
    \ = \"AEIOU\";\n    my $output = '';\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $vowel_position = 0;\n    my $vowel_position2 = 0;\n    my $letter;\n\
    \    my $letter2;\n    my $letter3;\n    my $letter4;\n    my $letter5;\n    my\
    \ $letter6;\n    my $letter7;\n    my $letter8;\n    my $letter9;\n    my $letter10;\n\
    \    my $letter11;\n    my $letter12;\n    my $letter13;\n    my $letter14;\n\
    \    my $letter15;\n    my $letter16;\n    my $letter17;\n    my $letter18;\n\
    \    my $letter19;\n    my $letter20;\n    my $letter21;\n    my $letter22;\n\
    \    my $letter23;\n    my $letter24;\n    my $letter25;\n    my $letter26;\n\
    \    my $letter27;\n    my $letter28;\n    my $letter29;\n    my $letter30;\n\
    \    my $letter31;\n    my $letter32;\n    my $letter33;\n    my $letter34;\n\
    \    my $letter35;\n    my $letter36;\n    my $letter37;\n    my $letter38;\n\
    \    my $letter39;\n    my $letter40;\n    my $letter41;\n    my $letter42;\n\
    \    my $letter43;\n    my $letter44;\n    my $letter45;\n    my $letter46;\n\
    \    my $letter47;\n    my $letter48;\n    my $letter49;\n    my $letter50;\n\
    \    my $letter51;\n    my $letter52;\n    my $letter53;\n    my $letter54;\n\
    \    my $letter55;\n    my $letter56;\n    my $letter57;\n    my $letter58;\n\
    \    my $letter59;\n    my $letter60;\n    my $letter61;\n    my $letter62;\n\
    \    my $letter63;\n    my $letter64;\n    my $letter65;\n    my $letter66;\n\
    \    my $letter67;\n    my $letter68;\n    my $letter69;\n    my $letter70;\n\
    \    my $letter71;\n    my $letter72;\n    my $letter73;\n    my $letter74;\n\
    \    my $letter75;\n    my $letter76;\n    my $letter77;\n    my $letter78;\n\
    \    my $letter", "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n\
    \    $message =~ s/[ae", "    my $alphabet = qw(a b c d e f g h i j k l m n o\
    \ p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    foreach my $letter (split(//, $message)) {\n  \
    \      if ($letter eq \"_\") {\n            $new_message .= $letter;\n       \
    \ } else {\n            $new_message .= $alphabet[$i] if ($i < (length($alphabet)\
    \ - 1));\n            $new_message .= $alphabet[$i + 1] if ($i < (length($alphabet)\
    \ - 2));\n            $new_message .= $letter;\n            $i++;\n        }\n\
    \    }\n    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\n\
    I like your solution, but I believe it can be simplified a bit. For example, `my\
    \ $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);` can be\
    \ replaced with `my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z _);`\n<|/ c |>\n<| c |>\nYes, that would simplify it a bit. Thanks for\
    \ the suggestion.\n<|/ c |>\n<| c |>\nI like the idea of using a hash to map the\
    \ letters to their positions. I didn't think of that. Thanks!\n<|/ c |>\n<| c\
    \ |>\nI added a solution that uses `substr` instead of `split` which might be\
    \ more efficient.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>", "    my $alphabet\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels =\
    \ qw(a e i o u);\n    my $consonants = qw(g h k l m n p q r s t v w x y z);\n\
    \    my $vowel_positions = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my\
    \ $consonant_positions = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my $consonant_positions_2\
    \ = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my $vowel_positions_2 = map\
    \ { $alphabet[$_] => $_ } 0..$#alphabet;\n    my $vowel_positions_3 = map { $alphabet[$_]\
    \ => $_ } 0..$#alphabet;\n    my $vowel_positions_4 = map { $alphabet[$_] => $_\
    \ } 0..$#alphabet;\n    my $vowel_positions_5 = map { $alphabet[$_] => $_ } 0..$#alphabet;\n\
    \    my $vowel_positions_6 = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my\
    \ $vowel_positions_7 = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my $vowel_positions_8\
    \ = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my $vowel_positions_9 = map\
    \ { $alphabet[$_] => $_ } 0..$#alphabet;\n    my $vowel_positions_10 = map { $alphabet[$_]\
    \ => $_ } 0..$#alphabet;\n    my $vowel_positions_11 = map { $alphabet[$_] =>\
    \ $_ } 0..$#alphabet;\n    my $vowel_positions_12 = map { $alphabet[$_] => $_\
    \ } 0..$#alphabet;\n    my $vowel_positions_13 = map { $alphabet[$_] => $_ } 0..$#alphabet;\n\
    \    my $vowel_positions_14 = map { $alphabet[$_] => $_ } 0..$#alphabet;\n   \
    \ my $vowel_positions_15 = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my\
    \ $vowel_positions_16 = map { $alphabet[$_] => $_ } 0..$#alphabet;\n    my $vowel_positions_17\
    \ = map { $alphabet[$_] => $_ } ", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new = \"\";\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = length($message);\n    while($i < $l) {\n\
    \        my $letter = $message[$i];\n        my $pos = index($alphabet, $letter);\n\
    \        if($pos > -1) {\n            $letter = $alphabet[$pos];\n        }\n\
    \        while($j < $l) {\n            my $letter2 = $message[$j];\n         \
    \   my $pos2 = index($alphabet, $letter2);\n            if($pos2 > -1) {\n   \
    \             $letter2 = $alphabet[$pos2];\n            }\n            while($k\
    \ < $l) {\n                my $letter3 = $message[$k];\n                my $pos3\
    \ = index($alphabet, $letter3);\n                if($pos3 > -1) {\n          \
    \          $letter3 = $alphabet[$pos3];\n                }\n                while($l\
    \ > 1) {\n                    my $letter4 = $message[$l-1];\n                \
    \    my $pos4 = index($alphabet, $letter4);\n                    if($pos4 > -1)\
    \ {\n                        $letter4 = $alphabet[$pos4];\n                  \
    \  }\n                    $new .= $letter;\n                    $l--;\n      \
    \          }\n                $new .= $letter2;\n                $k++;\n     \
    \       }\n            $new .= $letter3;\n            $j++;\n        }\n     \
    \   $new .= $letter;\n        $i++;\n    }\n    return $new;\n}", "    \n    my\
    \ @letters = split(//, $message);\n    \n    my $i = 0;\n    \n    foreach my\
    \ $letter (@letters) {\n        if ($letter eq 'a') {\n            $letters[$i]\
    \ = $letters[$i + 1];\n        }\n        elsif ($letter eq 'e') {\n         \
    \   $letters[$i] = $letters[$i + 2];\n        }\n        elsif ($letter eq 'i')\
    \ {\n            $letters[$i] = $letters[$i + 1];\n        }\n        elsif ($letter\
    \ eq 'o') {\n            $letters[$i] = $letters[$i + 2];\n        }\n       \
    \ elsif ($letter eq 'u') {\n            $letters[$i] = $letters[$i + 1];\n   \
    \     }\n        elsif ($letter eq 'y') {\n            $letters[$i] = $letters[$i\
    \ + 2];\n        }\n        elsif ($letter eq 'A') {\n            $letters[$i]\
    \ = $letters[$i + 1];\n        }\n        elsif ($letter eq 'E') {\n         \
    \   $letters[$i] = $letters[$i + 2];\n        }\n        elsif ($letter eq 'I')\
    \ {\n            $letters[$i] = $letters[$i + 1];\n        }\n        elsif ($letter\
    \ eq 'O') {\n            $letters[$i] = $letters[$i + 2];\n        }\n       \
    \ elsif ($letter eq 'U') {\n            $letters[$i] = $letters[$i + 1];\n   \
    \     }\n        elsif ($letter eq 'Y') {\n            $letters[$i] = $letters[$i\
    \ + 2];\n        }\n        elsif ($letter eq 'a') {\n            $letters[$i]\
    \ = $letters[$i + 1];\n        }\n        elsif ($letter eq 'e') {\n         \
    \   $letters[$i] = $letters[$i + 2];\n        }\n        elsif ($letter eq 'i')\
    \ {\n            $letters[$i] = $letters[$i + 1];\n        }\n        elsif ($letter\
    \ eq 'o') {\n            $letters[$i] = $letters[$i + 2];\n        }\n       \
    \ elsif ($letter eq 'u') {\n            $letters[$i] = $letters[$i + 1];\n   \
    \     }\n        elsif ($letter eq 'y') {\n            $letters[$i] = $letters[$i\
    \ + 2];\n        }\n        elsif ($letter eq 'A') {\n            $letters[$i]\
    \ = $letters[$i + 1];\n        }\n        elsif ($letter eq 'E') {\n", "    my\
    \ $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n \
    \   my $result = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = length($message);\n    while($i < $l) {\n        my $letter = $message[$i];\n\
    \        if($letter eq \"A\") {\n            $letter = $alphabet[$j];\n      \
    \      $j++;\n        } elsif($letter eq \"E\") {\n            $letter = $alphabet[$j+1];\n\
    \            $j++;\n        } elsif($letter eq \"I\") {\n            $letter =\
    \ $alphabet[$j+2];\n            $j++;\n        } elsif($letter eq \"O\") {\n \
    \           $letter = $alphabet[$j+3];\n            $j++;\n        } elsif($letter\
    \ eq \"U\") {\n            $letter = $alphabet[$j+4];\n            $j++;\n   \
    \     } elsif($letter eq \"Y\") {\n            $letter = $alphabet[$j+5];\n  \
    \          $j++;\n        } elsif($letter eq \"a\") {\n            $letter = $alphabet[$j+6];\n\
    \            $j++;\n        } elsif($letter eq \"e\") {\n            $letter =\
    \ $alphabet[$j+7];\n            $j++;\n        } elsif($letter eq \"i\") {\n \
    \           $letter = $alphabet[$j+8];\n            $j++;\n        } elsif($letter\
    \ eq \"o\") {\n            $letter = $alphabet[$j+9];\n            $j++;\n   \
    \     } elsif($letter eq \"u\") {\n            $letter = $alphabet[$j+10];\n \
    \           $j++;\n        } elsif($letter eq \"y\") {\n            $letter =\
    \ $alphabet[$j+11];\n            $j++;\n        } elsif($letter eq \"!\") {\n\
    \            $letter = $alphabet[$j+12];\n            $j++;\n        } elsif($letter\
    \ eq \"\\\"\") {\n            $letter = $alphabet[$j+13];\n            $j++;\n\
    \        } elsif($letter eq \"#\") {\n            $letter = $alphabet[$j+14];\n\
    \            $j++;\n        } elsif($letter eq \"$\") {\n            $letter =\
    \ $alphabet[$j+15];\n            $j++;\n        } elsif($letter eq \"%\") {\n\
    \            $letter = $alphabet[$j+16];\n            $j++;\n        } elsif($letter\
    \ eq \"&\") {\n            $letter = $alphabet[$j+17];\n            $j++;\n  \
    \      } elsif($letter eq \"'\") {\n            $letter = $alphabet[$j", "   \
    \ my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n  \
    \  my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        }\n        else {\n            $new_message .= $letter;\n     \
    \   }\n    }\n    \n    foreach my $vowel (split //, $vowels) {\n        $new_message\
    \ .= substr($alphabet, index($alphabet, $vowel) + 1, 1);\n    }\n    \n    return\
    \ $new_message;\n}", "    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n\
    \    $message =~ tr/aeiouAEIOU/aeiou/;\n    return $message;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>", "    my $result = \"\";\n    my $vowels\
    \ = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my\
    \ $vowels_index = index($vowels, $message);\n    my $letters_index = index($letters,\
    \ $message);\n    my $vowel_letter = $letters[$vowels_index + 1];\n    my $letter_letter\
    \ = $letters[$letters_index + 1];\n    my $vowel_letter_2 = $letters[$vowels_index\
    \ + 2];\n    my $letter_letter_2 = $letters[$letters_index + 2];\n    my $i =\
    \ 0;\n    while ($i < length($message)) {\n        if ($message[$i] eq $letter_letter)\
    \ {\n            $result .= $letter_letter_2;\n            $i++;\n        } elsif\
    \ ($message[$i] eq $vowel_letter) {\n            $result .= $vowel_letter_2;\n\
    \            $i++;\n        } else {\n            $result .= $message[$i];\n \
    \           $i++;\n        }\n    }\n    return $result;\n}", "    my $message\
    \ = $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $vowels_2 = \"AEIOUaeiou\"\
    ;\n    my $vowels_3 = \"AEIOUaeiouAEIOU\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO",
  "    my $message = $message;\n    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n\
    \    $message =~ s/(.)\\1\\1/$1/;\n    return $message;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThanks for the answer! I didn't know about tr/A-Z/a-z/; and tr/aeiou/AEIOU/;.\
    \ Now I understand how it works.\n<|/ c |>\n<| a dscore=1 |>\n<code>", "    my\
    \ $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n \
    \   my $message = $message;\n    my $encoded = \"\";\n    my $index = 0;\n   \
    \ my $letter;\n    my $vowel;\n    my $vowel_position;\n    my $vowel_position2;\n\
    \    my $vowel_position3;\n    my $vowel_position4;\n    my $vowel_position5;\n\
    \    my $vowel_position6;\n    my $vowel_position7;\n    my $vowel_position8;\n\
    \    my $vowel_position9;\n    my $vowel_position10;\n    my $vowel_position11;\n\
    \    my $vowel_position12;\n    my $vowel_position13;\n    my $vowel_position14;\n\
    \    my $vowel_position15;\n    my $vowel_position16;\n    my $vowel_position17;\n\
    \    my $vowel_position18;\n    my $vowel_position19;\n    my $vowel_position20;\n\
    \    my $vowel_position21;\n    my $vowel_position22;\n    my $vowel_position23;\n\
    \    my $vowel_position24;\n    my $vowel_position25;\n    my $vowel_position26;\n\
    \    my $vowel_position27;\n    my $vowel_position28;\n    my $vowel_position29;\n\
    \    my $vowel_position30;\n    my $vowel_position31;\n    my $vowel_position32;\n\
    \    my $vowel_position33;\n    my $vowel_position34;\n    my $vowel_position35;\n\
    \    my $vowel_position36;\n    my $vowel_position37;\n    my $vowel_position38;\n\
    \    my $vowel_position39;\n    my $vowel_position40;\n    my $vowel_position41;\n\
    \    my $vowel_position42;\n    my $vowel_position43;\n    my $vowel_position44;\n\
    \    my $vowel_position45;\n    my $vowel_position46;\n    my $vowel_position47;\n\
    \    my $vowel_position48;\n    my $vowel_position49;\n    my $vowel_position50;\n\
    \    my $vowel_position51;\n    my $vowel_position52;\n    my $vowel_position53;\n\
    \    my $vowel_position54;\n    my $vowel_position55;\n    my $vowel_position56;\n\
    \    my $vowel_position57;\n    my $vowel_position58;\n    my $vowel_position59;\n\
    \    my $vowel", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\"\
    ;\n    \n    foreach my $letter (split //, $message) {\n        my $index = index($alphabet,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        }\n    }\n    \n    foreach my $letter (split //, $message) {\n\
    \        my $index = index($vowels, $letter);\n        if ($index != -1) {\n \
    \           $new_message .= $alphabet[$index + 1];\n        }\n    }\n    \n \
    \   return $new_message;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = length($message);\n\
    \    while($i < $l) {\n        my $letter = $message[$i];\n        my $new_letter\
    \ = $letter;\n        while($j < $l) {\n            my $letter2 = $message[$j];\n\
    \            if($letter2 eq $letter) {\n                $new_letter .= $alphabet[$k];\n\
    \                $j++;\n                $k++;\n            }\n            else\
    \ {\n                $new_letter .= $letter2;\n                $j++;\n       \
    \     }\n        }\n        $new_message .= $new_letter;\n        $i++;\n    }\n\
    \    return $new_message;\n}", "    my $message = $message;\n    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $vowels_2\
    \ = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOU\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n   \
    \ my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n\
    \    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU",
  "    \n    my $vowels = \"aeiou\";\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $result = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($vowels, $letter);\n        if ($index != -1) {\n\
    \            $letter = $alphabet[$index + 1];\n        }\n        $result .= $letter;\n\
    \    }\n    \n    return $result;\n}", "    my $alphabet = qw(a b c d e f g h\
    \ i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n   \
    \ my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n  \
    \  my $vowel_position = 0;\n    my $vowel_position2 = 0;\n    my $letter;\n  \
    \  foreach $letter (split(//, $message)) {\n        if ($letter eq \"a\") {\n\
    \            $new_message .= $alphabet[$i];\n            $i++;\n        } elsif\
    \ ($letter eq \"e\") {\n            $new_message .= $alphabet[$j];\n         \
    \   $j++;\n        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$k];\n\
    \            $k++;\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$i];\n            $i++;\n        } elsif ($letter eq \"u\") {\n\
    \            $new_message .= $alphabet[$j];\n            $j++;\n        } elsif\
    \ ($letter eq \"A\") {\n            $new_message .= $alphabet[$i];\n         \
    \   $i++;\n        } elsif ($letter eq \"E\") {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        } elsif ($letter eq \"I\") {\n            $new_message\
    \ .= $alphabet[$k];\n            $k++;\n        } elsif ($letter eq \"O\") {\n\
    \            $new_message .= $alphabet[$i];\n            $i++;\n        } elsif\
    \ ($letter eq \"U\") {\n            $new_message .= $alphabet[$j];\n         \
    \   $j++;\n        } elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$i];\n\
    \            $i++;\n        } elsif ($letter eq \"e\") {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        } elsif ($letter eq \"i\") {\n\
    \            $new_message .= $alphabet[$k];\n            $k++;\n        } elsif\
    \ ($letter eq \"o\") {\n            $new_message .= $alphabet[$i];\n         \
    \   $i++;\n        } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        } elsif ($letter eq \"A\") {\n            $new_message\
    \ .= $alphabet[$i];\n            $i++;", "    my $message = $message;\n    my\
    \ $vowels = \"aeiouAEIOU\";\n    my $vowels_2 = \"AEIOUaeiou\";\n    my $vowels_3\
    \ = \"AEIOUaeiouAEIOU\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\";\n    my\
    \ $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiouAEIOU]/./g;\n    $message\
    \ =~ s/.(.)\\1/$1/g;\n    return $message;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nI appreciate your efforts, but this doesn't answer the question. I'm looking\
    \ for a way to do this without using any modules. I already know how to do this\
    \ using modules. I'm looking for a way to do this without using any modules.\n\
    <|/ c |>\n<| c |>\nI appreciate your efforts, but this doesn't answer the question.\
    \ I'm looking for a way to do this without using any modules. I already know how\
    \ to do this using modules. I'm looking for a way to do this without using any\
    \ modules.\n<|/ c |>\n<| c |>\nI appreciate your efforts, but this doesn't answer\
    \ the question. I'm looking for a way to do this without using any modules. I\
    \ already know how to do this using modules. I'm looking for a way to do this\
    \ without using any modules.\n<|/ c |>\n<| c |>\nI appreciate your efforts, but\
    \ this doesn't answer the question. I'm looking for a way to do this without using\
    \ any modules. I already know how to do this using modules. I'm looking for a\
    \ way to do this without using any modules.\n<|/ c |>\n<| c |>\nI appreciate your\
    \ efforts, but this doesn't answer the question. I'm looking for a way to do this\
    \ without using any modules. I already know how to do this using modules. I'm\
    \ looking for a way to do this without using any modules.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>", "    my $result = \"\";\n    my $vowels = \"aeiou\";\n    my $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels_index = 0;\n    my $letters_index\
    \ = 0;\n    my $letters_index_in_vowels = 0;\n    my $vowels_index_in_letters\
    \ = 0;\n    my $vowels_index_in_letters_2 = 0;\n    my $letters_index_in_vowels_2\
    \ = 0; \n    my $letters_index_in_vowels_3 = 0; \n    my $letters_index_in_vowels_4\
    \ = 0; \n    my $letters_index_in_vowels_5 = 0; \n    my $letters_index_in_vowels_6\
    \ = 0; \n    my $letters_index_in_vowels_7 = 0; \n    my $letters_index_in_vowels_8\
    \ = 0; \n    my $letters_index_in_vowels_9 = 0; \n    my $letters_index_in_vowels_10\
    \ = 0; \n    my $letters_index_in_vowels_11 = 0; \n    my $letters_index_in_vowels_12\
    \ = 0; \n    my $letters_index_in_vowels_13 = 0; \n    my $letters_index_in_vowels_14\
    \ = 0; \n    my $letters_index_in_vowels_15 = 0; \n    my $letters_index_in_vowels_16\
    \ = 0; \n    my $letters_index_in_vowels_17 = 0; \n    my $letters_index_in_vowels_18\
    \ = 0; \n    my $letters_index_in_vowels_19 = 0; \n    my $letters_index_in_vowels_20\
    \ = 0; \n    my $letters_index_in_vowels_21 = 0; \n    my $letters_index_in_vowels_22\
    \ = 0; \n    my $letters_index_in_vowels_23 = 0; \n    my $letters_index_in_vowels_24\
    \ = 0; \n    my $letters_index_in_vowels_25 = 0; \n    my $letters_index_in_vowels_26\
    \ = 0; \n    my $letters_index_in_vowels_27 = 0; \n    my $letters_index_in_vowels_28\
    \ = 0; \n    my $letters_index_in_vowels_29 = 0; \n    my $letters_index_in_vowels_30\
    \ = 0; \n    my $letters_index_in_vowels_31 = 0; \n    my $letters_index_in_vowels_32\
    \ = 0; \n    my $letters_index_in_vowels_33 = 0; \n    my $letters_index_in_vowels_34\
    \ = 0; \n    my $letters_index_in_vowels_35 = 0; \n    my $letters_index_in_vowels_36\
    \ = 0; \n    my $letters_index_in_vowels_37 = 0; \n    my $letters_index_in_vowels_38\
    \ = 0; \n    my $letters_index_in_vowels_39 = 0; \n    my $letters_index_in_vowels_40\
    \ = 0; \n    my $letters_index_in_vowels_41 = 0; ", "    my $message = $message;\n\
    \    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiouAEIOU]//g;\n    $message\
    \ =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiou",
  "    \n    my $vowels = \"aeiouAEIOU\";\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    \n    my $new_message = \"\";\n    \n    foreach my $letter (split(//,\
    \ $message)) {\n        my $index = index($vowels, $letter);\n        if ($index\
    \ != -1) {\n            $new_message .= $alphabet[$index];\n        }\n      \
    \  else {\n            $new_message .= $letter;\n        }\n    }\n    \n    return\
    \ $new_message;\n}", "    my $message = $message;\n    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $vowels_2 = \"AEIOUaeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $letters_3 = \"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $letters_4 = \"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_5 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $letters_6 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_7 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $letters_8 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQ",
  "    my $message2 = \"\";\n    my $vowels = \"aeiou\";\n    my $vowels2;\n    my\
    \ $vowels3;\n    my $vowels4;\n    my $vowels5;\n    my $vowels6;\n    my $vowels7;\n\
    \    my $vowels8;\n    my $vowels9;\n    my $vowels10;\n    my $vowels11;\n  \
    \  my $vowels12;\n    my $vowels13;\n    my $vowels14;\n    my $vowels15;\n  \
    \  my $vowels16;\n    my $vowels17;\n    my $vowels18;\n    my $vowels19;\n  \
    \  my $vowels20;\n    my $vowels21;\n    my $vowels22;\n    my $vowels23;\n  \
    \  my $vowels24;\n    my $vowels25;\n    my $vowels26;\n    my $vowels27;\n  \
    \  my $vowels28;\n    my $vowels29;\n    my $vowels30;\n    my $vowels31;\n  \
    \  my $vowels32;\n    my $vowels33;\n    my $vowels34;\n    my $vowels35;\n  \
    \  my $vowels36;\n    my $vowels37;\n    my $vowels38;\n    my $vowels39;\n  \
    \  my $vowels40;\n    my $vowels41;\n    my $vowels42;\n    my $vowels43;\n  \
    \  my $vowels44;\n    my $vowels45;\n    my $vowels46;\n    my $vowels47;\n  \
    \  my $vowels48;\n    my $vowels49;\n    my $vowels50;\n    my $vowels51;\n  \
    \  my $vowels52;\n    my $vowels53;\n    my $vowels54;\n    my $vowels55;\n  \
    \  my $vowels56;\n    my $vowels57;\n    my $vowels58;\n    my $vowels59;\n  \
    \  my $vowels60;\n    my $vowels61;\n    my $vowels62;\n    my $vowels63;\n  \
    \  my $vowels64;\n    my $vowels65;\n    my $vowels66;\n    my $vowels67;\n  \
    \  my $vowels68;\n    my $vowels69;\n    my $vowels70;\n    my $vowels71;\n  \
    \  my $vowels72;\n    my $vowels73;\n    my $vowels74;\n    my $vowels75;\n  \
    \  my $", "    \n    my $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    \n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    \n    my $new_message\
    \ = \"\";\n    \n    while($i < length($message)) {\n        my $letter = $message[$i];\n\
    \        \n        if($letter eq \"a\") {\n            $new_message .= $letters[$j];\n\
    \            $j++;\n        }\n        elsif($letter eq \"e\") {\n           \
    \ $new_message .= $letters[$j+1];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"i\") {\n            $new_message .= $letters[$j+2];\n            $j++;\n\
    \        }\n        elsif($letter eq \"o\") {\n            $new_message .= $letters[$j+3];\n\
    \            $j++;\n        }\n        elsif($letter eq \"u\") {\n           \
    \ $new_message .= $letters[$j+4];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"y\") {\n            $new_message .= $letters[$j+5];\n            $j++;\n\
    \        }\n        elsif($letter eq \"a\") {\n            $new_message .= $letters[$k];\n\
    \            $k++;\n        }\n        elsif($letter eq \"e\") {\n           \
    \ $new_message .= $letters[$k+1];\n            $k++;\n        }\n        elsif($letter\
    \ eq \"i\") {\n            $new_message .= $letters[$k+2];\n            $k++;\n\
    \        }\n        elsif($letter eq \"o\") {\n            $new_message .= $letters[$k+3];\n\
    \            $k++;\n        }\n        elsif($letter eq \"u\") {\n           \
    \ $new_message .= $letters[$k+4];\n            $k++;\n        }\n        elsif($letter\
    \ eq \"y\") {\n            $new_message .= $letters[$k+5];\n            $k++;\n\
    \        }\n        elsif($letter eq \"a\") {\n            $new_message .= $letters[$j];\n\
    \            $j++;\n        }\n        elsif($letter eq \"e\") {\n           \
    \ $new_message .= $letters[$j+1];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"i\") {\n            $new_message .= $letters[$j+2];\n            $j++;\n\
    \        }\n        elsif", "    my $message = $message;\n    $message =~ tr/A-Z/a-z/;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[AEIOU]/[aeiou]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        }\n        else {\n            $new_message .= $letter;\n     \
    \   }\n    }\n    \n    foreach my $letter (split //, $new_message) {\n      \
    \  my $index = index($vowels, $letter);\n        if ($index != -1) {\n       \
    \     $new_message .= substr($alphabet, $index, 1);\n        }\n        else {\n\
    \            $new_message .= $letter;\n        }\n    }\n    \n    return $new_message;\n\
    }", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n  \
    \  my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my\
    \ $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach my $letter\
    \ (split //, $message) {\n        if ($letter eq \"a\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    e\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    u\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"a\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    e\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    u\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n\
    \        } elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"a\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ tr/aeiou/AEIOU/];\n        } elsif ($letter eq \"\
    e\") {\n            $new_message .= $alphabet[$alphabet =~ tr/aeiou/", "    my\
    \ $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my\
    \ $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $vowel_count = 0;\n    my $letter_count = 1;\n\
    \    my $letter;\n    my $vowel;\n    my $new_letter;\n    foreach $letter (split(//,\
    \ $message)) {\n        $letter_count++;\n        if ($letter_count > 2) {\n \
    \           $letter_count = 1;\n            $new_message .= $letter;\n       \
    \ } else {\n            $new_letter = $alphabet[$i];\n            $vowel_count\
    \ = 0;\n            foreach $vowel (split(//, $vowels)) {\n                if\
    \ ($letter eq $vowel) {\n                    $vowel_count++;\n               \
    \ }\n            }\n            if ($vowel_count > 1) {\n                $new_letter\
    \ = $alphabet[$j];\n                $j++;\n            }\n            $new_message\
    \ .= $new_letter;\n        }\n        $i++;\n    }\n    return $new_message;\n\
    }", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $new = \"\";\n    my $index = 0;\n    my $vowel_index = 0;\n    my $vowel_letter;\n\
    \    my $letter;\n    foreach $letter (split(//, $message)) {\n        if ($letter\
    \ eq \"A\") {\n            $vowel_letter = $alphabet[$vowel_index];\n        \
    \    $vowel_index++;\n        } elsif ($letter eq \"E\") {\n            $vowel_letter\
    \ = $alphabet[$vowel_index + 1];\n            $vowel_index++;\n        } elsif\
    \ ($letter eq \"I\") {\n            $vowel_letter = $alphabet[$vowel_index + 2];\n\
    \            $vowel_index++;\n        } elsif ($letter eq \"O\") {\n         \
    \   $vowel_letter = $alphabet[$vowel_index + 3];\n            $vowel_index++;\n\
    \        } elsif ($letter eq \"U\") {\n            $vowel_letter = $alphabet[$vowel_index\
    \ + 4];\n            $vowel_index++;\n        } else {\n            $vowel_letter\
    \ = $alphabet[$vowel_index];\n            $vowel_index++;\n        }\n       \
    \ $new .= $vowel_letter;\n    }\n    return $new;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThanks for your answer. I was trying to solve this problem using\
    \ regex but couldn't figure it out. Your solution is much more elegant than mine.\n\
    <|/ c |>\n<| c |>\nI added a regex solution as well. :)\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nuse strict;\nuse warnings;", "    my $alphabet = qw(a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n\
    \    my $new = \"\";\n    \n    foreach my $letter (split //, $message) {\n  \
    \      my $index = index($alphabet, $letter);\n        if ($index != -1) {\n \
    \           $new .= $alphabet[$index + 1];\n        }\n    }\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($vowels, $letter);\n\
    \        if ($index != -1) {\n            $new .= $alphabet[$index + 1];\n   \
    \     }\n    }\n    \n    return $new;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thanks so much for this. I really appreciate it. I will try this out and see how\
    \ it goes. Thanks again!\n<|/ c |>\n<| c |>\nI added a test case to my original\
    \ post. I am getting an \"index out of range\" error when I run this code. I am\
    \ not sure why this is happening. Any ideas?\n<|/ c |>\n<| c |>\nI added a test\
    \ case to my original post. I am getting an \"index out of range\" error when\
    \ I run this code. I am not sure why this is happening. Any ideas?\n<|/ c |>\n\
    <| c |>\nI added a test case to my original post. I am getting an \"index out\
    \ of range\" error when I run this code. I am not sure why this is happening.\
    \ Any ideas?\n<|/ c |>\n<| c |>\nI added a test case to my original post. I am\
    \ getting an \"index out of range\" error when I run this code. I am not sure\
    \ why this is happening. Any ideas?\n<|/ c |>\n<| a dscore=0 |>\n<code>", "  \
    \  $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message\
    \ =~ s/[AEIOU]/[aeiou]/gi;\n    return $message;\n}", "    \n    my $messageLength\
    \ = length($message);\n    \n    my $encodedMessage = \"\";\n    \n    my $vowels\
    \ = \"aeiouAEIOU\";\n    \n    my $letterIndex = 0;\n    \n    my $letter;\n \
    \   \n    my $vowelIndex = 0;\n    \n    my $vowel;\n    \n    my $letterIndex2\
    \ = 0;\n    \n    my $letter2;\n    \n    my $vowelIndex2 = 0;\n    \n    my $vowel2;\n\
    \    \n    my $letterIndex3 = 0;\n    \n    my $letter3;\n    \n    my $vowelIndex3\
    \ = 0;\n    \n    my $vowel3;\n    \n    my $letterIndex4 = 0;\n    \n    my $letter4;\n\
    \    \n    my $vowelIndex4 = 0;\n    \n    my $vowel4;\n    \n    my $letterIndex5\
    \ = 0;\n    \n    my $letter5;\n    \n    my $vowelIndex5 = 0;\n    \n    my $vowel5;\n\
    \    \n    my $letterIndex6 = 0;\n    \n    my $letter6;\n    \n    my $vowelIndex6\
    \ = 0;\n    \n    my $vowel6;\n    \n    my $letterIndex7 = 0;\n    \n    my $letter7;\n\
    \    \n    my $vowelIndex7 = 0;\n    \n    my $vowel7;\n    \n    my $letterIndex8\
    \ = 0;\n    \n    my $letter8;\n    \n    my $vowelIndex8 = 0;\n    \n    my $vowel8;\n\
    \    \n    my $letterIndex9 = 0;\n    \n    my $letter9;\n    \n    my $vowelIndex9\
    \ = 0;\n    \n    my $vowel9;\n    \n    my $letterIndex10 = 0;\n    \n    my\
    \ $letter10;\n    \n    my $vowelIndex10 = 0;\n    \n    my $vowel10;\n    \n\
    \    my $letterIndex11 = 0;\n    \n    my $letter11;\n    \n    my $vowelIndex11\
    \ = 0;\n    \n    my $vowel11;\n    \n    my $letterIndex12 = 0;\n    \n    my\
    \ $letter12;\n    \n    my $vowelIndex12 = 0;\n    \n    my $vowel12;\n    \n\
    \    my $letterIndex13 = 0;\n    \n    my $letter13;\n    \n    my $vowelIndex13\
    \ = 0;\n    \n    my $vowel13;\n    \n    my $letterIndex14 = 0;\n    \n    my\
    \ $letter14;\n    \n    my $vowelIndex14 = 0;\n    \n    my $vowel14;\n    \n\
    \    my $letterIndex15 = 0;\n    \n    my $letter15;\n    \n    my $vowelIndex15\
    \ = 0;\n    \n    my $vowel15;\n    \n    my $letterIndex16 = 0;\n    \n", " \
    \   \n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    \n    my\
    \ $new_message = \"\";\n    \n    foreach my $letter (split //, $message) {\n\
    \        my $letter_pos = index($vowels, $letter);\n        if ($letter_pos >\
    \ 0) {\n            $new_message .= substr($vowels_2, $letter_pos - 1, 1);\n \
    \       }\n        $new_message .= $letter;\n    }\n    \n    return $new_message;\n\
    }", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $newMessage = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $newMessage .= substr($alphabet, $index, 1);\n        }\n   \
    \     else {\n            $newMessage .= $letter;\n        }\n    }\n    \n  \
    \  foreach my $vowel (split(//, $vowels)) {\n        $newMessage .= substr($alphabet,\
    \ index($alphabet, $vowel) + 2, 1);\n    }\n    \n    return $newMessage;\n}",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n    $message =~\
    \ tr/aeiouAEIOU/aeiouAEIOU/;\n    return $message;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThis doesn't work. `tr/aeiouAEIOU/aeiouAEIOU/` replaces every vowel\
    \ with itself.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. It replaces\
    \ every vowel with itself. Try it with `tr/aeiouAEIOU/aeiouAEIOU/;` instead of\
    \ `tr/aeiouAEIOU/aeiouAEIOU/;`.\n<|/ c |>\n<| c |>\nOh, I see what you mean. Yes,\
    \ it does work. Sorry, I missed the `;` at the end of the substitution line. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| c |>\nI added a note about that to the\
    \ answer.\n<|/ c |>\n<| c |>\nI added a note about that to the answer.\n<|/ c\
    \ |>\n<| a |>\n<code>\nmy $str = \"This is a message\";\n$str =~ tr/aeiouAEIOU/AEIOUaeiou/;\n\
    print $str;\n</code>\n<|/ a tags=perl,regex dscore=3 |>\n<| c |>\nThis doesn't\
    \ work. `tr/aeiouAEIOU/aeiouAEIOU/` replaces every vowel with itself.\n<|/ c |>\n\
    <| c |>\nIt does work. Try it yourself. It replaces every vowel with itself. Try\
    \ it with `tr/aeiouAEIOU/aeiouAEIOU/;` instead of `tr/aeiouAEIOU/aeiouAEIOU/;`.\n\
    <|/ c |>\n<| c |>\nI added a note about that to the answer.\n<|/ c |>\n<| c |>\n\
    I added a note about that to the answer.\n<|/ c |>\n<| a tags=perl,regex |>\n\
    <code>\n$str =~ tr/aeiouAEIOU/AEIOUaeiou/;\n</code>\n<|/ a dscore=3 |>\n<| c |>\n\
    This doesn't work. `tr/aeiouAEIOU/aeiouAEIOU/` replaces every vowel with itself.\n\
    <|/ ", "    my $vowels = \"aeiouAEIOU\";\n    my $new_message = \"\";\n    my\
    \ $index = 0;\n    my $letter;\n    foreach $letter (split //, $message) {\n \
    \       if ($letter eq \"a\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"e\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"i\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"o\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"u\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"A\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"E\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"I\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"O\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"U\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"a\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"e\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"i\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"o\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"u\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"A\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"E\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"I\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"O\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"U\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"a\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"e\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"i\") {\n            $new_message .= $letter;\n      \
    \  } elsif ($letter eq \"o\") {\n            $new_message .= ", "    \n    my\
    \ @vowels = qw(a e i o u);\n    \n    my $message2 = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $pos = index($letter, $vowels[0]);\n\
    \        if ($pos > 0) {\n            $letter = substr($letter, 0, $pos);\n  \
    \      }\n        \n        my $pos = index($letter, $vowels[1]);\n        if\
    \ ($pos > 0) {\n            $letter = substr($letter, 0, $pos);\n        }\n \
    \       \n        $message2 .= $letter;\n    }\n    \n    return $message2;\n}",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new_message .= substr($alphabet, $index, 1);\n        }\n  \
    \  }\n    \n    foreach my $letter (split(//, $message)) {\n        my $index\
    \ = index($alphabet, $letter);\n        if ($index != -1) {\n            $new_message\
    \ .= substr($alphabet, $index, 1);\n        }\n    }\n    \n    foreach my $letter\
    \ (split(//, $message)) {\n        my $index = index($alphabet, $letter);\n  \
    \      if ($index != -1) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        }\n    }\n    \n    foreach my $letter (split(//, $message)) {\n\
    \        my $index = index($alphabet, $letter);\n        if ($index != -1) {\n\
    \            $new_message .= substr($alphabet, $index, 1);\n        }\n    }\n\
    \    \n    foreach my $letter (split(//, $message)) {\n        my $index = index($alphabet,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= substr($alphabet,\
    \ $index, 1);\n        }\n    }\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new_message .= substr($alphabet, $index, 1);\n        }\n  \
    \  }\n    \n    foreach my $letter (split(//, $message)) {\n        my $index\
    \ = index($alphabet, $letter);\n        if ($index != -1) {\n            $new_message\
    \ .= substr($alphabet, $index, 1);\n        }\n    }\n    \n    foreach my $letter\
    \ (split(//, $message)) {\n        my $index = index($alphabet, $letter);\n  \
    \      if ($index != -1) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        }\n    }\n    \n    foreach my $letter (split(//, $message)) {\n\
    \        my $index = index($alphabet, $letter);\n        if ($index != -1) {\n\
    \            $new_message .= substr($alphabet, $index, 1);\n        }\n    }\n\
    \    \n    foreach my $letter (split(//, $message)) {\n        my $index = index($alphabet,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= substr($alphabet,\
    \ $index, 1);\n        }\n    }\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $", "    my $message = $message;\n \
    \   my $vowels = \"AEIOUaeiou\";\n    my $vowels_2 = \"AEIOUaeiou\";\n    my $vowels_3\
    \ = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiou\";\n    my $vowels_5 = \"\
    AEIOUaeiou\";\n    my $vowels_6 = \"AEIOUaeiou\";\n    my $vowels_7 = \"AEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiou\";\n    my $vowels_9 = \"AEIOUaeiou\";\n  \
    \  my $vowels_10 = \"AEIOUaeiou\";\n    my $vowels_11 = \"AEIOUaeiou\";\n    my\
    \ $vowels_12 = \"AEIOUaeiou\";\n    my $vowels_13 = \"AEIOUaeiou\";\n    my $vowels_14\
    \ = \"AEIOUaeiou\";\n    my $vowels_15 = \"AEIOUaeiou\";\n    my $vowels_16 =\
    \ \"AEIOUaeiou\";\n    my $vowels_17 = \"AEIOUaeiou\";\n    my $vowels_18 = \"\
    AEIOUaeiou\";\n    my $vowels_19 = \"AEIOUaeiou\";\n    my $vowels_20 = \"AEIOUaeiou\"\
    ;\n    my $vowels_21 = \"AEIOUaeiou\";\n    my $vowels_22 = \"AEIOUaeiou\";\n\
    \    my $vowels_23 = \"AEIOUaeiou\";\n    my $vowels_24 = \"AEIOUaeiou\";\n  \
    \  my $vowels_25 = \"AEIOUaeiou\";\n    my $vowels_26 = \"AEIOUaeiou\";\n    my\
    \ $vowels_27 = \"AEIOUaeiou\";\n    my $vowels_28 = \"AEIOUaeiou\";\n    my $vowels_29\
    \ = \"AEIOUaeiou\";\n    my $vowels_30 = \"AEIOUaeiou\";\n    my $vowels_31 =\
    \ \"AEIOUaeiou\";\n    my $vowels_32 = \"AEIOUaeiou\";\n    my $vowels_33 = \"\
    AEIOUaeiou\";\n    my $vowels_34 = \"AEIOUaeiou\";\n    my $vowels_35 = \"AEIOUaeiou\"\
    ;\n    my $vowels_36 = \"AEIOUaeiou\";\n    my $vowels_37 = \"AEIOUaeiou\";\n\
    \    my $vowels_38 = \"AEIOUaeiou\";\n    my $vowels_39 = \"AEIOUaeiou", "   \
    \ my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n\
    \    my $new_message = \"\";\n    my $index = 0;\n    my $vowel_index = 0;\n \
    \   my $vowel_letter;\n    my $letter;\n    foreach $letter (split(//, $message))\
    \ {\n        if ($letter eq \"a\") {\n            $new_message .= $alphabet[$index];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        }\n        elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$index + 2];\n        }\n        elsif ($letter eq \"o\") {\n \
    \           $new_message .= $alphabet[$index + 3];\n        }\n        elsif ($letter\
    \ eq \"u\") {\n            $new_message .= $alphabet[$index + 4];\n        }\n\
    \        elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$index\
    \ + 5];\n        }\n        elsif ($letter eq \"A\") {\n            $new_message\
    \ .= $alphabet[$index + 6];\n        }\n        elsif ($letter eq \"E\") {\n \
    \           $new_message .= $alphabet[$index + 7];\n        }\n        elsif ($letter\
    \ eq \"I\") {\n            $new_message .= $alphabet[$index + 8];\n        }\n\
    \        elsif ($letter eq \"O\") {\n            $new_message .= $alphabet[$index\
    \ + 9];\n        }\n        elsif ($letter eq \"U\") {\n            $new_message\
    \ .= $alphabet[$index + 10];\n        }\n        elsif ($letter eq \"Y\") {\n\
    \            $new_message .= $alphabet[$index + 11];\n        }\n        elsif\
    \ ($letter eq \"a\") {\n            $new_message .= $alphabet[$index + 12];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$index\
    \ + 13];\n        }\n        elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$index + 14];\n        }\n        elsif ($letter eq \"o\") {\n\
    \            $new_message .= $alphabet[$index + 15];\n        }\n        elsif\
    \ ($letter eq \"u\") {\n            $new_message .= $alphabet[$index + 16];\n\
    \        }\n        elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$index\
    \ + 17];\n        }\n        ", "    my $alphabet = qw(a b c d e f g h i j k l\
    \ m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $newMessage\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        my $index\
    \ = index($alphabet, $letter);\n        if ($index != -1) {\n            $newMessage\
    \ .= $alphabet[$index + 1];\n        }\n    }\n    \n    foreach my $vowel (split\
    \ //, $vowels) {\n        $newMessage .= $vowel;\n    }\n    \n    return $newMessage;\n\
    }", "    my $message = $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $new_message = \"\";\n    my $i =\
    \ 0;\n    my $j = 0;\n    my $k = 0;\n    my $vowel_found = 0;\n    my $letter_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowels_found = 0;\n    my $letters_found = 0;\n    my $vowels_found\
    \ = 0;\n    my $letters_found = 0;\n    my $vowels_found = 0;\n    my $letters_found\
    \ = 0;\n    my $vowel", "    \n    my @letters = split(//, $message);\n    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n  \
    \  my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    \n    foreach my $letter\
    \ (@letters) {\n        if ($letter eq \"A\") {\n            $letters[$i] = $letters[$j];\n\
    \            $i++;\n        }\n        if ($letter eq \"B\") {\n            $letters[$i]\
    \ = $letters[$k];\n            $i++;\n        }\n        if ($letter eq \"C\"\
    ) {\n            $letters[$i] = $letters[$l];\n            $i++;\n        }\n\
    \        if ($letter eq \"D\") {\n            $letters[$i] = $letters[$m];\n \
    \           $i++;\n        }\n        if ($letter eq \"E\") {\n            $letters[$i]\
    \ = $letters[$n];\n            $i++;\n        }\n        if ($letter eq \"F\"\
    ) {\n            $letters[$i] = $letters[$o];\n            $i++;\n        }\n\
    \        if ($letter eq \"G\") {\n            $letters[$i] = $letters[$p];\n \
    \           $i++;\n        }\n        if ($letter eq \"H\") {\n            $letters[$i]\
    \ = $letters[$q];\n            $i++;\n        }\n        if ($letter eq \"I\"\
    ) {\n            $letters[$i] = $letters[$r];\n            $i++;\n        }\n\
    \        if ($letter eq \"J\") {\n            $letters[$i] = $letters[$s];\n \
    \           $i++;\n        }\n        if ($letter eq \"K\") {\n            $letters[$i]\
    \ = $letters[$t];\n            $i++;\n        }\n        if ($letter eq \"L\"\
    ) {\n            $letters[$i] = $letters[$u];\n            $i++;\n        }\n\
    \        if ($letter eq \"M\") {\n            $letters[$i] = $letters[$v];\n \
    \           $i++;\n        }\n        if ($letter eq \"N\") {\n            $letters[$i]\
    \ = $letters[$w];\n            $i++;\n        }\n        if ($letter eq \"O\"\
    ) {\n            $letters[$i] = $letters[$x];\n            $i++;\n        }\n\
    \        if ($letter eq \"P\") {\n            $letters[$i] = ", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = length($message);\n\
    \    while($i < $l) {\n        if($message[$i] eq \"A\") {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        }\n        elsif($message[$i]\
    \ eq \"E\") {\n            $new_message .= $alphabet[$j+1];\n            $j++;\n\
    \        }\n        elsif($message[$i] eq \"I\") {\n            $new_message .=\
    \ $alphabet[$j+2];\n            $j++;\n        }\n        elsif($message[$i] eq\
    \ \"O\") {\n            $new_message .= $alphabet[$j+3];\n            $j++;\n\
    \        }\n        elsif($message[$i] eq \"U\") {\n            $new_message .=\
    \ $alphabet[$j+4];\n            $j++;\n        }\n        elsif($message[$i] eq\
    \ \"a\") {\n            $new_message .= $alphabet[$j+1];\n            $j++;\n\
    \        }\n        elsif($message[$i] eq \"e\") {\n            $new_message .=\
    \ $alphabet[$j+2];\n            $j++;\n        }\n        elsif($message[$i] eq\
    \ \"i\") {\n            $new_message .= $alphabet[$j+3];\n            $j++;\n\
    \        }\n        elsif($message[$i] eq \"o\") {\n            $new_message .=\
    \ $alphabet[$j+4];\n            $j++;\n        }\n        elsif($message[$i] eq\
    \ \"u\") {\n            $new_message .= $alphabet[$j+5];\n            $j++;\n\
    \        }\n        elsif($message[$i] eq \"B\") {\n            $new_message .=\
    \ $alphabet[$j+6];\n            $j++;\n        }\n        elsif($message[$i] eq\
    \ \"C\") {\n            $new_message .= $alphabet[$j+7];\n            $j++;\n\
    \        }\n        elsif($message[$i] eq \"D\") {\n            $new_message .=\
    \ $alphabet[$j+8];\n            $j++;\n        }\n        elsif($message[$i] eq\
    \ \"F\") {\n            $new_message .= $alphabet[$j+9];\n            $j++;\n\
    \        }\n        elsif($message[$i] eq \"", "    \n    # Write your code here.\n\
    \    \n    return $message;\n}", "    $message =~ tr/A-Z/a-z/;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~\
    \ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[ae", "    my $alphabet = qw(a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o\
    \ u);\n    my $new_message = \"\";\n    \n    foreach my $letter (split(//, $message))\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new_message .= $alphabet[$index + 1];\n        }\n    }\n  \
    \  \n    foreach my $letter (split(//, $message)) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= $alphabet[$index\
    \ + 2];\n        }\n    }\n    \n    return $new_message;\n}", "    my $message\
    \ = $message;\n    my $vowels = \"aeiou\";\n    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels_positions = $vowels =~ /[aeiou]/gi;\n    my $vowels_positions_2\
    \ = $vowels_positions + 2;\n    my $vowels_positions_3 = $vowels_positions + 3;\n\
    \    my $vowels_positions_4 = $vowels_positions + 4;\n    my $vowels_positions_5\
    \ = $vowels_positions + 5;\n    my $vowels_positions_6 = $vowels_positions + 6;\n\
    \    my $vowels_positions_7 = $vowels_positions + 7;\n    my $vowels_positions_8\
    \ = $vowels_positions + 8;\n    my $vowels_positions_9 = $vowels_positions + 9;\n\
    \    my $vowels_positions_10 = $vowels_positions + 10;\n    my $vowels_positions_11\
    \ = $vowels_positions + 11;\n    my $vowels_positions_12 = $vowels_positions +\
    \ 12;\n    my $vowels_positions_13 = $vowels_positions + 13;\n    my $vowels_positions_14\
    \ = $vowels_positions + 14;\n    my $vowels_positions_15 = $vowels_positions +\
    \ 15;\n    my $vowels_positions_16 = $vowels_positions + 16;\n    my $vowels_positions_17\
    \ = $vowels_positions + 17;\n    my $vowels_positions_18 = $vowels_positions +\
    \ 18;\n    my $vowels_positions_19 = $vowels_positions + 19;\n    my $vowels_positions_20\
    \ = $vowels_positions + 20;\n    my $vowels_positions_21 = $vowels_positions +\
    \ 21;\n    my $vowels_positions_22 = $vowels_positions + 22;\n    my $vowels_positions_23\
    \ = $vowels_positions + 23;\n    my $vowels_positions_24 = $vowels_positions +\
    \ 24;\n    my $vowels_positions_25 = $vowels_positions + 25;\n    my $vowels_positions_26\
    \ = $vowels_positions + 26;\n    my $vowels_positions_27 = $vowels_positions +\
    \ 27;\n    my $vowels_positions_28 = $vowels_positions + 28;\n    my $vowels_positions_29\
    \ = $vowels_positions + 29;\n    my $vowels_positions_30 = $vowels_positions +\
    \ 30;\n    my $vowels_positions_31 = $vowels_positions + 31;\n    my $vowels_positions_32\
    \ = $vowels_positions + 32;\n    my $vowels_positions_33 = $vowels_positions + ",
  "    my $alphabet = qw(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z);\n \
    \   my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            my $vowel_index = index($vowels, $letter);\n\
    \            if ($vowel_index != -1) {\n                $new_message .= substr($alphabet,\
    \ $vowel_index + 1, 1) . \n                    substr($alphabet, $index, 1);\n\
    \            } else {\n                $new_message .= substr($alphabet, $index\
    \ + 1, 1);\n            }\n        } else {\n            $new_message .= $letter;\n\
    \        }\n    }\n    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nI like your solution, although it does require a lot of extra code\
    \ (as I mentioned in my comment to my question). But it does work and is very\
    \ readable. Thanks!\n<|/ c |>\n<| c |>\nI added a solution which does not require\
    \ any extra code. :)\n<|/ c |>\n<| c |>\nI like your solution, although it does\
    \ require a lot of extra code (as I mentioned in my comment to my question). But\
    \ it does work and is very readable. Thanks!\n<|/ c |>\n<| a dscore=0 |>\nI like\
    \ your solution, although it does require a lot of extra code (as I mentioned\
    \ in my comment to my question). But it does work and is very readable. Thanks!",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[AEIOU]/[aeiou]/ig;\n    return $message;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    I like this solution. Very elegant. Thank you!\n<|/ c |>\n<| a tags=perl,regex\
    \ |>\n<code>\nuse strict;\nuse warnings;", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $result = \"\";\n    my $index = 0;\n \
    \   my $lastVowel = \"\";\n    my $lastLetter = \"\";\n    my $letter;\n    my\
    \ $vowel;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    ", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            my $vowel_index = index($vowels, $letter);\n\
    \            if ($vowel_index != -1) {\n                $new_message .= $alphabet[$index\
    \ + 2];\n            } else {\n                $new_message .= $letter;\n    \
    \        }\n        } else {\n            $new_message .= $letter;\n        }\n\
    \    }\n    return $new_message;\n}", "    \n    # Write your code here\n    \n\
    \    return $message;\n}", "    my $encoded = \"\";\n    \n    foreach my $letter\
    \ (split //, $message) {\n        my $index = index($letter, \"a\");\n       \
    \ if ($index != -1) {\n            $letter =~ tr/[aeiou]/[AEIOU]/;\n        }\n\
    \        $encoded .= $letter;\n    }\n    \n    return $encoded;\n}", "    my\
    \ $message = $message;\n    my @vowels = qw(a e i o u);\n    my @letters = qw(a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @vowels_2 = qw(a\
    \ e i o u);\n    my @letters_2 = qw(a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z);\n    my @vowels_3 = qw(a e i o u);\n    my @letters_3 = qw(a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z);\n    my @vowels_4 = qw(a e i\
    \ o u);\n    my @letters_4 = qw(a b c d e f g h i j k l m n o p q r s t u v w\
    \ x y z);\n    my @vowels_5 = qw(a e i o u);\n    my @letters_5 = qw(a b c d e\
    \ f g h i j k l m n o p q r s t u v w x y z);\n    my @vowels_6 = qw(a e i o u);\n\
    \    my @letters_6 = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n\
    \    my @vowels_7 = qw(a e i o u);\n    my @letters_7 = qw(a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z);\n    my @vowels_8 = qw(a e i o u);\n    my\
    \ @letters_8 = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my\
    \ @vowels_9 = qw(a e i o u);\n    my @letters_9 = qw(a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z);\n    my @vowels_10 = qw(a e i o u);\n    my @letters_10\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y ", "    my $encoded =\
    \ \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels_count = length($vowels);\n    my $letters_count = length($letters);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $vowels_index\
    \ = 0;\n    my $letters_index = 0;\n    my $letters_index_in_vowels = 0;\n   \
    \ my $vowels_index_in_letters = 0;\n    my $letters_index_in_letters = 0;\n  \
    \  my $letters_index_in_vowels_2 = 0; # 2 places ahead of vowel\n    my $vowels_index_in_letters_2\
    \ = 0; # 2 places ahead of letter\n    my $letters_index_in_vowels_3 = 0; # 3\
    \ places ahead of vowel\n    my $vowels_index_in_letters_3 = 0; # 3 places ahead\
    \ of letter\n    my $letters_index_in_vowels_4 = 0; # 4 places ahead of vowel\n\
    \    my $vowels_index_in_letters_4 = 0; # 4 places ahead of letter\n    my $letters_index_in_vowels_5\
    \ = 0; # 5 places ahead of vowel\n    my $vowels_index_in_letters_5 = 0; # 5 places\
    \ ahead of letter\n    my $letters_index_in_vowels_6 = 0; # 6 places ahead of\
    \ vowel\n    my $vowels_index_in_letters_6 = 0; # 6 places ahead of letter\n \
    \   my $letters_index_in_vowels_7 = 0; # 7 places ahead of vowel\n    my $vowels_index_in_letters_7\
    \ = 0; # 7 places ahead of letter\n    my $letters_index_in_vowels_8 = 0; # 8\
    \ places ahead of vowel\n    my $vowels_index_in_letters_8 = 0; # 8 places ahead\
    \ of letter\n    my $letters_index_in_vowels_9 = 0; # 9 places ahead of vowel\n\
    \    my $vowels_index_in_letters_9 = 0; # 9 places ahead of letter\n    my $letters_index_in_vowels_10\
    \ = 0; # 10 places ahead of vowel\n    my $vowels_index_in_letters_10 = 0; # 10\
    \ places ahead of letter\n    my $letters_index_in_vowels_11 = 0; # 11 places\
    \ ahead of vowel\n    my $vowels_index_in_letters_11 = 0; # 11 places ahead of\
    \ letter\n    my $letters_index_in_vowels_12 = 0; # 12 places ahead of vowel\n\
    \    my $vowels_index_in_letters_12 = 0; # 12 places ahead of letter\n    my $",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $letter_pos = index($alphabet, $letter);\n        if ($letter_pos\
    \ == -1) {\n            $new_message .= $letter;\n        } else {\n         \
    \   my $vowel_pos = index($vowels, $letter);\n            if ($vowel_pos == -1)\
    \ {\n                $new_message .= $letter;\n            } else {\n        \
    \        $new_message .= substr($alphabet, $letter_pos + 1, $vowel_pos - $letter_pos\
    \ - 1);\n                $new_message .= substr($alphabet, $vowel_pos + 1, 1);\n\
    \            }\n        }\n    }\n    return $new_message;\n}\n</code>\n<|/ a\
    \ tags=perl,regex |>\n<| c |>\nThanks so much! I really appreciate it!\n<|/ c\
    \ |>\n<| a dscore=1 |>\n<code>", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split(//, $message)) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index >= 0) {\n            $new_message .= $alphabet[$index + 1];\n\
    \        }\n        else {\n            $new_message .= $letter;\n        }\n\
    \    }\n    \n    foreach my $vowel (split(//, $vowels)) {\n        my $index\
    \ = index($alphabet, $vowel);\n        if ($index >= 0) {\n            $new_message\
    \ .= $alphabet[$index + 1];\n        }\n        else {\n            $new_message\
    \ .= $vowel;\n        }\n    }\n    \n    return $new_message;\n}", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new_message\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        if ($letter\
    \ =~ /[AEIOU]/) {\n            $new_message .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/\
    \ + $vowels];\n        } else {\n            $new_message .= $letter;\n      \
    \  }\n    }\n    return $new_message;\n}", "    \n    # Write your code here.\n\
    \    \n    return $message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $alphabet_size = length($alphabet);\n\
    \    my $vowels_size = length($vowels);\n    my $message_size = length($message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $alphabet_size = length($alphabet);\n\
    \    my $vowels_size = length($vowels);\n    my $message_size = length($message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $alphabet_size = length($alphabet);\n\
    \    my $vowels_size = length($vowels);\n    my $message_size = length($message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $alphabet_size = length($alphabet);\n\
    \    my $vowels_size = length($vowels);\n    my $message_size = length($message);\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    ", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels =\
    \ \"aeiou\";\n    my $output = '';\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $l = length($message);\n    while($i < $l) {\n        $output .=\
    \ substr($alphabet, index($message, $alphabet[$i]), 1);\n        $i++;\n    }\n\
    \    while($j < $l) {\n        $output .= substr($alphabet, index($message, $alphabet[$j]),\
    \ 1);\n        $j++;\n    }\n    while($k < $l) {\n        $output .= substr($alphabet,\
    \ index($message, $alphabet[$k]), 1);\n        $k++;\n    }\n    while($l > 0)\
    \ {\n        $output .= substr($alphabet, index($message, $alphabet[$l-1]), 1);\n\
    \        $l--;\n    }\n    while($i < $l) {\n        $output .= substr($alphabet,\
    \ index($message, $alphabet[$i]), 1);\n        $i++;\n    }\n    while($j < $l)\
    \ {\n        $output .= substr($alphabet, index($message, $alphabet[$j]), 1);\n\
    \        $j++;\n    }\n    while($k < $l) {\n        $output .= substr($alphabet,\
    \ index($message, $alphabet[$k]), 1);\n        $k++;\n    }\n    while($l > 0)\
    \ {\n        $output .= substr($alphabet, index($message, $alphabet[$l-1]), 1);\n\
    \        $l--;\n    }\n    while($i < $l) {\n        $output .= substr($alphabet,\
    \ index($message, $alphabet[$i]), 1);\n        $i++;\n    }\n    while($j < $l)\
    \ {\n        $output .= substr($alphabet, index($message, $alphabet[$j]), 1);\n\
    \        $j++;\n    }\n    while($k < $l) {\n        $output .= substr($alphabet,\
    \ index($message, $alphabet[$k]), 1);\n        $k++;\n    }\n    while($l > 0)\
    \ {\n        $output .= substr($alphabet, index($message, $alphabet[$l-1]), 1);\n\
    \        $l--;\n    }\n    while($i < $l) {\n        $output .= substr($alphabet,\
    \ index($message, $alphabet[$i]), 1);\n        $i++;\n    }\n    while($j < $l)\
    \ {\n        $output .= substr($alphabet, index($message, $alphabet[$j]), 1);\n\
    \        $j++;\n    }\n    while($k < $l) {\n        $output .= substr($alphabet,\
    \ index($message, $alphabet[$k]), 1);\n        $k", "    my $alphabet = qw(a b\
    \ c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i\
    \ o u);\n    my $new_message = \"\";\n    \n    foreach my $letter (split //,\
    \ $message) {\n        if ($letter eq \"a\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$alphabet[$letter]+1];\n\
    \        } elsif ($letter eq \"u\") {\n            $new_message .= $alphabet[$alphabet[$letter]-1];\n\
    \        } elsif ($letter eq \"y\") {\n            $", "    $message =~ tr/A-Z/a-z/;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[AEIOU]/[aeiou]/g;\n\
    \    return $message;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThanks for\
    \ your answer. I am not allowed to use any modules. I should use only basic perl\
    \ commands. I edited my question to make it more clear.\n<|/ c |>\n<| c |>\nI\
    \ added a solution that uses only basic Perl commands. I hope it helps.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. I edited my question to make it more clear.\
    \ I need to use only basic perl commands. I edited my question to make it more\
    \ clear.\n<|/ c |>\n<| c |>\nI added a solution that uses only basic Perl commands.\
    \ I hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I edited my question\
    \ to make it more clear. I need to use only basic perl commands. I edited my question\
    \ to make it more clear.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\nuse strict;\n\
    use warnings;", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels\
    \ = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $vowel_count = 0;\n    my $letter;\n    my $vowel;\n \
    \   foreach $letter (split(//, $message)) {\n        $new_message .= $letter;\n\
    \        $vowel_count = 0;\n        foreach $vowel (split(//, $vowels)) {\n  \
    \          if ($letter eq $vowel) {\n                $vowel_count++;\n       \
    \     }\n        }\n        if ($vowel_count > 1) {\n            $new_message\
    \ .= $alphabet[$j];\n            $j++;\n        }\n    }\n    return $new_message;\n\
    }", "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message\
    \ =~ s/[ae", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels\
    \ = \"AEIOU\";\n    my $output = '';\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my\
    \ $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n  \
    \  my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    ", "    my $messageLength = length($message);\n    my $encodedMessage\
    \ = \"\";\n    my $currentLetter;\n    my $vowels = \"aeiouAEIOU\";\n    my $vowelsCount\
    \ = length($vowels);\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my\
    \ $lettersCount = length($letters);\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $l;\n    my $vowel;\n    my $letter;\n    my $encodedLetter;\n    my $encodedLetterCount;\n\
    \    my $encodedLetterCount2;\n    my $encodedLetterCount3;\n    my $encodedLetterCount4;\n\
    \    my $encodedLetterCount5;\n    my $encodedLetterCount6;\n    my $encodedLetterCount7;\n\
    \    my $encodedLetterCount8;\n    my $encodedLetterCount9;\n    my $encodedLetterCount10;\n\
    \    my $encodedLetterCount11;\n    my $encodedLetterCount12;\n    my $encodedLetterCount13;\n\
    \    my $encodedLetterCount14;\n    my $encodedLetterCount15;\n    my $encodedLetterCount16;\n\
    \    my $encodedLetterCount17;\n    my $encodedLetterCount18;\n    my $encodedLetterCount19;\n\
    \    my $encodedLetterCount20;\n    my $encodedLetterCount21;\n    my $encodedLetterCount22;\n\
    \    my $encodedLetterCount23;\n    my $encodedLetterCount24;\n    my $encodedLetterCount25;\n\
    \    my $encodedLetterCount26;\n    my $encodedLetterCount27;\n    my $encodedLetterCount28;\n\
    \    my $encodedLetterCount29;\n    my $encodedLetterCount30;\n    my $encodedLetterCount31;\n\
    \    my $encodedLetterCount32;\n    my $encodedLetterCount33;\n    my $encodedLetterCount34;\n\
    \    my $encodedLetterCount35;\n    my $encodedLetterCount36;\n    my $encodedLetterCount37;\n\
    \    my $encodedLetterCount38;\n    my $encodedLetterCount39;\n    my $encodedLetterCount40;\n\
    \    my $encodedLetterCount41;\n    my $encodedLetterCount42;\n    my $encodedLetterCount43;\n\
    \    my $encodedLetterCount44;\n    my $encodedLetterCount45;\n    my $encodedLetterCount46;\n\
    \    my $encodedLetterCount47;\n    my $encodedLetterCount48;\n    my $encodedLetterCount49;\n\
    \    my $encodedLetterCount50;\n    my $encodedLetterCount51;\n    my $encodedLetterCount52;\n\
    \    my $encodedLetterCount53;\n    my $encodedLetterCount54;", "    $message\
    \ =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/g;\n    $message =~ s/[AEIOU]/[aeiou]/g;\n\
    \    return $message;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work.\
    \ `tr/A-Z/a-z/` doesn't change `AEIOU` to `aeiou`.\n<|/ c |>\n<| c |>\n: You're\
    \ right, I didn't test it properly. I've fixed the answer.\n<|/ c |>\n<| a tags=perl,regex\
    \ |>\n<code>", "    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n\
    \    $message =~ tr/aeiouAEIOU/AEIOUaeiou/;\n    $message =~ tr/aeiouAEIOUaeiouAEIOU/AEIOUaeiouAEIOUaeiou/;\n\
    \    $message =~ tr/aeiouAEIOUaeiouAEIOUaeiouAEIOU/AEIOUaeiouAEIOUaeiouAEIOU/;\n\
    \    $message =~ tr/aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU/AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU/;\n\
    \    $message =~ tr/aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU/AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU/;\n\
    \    $message =~ tr/aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU/AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU/;\n\
    \    $message =~ tr/aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou",
  "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n \
    \   my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= $alphabet[$index + 1];\n\
    \        }\n    }\n    \n    foreach my $letter (split //, $message) {\n     \
    \   my $index = index($vowels, $letter);\n        if ($index != -1) {\n      \
    \      $new_message .= $letter;\n        }\n    }\n    \n    return $new_message;\n\
    }", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n\
    \    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $vowel_found = 0;\n    my $letter;\n \
    \   my $vowel;\n    foreach $letter (split(//, $message)) {\n        $new_message\
    \ .= $letter;\n        $vowel_found = 0;\n        foreach $vowel (split(//, $alphabet))\
    \ {\n            if ($letter eq $vowel) {\n                $vowel_found = 1;\n\
    \                for ($j = $i; $j < $#{$message}; $j++) {\n                  \
    \  $new_message .= $alphabet[$j];\n                }\n                $i = $j;\n\
    \                $new_message .= $vowel;\n            }\n        }\n        if\
    \ (!$vowel_found) {\n            $new_message .= $letter;\n        }\n    }\n\
    \    foreach $letter (split(//, $new_message)) {\n        $letter = uc($letter);\n\
    \        $letter = uc($letter) if $letter eq \"A\";\n        $letter = uc($letter)\
    \ if $letter eq \"E\";\n        $letter = uc($letter) if $letter eq \"I\";\n \
    \       $letter = uc($letter) if $letter eq \"O\";\n        $letter = uc($letter)\
    \ if $letter eq \"U\";\n        $letter = uc($letter) if $letter eq \"a\";\n \
    \       $letter = uc($letter) if $letter eq \"e\";\n        $letter = uc($letter)\
    \ if $letter eq \"i\";\n        $letter = uc($letter) if $letter eq \"o\";\n \
    \       $letter = uc($letter) if $letter eq \"u\";\n        $letter = uc($letter)\
    \ if $letter eq \"A\";\n        $letter = uc($letter) if $letter eq \"E\";\n \
    \       $letter = uc($letter) if $letter eq \"I\";\n        $letter = uc($letter)\
    \ if $letter eq", "    my $encoded = \"\";\n    my $vowels = \"aeiouAEIOU\";\n\
    \    my $vowels_count = length($vowels);\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_count = length($letters);\n    my $letter_count = $letters_count\
    \ + 1;\n    my $vowel_count = $vowels_count + 1;\n    my $letter_pos = 0;\n  \
    \  my $vowel_pos = 0;\n    my $letter_letter_pos = 0;\n    my $vowel_letter_pos\
    \ = 0;\n    my $letter_vowel_pos = 0;\n    my $vowel_vowel_pos = 0;\n    my $letter_letter_letter_pos\
    \ = 0;\n    my $vowel_letter_letter_pos = 0;\n    my $letter_vowel_vowel_pos =\
    \ 0;\n    my $vowel_vowel_letter_pos = 0;\n    my $letter_letter_vowel_pos = 0;\n\
    \    my $vowel_letter_vowel_pos = 0;\n    my $letter_vowel_vowel_pos = 0;\n  \
    \  my $vowel_vowel_letter_pos = 0;\n    my $vowel_vowel_vowel_pos = 0;\n    my\
    \ $letter_letter_letter_letter_pos = 0;\n    my $vowel_letter_letter_letter_pos\
    \ = 0;\n    my $letter_vowel_letter_letter_pos = 0;\n    my $vowel_letter_letter_letter_pos\
    \ = 0;\n    my $vowel_vowel_letter_letter_pos = 0;\n    my $letter_letter_vowel_letter_pos\
    \ = 0;\n    my $vowel_letter_letter_letter_pos = 0;\n    my $vowel_vowel_letter_letter_pos\
    \ = 0;\n    my $letter_vowel_vowel_letter_pos = 0;\n    my $vowel_vowel_vowel_letter_pos\
    \ = 0;\n    my $letter_letter_letter_letter_pos = 0;\n    my $vowel_letter_letter_letter_pos\
    \ = 0;\n    my $vowel_vowel_letter_letter_pos = 0;\n    my $letter_vowel_vowel_letter_pos\
    \ = 0;\n    my $vowel_vowel_vowel_letter_pos = 0;\n    my $letter_letter_letter_letter_pos\
    \ = 0;\n    my $vowel_letter_letter_letter_pos = 0;\n    my $vowel_vowel_letter_letter_pos\
    \ = 0;\n    my $letter_vowel_vowel_letter_pos = 0;\n    my $vowel_vowel_vowel_letter_pos\
    \ = 0;\n    my $letter_letter_letter_letter_pos = 0;\n    my $vowel_letter_letter_letter_pos\
    \ = 0;\n    my $vowel_vowel_letter_letter_pos = 0;\n    my $letter_vowel_vowel_letter_pos\
    \ = 0;\n    my $vowel_vowel_vowel_letter_pos = 0;\n    my $letter_letter_letter_letter_pos\
    \ = 0;\n    my $vowel_letter_letter_letter_pos = 0;\n    my $vowel_vowel_letter_letter_pos\
    \ = 0;\n    my $letter_vowel_vowel_letter_pos = 0;\n", "    $message =~ tr/A-Z/a-z/;\n\
    \    $message =~ tr/aeiou/AEIOU/;\n    $message =~ tr/aeiouAEIOU/AEIOUaeiou/;\n\
    \    return $message;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your\
    \ answer! I appreciate it. I tried your code, and it worked for most of the test\
    \ cases. However, it failed on some test cases. I added the test cases to the\
    \ original post. Could you please take a look?\n<|/ c |>\n<| c |>\nI added a test\
    \ case to the original post. Could you please take a look?\n<|/ c |>\n<| c |>\n\
    I added a test case to the original post. Could you please take a look?\n<|/ c\
    \ |>\n<| c |>\nI added a test case to the original post. Could you please take\
    \ a look?\n<|/ c |>\n<| c |>\nI added a test case to the original post. Could\
    \ you please take a look?\n<|/ c |>\n<| a tags=algorithm,perl,string |>\nHere's\
    \ a solution that uses no regexes and no loops:\n<code>\nuse strict;\nuse warnings;",
  "    my $message = $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels_positions = $vowels =~ /[aeiouAEIOU]/gi;\n\
    \    my $letters_positions = $letters =~ /[abcdefghijklmnopqrstuvwxyz]/gi;\n \
    \   my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $vowels_position = 0;\n    my $letters_position = 0;\n    my $letters_position2\
    \ = 0;\n    my $letters_position3 = 0;\n    my $letters_position4 = 0;\n    my\
    \ $letters_position5 = 0;\n    my $letters_position6 = 0;\n    my $letters_position7\
    \ = 0;\n    my $letters_position8 = 0;\n    my $letters_position9 = 0;\n    my\
    \ $letters_position10 = 0;\n    my $letters_position11 = 0;\n    my $letters_position12\
    \ = 0;\n    my $letters_position13 = 0;\n    my $letters_position14 = 0;\n   \
    \ my $letters_position15 = 0;\n    my $letters_position16 = 0;\n    my $letters_position17\
    \ = 0;\n    my $letters_position18 = 0;\n    my $letters_position19 = 0;\n   \
    \ my $letters_position20 = 0;\n    my $letters_position21 = 0;\n    my $letters_position22\
    \ = 0;\n    my $letters_position23 = 0;\n    my $letters_position24 = 0;\n   \
    \ my $letters_position25 = 0;\n    my $letters_position26 = 0;\n    my $letters_position27\
    \ = 0;\n    my $letters_position28 = 0;\n    my $letters_position29 = 0;\n   \
    \ my $letters_position30 = 0;\n    my $letters_position31 = 0;\n    my $letters_position32\
    \ = 0;\n    my $letters_position33 = 0;\n    my $letters_position34 = 0;\n   \
    \ my $letters_position35 = 0;\n    my $letters_position36 = 0;\n    my $letters_position37\
    \ = 0;\n    my $letters_position38 = 0;\n    my $letters_position39 = 0;\n   \
    \ my $letters_position40 = 0;\n    my $letters_position41 = 0;\n    my $letters_position42",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c", "    \n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\"\
    ;\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUae", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $result = '';\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;", "    \n    my $vowels = \"aeiou\"\
    ;\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    \n \
    \   my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $letters_2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $letters_3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    \n    my $message2 = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        if ($letter eq \"a\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"e\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"i\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"o\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"u\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"A\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"E\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"I\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"O\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"U\") {\n            $message2 .= $letters_2->[$letters_2->[$letter]-1];\n\
    \        } elsif ($letter eq \"a\") {\n            $message2 .= $letters_3->[$letters_3->[$letter]-1];\n\
    \        } elsif ($letter eq \"e\") {\n            $message2 .= $letters_3->[$letters_3->[$letter]-1];\n\
    \        } elsi", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new = \"\";\n    my\
    \ $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = length($message);\n   \
    \ while($i < $l) {\n        my $letter = $message[$i];\n        if($letter eq\
    \ \"a\") {\n            $new .= $alphabet[$j];\n            $j++;\n        }\n\
    \        elsif($letter eq \"e\") {\n            $new .= $alphabet[$j+1];\n   \
    \         $j++;\n        }\n        elsif($letter eq \"i\") {\n            $new\
    \ .= $alphabet[$j+2];\n            $j++;\n        }\n        elsif($letter eq\
    \ \"o\") {\n            $new .= $alphabet[$j+3];\n            $j++;\n        }\n\
    \        elsif($letter eq \"u\") {\n            $new .= $alphabet[$j+4];\n   \
    \         $j++;\n        }\n        elsif($letter eq \"A\") {\n            $new\
    \ .= $alphabet[$j+5];\n            $j++;\n        }\n        elsif($letter eq\
    \ \"E\") {\n            $new .= $alphabet[$j+6];\n            $j++;\n        }\n\
    \        elsif($letter eq \"I\") {\n            $new .= $alphabet[$j+7];\n   \
    \         $j++;\n        }\n        elsif($letter eq \"O\") {\n            $new\
    \ .= $alphabet[$j+8];\n            $j++;\n        }\n        elsif($letter eq\
    \ \"U\") {\n            $new .= $alphabet[$j+9];\n            $j++;\n        }\n\
    \        elsif($letter eq \"a\") {\n            $new .= $alphabet[$j+10];\n  \
    \          $j++;\n        }\n        elsif($letter eq \"e\") {\n            $new\
    \ .= $alphabet[$j+11];\n            $j++;\n        }\n        elsif($letter eq\
    \ \"i\") {\n            $new .= $alphabet[$j+12];\n            $j++;\n       \
    \ }\n        elsif($letter eq \"o\") {\n            $new .= $alphabet[$j+13];\n\
    \            $j++;\n        }\n        elsif($letter eq \"u\") {\n           \
    \ $new .= $alphabet[$j+14];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"", "    \n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n\
    \    \n    my $new_message = \"\";\n    \n    my $i = 0;\n    \n    foreach my\
    \ $letter (split(//, $message)) {\n        \n        if ($letter eq \"a\") {\n\
    \            $new_message .= $letter;\n        }\n        elsif ($letter eq \"\
    e\") {\n            $new_message .= $letter;\n        }\n        elsif ($letter\
    \ eq \"i\") {\n            $new_message .= $letter;\n        }\n        elsif\
    \ ($letter eq \"o\") {\n            $new_message .= $letter;\n        }\n    \
    \    elsif ($letter eq \"u\") {\n            $new_message .= $letter;\n      \
    \  }\n        elsif ($letter eq \"A\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"E\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"I\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"O\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"U\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"i\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"A\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"E\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"I\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"O\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"U\") {\n            $new_message .= $letter;\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $new_message .= $letter;\n\
    \        }\n        el", "    my $message = $message;\n    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $vowels_2 = \"AEIOUaeiou\";\n    my $vowels_3 = \"AEIOUaeiouAEIOU\"\
    ;\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_7 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n   \
    \ my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n  \
    \  my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO",
  "    \n    # Write your code here\n    \n    return $message;\n}", "    \n    my\
    \ @letters = split(//, $message);\n    my $result = \"\";\n    \n    foreach my\
    \ $letter (@letters) {\n        my $index = index($letter, \"a\");\n        if\
    \ ($index >= 0) {\n            $letter = substr($letter, 0, $index) . substr($letter,\
    \ $index + 1);\n        }\n        \n        foreach my $vowel (qw(a e i o u))\
    \ {\n            my $index = index($letter, $vowel);\n            if ($index >=\
    \ 0) {\n                $letter = substr($letter, 0, $index) . substr($letter,\
    \ $index + 1);\n            }\n        }\n        \n        $result .= $letter;\n\
    \    }\n    \n    return $result;\n}", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new = \"\";\n    \n    foreach my $letter\
    \ (split //, $message) {\n        $new .= $letter if $letter !~ /[AEIOU]/;\n \
    \       $new .= $alphabet[$alphabet =~ tr/AEIOU/AEIOU/ + $vowels{$letter}];\n\
    \    }\n    return $new;\n}", "    my $message = $message;\n    my @vowels = qw(a\
    \ e i o u);\n    my @consonants = qw(g f p q t v);\n    my @letters = qw(a b c\
    \ d e f g h i j k l m n o p q r s t u v w x y z);\n    my @vowels_2_letters =\
    \ qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @consonants_2_letters\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_2_vowels\
    \ = qw(a e i o u);\n    my @letters_2_consonants = qw(g f p q t v);\n    my @letters_2_letters\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_2_vowels_2_letters\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_2_consonants_2_letters\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_2_letters_2_vowels\
    \ = qw(a e i o u);\n    my @letters_2_letters_2_consonants = qw(g f p q t v);\n\
    \    my @letters_2_letters_2_letters = qw(a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z);\n    my @letters_2_letters_2_vowels_2_letters = qw(a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_2_letters_2_consonants_2_letters\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_2_letters_2_letters_2_vowels\
    \ = qw(a e i o u);\n    my @letters_2_", "    my $message = $message;\n    my\
    \ $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n  \
    \  my $vowels_2 = \"AEIOU\";\n    my $letters_2 = \"BCDFGHJKLMNPQRSTVWXYZ\";\n\
    \    my $vowels_2_2 = \"AEIOU\";\n    my $letters_2_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_3 = \"AEIOU\";\n    my $letters_3 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_3_2 = \"AEIOU\";\n    my $letters_3_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_4 = \"AEIOU\";\n    my $letters_4 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_4_2 = \"AEIOU\";\n    my $letters_4_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_5 = \"AEIOU\";\n    my $letters_5 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_5_2 = \"AEIOU\";\n    my $letters_5_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_6 = \"AEIOU\";\n    my $letters_6 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_6_2 = \"AEIOU\";\n    my $letters_6_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_7 = \"AEIOU\";\n    my $letters_7 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_7_2 = \"AEIOU\";\n    my $letters_7_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_8 = \"AEIOU\";\n    my $letters_8 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_8_2 = \"AEIOU\";\n    my $letters_8_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_9 = \"AEIOU\";\n    my $letters_9 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_9_2 = \"AEIOU\";\n    my $letters_", "    my $alphabet = \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $newMessage\
    \ = \"\";\n    \n    foreach my $letter (split(//, $message)) {\n        my $index\
    \ = index($alphabet, $letter);\n        if ($index != -1) {\n            $newMessage\
    \ .= $alphabet[$index];\n        }\n        else {\n            $newMessage .=\
    \ $letter;\n        }\n    }\n    \n    foreach my $vowel (split(//, $vowels))\
    \ {\n        my $index = index($alphabet, $vowel);\n        if ($index != -1)\
    \ {\n            $newMessage .= $alphabet[$index + 1];\n        }\n        else\
    \ {\n            $newMessage .= $vowel;\n        }\n    }\n    \n    return $newMessage;\n\
    }", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n\
    \    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index >= 0) {\n            $new_message .= $alphabet[$index + 1];\n\
    \        }\n    }\n    \n    foreach my $letter (split //, $message) {\n     \
    \   my $index = index($vowels, $letter);\n        if ($index >= 0) {\n       \
    \     $new_message .= $vowels[$index + 1];\n        }\n    }\n    \n    return\
    \ $new_message;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q\
    \ r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message =\
    \ \"\";\n    my $index = 0;\n    foreach my $letter (split(//, $message)) {\n\
    \        if ($letter eq \"a\") {\n            $new_message .= $alphabet[$index];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        }\n        elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$index + 2];\n        }\n        elsif ($letter eq \"o\") {\n \
    \           $new_message .= $alphabet[$index + 3];\n        }\n        elsif ($letter\
    \ eq \"u\") {\n            $new_message .= $alphabet[$index + 4];\n        }\n\
    \        elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$index\
    \ + 5];\n        }\n        elsif ($letter eq \"a\") {\n            $new_message\
    \ .= $alphabet[$index + 6];\n        }\n        elsif ($letter eq \"e\") {\n \
    \           $new_message .= $alphabet[$index + 7];\n        }\n        elsif ($letter\
    \ eq \"i\") {\n            $new_message .= $alphabet[$index + 8];\n        }\n\
    \        elsif ($letter eq \"o\") {\n            $new_message .= $alphabet[$index\
    \ + 9];\n        }\n        elsif ($letter eq \"u\") {\n            $new_message\
    \ .= $alphabet[$index + 10];\n        }\n        elsif ($letter eq \"y\") {\n\
    \            $new_message .= $alphabet[$index + 11];\n        }\n        elsif\
    \ ($letter eq \"a\") {\n            $new_message .= $alphabet[$index + 12];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$index\
    \ + 13];\n        }\n        elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$index + 14];\n        }\n        elsif ($letter eq \"o\") {\n\
    \            $new_message .= $alphabet[$index + 15];\n        }\n        elsif\
    \ ($letter eq \"u\") {\n            $new_message .= $alphabet[$index + 16];\n\
    \        }\n        elsif ($letter eq \"y\") {\n            $new_message .= $alphabet[$index\
    \ + ", "    my $message = $message;\n    $message =~ tr/A-Z/a-z/;\n    $message\
    \ =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU]/g;\n\
    \    $message =~ s/[aeiouAE", "    my $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $vowels2 = \"AEIOUaeiou\";\n    my $vowels3 = \"AEIOUaeiouAEIOU\";\n\
    \    my $vowels4 = \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels5 = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels7 = \"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my\
    \ $vowels10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my\
    \ $vowels11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n \
    \   my $vowels12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou",
  "    my $message2 = \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $vowelsCount\
    \ = length($vowels);\n    my $vowelsIndex = 0;\n    my $vowelsIndex2 = 0;\n  \
    \  my $vowelsIndex3 = 0;\n    my $vowelsIndex4 = 0;\n    my $vowelsIndex5 = 0;\n\
    \    my $vowelsIndex6 = 0;\n    my $vowelsIndex7 = 0;\n    my $vowelsIndex8 =\
    \ 0;\n    my $vowelsIndex9 = 0;\n    my $vowelsIndex10 = 0;\n    my $vowelsIndex11\
    \ = 0;\n    my $vowelsIndex12 = 0;\n    my $vowelsIndex13 = 0;\n    my $vowelsIndex14\
    \ = 0;\n    my $vowelsIndex15 = 0;\n    my $vowelsIndex16 = 0;\n    my $vowelsIndex17\
    \ = 0;\n    my $vowelsIndex18 = 0;\n    my $vowelsIndex19 = 0;\n    my $vowelsIndex20\
    \ = 0;\n    my $vowelsIndex21 = 0;\n    my $vowelsIndex22 = 0;\n    my $vowelsIndex23\
    \ = 0;\n    my $vowelsIndex24 = 0;\n    my $vowelsIndex25 = 0;\n    my $vowelsIndex26\
    \ = 0;\n    my $vowelsIndex27 = 0;\n    my $vowelsIndex28 = 0;\n    my $vowelsIndex29\
    \ = 0;\n    my $vowelsIndex30 = 0;\n    my $vowelsIndex31 = 0;\n    my $vowelsIndex32\
    \ = 0;\n    my $vowelsIndex33 = 0;\n    my $vowelsIndex34 = 0;\n    my $vowelsIndex35\
    \ = 0;\n    my $vowelsIndex36 = 0;\n    my $vowelsIndex37 = 0;\n    my $vowelsIndex38\
    \ = 0;\n    my $vowelsIndex39 = 0;\n    my $vowelsIndex40 = 0;\n    my $vowelsIndex41\
    \ = 0;\n    my $vowelsIndex42 = 0;\n    my $vowelsIndex43 = 0;\n    my $vowelsIndex44\
    \ = 0;\n    my $vowelsIndex45 = 0;\n    my $vowelsIndex46 = 0;\n    my $vowelsIndex47\
    \ = 0;\n    my $vowelsIndex48 = 0;\n    my $vowelsIndex49 = 0;\n    my $vowelsIndex50\
    \ = 0;\n    my $vowelsIndex51 = 0;\n    my $vowelsIndex52 = 0;\n    my $vowelsIndex53\
    \ = 0;\n    my $vowelsIndex54 = 0;\n    my $vowelsIndex55 = 0;\n    my $vowelsIndex56\
    \ = 0;\n    my $vowelsIndex57 = 0;\n    my $vowelsIndex58 = 0;\n    my $vowelsIndex59\
    \ = 0;\n    my $vowelsIndex60 = 0;\n    my $vowelsIndex61 = 0;\n    my $", " \
    \   my $message = $message;\n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"\
    AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUae", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_count = 0;\n    my $letter_count\
    \ = 1;\n    my $letter;\n    my $vowel;\n    my $new_letter;\n    \n    foreach\
    \ $letter (split //, $message) {\n        $new_message .= $letter;\n        $letter_count++;\n\
    \    }\n    \n    foreach $letter (split //, $message) {\n        $new_letter\
    \ = $alphabet[$letter];\n        $vowel_count = 0;\n        \n        foreach\
    \ $vowel (split //, $vowels) {\n            $new_letter .= $alphabet[$alphabet[$letter]\
    \ eq $vowel ? $j++ : $k++];\n            $vowel_count++;\n        }\n        \n\
    \        $new_message .= $new_letter;\n    }\n    \n    return $new_message;\n\
    }\n</code>\n<|/ a tags=perl,substitution,algorithm |>\n<| c |>\nThis doesn't work.\
    \ Try it with `encode(\"This is a message\")`.\n<|/ c |>\n<| c |>\nIt works fine\
    \ for me. Try it with `encode(\"This is a message\")`.\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work for me with that input. Try it with `encode(\"This is a message\"\
    )`.\n<|/ c |>\n<| c |>\nIt works for me with that input. Try it with `encode(\"\
    This is a message\")`.\n<|/ c |>\n<| c |>\nIt works for me with that input. Try\
    \ it with `encode(\"This is a message\")`.\n<|/ c |>\n<| a tags=perl,substitution,algorithm\
    \ |>\n<code>", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t\
    \ u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n\
    \    my $index = 0;\n    my $vowel_index = 0;\n    my $vowel_letter;\n    foreach\
    \ my $letter (split(//, $message)) {\n        if ($letter eq \"a\") {\n      \
    \      $new_message .= $alphabet[$index];\n        }\n        elsif ($letter eq\
    \ \"e\") {\n            $new_message .= $alphabet[$index + 1];\n        }\n  \
    \      elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$index\
    \ + 2];\n        }\n        elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$index + 3];\n        }\n        elsif ($letter eq \"u\") {\n \
    \           $new_message .= $alphabet[$index + 4];\n        }\n        elsif ($letter\
    \ eq \"A\") {\n            $new_message .= $alphabet[$index];\n        }\n   \
    \     elsif ($letter eq \"E\") {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        }\n        elsif ($letter eq \"I\") {\n            $new_message\
    \ .= $alphabet[$index + 2];\n        }\n        elsif ($letter eq \"O\") {\n \
    \           $new_message .= $alphabet[$index + 3];\n        }\n        elsif ($letter\
    \ eq \"U\") {\n            $new_message .= $alphabet[$index + 4];\n        }\n\
    \        elsif ($letter eq \"a\") {\n            $new_message .= $alphabet[$index];\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        }\n        elsif ($letter eq \"i\") {\n            $new_message\
    \ .= $alphabet[$index + 2];\n        }\n        elsif ($letter eq \"o\") {\n \
    \           $new_message .= $alphabet[$index + 3];\n        }\n        elsif ($letter\
    \ eq \"u\") {\n            $new_message .= $alphabet[$index + 4];\n        }\n\
    \        elsif ($letter eq \"A\") {\n            $new_message .= $alphabet[$index];\n\
    \        }\n        elsif ($letter eq \"E\") {\n            $new_message .= $alphabet[$index\
    \ + 1];\n        }\n        elsif ($letter eq \"I\") {\n            $", "    my\
    \ $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my\
    \ $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n    foreach my\
    \ $letter (split(//, $message)) {\n        my $letter_pos = index($alphabet, $letter);\n\
    \        if ($letter_pos != -1) {\n            my $vowel_pos = index($vowels,\
    \ $letter);\n            if ($vowel_pos != -1) {\n                $new_message\
    \ .= $alphabet[$letter_pos];\n                $new_message .= $alphabet[$vowel_pos\
    \ + 2];\n            } else {\n                $new_message .= $alphabet[$letter_pos];\n\
    \            }\n        } else {\n            $new_message .= $letter;\n     \
    \   }\n    }\n    return $new_message;\n}", "    \n    my $message2 = \"\";\n\
    \    \n    foreach my $letter (split //, $message) {\n        my $letter_pos =\
    \ index($letter, \"A\");\n        my $vowel_pos = index($letter, \"a\");\n   \
    \     \n        if ($letter_pos > $vowel_pos) {\n            $letter = substr($letter,\
    \ 0, $letter_pos) . substr($letter, $vowel_pos + 1, 1) . substr($letter, $letter_pos\
    \ + 1, 1);\n        }\n        \n        $message2 .= $letter;\n    }\n    \n\
    \    return $message2;\n}", "    my $alphabet = qw(a b c d e f g h i j k l m n\
    \ o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $message2\
    \ = \"\";\n    \n    foreach my $letter (split(//, $message)) {\n        my $pos\
    \ = index($alphabet, $letter);\n        if ($pos != -1) {\n            $message2\
    \ .= $alphabet[$pos + 1];\n        }\n        else {\n            $message2 .=\
    \ $letter;\n        }\n    }\n    \n    foreach my $letter (split(//, $message2))\
    \ {\n        my $pos = index($vowels, $letter);\n        if ($pos != -1) {\n \
    \           $message2 .= $vowels[$pos + 1];\n        }\n        else {\n     \
    \       $message2 .= $letter;\n        }\n    }\n    \n    return $message2;\n\
    }", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new = \"\";\n    \n    foreach my $letter (split(//, $message)) {\n\
    \        my $index = index($alphabet, $letter);\n        if ($index != -1) {\n\
    \            $new .= substr($alphabet, $index, 1);\n        }\n        else {\n\
    \            $new .= $letter;\n        }\n    }\n    \n    foreach my $vowel (split(//,\
    \ $vowels)) {\n        $new .= substr($alphabet, index($alphabet, $vowel) + 2,\
    \ 1);\n    }\n    \n    return $new;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        $new_message .= $letter if $letter\
    \ !~ /[aeiou]/;\n        $new_message .= $alphabet[$alphabet =~ /[aeiou]/g + $vowels\
    \ eq \"aeiou\" ? 0 : 1];\n    }\n    return $new_message;\n}", "    my $alphabet\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels =\
    \ qw(a e i o u);\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = length($message);\n    my $vowel_count = 0;\n   \
    \ my $vowel_position = 0;\n    my $letter;\n    my $vowel;\n    my $new_letter;\n\
    \    my $new_vowel;\n    my $new_vowel_position;\n    my $new_vowel_position2;\n\
    \    my $new_vowel_position3;\n    my $new_vowel_position4;\n    my $new_vowel_position5;\n\
    \    my $new_vowel_position6;\n    my $new_vowel_position7;\n    my $new_vowel_position8;\n\
    \    my $new_vowel_position9;\n    my $new_vowel_position10;\n    my $new_vowel_position11;\n\
    \    my $new_vowel_position12;\n    my $new_vowel_position13;\n    my $new_vowel_position14;\n\
    \    my $new_vowel_position15;\n    my $new_vowel_position16;\n    my $new_vowel_position17;\n\
    \    my $new_vowel_position18;\n    my $new_vowel_position19;\n    my $new_vowel_position20;\n\
    \    my $new_vowel_position21;\n    my $new_vowel_position22;\n    my $new_vowel_position23;\n\
    \    my $new_vowel_position24;\n    my $new_vowel_position25;\n    my $new_vowel_position26;\n\
    \    my $new_vowel_position27;\n    my $new_vowel_position28;\n    my $new_vowel_position29;\n\
    \    my $new_vowel_position30;\n    my $new_vowel_position31;\n    my $new_vowel_position32;\n\
    \    my $new_vowel_position33;\n    my $new_vowel_position34;\n    my $new_vowel_position35;\n\
    \    my $new_vowel_position36;\n    my $new_vowel_position37;\n    my $new_vowel_position38;\n\
    \    my $new_vowel_position39;\n    my $new_vowel_position40;\n    my $new_vowel_position41;\n\
    \    my $new_vowel_position42;\n    my $new_vowel_position43;\n    my $new_vowel_position44;\n\
    \    my $new_vowel_position45;\n    my $new_vowel_position46;\n    my $new_vowel_position",
  "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\"\
    ;\n    my $new = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my\
    \ $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n  \
    \  my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels =\
    \ \"AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n  \
    \  my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new = \"\";\n  \
    \  my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $vowel = 0;\n    my $letter\
    \ = 0;\n    my $letter2 = 0;\n    my $letter3 = 0;\n    my $letter4 = 0;\n   \
    \ my $letter5 = 0;\n    my $letter6 = 0;\n    my $letter7 = 0;\n    my $letter8\
    \ = 0;\n    my $letter9 = 0;\n    my $letter10 = 0;\n    my $letter11 = 0;\n \
    \   my $letter12 = 0;\n    my $letter13 = 0;\n    my $letter14 = 0;\n    my $letter15\
    \ = 0;\n    my $letter16 = 0;\n    my $letter17 = 0;\n    my $letter18 = 0;\n\
    \    my $letter19 = 0;\n    my $letter20 = 0;\n    my $letter21 = 0;\n    my $letter22\
    \ = 0;\n    my $letter23 = 0;\n    my $letter24 = 0;\n    my $letter25 = 0;\n\
    \    my $letter26 = 0;\n    my $letter27 = 0;\n    my $letter28 = 0;\n    my $letter29\
    \ = 0;\n    my $letter30 = 0;\n    my $letter31 = 0;\n    my $letter32 = 0;\n\
    \    my $letter33 = 0;\n    my $letter34 = 0;\n    my $letter35 = 0;\n    my $letter36\
    \ = 0;\n    my $letter37 = 0;\n    my $letter38 = 0;\n    my $letter39 = 0;\n\
    \    my $letter40 = 0;\n    my $letter41 = 0;\n    my $letter42 = 0;\n    my $letter43\
    \ = 0;\n    my $letter44 = 0;\n    my $letter45 = 0;\n    my $letter46 = 0;\n\
    \    my $letter47 = 0;\n    my $letter48 = 0;\n    my $letter49 = 0;\n    my $letter50\
    \ = 0;\n    my $letter51 = 0;\n    my $letter52 = 0;\n    my $letter53 = 0;\n\
    \    my $letter54 = 0;\n    my $letter55 = 0;\n    my $letter56 = 0;\n    my $letter57\
    \ = 0;\n    my $letter58 = 0;\n    my $letter59 = 0;\n    my $letter60 = 0;\n\
    \    my $letter61 = 0;\n    my $letter62 = 0;", "    my $alphabet = qw(a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n\
    \    my $new = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l\
    \ = length($message);\n    while($i < $l) {\n        my $letter = $message[$i];\n\
    \        my $pos = $alphabet - $letter;\n        my $next = $alphabet[$pos + 1];\n\
    \        my $replace = $letter;\n        if ($next eq $vowels) {\n           \
    \ $replace = $alphabet[$pos + 2];\n        }\n        $new .= $replace;\n    \
    \    $i++;\n    }\n    return $new;\n}\n</code>\n<|/ a tags=perl,regex |>\n<|\
    \ c |>\nThanks for your answer! I tried to implement it but I'm getting an error:\
    \ Can't locate object method \"encode\" via package \"main::encode\" at encode.pl\
    \ line 8. Do you know why this is?\n<|/ c |>\n<| c |>\n: You probably didn't `use\
    \ Encode` at the top of your script. `Encode` provides functions to convert between\
    \ character encodings, including `encode` and `decode`.\n<|/ c |>\n<| c |>\n:\
    \ I added a link to the documentation for Encode.\n<|/ c |>\n<| c |>\n: I added\
    \ a link to the documentation for Encode.\n<|/ c |>\n<| c |>\n: I added a link\
    \ to the documentation for Encode.\n<|/ c |>\n<| a |>\n<code>", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $newMessage\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        my $index\
    \ = index($alphabet, $letter);\n        if ($index != -1) {\n            $newMessage\
    \ .= substr($alphabet, $index, 1);\n        }\n        else {\n            $newMessage\
    \ .= substr($alphabet, length($alphabet) - length($vowels), 1);\n        }\n \
    \   }\n    \n    foreach my $letter (split //, $newMessage) {\n        my $index\
    \ = index($vowels, $letter);\n        if ($index != -1) {\n            $newMessage\
    \ .= substr($alphabet, $index, 1);\n        }\n        else {\n            $newMessage\
    \ .= substr($alphabet, length($alphabet) - length($vowels), 1);\n        }\n \
    \   }\n    \n    return $newMessage;\n}", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $vowel_found = 0;\n    my $letter_found\
    \ = 0;\n    my $letter;\n    my $vowel;\n    my $new_letter;\n    \n    foreach\
    \ $letter (split(//, $message)) {\n        $letter_found = 0;\n        $vowel_found\
    \ = 0;\n        $new_letter = \"\";\n        $new_message .= $letter;\n      \
    \  \n        foreach $vowel (split(//, $vowels)) {\n            $new_letter .=\
    \ $alphabet[$j];\n            $j++;\n            if ($j == length($alphabet))\
    \ {\n                $j = 0;\n            }\n            if ($letter eq $vowel)\
    \ {\n                $vowel_found = 1;\n            }\n        }\n        \n \
    \       if ($vowel_found == 1) {\n            $new_letter .= $alphabet[$k];\n\
    \            $k++;\n            if ($k == length($alphabet)) {\n             \
    \   $k = 0;\n            }\n        }\n        \n        if ($letter_found ==\
    \ 1) {\n            $new_letter .= $letter;\n        }\n        \n        $new_message\
    \ .= $new_letter;\n    }\n    \n    return $new_message;\n}", "    \n    my $vowels\
    \ = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    \n    my\
    \ @message;\n    \n    foreach my $letter (split //, $message) {\n        my $pos\
    \ = index($vowels, $letter);\n        if ($pos > -1) {\n            my $nextLetter\
    \ = substr($letters, $pos + 1, 1);\n            $letter = substr($letters, $pos,\
    \ 1);\n            $letter = $nextLetter . $letter;\n        }\n        push(@message,\
    \ $letter);\n    }\n    \n    return join \"\", @message;\n}", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $output\
    \ = '';\n    \n    foreach my $letter (split //, $message) {\n        $output\
    \ .= $letter if $letter !~ /[aeiou]/;\n        $output .= $alphabet[$alphabet\
    \ =~ tr/aeiou/$letter/r] if $letter =~ /[aeiou]/;\n    }\n    return $output;\n\
    }", "    \n    my $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    \n    my $new_message = \"\";\n    \n    foreach my $letter (split //,\
    \ $message) {\n        my $index = index($vowels, $letter);\n        if ($index\
    \ != -1) {\n            my $vowel_letter = $letters[$index + 1];\n           \
    \ $new_message .= $vowel_letter;\n        } else {\n            $new_message .=\
    \ $letter;\n        }\n    }\n    \n    return $new_message;\n}", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $new_message\
    \ = \"\";\n    \n    foreach my $letter (split //, $message) {\n        my $index\
    \ = index($alphabet, $letter);\n        if ($index != -1) {\n            $new_message\
    \ .= substr($alphabet, $index, 1);\n        }\n        else {\n            $new_message\
    \ .= $letter;\n        }\n    }\n    \n    foreach my $vowel (split //, $vowels)\
    \ {\n        $new_message .= substr($alphabet, index($alphabet, $vowel) + 2, 1);\n\
    \    }\n    \n    return $new_message;\n}", "    my $alphabet = qw(a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e i o u);\n\
    \    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new_message .= $alphabet[$index + 1];\n        }\n    }\n  \
    \  \n    foreach my $letter (split //, $new_message) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index != -1) {\n            $new_message .= $vowels[$index\
    \ + 1];\n        }\n    }\n    \n    return $new_message;\n}", "    \n    my @letters\
    \ = split(//, $message);\n    my $i = 0;\n    my $j = 0;\n    my $letter;\n  \
    \  my $vowel;\n    \n    foreach $letter (@letters) {\n        $letter = uc($letter);\n\
    \        $vowel = $letters[$i];\n        $letters[$i] = $letters[$j];\n      \
    \  $letters[$j] = $vowel;\n        $i++;\n        $j++;\n    }\n    \n    return\
    \ join(\"\", @letters);\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $result = '';\n    \n    foreach my $letter\
    \ (split //, $message) {\n        my $pos = index($alphabet, $letter);\n     \
    \   if ($pos > -1) {\n            $result .= substr($alphabet, $pos + 2, 1) .\
    \ $letter;\n        } else {\n            $result .= $letter;\n        }\n   \
    \ }\n    \n    foreach my $vowel (split //, $vowels) {\n        $result =~ s/$vowel/$alphabet[($alphabet\
    \ - $vowel) + 1]/g;\n    }\n    \n    return $result;\n}", "    my $message =\
    \ $message;\n    $message =~ tr/A-Z/a-z/;\n    $message =~ tr/aeiou/AEIOU/;\n\
    \    $message =~ s/(.)\\1{2}/$1/g;\n    return $message;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>", "    my $message2 = \"\";\n    my $vowels = \"\
    aeiou\";\n    my $vowels2 = \"AEIOU\";\n    my $vowels3 = \"AEIOUaeiou\";\n  \
    \  my $vowels4 = \"AEIOUaeiouAEIOU\";\n    my $vowels5 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels6 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels9\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n\
    \    my $vowels12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO", "    \n\
    \    my @vowels = qw(a e i o u);\n    \n    my $vowel_count = 0;\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $letter_pos = index($letter, $vowels);\n\
    \        if ($letter_pos != -1) {\n            $vowel_count++;\n            $letter\
    \ = $vowels[$letter_pos];\n        }\n    }\n    \n    my $new_message = \"\"\
    ;\n    \n    foreach my $letter (split //, $message) {\n        my $letter_pos\
    \ = index($letter, $vowels);\n        if ($letter_pos != -1) {\n            $letter\
    \ = $vowels[$letter_pos];\n        }\n        \n        $new_message .= $letter;\n\
    \    }\n    \n    return $new_message;\n}", "    my $message = $message;\n   \
    \ my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"\
    AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOU\";\n    my $vowels_5 = \"\
    AEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n \
    \   my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_8 = \"\
    AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n  \
    \  my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n \
    \   my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", "    my $alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $message\
    \ = $message;\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n \
    \   my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a", " \
    \   my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n\
    \    my $vowels = qw(a e i o u);\n    my $letters = qw(a b c d e f g h i j k l\
    \ m n o p q r s t u v w x y z);\n    my $vowel_positions = map { $alphabet[$_]\
    \ } 0 .. $#alphabet;\n    my $vowel_positions_2 = map { $alphabet[$_] } 0 .. $#alphabet;\n\
    \    my $vowel_positions_3 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_4\
    \ = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_5 = map {\
    \ $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_6 = map { $alphabet[$_]\
    \ } 0 .. $#alphabet;\n    my $vowel_positions_7 = map { $alphabet[$_] } 0 .. $#alphabet;\n\
    \    my $vowel_positions_8 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_9\
    \ = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_10 = map {\
    \ $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_11 = map { $alphabet[$_]\
    \ } 0 .. $#alphabet;\n    my $vowel_positions_12 = map { $alphabet[$_] } 0 ..\
    \ $#alphabet;\n    my $vowel_positions_13 = map { $alphabet[$_] } 0 .. $#alphabet;\n\
    \    my $vowel_positions_14 = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_15\
    \ = map { $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_16 = map {\
    \ $alphabet[$_] } 0 .. $#alphabet;\n    my $vowel_positions_17 = map { $alphabet[$_]\
    \ } 0 .. $#alphabet;\n    my $vowel_positions_18 = map { $alphabet[$_] } 0 ..\
    \ $#alphabet;\n    my $vowel_positions_19 = map { $alphabet[$_] } 0 .. $#alphabet;\n\
    \    my $vowel_", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my\
    \ $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $vowel_position = 0;\n    my $vowel_position2\
    \ = 0;\n    my $letter;\n    my $letter2;\n    my $letter3;\n    my $letter4;\n\
    \    my $letter5;\n    my $letter6;\n    my $letter7;\n    my $letter8;\n    my\
    \ $letter9;\n    my $letter10;\n    my $letter11;\n    my $letter12;\n    my $letter13;\n\
    \    my $letter14;\n    my $letter15;\n    my $letter16;\n    my $letter17;\n\
    \    my $letter18;\n    my $letter19;\n    my $letter20;\n    my $letter21;\n\
    \    my $letter22;\n    my $letter23;\n    my $letter24;\n    my $letter25;\n\
    \    my $letter26;\n    my $letter27;\n    my $letter28;\n    my $letter29;\n\
    \    my $letter30;\n    my $letter31;\n    my $letter32;\n    my $letter33;\n\
    \    my $letter34;\n    my $letter35;\n    my $letter36;\n    my $letter37;\n\
    \    my $letter38;\n    my $letter39;\n    my $letter40;\n    my $letter41;\n\
    \    my $letter42;\n    my $letter43;\n    my $letter44;\n    my $letter45;\n\
    \    my $letter46;\n    my $letter47;\n    my $letter48;\n    my $letter49;\n\
    \    my $letter50;\n    my $letter51;\n    my $letter52;\n    my $letter53;\n\
    \    my $letter54;\n    my $letter55;\n    my $letter56;\n    my $letter57;\n\
    \    my $letter58;\n    my $letter59;\n    my $letter60;\n    my $letter61;\n\
    \    my $letter62;\n    my $letter63;\n    my $letter64;\n    my $letter65;\n\
    \    my $letter66;\n    ", "    \n    my $vowels = \"aeiouAEIOU\";\n    my $letters\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    \n    my $encoded = \"\";\n    \n   \
    \ foreach my $letter (split //, $message) {\n        my $index = index($vowels,\
    \ $letter);\n        if ($index != -1) {\n            $letter = substr($letters,\
    \ $index, 2);\n        }\n        $encoded .= $letter;\n    }\n    \n    return\
    \ $encoded;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThanks for your answer.\
    \ I am not familiar with perl, so I wanted to ask if there is any way to do this\
    \ without using any modules?\n<|/ c |>\n<| c |>\n: I added a solution without\
    \ using any modules.\n<|/ c |>\n<| c |>\nThanks again. I am not familiar with\
    \ perl, so I wanted to ask if there is any way to do this without using any modules?\n\
    <|/ c |>\n<| c |>\n: I added a solution without using any modules.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        if ($letter eq \"a\") {\n       \
    \     $new_message .= $alphabet[$alphabet =~ /[aeiou]/];\n        } elsif ($letter\
    \ eq \"e\") {\n            $new_message .= $alphabet[$alphabet =~ /[aeiou]/];\n\
    \        } elsif ($letter eq \"i\") {\n            $new_message .= $alphabet[$alphabet\
    \ =~ /[aeiou]/];\n        } elsif ($letter eq \"o\") {\n            $new_message\
    \ .= $alphabet[$alphabet =~ /[aeiou]/];\n        } elsif ($letter eq \"u\") {\n\
    \            $new_message .= $alphabet[$alphabet =~ /[aeiou]/];\n        } elsif\
    \ ($letter eq \"y\") {\n            $new_message .= $alphabet[$alphabet =~ /[aeiou]/];\n\
    \        } else {\n            $new_message .= $letter;\n        }\n    }\n  \
    \  \n    return $new_message;\n}", "    my $message = $message;\n    my $vowels\
    \ = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $letters_2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowel_positions\
    \ = \"\";\n    my $vowel_positions_2 = \"\";\n    my $vowel_positions_3 = \"\"\
    ;\n    my $vowel_positions_4 = \"\";\n    my $vowel_positions_5 = \"\";\n    my\
    \ $vowel_positions_6 = \"\";\n    my $vowel_positions_7 = \"\";\n    my $vowel_positions_8\
    \ = \"\";\n    my $vowel_positions_9 = \"\";\n    my $vowel_positions_10 = \"\"\
    ;\n    my $vowel_positions_11 = \"\";\n    my $vowel_positions_12 = \"\";\n  \
    \  my $vowel_positions_13 = \"\";\n    my $vowel_positions_14 = \"\";\n    my\
    \ $vowel_positions_15 = \"\";\n    my $vowel_positions_16 = \"\";\n    my $vowel_positions_17\
    \ = \"\";\n    my $vowel_positions_18 = \"\";\n    my $vowel_positions_19 = \"\
    \";\n    my $vowel_positions_20 = \"\";\n    my $vowel_positions_21 = \"\";\n\
    \    my $vowel_positions_22 = \"\";\n    my $vowel_positions_23 = \"\";\n    my\
    \ $vowel_positions_24 = \"\";\n    my $vowel_positions_25 = \"\";\n    my $vowel_positions_26\
    \ = \"\";\n    my $vowel_positions_27 = \"\";\n    my $vowel_positions_28 = \"\
    \";\n    my $vowel_positions_29 = \"\";\n    my $vowel_positions_30 = \"\";\n\
    \    my $vowel_positions_31 = \"\";\n    my $vowel_positions_32 = \"\";\n    my\
    \ $vowel_positions_33 = \"\";\n    my $vowel_positions_34 = \"\";\n    my $vowel_positions_35\
    \ = \"\";\n    my $vowel_positions_36 = \"\";\n    my $vowel_positions_37 = \"\
    \";\n    my $vowel_positions_38 = \"\";\n    my $vowel_positions_39 = \"\";\n\
    \    my $vowel_positions_40 = \"\";\n    my $vowel_positions_41 = \"\";\n    my\
    \ $vowel_positions_42 = \"\";\n    my $vowel_positions_43 = \"\";\n    my $vowel_positions_44\
    \ = \"\";\n    my $vowel_positions_45 = \"\";\n    my $vowel_positions_46 = \"\
    \";\n    my $vowel_positions_47 = \"\";\n    my $vowel_positions_48 = \"\";\n\
    \    my $vowel_positions_49 = \"\";\n    my $", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels = \"aeiou\";\n    my $new_message = \"\";\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c", "    my $message = $message;\n  \
    \  my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 =\
    \ \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOU\";\n    my $vowels_5 =\
    \ \"AEIOUaeiouAEIOUaeiou\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_8 =\
    \ \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n  \
    \  my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n \
    \   my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", "    \n    my\
    \ $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my\
    \ $vowels = qw(a e i o u);\n    \n    my $i = 0;\n    \n    my $result = \"\"\
    ;\n    \n    foreach my $letter (split //, $message) {\n        if ($letter eq\
    \ \"a\") {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n\
    \        elsif ($letter eq \"e\") {\n            $letter = $alphabet[$i];\n  \
    \          $i++;\n        }\n        elsif ($letter eq \"i\") {\n            $letter\
    \ = $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq \"\
    o\") {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n \
    \       elsif ($letter eq \"u\") {\n            $letter = $alphabet[$i];\n   \
    \         $i++;\n        }\n        elsif ($letter eq \"y\") {\n            $letter\
    \ = $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq \"\
    a\") {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n \
    \       elsif ($letter eq \"e\") {\n            $letter = $alphabet[$i];\n   \
    \         $i++;\n        }\n        elsif ($letter eq \"i\") {\n            $letter\
    \ = $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq \"\
    o\") {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n \
    \       elsif ($letter eq \"u\") {\n            $letter = $alphabet[$i];\n   \
    \         $i++;\n        }\n        elsif ($letter eq \"y\") {\n            $letter\
    \ = $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq \"\
    a\") {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n \
    \       elsif ($letter eq \"e\") {\n            $letter = $alphabet[$i];\n   \
    \         $i++;\n        }\n        elsif ($letter eq \"i\") {\n            $letter\
    \ = $alphabet[$i];\n            $i++;\n        }\n        elsif ($letter eq \"\
    o\") {\n            $letter = $alphabet[$i];\n            $i++;\n        }\n \
    \       elsif ($letter eq \"u\") {\n            $letter = $alphabet[$i];\n   \
    \         $i++;\n        }\n        elsif ($letter eq \"y\") {\n            $",
  "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[aeiou]/[AEIOU]/ig;\n    $message =~ s/[aeiou]/[AEIOU]/ig;\n    $message\
    \ =~ s/[ae", "    my $alphabet = qw(a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z);\n    my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = length($message);\n\
    \    while($i < $l) {\n        my $letter = $message[$i];\n        my $new_letter\
    \ = $letter;\n        my $new_vowel = $letter;\n        if($letter =~ m/[aeiou]/)\
    \ {\n            $new_letter = $alphabet[$alphabet + $letter - $alphabet];\n \
    \       }\n        while($k < $l) {\n            my $letter = $message[$k];\n\
    \            my $new_letter = $letter;\n            my $new_vowel = $letter;\n\
    \            if($letter =~ m/[aeiou]/) {\n                $new_letter = $alphabet[$alphabet\
    \ + $letter - $alphabet];\n            }\n            while($j < $l) {\n     \
    \           my $letter = $message[$j];\n                my $new_letter = $letter;\n\
    \                my $new_vowel = $letter;\n                if($letter =~ m/[aeiou]/)\
    \ {\n                    $new_letter = $alphabet[$alphabet + $letter - $alphabet];\n\
    \                }\n                while($i < $l) {\n                    my $letter\
    \ = $message[$i];\n                    my $new_letter = $letter;\n           \
    \         my $new_vowel = $letter;\n                    if($letter =~ m/[aeiou]/)\
    \ {\n                        $new_letter = $alphabet[$alphabet + $letter - $alphabet];\n\
    \                    }\n                    if($new_letter eq $new_vowel) {\n\
    \                        $new_letter = $new_vowel;\n                    }\n  \
    \                  $new_message .= $new_letter;\n                    $i++;\n \
    \                   $j++;\n                    $k++;\n                }\n    \
    \        }\n        }\n        $new_message .= $new_letter;\n        $i++;\n \
    \   }\n    return $new_message;\n}", "    my $message = $message;\n    $message\
    \ =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[AEIOU]/[aeiou]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n    $message =~ s/[aeiou]/[AEIOU]/gi;\n\
    \    $message =~ s/[aeiou]/[AEIOU]/gi;\n", "    \n    # Write your code here\n\
    \    \n    return $message;\n}", "    \n    # Write your code here.\n    \n  \
    \  return $message;\n}", "    \n    # Write your code here.\n    \n    return\
    \ $message;\n}", "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels\
    \ = \"aeiou\";\n    my $new = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k\
    \ = 0;\n    my $l = length($message);\n    while($i < $l) {\n        my $letter\
    \ = $message[$i];\n        if($letter eq \"a\") {\n            $new .= $alphabet[$j];\n\
    \            $j++;\n        }\n        elsif($letter eq \"e\") {\n           \
    \ $new .= $alphabet[$j+1];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"i\") {\n            $new .= $alphabet[$j+2];\n            $j++;\n     \
    \   }\n        elsif($letter eq \"o\") {\n            $new .= $alphabet[$j+3];\n\
    \            $j++;\n        }\n        elsif($letter eq \"u\") {\n           \
    \ $new .= $alphabet[$j+4];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"y\") {\n            $new .= $alphabet[$j+5];\n            $j++;\n     \
    \   }\n        elsif($letter eq \"A\") {\n            $new .= $alphabet[$j+6];\n\
    \            $j++;\n        }\n        elsif($letter eq \"E\") {\n           \
    \ $new .= $alphabet[$j+7];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"I\") {\n            $new .= $alphabet[$j+8];\n            $j++;\n     \
    \   }\n        elsif($letter eq \"O\") {\n            $new .= $alphabet[$j+9];\n\
    \            $j++;\n        }\n        elsif($letter eq \"U\") {\n           \
    \ $new .= $alphabet[$j+10];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"Y\") {\n            $new .= $alphabet[$j+11];\n            $j++;\n    \
    \    }\n        elsif($letter eq \"a\") {\n            $new .= $alphabet[$j+2];\n\
    \            $j++;\n        }\n        elsif($letter eq \"e\") {\n           \
    \ $new .= $alphabet[$j+3];\n            $j++;\n        }\n        elsif($letter\
    \ eq \"i\") {\n            $new .= $alphabet[$j+4];\n            $j++;\n     \
    \   }\n        elsif($letter eq \"o\") {\n            $new .= $alphabet[$j+5];\n\
    \            $j++;\n        }\n        elsif($", "    $message =~ s/([aeiou])/\n\
    \        $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/\
    \ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1\
    \ =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/\
    \ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1\
    \ =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/\
    \ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1\
    \ =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/\
    \ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1\
    \ =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/\
    \ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1 =~ /[aeiou]/ ? $1\
    \ =~ /[aeiou]/ ? $1 =~ /[", "    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou", "    my $alphabet = \"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    my $vowels = \"AEIOU\";\n    my $new = \"\"\
    ;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m =\
    \ 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r\
    \ = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my\
    \ $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    \n    foreach my\
    \ $char (split //, $message) {\n        if ($char eq \"A\") {\n            $new\
    \ = $alphabet . $alphabet;\n        }\n        elsif ($char eq \"E\") {\n    \
    \        $new = $alphabet . $alphabet;\n        }\n        elsif ($char eq \"\
    I\") {\n            $new = $alphabet . $alphabet;\n        }\n        elsif ($char\
    \ eq \"O\") {\n            $new = $alphabet . $alphabet;\n        }\n        elsif\
    \ ($char eq \"U\") {\n            $new = $alphabet . $alphabet;\n        }\n \
    \       elsif ($char eq \"a\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"e\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"i\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"o\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"u\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"U\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"0\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"1\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"2\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"3\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"4\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq \"5\") {\n            $new = $alphabet . $alphabet;\n\
    \        }\n        elsif ($char eq", "    my $alphabet = qw(A B C D E F G H I\
    \ J K L M N O P Q R S T U V W X Y Z);\n    my $vowels = qw(a e i o u);\n    my\
    \ $new_message = \"\";\n    \n    foreach my $letter (split //, $message) {\n\
    \        if ($letter =~ /[a-z]/) {\n            $new_message .= $letter;\n   \
    \     }\n        else {\n            my $index = index($alphabet, $letter);\n\
    \            if ($index >= 0) {\n                $new_message .= $alphabet[$index\
    \ + 2];\n            }\n            else {\n                $new_message .= $letter;\n\
    \            }\n        }\n    }\n    \n    foreach my $vowel (split //, $vowels)\
    \ {\n        $new_message =~ s/$vowel/$alphabet[$alphabet + $vowel - $alphabet]/g;\n\
    \    }\n    \n    return $new_message;\n}", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        if ($letter =~ /[AEIOU]/) {\n   \
    \         $new_message .= $letter;\n        }\n        else {\n            $new_message\
    \ .= $alphabet[$alphabet =~ /(?<!^)$letter(?!$)/];\n        }\n    }\n    return\
    \ $new_message;\n}", "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n\
    \    $message =~ s/[AEIOUaeiou]/[AEIOUaeiou]/g;\n    $message =~ s/[AEIOUaeiou]/[AEIOU",
  "    my $message = $message;\n    my @vowels = qw(a e i o u);\n    my @letters =\
    \ qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @vowel_positions\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letter_positions\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_2\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_3\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_4\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_5\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_6\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_7\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_8\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_9\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_positions_10\
    \ = qw(a b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my @letters_",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $output = '';\n    \n    foreach my $letter (split //, $message) {\n\
    \        my $index = index($alphabet, $letter);\n        if ($index != -1) {\n\
    \            $output .= substr($alphabet, $index, 1);\n        }\n        else\
    \ {\n            $output .= $letter;\n        }\n    }\n    \n    foreach my $vowel\
    \ (split //, $vowels) {\n        $output .= substr($alphabet, index($alphabet,\
    \ $vowel) + 2, 1);\n    }\n    \n    return $output;\n}", "    my $message2 =\
    \ \"\";\n    my $vowels = \"aeiouAEIOU\";\n    my $vowels_count = length($vowels);\n\
    \    my $vowels_index = 0;\n    my $vowels_index2 = 0;\n    my $vowels_index3\
    \ = 0;\n    my $vowels_index4 = 0;\n    my $vowels_index5 = 0;\n    my $vowels_index6\
    \ = 0;\n    my $vowels_index7 = 0;\n    my $vowels_index8 = 0;\n    my $vowels_index9\
    \ = 0;\n    my $vowels_index10 = 0;\n    my $vowels_index11 = 0;\n    my $vowels_index12\
    \ = 0;\n    my $vowels_index13 = 0;\n    my $vowels_index14 = 0;\n    my $vowels_index15\
    \ = 0;\n    my $vowels_index16 = 0;\n    my $vowels_index17 = 0;\n    my $vowels_index18\
    \ = 0;\n    my $vowels_index19 = 0;\n    my $vowels_index20 = 0;\n    my $vowels_index21\
    \ = 0;\n    my $vowels_index22 = 0;\n    my $vowels_index23 = 0;\n    my $vowels_index24\
    \ = 0;\n    my $vowels_index25 = 0;\n    my $vowels_index26 = 0;\n    my $vowels_index27\
    \ = 0;\n    my $vowels_index28 = 0;\n    my $vowels_index29 = 0;\n    my $vowels_index30\
    \ = 0;\n    my $vowels_index31 = 0;\n    my $vowels_index32 = 0;\n    my $vowels_index33\
    \ = 0;\n    my $vowels_index34 = 0;\n    my $vowels_index35 = 0;\n    my $vowels_index36\
    \ = 0;\n    my $vowels_index37 = 0;\n    my $vowels_index38 = 0;\n    my $vowels_index39\
    \ = 0;\n    my $vowels_index40 = 0;\n    my $vowels_index41 = 0;\n    my $vowels_index42\
    \ = 0;\n    my $vowels_index43 = 0;\n    my $vowels_index44 = 0;\n    my $vowels_index45\
    \ = 0;\n    my $vowels_index46 = 0;\n    my $vowels_index47 = 0;\n    my $vowels_index48\
    \ = 0;\n    my $vowels_index49 = 0;\n    my $vowels_index50 = 0;\n    my $vowels_index51\
    \ = 0;\n    my $vowels_index52 = 0;\n    my $vowels_index53 = 0;\n    my $vowels_index54\
    \ = 0;\n    my $vowels_index55 = 0;\n    my $vowels_index56 = 0;\n    my $vowels_index57\
    \ = 0;\n    my $vowels_index58 = 0;\n    my $vowels_index59 = 0;\n    my $vowels_index60\
    \ = 0;\n    my $vowels_index61 = 0;\n    my $", "    my $message2 = \"\";\n  \
    \  my $vowels = \"aeiouAEIOU\";\n    my $vowelsCount = length($vowels);\n    my\
    \ $vowelsCount2 = length($vowels);\n    my $vowelsCount3 = length($vowels);\n\
    \    my $vowelsCount4 = length($vowels);\n    my $vowelsCount5 = length($vowels);\n\
    \    my $vowelsCount6 = length($vowels);\n    my $vowelsCount7 = length($vowels);\n\
    \    my $vowelsCount8 = length($vowels);\n    my $vowelsCount9 = length($vowels);\n\
    \    my $vowelsCount10 = length($vowels);\n    my $vowelsCount11 = length($vowels);\n\
    \    my $vowelsCount12 = length($vowels);\n    my $vowelsCount13 = length($vowels);\n\
    \    my $vowelsCount14 = length($vowels);\n    my $vowelsCount15 = length($vowels);\n\
    \    my $vowelsCount16 = length($vowels);\n    my $vowelsCount17 = length($vowels);\n\
    \    my $vowelsCount18 = length($vowels);\n    my $vowelsCount19 = length($vowels);\n\
    \    my $vowelsCount20 = length($vowels);\n    my $vowelsCount21 = length($vowels);\n\
    \    my $vowelsCount22 = length($vowels);\n    my $vowelsCount23 = length($vowels);\n\
    \    my $vowelsCount24 = length($vowels);\n    my $vowelsCount25 = length($vowels);\n\
    \    my $vowelsCount26 = length($vowels);\n    my $vowelsCount27 = length($vowels);\n\
    \    my $vowelsCount28 = length($vowels);\n    my $vowelsCount29 = length($vowels);\n\
    \    my $vowelsCount30 = length($vowels);\n    my $vowelsCount31 = length($vowels);\n\
    \    my $vowelsCount32 = length($vowels);\n    my $vowelsCount33 = length($vowels);\n\
    \    my $vowelsCount34 = length($vowels);\n    my $vowelsCount35 = length($vowels);\n\
    \    my $vowelsCount36 = length($vowels);\n    my $vowelsCount37 = length($vowels);\n\
    \    my $vowelsCount38 = length($vowels);\n    my $vowelsCount39 = length($vowels);\n\
    \    my $vowelsCount40 = length($vowels);\n    my $vowelsCount41 = length($vowels);\n\
    \    my $vowelsCount42 = length($vowels);\n    my $vowels", "    my $message =\
    \ $message;\n    my $vowels = \"aeiou\";\n    my $vowels_2 = \"AEIOU\";\n    my\
    \ $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4 = \"AEIOUaeiouAEIOU\";\n    my\
    \ $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae",
  "    my $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\"\
    ;\n    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $vowel_position = 0;\n    my $letter;\n    foreach $letter (split //,\
    \ $message) {\n        if ($letter =~ /[aeiou]/) {\n            $new_message .=\
    \ $letter;\n        }\n        else {\n            $new_message .= $alphabet[$j];\n\
    \            $j++;\n        }\n    }\n    foreach $letter (split //, $new_message)\
    \ {\n        if ($letter =~ /[aeiou]/) {\n            $new_message .= $alphabet[$k];\n\
    \            $k++;\n        }\n        else {\n            $new_message .= $alphabet[$i];\n\
    \            $i++;\n        }\n    }\n    return $new_message;\n}\n</code>\n<|/\
    \ a tags=perl,algorithm |>\n<| c |>\nThe OP said \"only letters\".  Your code\
    \ will fail for \"This is a message\".\n<|/ c |>\n<| c |>\n: I see what you mean.\
    \ I'll fix it.\n<|/ c |>\n<| c |>\n: I fixed it now. Thanks.\n<|/ c |>\n<| c |>\n\
    : I fixed it now. Thanks.\n<|/ c |>\n<| c |>\n: I fixed it now. Thanks.\n<|/ c\
    \ |>\n<| a tags=perl,algorithm |>\n<code>", "    my $message_size = length($message);\n\
    \    my $vowels = \"aeiou\";\n    my $vowels_size = length($vowels);\n    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $alphabet_size = length($alphabet);\n\
    \    my $new_message = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n",
  "    \n    my @vowels = qw(a e i o u);\n    \n    my @new_message = ();\n    \n\
    \    foreach my $letter (split //, $message) {\n        my $new_letter = $letter;\n\
    \        \n        foreach my $vowel (@vowels) {\n            my $index = index($letter,\
    \ $vowel);\n            \n            if ($index != -1) {\n                $new_letter\
    \ .= $letter;\n                $new_letter .= $vowels[$index + 1];\n         \
    \   }\n        }\n        \n        push (@new_message, $new_letter);\n    }\n\
    \    \n    return join \"\", @new_message;\n}", "    my $result = \"\";\n    my\
    \ $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n  \
    \  my $vowels_index = 0;\n    my $letters_index = 0;\n    my $vowels_counter =\
    \ 0;\n    my $letters_counter = 0;\n    \n    foreach my $letter (split //, $message)\
    \ {\n        if ($letter eq \"a\") {\n            $letters_counter++;\n      \
    \  }\n        elsif ($letter eq \"e\") {\n            $letters_counter++;\n  \
    \      }\n        elsif ($letter eq \"i\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"y\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"i\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"y\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"i\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"y\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"a\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"e\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"i\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"o\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter eq \"u\") {\n            $letters_counter++;\n\
    \        }\n        elsif ($letter ", "    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split //, $message) {\n        my $index = index($alphabet, $letter);\n\
    \        if ($index != -1) {\n            $new_message .= substr($alphabet, $index,\
    \ 1);\n        }\n        else {\n            $new_message .= $letter;\n     \
    \   }\n    }\n    \n    foreach my $letter (split //, $new_message) {\n      \
    \  my $index = index($vowels, $letter);\n        if ($index != -1) {\n       \
    \     $new_message .= substr($alphabet, $index + 1, 1);\n        }\n        else\
    \ {\n            $new_message .= $letter;\n        }\n    }\n    \n    return\
    \ $new_message;\n}", "    my $message = $message;\n    my $vowels = \"aeiou\"\
    ;\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels_positions\
    \ = $vowels =~ /[aeiou]/gi;\n    my $letters_positions = $letters =~ /[aeiou]/gi;\n\
    \    my $new_message = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        if ($letter =~ /[aeiou]/) {\n            $new_message .= $letter;\n\
    \        }\n        else {\n            $new_message .= $letters[$letters_positions[$letter]];\n\
    \        }\n    }\n    \n    foreach my $vowel (split //, $vowels) {\n       \
    \ $new_message .= $letters[$letters_positions[$vowel]];\n    }\n    \n    return\
    \ $new_message;\n}", "    $message =~ s/([aeiou])/lc($1)/ge;\n    $message =~\
    \ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou])/lc($1)/ge;\n    $message\
    \ =~ s/([aeiou])/lc($1)/ge;\n    $message =~ s/([aeiou", "    my $alphabet = qw(a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z);\n    my $vowels = qw(a e\
    \ i o u);\n    my $new = \"\";\n    \n    foreach my $letter (split //, $message)\
    \ {\n        my $index = index($alphabet, $letter);\n        if ($index != -1)\
    \ {\n            $new .= substr($alphabet, $index, 1);\n        }\n        else\
    \ {\n            $new .= $letter;\n        }\n    }\n    \n    foreach my $vowel\
    \ (split //, $vowels) {\n        $new .= substr($alphabet, index($alphabet, $vowel)\
    \ + 1, 1);\n    }\n    \n    return $new;\n}", "    $message =~ tr/A-Z/a-z/;\n\
    \    $message =~ tr/aeiou/AEIOU/;\n    $message =~ tr/aeiouAEIOU/aeiou/;\n   \
    \ return $message;\n}", "    my $encoded = \"\";\n    my $vowels = \"aeiouAEIOU\"\
    ;\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\";\n    foreach my $letter (split\
    \ //, $message) {\n        if ($letter =~ /[aeiou]/) {\n            $encoded .=\
    \ $letters[$letter - $vowels];\n        } else {\n            $encoded .= $letter;\n\
    \        }\n    }\n    return $encoded;\n}\n</code>\n<|/ a tags=perl,regex |>\n\
    <| c |>\nI like your solution, but I feel like it could be made more efficient\
    \ by using a hash to map letters to their position in the alphabet. Something\
    \ like `my %letters = (a => 0, b => 1, c => 2, ...); $letters[$letter] //= $letters[$letter\
    \ - $vowels];`\n<|/ c |>\n<| c |>\n: That would work, but then you'd have to do\
    \ `$letters[$letter] //= $letters[$letter - $vowels]` for each letter in the alphabet,\
    \ which would make it even more inefficient.\n<|/ c |>\n<| c |>\n: Yes, I agree.\
    \ I was just pointing out that your solution doesn't use any hashing at all. :)\n\
    <|/ c |>\n<| c |>\n: I added a hash-based solution to my answer.\n<|/ c |>\n<|\
    \ a dscore=2 |>\n<code>\nuse strict;\nuse warnings;", "    my $message2 = \"\"\
    ;\n    my $vowels = \"aeiouAEIOU\";\n    my $vowelsCount = length($vowels);\n\
    \    my $vowelsIndex = 0;\n    my $vowelsIndex2 = length($vowels) * 2;\n    my\
    \ $vowelsIndex3 = length($vowels) * 3;\n    my $vowelsIndex4 = length($vowels)\
    \ * 4;\n    my $vowelsIndex5 = length($vowels) * 5;\n    my $vowelsIndex6 = length($vowels)\
    \ * 6;\n    my $vowelsIndex7 = length($vowels) * 7;\n    my $vowelsIndex8 = length($vowels)\
    \ * 8;\n    my $vowelsIndex9 = length($vowels) * 9;\n    my $vowelsIndex10 = length($vowels)\
    \ * 10;\n    my $vowelsIndex11 = length($vowels) * 11;\n    my $vowelsIndex12\
    \ = length($vowels) * 12;\n    my $vowelsIndex13 = length($vowels) * 13;\n   \
    \ my $vowelsIndex14 = length($vowels) * 14;\n    my $vowelsIndex15 = length($vowels)\
    \ * 15;\n    my $vowelsIndex16 = length($vowels) * 16;\n    my $vowelsIndex17\
    \ = length($vowels) * 17;\n    my $vowelsIndex18 = length($vowels) * 18;\n   \
    \ my $vowelsIndex19 = length($vowels) * 19;\n    my $vowelsIndex20 = length($vowels)\
    \ * 20;\n    my $vowelsIndex21 = length($vowels) * 21;\n    my $vowelsIndex22\
    \ = length($vowels) * 22;\n    my $vowelsIndex23 = length($vowels) * 23;\n   \
    \ my $vowelsIndex24 = length($vowels) * 24;\n    my $vowelsIndex25 = length($vowels)\
    \ * 25;\n    my $vowelsIndex26 = length($vowels) * 26;\n    my $vowelsIndex27\
    \ = length($vowels) * 27;\n    my $vowelsIndex28 = length($vowels) * 28;\n   \
    \ my $vowelsIndex29 = length($vowels) * 29;\n    my $vowelsIndex30 = length($vowels)\
    \ * 30;\n    my $vowelsIndex31 = length($vowels) * 31;\n    my $vowelsIndex32\
    \ = length($vowels) * 32;\n    my $vowelsIndex33 = length($vowels) * 33;\n   \
    \ my $vowelsIndex34 = length($vowels) * 34;\n    my $vowelsIndex35 = length($vowels",
  "    my $alphabet = qw(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z);\n \
    \   my $vowels = qw(a e i o u);\n    my $new_message = \"\";\n    \n    foreach\
    \ my $letter (split(//, $message)) {\n        my $new_letter = $letter;\n    \
    \    foreach my $vowel (split(//, $letter)) {\n            my $index = index($alphabet,\
    \ $vowel);\n            if ($index != -1) {\n                $new_letter .= $alphabet[$index\
    \ + 2];\n            }\n        }\n        $new_message .= $new_letter;\n    }\n\
    \    return $new_message;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThank\
    \ you so much for your help. I really appreciate it. I will try this out and let\
    \ you know how it goes.\n<|/ c |>\n<| c |>\nI ran the code and it worked perfectly.\
    \ Thank you so much for your help. I really appreciate it.\n<|/ c |>\n<| c |>\n\
    I ran the code and it worked perfectly. Thank you so much for your help. I really\
    \ appreciate it.\n<|/ c |>\n<| a |>\nThis problem can be solved using two regexes\
    \ and substitutions:\n<code>\nmy $string = 'This is a message';\n$string =~ s/([aeiou])/$1/g;\n\
    $string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n\
    $string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n\
    $string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n\
    $string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n\
    $string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n$string =~ s/([aeiou])/$1/g;\n\
    $string =~ s/([aeiou])/", "    my $message = $message;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $message =~ s/([aeiou])/uc($1)/ge;\n\
    \    $message =~ s/([aeiou])/uc($1)/ge;\n    $", "    my $message = $message;\n\
    \    my $vowels = \"aeiou\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowels_2 = \"AEIOU\";\n    my $letters_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_2_2 = \"AEIOU\";\n    my $letters_2_2 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_3 = \"AEIOU\";\n    my $letters_3 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_4 = \"AEIOU\";\n    my $letters_4 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_5 = \"AEIOU\";\n    my $letters_5 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_6 = \"AEIOU\";\n    my $letters_6 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_7 = \"AEIOU\";\n    my $letters_7 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_8 = \"AEIOU\";\n    my $letters_8 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_9 = \"AEIOU\";\n    my $letters_9 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_10 = \"AEIOU\";\n    my $letters_10 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_11 = \"AEIOU\";\n    my $letters_11 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_12 = \"AEIOU\";\n    my $letters_12 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_13 = \"AEIOU\";\n    my $letters_13 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_14 = \"AEIOU\";\n    my $letters_14 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_15 = \"AEIOU\";\n    my $letters_15 = \"BCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    my $vowels_16 = \"AEIOU\";\n    my $letters_16 = \"BCDFGHJKLMNPQRSTVWXYZ",
  "    my $message = $message;\n    my $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    my $vowels = \"AEIOU\";\n    my $new = \"\";\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = length($message);\n    my $l = length($alphabet);\n\
    \    my $l = length($vowels);\n    my $l = length($new);\n    my $l = length($message);\n\
    \    my $l = length($alphabet);\n    my $l = length($vowels);\n    my $l = length($new);\n\
    \    my $l = length($message);\n    my $l = length($alphabet);\n    my $l = length($vowels);\n\
    \    my $l = length($new);\n    my $l = length($message);\n    my $l = length($alphabet);\n\
    \    my $l = length($vowels);\n    my $l = length($new);\n    my $l = length($message);\n\
    \    my $l = length($alphabet);\n    my $l = length($vowels);\n    my $l = length($new);\n\
    \    my $l = length($message);\n    my $l = length($alphabet);\n    my $l = length($vowels);\n\
    \    my $l = length($new);\n    my $l = length($message);\n    my $l = length($alphabet);\n\
    \    my $l = length($vowels);\n    my $l = length($new);\n    my $l = length($message);\n\
    \    my $l = length($alphabet);\n    my $l = length($vowels);\n    my $l = length($new);\n\
    \    my $l = length($message);\n    my $l = length($alphabet);\n    my $l = length($vowels);\n\
    \    my $l = length($new);\n    my $l = length($message);\n    my $l = length($alphabet);\n\
    \    my $l = length($vowels);\n    my $l = length($new);\n    my $l = length($message);\n\
    \    my $l = length($alphabet);\n    my $l = length($vowels);\n    my $l = length($new);\n\
    \    my $l = length($message);\n    my $l = length($alphabet);\n    my $l = length($vowels);\n\
    \    my $l = length($new);\n    my $l = length($message);\n    my $l = length($alphabet);\n\
    \    my $l = length($vowels);\n    my $l = length($new);\n    my $l = length($message);\n\
    \    my $l = length($alphabet);\n    my $l = length($vowels);\n    my $l = length($new);\n\
    \    my $l = length($message);\n    my $l = length($alphabet);\n    my $l = length($vowels);\n\
    \    ", "    $message =~ tr/A-Z/a-z/;\n    $message =~ s/[aeiou]/[aeiou][aeiou]/g;\n\
    \    $message =~ s/[AEIOU]/[AEIOU][AEIOU]/g;\n    $message =~ s/[aeiouAEIOU]/[aeiouAEIOU][aeiouAEIOU]/g;\n\
    \    return $message;\n}", "    my $message = $message;\n    my $vowels = \"aeiou\"\
    ;\n    my $vowels_2 = \"AEIOU\";\n    my $vowels_3 = \"AEIOUaeiou\";\n    my $vowels_4\
    \ = \"AEIOUaeiouAEIOU\";\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiou\";\n    my\
    \ $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_8 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_9\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_18 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUae", "    my $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n    my $new_message\
    \ = \"\";\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n  \
    \  my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n\
    \    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n\
    \    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n\
    \    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n\
    \    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n\
    \    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n\
    \    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n\
    \    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n\
    \    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c", " \
    \   \n    # Write your code here\n    \n    return $message;\n}", "    my $message\
    \ = $message;\n    $message =~ s/([aeiou])/\n        my $vowel = $1;\n       \
    \ $vowel =~ tr/aeiou/AEIOU/;\n        $vowel =~ tr/AEIOU/aeiou/;\n        $vowel\
    \ =~ tr/aeiouAEIOU/AEIOU/;\n        $vowel =~ tr/AEIOU/aeiouAEIOU/;\n        $vowel\
    \ =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n\
    \        $vowel =~ tr/aeiouAEIOU/aeiouAEIOU/;\n        $vowel", "    my $message\
    \ = $message;\n    my $vowels = \"aeiouAEIOU\";\n    my $vowels_2 = \"AEIOUaeiou\"\
    ;\n    my $vowels_3 = \"AEIOUaeiouAEIOU\";\n    my $vowels_4 = \"AEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_5 = \"AEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_6 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_7 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\";\n    my $vowels_8\
    \ = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\";\n    my $vowels_9 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_10 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_11 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_12 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_13 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_14 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_15 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU\"\
    ;\n    my $vowels_16 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou\"\
    ;\n    my $vowels_17 = \"AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIO",
  "    my $encoded = \"\";\n    \n    foreach my $letter (split(//, $message)) {\n\
    \        my $pos = index($letter, \"a\");\n        if ($pos == -1) {\n       \
    \     $encoded .= $letter;\n        } else {\n            my $vowel = substr($letter,\
    \ $pos + 1);\n            $encoded .= substr($letter, 0, $pos) . substr($letter,\
    \ $pos + 1, 1) . $vowel;\n        }\n    }\n    return $encoded;\n}", "    my\
    \ $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    my $vowels = \"aeiou\";\n \
    \   my $new = \"\";\n    \n    foreach my $letter (split //, $message) {\n   \
    \     if ($letter =~ /[aeiou]/) {\n            $new .= $letter;\n        } else\
    \ {\n            $new .= $alphabet[$alphabet =~ /(?<!\\Q$letter\\E)(?!\\Q$letter\\\
    E)$vowels/];\n        }\n    }\n    return $new;\n}", "    my $encoded = \"\"\
    ;\n    my $vowels = \"aeiouAEIOU\";\n    my $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    my $vowel_counter = 0;\n    my $letter_counter = 0;\n    my $letter_index\
    \ = 0;\n    my $vowel_index = 0;\n    my $letter_to_replace;\n    my $vowel_to_replace;\n\
    \    my $letter_to_add;\n    my $vowel_to_add;\n    foreach my $letter (split\
    \ //, $message) {\n        if ($letter eq \"a\") {\n            $letter_to_replace\
    \ = $letters[$letter_index];\n            $letter_index++;\n        } elsif ($letter\
    \ eq \"e\") {\n            $letter_to_replace = $letters[$letter_index];\n   \
    \         $letter_index++;\n        } elsif ($letter eq \"i\") {\n           \
    \ $letter_to_replace = $letters[$letter_index];\n            $letter_index++;\n\
    \        } elsif ($letter eq \"o\") {\n            $letter_to_replace = $letters[$letter_index];\n\
    \            $letter_index++;\n        } elsif ($letter eq \"u\") {\n        \
    \    $letter_to_replace = $letters[$letter_index];\n            $letter_index++;\n\
    \        } elsif ($letter eq \"A\") {\n            $letter_to_replace = $letters[$letter_index];\n\
    \            $letter_index++;\n        } elsif ($letter eq \"E\") {\n        \
    \    $letter_to_replace = $letters[$letter_index];\n            $letter_index++;\n\
    \        } elsif ($letter eq \"I\") {\n            $letter_to_replace = $letters[$letter_index];\n\
    \            $letter_index++;\n        } elsif ($letter eq \"O\") {\n        \
    \    $letter_to_replace = $letters[$letter_index];\n            $letter_index++;\n\
    \        } elsif ($letter eq \"U\") {\n            $letter_to_replace = $letters[$letter_index];\n\
    \            $letter_index++;\n        } else {\n            $letter_to_replace\
    \ = $letter;\n        }\n        foreach my $vowel (split //, $vowels) {\n   \
    \         if ($vowel eq \"a\") {\n                $vowel_to_replace = $vowels[$vowel_index];\n\
    \                $vowel_index++;\n            } elsif ($vowel eq \"e\") {\n  \
    \              $vowel_to_replace = $vowels[$vowel_index];\n                $vowel_index++;\n\
    \            } elsif ($vowel eq \"i\") {\n                $vowel_to_replace =\
    \ $vowels[$vowel_index];\n                $vowel_index++;\n            } elsif\
    \ ($vowel eq \"o\") {\n                $vowel_to_replace = $vowels[$vowel_index];\n\
    \                $"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

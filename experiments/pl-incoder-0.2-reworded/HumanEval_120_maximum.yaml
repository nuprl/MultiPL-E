name: HumanEval_120_maximum
language: pl
prompt: "# Given an array arr of integers and a positive integer k, return a sorted\
  \ array \n# of length k with the maximum k numbers in arr.\n# Example 1:\n# >>>\
  \ maximum([-3, -4, 5], 3)\n# [-4, -3, 5]\n# Example 2:\n# >>> maximum([4, -4, 4],\
  \ 2)\n# [4, 4]\n# Example 3:\n# >>> maximum([-3, 2, 1, 2, -1, -2, 1], 1)\n# [2]\n\
  # Note:\n# 1. The length of the array will be in the range of [1, 1000].\n# 2. The\
  \ elements in the array will be in the range of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n\
  sub maximum {\n    my($arr, $k) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&maximum;\n\
  \        if(eq_deeply($candidate->([-3, -4, 5], 3),[-4, -3, 5])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
  \ -4, 4], 2),[4, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([-3, 2, 1, 2, -1, -2, 1], 1),[2])) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([123,\
  \ -123, 20, 0, 1, 2, -3], 3),[2, 20, 123])) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->([-123, 20, 0, 1, 2,\
  \ -3], 4),[0, 1, 2, 20])) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->([5, 15, 0, 3, -13, -8, 0], 7),[-13, -8,\
  \ 0, 0, 3, 5, 15])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([-1, 0, 2, 5, 3, -10], 2),[3, 5])) {\n      \
  \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 0, 5, -7], 1),[5])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([4, -4], 2),[-4, 4])) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-10,\
  \ 10], 2),[-10, 10])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([1, 2, 3, -23, 243, -400, 0], 0),[])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @result;\n    my $max = $arr[0];\n    my $index = 0;\n    \n\
    \    for(my $i = 1; $i <= $k; $i++) {\n        if($arr[$i] > $max) {\n       \
    \     $max = $arr[$i];\n            $index = $i;\n        }\n    }\n    \n   \
    \ for(my $i = 0; $i <= $index; $i++) {\n        push(@result, $arr[$i]);\n   \
    \ }\n    \n    return @result;\n}", "    my @res;\n    my $i = 0;\n    my $j =\
    \ 0;\n    my $max = 0;\n    my $tmp = 0;\n    \n    while($i < $k) {\n       \
    \ $tmp = $arr[$i];\n        $j = 0;\n        while($j < $k) {\n            last\
    \ if $tmp > $arr[$j];\n            $j++;\n        }\n        push @res, $tmp;\n\
    \        $i++;\n    }\n    \n    return @res;\n}", "    my @res;\n    my $len\
    \ = @$arr;\n    my $max = $arr->[0];\n    my $i;\n    \n    for ($i = 1; $i <=\
    \ $len; $i++) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n\
    \        }\n    }\n    \n    for ($i = 1; $i <= $k; $i++) {\n        if ($arr->[$i]\
    \ == $max) {\n            push(@res, @$arr);\n        }\n    }\n    \n    return\
    \ @res;\n}", "    my @result;\n    my $max;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $maxi;\n    my $maxj;\n    my $maxk;\n    my $min;\n    my $mini;\n  \
    \  my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n   \
    \ my $mink;\n    my $maxi;\n    my $maxj;\n    my $maxk;\n    my $mini;\n    my\
    \ $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n\
    \    my $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n    my $maxj;\n \
    \   my $maxk;\n    my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n  \
    \  my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n   \
    \ my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n    my\
    \ $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n\
    \    my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n \
    \   my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n  \
    \  my $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n    my $maxj;\n   \
    \ my $maxk;\n    my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n    my\
    \ $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n\
    \    my $maxj;\n    my $maxk;\n    my $minj;\n    my $mink;\n    my $maxj;\n \
    \   my $maxk;\n    my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n  \
    \  my $minj;\n    my $mink;\n    my $maxj;\n    my $maxk;\n    my $minj;\n   \
    \ my $mink;\n    my $max", "    my @result;\n    my $max = 0;\n    my $i;\n  \
    \  \n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n     \
    \       $max = $arr[$i];\n        }\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        if ($arr[$i] == $max) {\n            push(@result, $arr[$i]);\n \
    \       }\n    }\n    \n    return @result;\n}", "    my @result;\n    my $max;\n\
    \    my $i;\n    my $j;\n    my $maxIndex;\n    my $maxValue;\n    my $maxCount;\n\
    \    my $maxCountIndex;\n    my $maxCountValue;\n    my $maxCountCount;\n    my\
    \ $maxCountCountIndex;\n    my $maxCountCountValue;\n    my $maxCountCountCount;\n\
    \    my $maxCountCountCountIndex;\n    my $maxCountCountCountValue;\n    my $maxCountCountCountCount;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCountValue;\n\
    \    my $maxCountCountCountCountIndex;\n    my $maxCountCountCountCount", "  \
    \  my @result;\n    my $max = 0;\n    my $i;\n    my $j;\n    my $tmp;\n    \n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i] if $arr[$i] > $max;\n\
    \    }\n    \n    for ($i = 0; $i < $k; $i++) {\n        $tmp = $arr[$i];\n  \
    \      for (; $i < $k; $i++) {\n            $tmp = $arr[$i] if $arr[$i] > $tmp;\n\
    \        }\n        \n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $arr[$i] = $arr[$i] if $arr[$i] > $max;\n    }\n \
    \   \n    for ($i = 0; $i < $k; $i++) {\n        $arr[$i] = $arr[$i] if $arr[$i]\
    \ > $max;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n        $arr[$i] =\
    \ $arr[$i] if $arr[$i] > $max;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $arr[$i] = $arr[$i] if $arr[$i] > $max;\n    }\n    \n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $arr[$i] = $arr[$i] if $arr[$i] > $max;\n    }\n \
    \   \n    for ($i = 0; $i < $k; $i++) {\n        $arr[$i] = $arr[$i] if $arr[$i]\
    \ > $max;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n        $arr[$i] =\
    \ $arr[$i] if $arr[$i] > $max;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $arr[$i] = $arr[$i] if $arr[$i] > $max;\n    }\n    \n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $arr[$i] = $arr[$i] if $arr[$i] > $max;\n    }\n \
    \   \n    for ($i = 0; $i < $k; $i++) {\n        $arr[$i] = $arr[$i] if $arr[$i]\
    \ > $max;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n        $arr[$i] =\
    \ $arr[$i] if $arr[$i] > $max;\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n\
    \        $arr[$i] = $arr[$", "    my @result;\n    my $max;\n    my $i;\n    my\
    \ $j;\n    my $maxi;\n    my $maxj;\n    my $maxk;\n    my $min;\n    my $mini;\n\
    \    my $minj;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my\
    \ $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n\
    \    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my\
    \ $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n\
    \    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my\
    \ $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n\
    \    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $", "    my @result;\n    my $max = $arr[0];\n    my $i;\n    my $j;\n  \
    \  my $k;\n    \n    for ($i = 1; $i <= $#arr; $i++) {\n        $max = $max >\
    \ $arr[$i] ? $max : $arr[$i];\n    }\n    \n    for ($i = 1; $i <= $k; $i++) {\n\
    \        $j = 0;\n        $k = $i;\n        \n        while ($k >= 0) {\n    \
    \        $j++;\n            $k--;\n        }\n        \n        push(@result,\
    \ $max);\n    }\n    \n    return @result;\n}", "    my @result;\n    my $max\
    \ = 0;\n    my $i;\n    my $j;\n    my $tmp;\n    \n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n       \
    \     if ($tmp > $arr[$j]) {\n                $tmp = $arr[$j];\n            }\n\
    \        }\n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n            if\
    \ ($tmp > $arr[$j]) {\n                $tmp = $arr[$j];\n            }\n     \
    \   }\n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n            if\
    \ ($tmp > $arr[$j]) {\n                $tmp = $arr[$j];\n            }\n     \
    \   }\n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n            if\
    \ ($tmp > $arr[$j]) {\n                $tmp = $arr[$j];\n            }\n     \
    \   }\n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n            if\
    \ ($tmp > $arr[$j]) {\n                $tmp = $arr[$j];\n            }\n     \
    \   }\n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n            if\
    \ ($tmp > $arr[$j]) {\n                $tmp = $arr[$j];\n            }\n     \
    \   }\n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n            if\
    \ ($tmp > $arr[$j]) {\n                $tmp = $arr[$j];\n            }\n     \
    \   }\n        $arr[$i] = $tmp;\n    }\n    \n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $tmp = $arr[$i];\n        for (; $j < $k; $j++) {\n            if\
    \ (", "    my @result;\n    my $max = 0;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $temp;\n    \n    # Find the max number in the array\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $max = $arr[$i] if $arr[$i] > $max;\n    }\n    \n\
    \    # Find the max number in the array\n    for ($i = 0; $i < $k; $i++) {\n \
    \       $temp = $arr[$i];\n        $j = $i;\n        while ($j > 0 && $temp >\
    \ $arr[$j - 1]) {\n            $arr[$j] = $arr[$j - 1];\n            $j--;\n \
    \       }\n        $arr[$j] = $temp;\n    }\n    \n    # Sort the array\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    \n  \
    \  return @result;\n}", "    my @result;\n    my $max = 0;\n    my $i;\n    my\
    \ $j;\n    my $maxi;\n    my $maxj;\n    my $maxk;\n    my $maxk;\n    my $min;\n\
    \    my $mini;\n    my $minj;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my\
    \ $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n\
    \    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my\
    \ $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n\
    \    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my\
    \ $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n\
    \    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n \
    \   my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n  \
    \  my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n    my $mink;\n   \
    \ my $", "    my @result;\n    my $max = 0;\n    my $i;\n    \n    for ($i = 0;\
    \ $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n\
    \        }\n    }\n    \n    for ($i = 0; $i < $k; $i++) {\n        if ($arr[$i]\
    \ == $max) {\n            push(@result, $arr[$i]);\n        }\n    }\n    \n \
    \   return @result;\n}", "    my @result;\n    my $max = 0;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $temp;\n    \n    # Find the max number\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        $max = $arr[$i] if $arr[$i] > $max;\n    }\n\
    \    \n    # Find the max number in sub array\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $temp = $arr[$i];\n        $j = $i;\n        while ($j > 0 && $temp\
    \ > $arr[$j - 1]) {\n            $arr[$j] = $arr[$j - 1];\n            $j--;\n\
    \        }\n        $arr[$j] = $temp;\n    }\n    \n    # Sort the sub array\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $temp = $arr[$i];\n        $j = $i;\n\
    \        while ($j > 0 && $temp > $arr[$j - 1]) {\n            $arr[$j] = $arr[$j\
    \ - 1];\n            $j--;\n        }\n        $arr[$j] = $temp;\n    }\n    \n\
    \    # Return the sorted array\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = $arr[$i];\n    }\n    return @result;\n}", "    my @result;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $max = 0;\n    my $tmp;\n    \n    while($i < $k) {\n\
    \        $tmp = $arr[$i];\n        while($j < $k) {\n            if($tmp > $arr[$j])\
    \ {\n                $tmp = $arr[$j];\n            }\n            $j++;\n    \
    \    }\n        $result[$i] = $tmp;\n        $i++;\n    }\n    \n    return @result;\n\
    }", "    my @result;\n    my $max = $arr[0];\n    my $index = 0;\n    \n    for\
    \ (my $i = 0; $i < $k; $i++) {\n        if ($arr[$i] > $max) {\n            $max\
    \ = $arr[$i];\n            $index = $i;\n        }\n    }\n    \n    for (my $i\
    \ = 0; $i < $k; $i++) {\n        if ($arr[$i] == $max) {\n            $result[$i]\
    \ = $arr[$index];\n        }\n    }\n    \n    return @result;\n}", "    my @result;\n\
    \    my $i;\n    my $max;\n    my $j;\n    my $tmp;\n    my $tmp2;\n    my $tmp3;\n\
    \    my $tmp4;\n    my $tmp5;\n    my $tmp6;\n    my $tmp7;\n    my $tmp8;\n \
    \   my $tmp9;\n    my $tmp10;\n    my $tmp11;\n    my $tmp12;\n    my $tmp13;\n\
    \    my $tmp14;\n    my $tmp15;\n    my $tmp16;\n    my $tmp17;\n    my $tmp18;\n\
    \    my $tmp19;\n    my $tmp20;\n    my $tmp21;\n    my $tmp22;\n    my $tmp23;\n\
    \    my $tmp24;\n    my $tmp25;\n    my $tmp26;\n    my $tmp27;\n    my $tmp28;\n\
    \    my $tmp29;\n    my $tmp30;\n    my $tmp31;\n    my $tmp32;\n    my $tmp33;\n\
    \    my $tmp34;\n    my $tmp35;\n    my $tmp36;\n    my $tmp37;\n    my $tmp38;\n\
    \    my $tmp39;\n    my $tmp40;\n    my $tmp41;\n    my $tmp42;\n    my $tmp43;\n\
    \    my $tmp44;\n    my $tmp45;\n    my $tmp46;\n    my $tmp47;\n    my $tmp48;\n\
    \    my $tmp49;\n    my $tmp50;\n    my $tmp51;\n    my $tmp52;\n    my $tmp53;\n\
    \    my $tmp54;\n    my $tmp55;\n    my $tmp56;\n    my $tmp57;\n    my $tmp58;\n\
    \    my $tmp59;\n    my $tmp60;\n    my $tmp61;\n    my $tmp62;\n    my $tmp63;\n\
    \    my $tmp64;\n    my $tmp65;\n    my $tmp66;\n    my $tmp67;\n    my $tmp68;\n\
    \    my $tmp69;\n    my $tmp70;\n    my $tmp71;\n    my $tmp72;\n    my $tmp73;\n\
    \    my $tmp74;\n    my $tmp75;\n    my $tmp76;\n    my $tmp77;\n    my $tmp78;\n\
    \    my $tmp79;\n    my $tmp80;\n    my $tmp81;\n    my $tmp82;\n    my $tmp83;\n\
    \    my $tmp84;\n    my $tmp85;\n    my $tmp86", "    my @result;\n    my $max\
    \ = 0;\n    my $i;\n    my $j;\n    my $tmp;\n    \n    for(my $i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[$i] if $arr[$i] > $max;\n    }\n    \n    for(my\
    \ $i = 0; $i < $k; $i++) {\n        $tmp = $arr[$i];\n        for(my $j = $i +\
    \ 1; $j < $k; $j++) {\n            $tmp = $arr[$j] if $arr[$j] > $tmp;\n     \
    \   }\n        \n        $arr[$i] = $tmp;\n    }\n    \n    for(my $i = 0; $i\
    \ < $k; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    \n    return @result;\n\
    }", "    my @result;\n    my $len = @$arr;\n    my $max = @$arr;\n    my $i;\n\
    \    my $j;\n    my $tmp;\n    my $flag = 0;\n    my $flag2 = 0;\n    my $flag3\
    \ = 0;\n    my $flag4 = 0;\n    my $flag5 = 0;\n    my $flag6 = 0;\n    my $flag7\
    \ = 0;\n    my $flag8 = 0;\n    my $flag9 = 0;\n    my $flag10 = 0;\n    my $flag11\
    \ = 0;\n    my $flag12 = 0;\n    my $flag13 = 0;\n    my $flag14 = 0;\n    my\
    \ $flag15 = 0;\n    my $flag16 = 0;\n    my $flag17 = 0;\n    my $flag18 = 0;\n\
    \    my $flag19 = 0;\n    my $flag20 = 0;\n    my $flag21 = 0;\n    my $flag22\
    \ = 0;\n    my $flag23 = 0;\n    my $flag24 = 0;\n    my $flag25 = 0;\n    my\
    \ $flag26 = 0;\n    my $flag27 = 0;\n    my $flag28 = 0;\n    my $flag29 = 0;\n\
    \    my $flag30 = 0;\n    my $flag31 = 0;\n    my $flag32 = 0;\n    my $flag33\
    \ = 0;\n    my $flag34 = 0;\n    my $flag35 = 0;\n    my $flag36 = 0;\n    my\
    \ $flag37 = 0;\n    my $flag38 = 0;\n    my $flag39 = 0;\n    my $flag40 = 0;\n\
    \    my $flag41 = 0;\n    my $flag42 = 0;\n    my $flag43 = 0;\n    my $flag44\
    \ = 0;\n    my $flag45 = 0;\n    my $flag46 = 0;\n    my $flag47 = 0;\n    my\
    \ $flag48 = 0;\n    my $flag49 = 0;\n    my $flag50 = 0;\n    my $flag51 = 0;\n\
    \    my $flag52 = 0;\n    my $flag53 = 0;\n    my $flag54 = 0;\n    my $flag55\
    \ = 0;\n    my $flag56 = 0;\n    my $flag57 = 0;\n    my $flag58 = 0;\n    my\
    \ $flag59 = 0;\n    my $flag60 = 0;\n    my $flag61 = 0;\n    my $flag62 = 0;\n\
    \    my $flag63 = 0;\n    my $flag64 = 0;\n    my $flag65 = 0;\n    my $flag66\
    \ = 0;\n    my $flag67 = 0;\n    my $flag68 = 0;\n    my $flag69 = 0;\n    my\
    \ $flag70 = 0;\n    my $flag71 = 0;\n    my $flag72 = 0;\n    my $flag73 = 0;\n\
    \    my $flag74 = 0;\n    my $flag75 = 0;\n    my $flag76 = 0;\n    my $flag77\
    \ = 0;\n    my $flag78 = 0;\n    my $flag79 = 0;\n    my $flag80 = 0;\n    my\
    \ $flag", "    my @result;\n    my $max = 0;\n    my $index = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num > $max) {\n            $max = $num;\n  \
    \          $index = $k;\n        }\n        elsif ($num == $max) {\n         \
    \   $index++;\n        }\n        elsif ($num < $max) {\n            $max = $num;\n\
    \            $index = $k;\n        }\n    }\n    push @result, $max;\n    push\
    \ @result, $arr[$index];\n    return @result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

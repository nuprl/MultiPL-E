name: HumanEval_140_fix_spaces
language: pl
prompt: "# Given a string text, replace all spaces in it with underscores, \n# and\
  \ if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with - \n# >>> fix_spaces(\" Example\")\n# \"Example\"\n# >>> fix_spaces(\"\
  \ Example 1\")\n# \"Example_1\"\n# >>> fix_spaces(\" Example 2\")\n# \"_Example_2\"\
  \n# >>> fix_spaces(\" Example 3\")\n# \"_Example-3\"\nsub fix_spaces {\n    my($text)\
  \ = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fix_spaces;\n\
  \        if(eq_deeply($candidate->(\"Example\"),\"Example\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Mudasir\
  \ Hanif \"),\"Mudasir_Hanif_\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"Yellow Yellow  Dirty  Fellow\"),\"\
  Yellow_Yellow__Dirty__Fellow\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"Exa   mple\"),\"Exa-mple\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \   Exa 1 2 2 mple\"),\"-Exa_1_2_2_mple\")) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n  \
    \  $text =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n \
    \   $text =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~\
    \ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^-/-/g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/\
    \ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", " \
    \   $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^-+/_/g;\n    $text =~ s/-$//g;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^-+/_/g;\n    $text =~ s/-+/_/g;\n    $text =~ s/_+/_/g;\n   \
    \ return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$/_/g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n  \
    \  $text =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't work for me. `fix_spaces(\"\
    \  Example\")` returns `Example` instead of `Example_`.\n<|/ c |>\n<| c |>\n:\
    \ It works for me. Are you sure you copied it correctly? I tested it on Perl 5.8.8\
    \ and 5.10.1.\n<|/ c |>\n<| c |>\n: I added a version that works in 5.8.8 and\
    \ 5.10.1.\n<|/ c |>\n<| c |>\n: I added a version that works in 5.8.8 and 5.10.1.\n\
    <|/ c |>\n<| c |>\n: I added a version that works in 5.8.8 and 5.10.1.\n<|/ c\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n\
    $text =~ s/^_+/_/g;\n$text =~ s/_+$//g;\n</code>\n<|/ a dscore=2 |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_+/_/g;\n$text\
    \ =~ s/_+$//g;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$text =~\
    \ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_+/_/g;\n$text =~ s/_+$//g;\n</code>\n\
    <|/ a tags=perl,regex |>\n<| a dscore=1 |>\n<code>\n$text =~ s/ /_/g;\n$text =~\
    \ s/ +/-/g;\n$text =~ s/^_+/_/g;\n$text =~ s/_+$//g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n\
    $text =~ s/^_", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n\
    }\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nI like your use of `\\K` but I\
    \ don't think it works in all versions of Perl. `perl -M5.010 -E 'say \"a  b\"\
    =~s/\\K\\s+//g'` prints `a  b` but `perl -M5.010 -E 'say \"a  b\"=~s/\\s+\\K//g'`\
    \ prints `a  b`.\n<|/ c |>\n<| c |>\n: I tested on 5.10.1, 5.10.0, 5.8.8 and 5.8.9\
    \ and it works. I guess it depends on the version of Perl you are using.\n<|/\
    \ c |>\n<| c |>\n: I tested on 5.10.1, 5.10.0, 5.8.8 and 5.8.9 and it works. I\
    \ guess it depends on the version of Perl you are using.\n<|/ c |>\n<| c |>\n\
    : I tested on 5.10.1, 5.10.0, 5.8.8 and 5.8.9 and it works. I guess it depends\
    \ on the version of Perl you are using.\n<|/ c |>\n<| c |>\n: I tested on 5.10.1,\
    \ 5.10.0, 5.8.8 and 5.8.9 and it works. I guess it depends on the version of Perl\
    \ you are using.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$text =~ s/(?<=\\s)\\s/_/g;\n\
    </code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work if there are multiple\
    \ spaces next to each other. For example, `\" Example\"` becomes `\"Example\"\
    `.\n<|/ c |>\n<| c |>\n: It does work. Try it yourself. It replaces consecutive\
    \ spaces with `_`.\n<|/ c |>\n<| c |>\n: It does work. Try it yourself. It replaces\
    \ consecutive spaces with `_`.\n<|/ c |>\n<| c |>\n: It does work. Try it yourself.\
    \ It replaces consecutive spaces with `_`.\n<|/ c |>\n<| c |>\n: It does work.\
    \ Try it yourself. It replaces consecutive spaces with `_`.\n<|/ ", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n \
    \   $text =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^-+//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n   \
    \ return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    return $text;\n}", "    $text =~ s/\
    \ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~\
    \ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/ a dscore=4\
    \ |>\n<| c |>\nI like this solution. Very clean and easy to understand.\n<|/ c\
    \ |>\n<| c |>\nI like this solution as well. Very clean and easy to understand.\n\
    <|/ c |>\n<| c |>\nI like this solution as well. Very clean and easy to understand.\n\
    <|/ c |>\n<| a dscore=4 |>\nI like using negative lookahead and lookbehind assertions\
    \ to solve this problem:\n<code>\n$text =~ s/(?<!\\S)\\s/_/g;\n$text =~ s/(?<=\\\
    S)\\s/-/g;\n</code>\nThe first substitution replaces any space that isn't preceded\
    \ by a non-space character with a _. The second substitution replaces any space\
    \ that isn't followed by a non-space character with a -.\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nI like this solution as well. Very clean and easy to understand.\n\
    <|/ c |>\n<| a dscore=3 |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text\
    \ =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nI\
    \ like this solution as well. Very clean and easy to understand.\n<|/ c |>\n<|\
    \ a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~\
    \ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a dscore=3 |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~\
    \ s/_$//;\n</code>\n<|/ a dscore=3 |>\n<| a tags=perl,regex |>\n<code>\n$text\
    \ =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/\
    \ a tags=perl,regex |>\n<| c |>\nThis doesn't work if there are multiple consecutive\
    \ spaces.\n<|/ c |>\n<| c |>\n: It does work if there are multiple consecutive\
    \ spaces. Try it yourself.\n<|/ c |>\n<| c |>\n: It does work if there are multiple\
    \ consecutive spaces. Try it yourself. `fix_spaces(\"  Example\")` returns `Example`.\n\
    <|/ c |>\n<| c |>\n: It does work if there are multiple consecutive spaces. Try\
    \ it yourself. `fix_spaces(\"  Example\")` returns `Example`.\n<|/ c |>\n<| c\
    \ |>\n: It does work if there are multiple consecutive spaces. Try it yourself.\
    \ `fix_spaces(\"  Example\")` returns `Example`.\n<|/ c |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/ +/-/g;\n</code>\nThis replaces multiple spaces with\
    \ a single dash.  If you want multiple dashes, use:\n<code>\n$text =~ s/ +/-/g;\n\
    $text =~ s/ +/--/g;\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't work if\
    \ there are multiple consecutive spaces.\n<|/ c |>\n<| c |>\n: It does work if\
    \ there are multiple consecutive spaces. Try it yourself.\n<|/ c |>\n<| c |>\n\
    : It does work if there are multiple consecutive spaces. Try it yourself. `fix_spaces(\"\
    \  Example\")` returns `Example`.\n<|/ c |>\n<| c |>\n: It does work if there\
    \ are multiple consecutive spaces. Try it yourself. `fix_spaces(\"  Example\"\
    )` returns `Example`.\n<|/ c |>\n<| c |>\n: It does work if there are multiple\
    \ consecutive spaces. Try it yourself. `fix_spaces(\"  Example\")` returns `Example`.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n$text =~ s/ +/-/g;\n</code>\nThis replaces\
    \ multiple spaces with a single dash.  If you want multiple dashes, use:\n<code>\n\
    $text =~ s/ +/-", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~\
    \ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n\
    \    $text =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n \
    \   $text =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n\
    </code>\n<|/ a tags=perl,regex |>\n<| c |>\nThanks so much for this! I really\
    \ appreciate it. I was able to modify it slightly to fit my needs. I added a line\
    \ to remove any spaces before the underscore. Thanks again!\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=perl,regex |>\n<code>\ns/ /_/g;\ns/ +/-/g;\n\
    s/^_+/_/g;\ns/_+$//g;\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThe first two are\
    \ redundant.\n<|/ c |>\n<| c |>\nThe first two are redundant because they don't\
    \ do anything to the string except replace spaces with underscores. But they do\
    \ change the string in place, so the second two are necessary.\n<|/ c |>\n<| c\
    \ |>\nThe first two are redundant because they don't do anything to the string\
    \ except replace spaces with underscores. But they do change the string in place,\
    \ so the second two are necessary.\n<|/ c |>\n<| c |>\nThe first two are redundant\
    \ because they don't do anything to the string except replace spaces with underscores.\
    \ But they do change the string in place, so the second two are necessary.\n<|/\
    \ c |>\n<| c |>\nThe first two are redundant because they don't do anything to\
    \ the string except replace spaces with underscores. But they do change the string\
    \ in place, so the second two are necessary.\n<|/ c |>\n<| a tags=perl,regex |>\n\
    <code>\ns/ /_/g;\ns/ +/-/g;\ns/^_+/_/g;\ns/_+$//g;\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_+/_/g;\ns/_+$//g;\n</code>\n\
    <|/ a tags=perl,regex |>\n<| a dscore=1 |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_+/_/g;\n\
    s/_+$//g;\n</code>\n<|/ a tags=perl,regex |>\n<| a dscore=1 |>\n<code>\ns/ /_/g;\n\
    s/ +/-/g;\ns/^_+/_/g;\ns/_+$//g;\n</code>\n<|/ a tags=perl,regex |>\n<| a dscore=1\
    \ |>", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n \
    \   return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_+/_/g;\n    $text =~ s/_+$/_/g;\n    return $text;\n}", "    $text =~\
    \ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//;\n    return $text;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$text =~ s/ /_/g;\n$text\
    \ =~ s/ +/-/g;\n$text =~ s/^-/-/g;\n$text =~ s/-$//;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n\
    $text =~ s/^-/-/g;\n$text =~ s/-$//;\n</code>\n<|/ a dscore=2 |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^-/-/g;\n$text\
    \ =~ s/-$//;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$text =~ s/\
    \ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^-/-/g;\n$text =~ s/-$//;\n</code>\n<|/\
    \ a tags=perl,regex |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text\
    \ =~ s/ +/-/g;\n$text =~ s/^-/-/g;\n$text =~ s/-$//;\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n\
    $text =~ s/^-/-/g;\n$text =~ s/-$//;\n</code>\n<|/ a dscore=1 |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^-/-/g;\n$text\
    \ =~ s/-$//;\n</code>\n<|/ a dscore=1 |>\n<| a dscore", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n   \
    \ return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/\
    \ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text\
    \ =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/\
    \ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", " \
    \   $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n}\n</code>\n\
    <|/ a tags=perl,regex |>\n<| c |>\nI like this solution, but I prefer `s/ +/-/g`\
    \ over `s/ /_/g` because it's more readable, and it avoids having to escape spaces.\n\
    <|/ c |>\n<| c |>\nI agree with you, `s/ +/-/g` is more readable, but I prefer\
    \ `s/ /_/g` because it's more readable, and it avoids having to escape spaces.\n\
    <|/ c |>\n<| c |>\nI prefer `s/ +/-/g` because it's more readable, and it avoids\
    \ having to escape spaces.\n<|/ c |>\n<| c |>\nI prefer `s/ +/-/g` because it's\
    \ more readable, and it avoids having to escape spaces.\n<|/ c |>\n<| c |>\nI\
    \ prefer `s/ +/-/g` because it's more readable, and it avoids having to escape\
    \ spaces.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/\
    \ +/-/g;\n$text =~ s/^_+/_/g;\n$text =~ s/_+$//g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThis doesn't work if there are multiple spaces in a row. For example:\
    \ `\"foo bar baz\"` becomes `\"foo_bar-baz\"`\n<|/ c |>\n<| c |>\n: It doesn't\
    \ work if there are multiple spaces in a row. For example: `\"foo bar baz\"` becomes\
    \ `\"foo_bar-baz\"`\n<|/ c |>\n<| c |>\n: It doesn't work if there are multiple\
    \ spaces in a row. For example: `\"foo bar baz\"` becomes `\"foo_bar-baz\"`\n\
    <|/ c |>\n<| c |>\n: It doesn't work if there are multiple spaces in a row. For\
    \ example: `\"foo bar baz\"` becomes `\"foo_bar-baz\"`\n<|/ c |>\n<| c |>\n: It\
    \ doesn't work if there are multiple spaces in a row. For example: `\"foo bar\
    \ baz\"` becomes `\"foo_bar-baz\"", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThe `+` should be `*` since `+` means \"one or more of the previous\
    \ expression\".  `+` means \"one or more of the previous expression\".  `*` means\
    \ \"zero or more of the previous expression\".\n<|/ c |>\n<| c |>\n: Yes, you're\
    \ right. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=2 |>\n<code>\ns/\\\
    s+/-/g;\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work if the\
    \ string contains multiple consecutive spaces.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    s/\\s+/-/g;\n</code>\n<|/ a tags=perl,regex |>\n<| a tags=perl,regex |>\n<code>\n\
    s/\\s+/-/g;\n</code>\n<|/ a dscore=2 |>\n<| a tags=perl,regex |>\n<code>\ns/\\\
    s+/-/g;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\ns/\\s+/-/g;\n</code>\n\
    <|/ a tags=perl,regex |>\n<| a dscore=2 |>\n<code>\ns/\\s+/-/g;\n</code>\n<|/\
    \ a tags=perl,regex |>\n<| a tags=perl,regex |>\n<code>\ns/\\s+/-/g;\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\ns/\\s+/-/g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\ns/\\s+/-/g;\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=perl,regex |>\n<code>\ns/\\s+/-/g;\n</code>\n<|/ a dscore=2 |>\n<| a\
    \ dscore=2 |>\n<code>\ns/\\s+/-/g;\n</code>\n<|/ a tags=perl,regex |>\n<| a tags=perl,regex\
    \ |>\n<code>\ns/\\s+/-/g;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    s/\\s+/-/g;\n</code>\n<|/", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n \
    \   $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/\
    \ a tags=perl,regex |>\n<| c |>\nThis doesn't seem to work. `fix_spaces(\"  Example\"\
    )` returns `Example` instead of `Example-`.\n<|/ c |>\n<| c |>\n: It works for\
    \ me. Are you sure you copied it correctly? It returns `Example-` when I run it.\n\
    <|/ c |>\n<| c |>\n: I added a version that doesn't require `fix_spaces`\n<|/\
    \ c |>\n<| c |>\n: I added a version that doesn't require `fix_spaces`\n<|/ c\
    \ |>\n<| c |>\n: I added a version that doesn't require `fix_spaces`\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n\
    $text =~ s/_$//;\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't seem\
    \ to work. `fix_spaces(\"  Example\")` returns `Example` instead of `Example-`.\n\
    <|/ c |>\n<| c |>\n: It works for me. Are you sure you copied it correctly? It\
    \ returns `Example-` when I run it.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ doesn't require `fix_spaces`\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n$text\
    \ =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't seem to work. `fix_spaces(\"  Example\"\
    )` returns `Example` instead of `Example-`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    $text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n\
    <|/ a tags=perl,regex |>\n<| a tags=perl,regex |>\n<code>\n$", "    $text =~ s/\
    \ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n   \
    \ return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~\
    \ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    return $text;\n}\n</code>\n\
    <|/ a tags=perl,regex |>\n<| c |>\nThe `+` should be `*` since there can be multiple\
    \ spaces.\n<|/ c |>\n<| c |>\n: Thanks, I fixed that.\n<|/ c |>\n<| c |>\n: I\
    \ added a version that doesn't use any substitutions.\n<|/ c |>\n<| c |>\n: I\
    \ added a version that doesn't use any substitutions.\n<|/ c |>\n<| c |>\n: I\
    \ added a version that doesn't use any substitutions.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex |>\n\
    <| c |>\nThe `+` should be `*` since there can be multiple spaces.\n<|/ c |>\n\
    <| c |>\n: Thanks, I fixed that.\n<|/ c |>\n<| a dscore=2 |>\n<code>\ns/ /_/g;\n\
    s/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex |>\n<| a dscore=2 |>\n<code>\n\
    s/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex |>\n<| a |>\n<code>\n\
    s/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex dscore=1 |>\n<| a\
    \ dscore=1 |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a dscore=1 |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n\
    <|/ a dscore=1 |>\n<| a |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/\
    \ a dscore=1 ", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text\
    \ =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/\
    \ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/\
    \ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThe `+` should\
    \ be `*` since there can be multiple spaces.\n<|/ c |>\n<| c |>\n: Yes, I noticed\
    \ that after I posted my answer. Thanks for pointing it out.\n<|/ c |>\n<| c |>\n\
    : Thanks for pointing it out. I fixed my answer.\n<|/ c |>\n<| c |>\n: Thanks\
    \ for pointing it out. I fixed my answer.\n<|/ c |>\n<| c |>\n: Thanks for pointing\
    \ it out. I fixed my answer.\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n$text\
    \ =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~\
    \ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text\
    \ =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a dscore=2 |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~\
    \ s/_$//;\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n$text =~ s/ /_/g;\n$text\
    \ =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a dscore=1 tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ ", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis doesn't work if you have multiple consecutive spaces.\n<|/\
    \ c |>\n<| c |>\n: It does work if you have multiple consecutive spaces. Try it\
    \ yourself and see.\n<|/ c |>\n<| c |>\n: It does work if you have multiple consecutive\
    \ spaces. Try it yourself and see.\n<|/ c |>\n<| c |>\n: It does work if you have\
    \ multiple consecutive spaces. Try it yourself and see.\n<|/ c |>\n<| c |>\n:\
    \ It does work if you have multiple consecutive spaces. Try it yourself and see.\n\
    <|/ c |>\n<| a tags=perl,regex |>\n<code>\ns/(?<=\\s)\\s/_/g;\n</code>\n<|/ a\
    \ dscore=5 |>\n<| c |>\nThis doesn't work if you have multiple consecutive spaces.\n\
    <|/ c |>\n<| c |>\n: It does work if you have multiple consecutive spaces. Try\
    \ it yourself and see.\n<|/ c |>\n<| c |>\n: It does work if you have multiple\
    \ consecutive spaces. Try it yourself and see.\n<|/ c |>\n<| c |>\n: It does work\
    \ if you have multiple consecutive spaces. Try it yourself and see.\n<|/ c |>\n\
    <| c |>\n: It does work if you have multiple consecutive spaces. Try it yourself\
    \ and see.\n<|/ c |>\n<| a dscore=5 |>\n<code>\ns/(?<=\\s)\\s/_/g;\n</code>\n\
    <|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work if you have multiple consecutive\
    \ spaces.\n<|/ c |>\n<| c |>\n: It does work if you have multiple consecutive\
    \ spaces. Try it yourself and see.\n<|/ c |>\n<| c |>\n: It does work if you have\
    \ multiple consecutive spaces. Try it yourself and see.\n<|/ c |>\n<| c |>\n:\
    \ It does work if you have multiple consecutive spaces. Try it yourself and see.\n\
    <|/ c |>\n<| c |>\n: It does ", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$/_/g;\n    return $text;\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work for \"Example   1\"\
    .\n<|/ c |>\n<| c |>\nThis doesn't work for \"Example   1\".\n<|/ c |>\n<| c |>\n\
    This doesn't work for \"Example   1\".\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ \"Example   1\".\n<|/ c |>\n<| c |>\nThis doesn't work for \"Example   1\".\n\
    <|/ c |>\n<| a tags=perl,regex |>\n<code>\ns/(^|\\s)(\\w)/$1$2/g;\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nThis doesn't work for \"Example   1\".\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work for \"Example   1\".\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for \"Example   1\".\n<|/ c |>\n<| c |>\nThis doesn't work for \"Example\
    \   1\".\n<|/ c |>\n<| c |>\nThis doesn't work for \"Example   1\".\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\ns/(?<=\\s)\\W+/\\_/g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThis doesn't work for \"Example   1\".\n<|/ c |>\n<| c |>\nThis\
    \ doesn't work for \"Example   1\".\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ \"Example   1\".\n<|/ c |>\n<| c |>\nThis doesn't work for \"Example   1\".\n\
    <|/ c |>\n<| c |>\nThis doesn't work for \"Example   1\".\n<|/ c |>\n<| a |>\n\
    <code>\ns/(?<=\\s)\\W+/\\_/g;\n</code>\n<|/ a dscore=4 tags=perl,regex |>\n<|\
    \ c |>\nThis doesn't work for \"Example   1\".\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for \"Example   1\".\n<|/ c |>\n<| a |>\n<code>\ns/(?<=\\s)\\W+/\\_/g;\n\
    </code>\n<|/ a d", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~\
    \ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n\
    \    $text =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$/_/g;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n\
    \    $text =~ s/_+$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    return $text;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't\
    \ seem to work if there are multiple spaces between words. For example, `fix_spaces(\"\
    \  Example\")` returns `Example`.\n<|/ c |>\n<| c |>\n: It does. I tested it before\
    \ posting. The OP didn't specify what should happen if there are multiple spaces\
    \ between words. I assumed that they wanted a single space between words. If you\
    \ want multiple spaces between words, then you need to specify what should happen\
    \ if there are multiple spaces between words.\n<|/ c |>\n<| c |>\nI see what you\
    \ mean. Sorry, I missed that in the OP's original post. I'll edit my answer to\
    \ include that.\n<|/ c |>\n<| c |>\n: No problem. I've edited my answer to include\
    \ a solution that will handle multiple spaces between words.\n<|/ c |>\n<| c |>\n\
    : Thanks for your answer. Your code works perfectly for single spaces between\
    \ words. But it fails for multiple spaces between words. For example, `fix_spaces(\"\
    \  Example\")` returns `Example`.\n<|/ c |>\n<| a |>\n<code>\nuse strict;\nuse\
    \ warnings;", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n\
    \    $text =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ return $text;\n}\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't handle\
    \ consecutive spaces correctly.\n<|/ c |>\n<| c |>\n: It does. Try it yourself.\
    \ It replaces consecutive spaces with dashes.\n<|/ c |>\n<| c |>\n: It replaces\
    \ consecutive spaces with dashes *and* removes leading dashes.\n<|/ c |>\n<| c\
    \ |>\n: It replaces consecutive spaces with dashes *and* removes leading dashes.\
    \ Try it yourself. It replaces consecutive spaces with dashes.\n<|/ c |>\n<| c\
    \ |>\n: It replaces consecutive spaces with dashes *and* removes leading dashes.\
    \ Try it yourself. It replaces consecutive spaces with dashes.\n<|/ c |>\n<| a\
    \ dscore=2 |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThis doesn't handle consecutive spaces correctly.\n<|/ c |>\n<|\
    \ c |>\n: It does. Try it yourself. It replaces consecutive spaces with dashes.\n\
    <|/ c |>\n<| c |>\n: It replaces consecutive spaces with dashes *and* removes\
    \ leading dashes.\n<|/ c |>\n<| c |>\n: It replaces consecutive spaces with dashes\
    \ *and* removes leading dashes. Try it yourself. It replaces consecutive spaces\
    \ with dashes.\n<|/ c |>\n<| c |>\n: It replaces consecutive spaces with dashes\
    \ *and* removes leading dashes. Try it yourself. It replaces consecutive spaces\
    \ with dashes.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n\
    </code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't handle consecutive spaces\
    \ correctly.\n<|/ c |>\n<| c |>\n: It does. Try it yourself. It replaces consecutive\
    \ spaces with dashes.\n<|/ c |>\n<| c |>\n: It replaces consecutive spaces with\
    \ dashes *", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-/-/g;\n    $text\
    \ =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/\
    \ +/-/g;\n    $text =~ s/^-+/_/g;\n    return $text;\n}\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| c |>\nThis doesn't work if there are multiple consecutive spaces.\n<|/\
    \ c |>\n<| c |>\n: It does. Try it yourself.\n<|/ c |>\n<| c |>\n: It does, but\
    \ only because you didn't test it yourself. Try it yourself. :)\n<|/ c |>\n<|\
    \ c |>\n: I tested it myself. It works. Try it yourself. :)\n<|/ c |>\n<| c |>\n\
    : I tested it myself. It works. Try it yourself. :)\n<|/ c |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^-+/_/g;\n</code>\n\
    <|/ a dscore=3 |>\n<| c |>\nThis doesn't work if there are multiple consecutive\
    \ spaces.\n<|/ c |>\n<| c |>\n: It does. Try it yourself.\n<|/ c |>\n<| c |>\n\
    : It does, but only because you didn't test it yourself. Try it yourself. :)\n\
    <|/ c |>\n<| c |>\n: I tested it myself. It works. Try it yourself. :)\n<|/ c\
    \ |>\n<| a dscore=3 |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~\
    \ s/^-+/_/g;\n</code>\n<|/ a tags=perl,regex |>\n<| c |>\nThis doesn't work if\
    \ there are multiple consecutive spaces.\n<|/ c |>\n<| c |>\n: It does. Try it\
    \ yourself.\n<|/ c |>\n<| c |>\n: It does, but only because you didn't test it\
    \ yourself. Try it yourself. :)\n<|/ c |>\n<| c |>\n: I tested it myself. It works.\
    \ Try it yourself. :)\n<|/ c |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/\
    \ /_/g;\n$text =~ s/ +/-", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n  \
    \  $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~\
    \ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n    $text =~ s/-+$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    return $text;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=perl,regex\
    \ |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a dscore=1 |>\n<| a tags=perl,regex\
    \ |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex |>\n\
    <| a tags=perl,regex |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a tags=perl,regex |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n\
    </code>\n<|/ a tags=perl,regex |>\n<| a |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n\
    </code>\n<|/ a tags=perl,regex dscore=1 |>\n<| a dscore=1 |>\n<code>\ns/ /_/g;\n\
    s/ +/-/g;\ns/^_//;\n</code>\n<|/ a tags=perl,regex |>\n<| a tags=perl,regex |>\n\
    <code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a dscore=1 |>\n<| a tags=perl,regex\
    \ |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a dscore=1 |>\n<| a tags=perl,regex\
    \ |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/^_//;\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\ns/ /_/g;\ns/ +/-/g;\ns/", "    $text =~ s/ /_/g;\n    $text =~ s/\
    \ +/-/g;\n    $text =~ s/^-+/_/g;\n    $text =~ s/-+$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+//;\n  \
    \  $text =~ s/-+$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n\
    \    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return\
    \ $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n\
    \    $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/ a |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a tags=perl,regex |>\n\
    <| a dscore=0 |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a dscore=0 |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n\
    <| a tags=perl,regex |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Please add some explanation to your answer.\n<|/ c |>\n<| a tags=perl,regex |>\n\
    <code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a dscore=0 |>\n<| a tags=perl,regex\
    \ |>\n<code>\n$text =~ s/^\\s+|\\s+$//g;\n</code>\n<|/ a dscore=0 |>\n<|", " \
    \   $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}", "    $text\
    \ =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text =~ s/_$//;\n\
    \    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text\
    \ =~ s/^-/-/g;\n    $text =~ s/-$//g;\n    return $text;\n}", "    $text =~ s/\
    \ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^-+/_/g;\n    return $text;\n}",
  "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^_//;\n    $text =~ s/_$//;\n    return $text;\n}\n</code>\n<|/\
    \ a tags=perl,regex |>\n<| c |>\nThanks, this was very helpful.\n<|/ c |>\n<|\
    \ a dscore=3 |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n\
    $text =~ s/_$//;\n</code>\n<|/ a tags=perl,regex |>\n<| a tags=perl,regex |>\n\
    <code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n\
    </code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\n$text =~ s/ /_/g;\n$text\
    \ =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a tags=perl,regex\
    \ |>\n<| a tags=perl,regex |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n\
    $text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~\
    \ s/_$//;\n</code>\n<|/ a tags=perl,regex |>\n<| a |>\n<code>\n$text =~ s/ /_/g;\n\
    $text =~ s/ +/-/g;\n$text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a tags=perl,regex\
    \ dscore=2 |>\n<| a dscore=2 |>\n<code>\n$text =~ s/ /_/g;\n$text =~ s/ +/-/g;\n\
    $text =~ s/^_//;\n$text =~ s/_$//;\n</code>\n<|/ a tags=perl,regex |>\n<|", " \
    \   $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n    $text\
    \ =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n\
    \    $text =~ s/^-/-/g;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text\
    \ =~ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }", "    $text =~ s/ /_/g;\n    $text =~ s/ +/-/g;\n    $text =~ s/^_//;\n   \
    \ $text =~ s/_$//;\n    return $text;\n}", "    $text =~ s/ /_/g;\n    $text =~\
    \ s/ +/-/g;\n    $text =~ s/^_+/_/g;\n    $text =~ s/_+$//g;\n    return $text;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

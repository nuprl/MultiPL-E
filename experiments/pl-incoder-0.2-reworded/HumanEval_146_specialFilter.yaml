name: HumanEval_146_specialFilter
language: pl
prompt: "# Write a function that takes an array of numbers as input and returns \n\
  # the number of elements in the array that are greater than 10 and both \n# first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n# >>> specialFilter([15,\
  \ -73, 14, -15])\n# 1\n# >>> specialFilter([33, -2, -3, 45, 21, 109])\n# 2\nsub\
  \ specialFilter {\n    my($nums) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&specialFilter;\n\
  \        if(eq_deeply($candidate->([5, -2, 1, -5]),0)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([15, -73,\
  \ 14, -15]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->([33, -2, -3, 45, 21, 109]),2)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([43,\
  \ -12, 93, 125, 121, 109]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([71, -2, -33, 75, 21, 19]),3)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),0))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),0))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num\
    \ > 10 and $num % 2 != 0) {\n            ++$count;\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    foreach my $num (@$nums) {\n        if\
    \ ($num > 10 and $num % 2 != 0) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    foreach my $num (@$nums) {\n\
    \        if ($num > 10 and $num % 2 != 0) {\n            if ($num % 2 != 0) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10)\
    \ {\n            if ($num % 2 == 1) {\n                if ($num % 10 == 1) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    foreach my $num (@$nums)\
    \ {\n        if ($num > 10) {\n            if ($num % 2 == 0 && $num % 2 != 1)\
    \ {\n                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10)\
    \ {\n            if ($num % 2 == 1) {\n                if ($num % 10 == 1) {\n\
    \                    if ($num % 100 == 1) {\n                        $count++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $count;\n}", "    my $count = 0;\n    foreach my $num (@$nums) {\n\
    \        if ($num > 10 and $num % 2 != 0) {\n            if ($num % 2 != 0) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10\
    \ and $num % 2 != 0) {\n            ++$count;\n        }\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10)\
    \ {\n            if ($num % 2 == 0 && $num % 4 != 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    foreach my $num (@$nums) {\n        if ($num > 10 and $num % 2 != 0) {\n\
    \            if ($num % 2 != 0) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach my\
    \ $num (@$nums) {\n        if ($num > 10) {\n            if ($num % 2 == 0 &&\
    \ $num % 10 == 1) {\n                $count++;\n            }\n        }\n   \
    \ }\n    return $count;\n}", "    my $count = 0;\n    foreach my $num (@$nums)\
    \ {\n        if ($num > 10 && $num % 2 != 0 && $num % 2 != 1) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach my\
    \ $num (@$nums) {\n        if ($num > 10 and $num % 2 != 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    foreach my\
    \ $num (@$nums) {\n        if ($num > 10 and $num % 2 != 0 and $num % 3 != 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    my\
    \ $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10 and $num\
    \ % 2 != 0) {\n            ++$count;\n        }\n    }\n    return $count;\n}",
  "    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10) {\n\
    \            if ($num % 2 == 1) {\n                if ($num % 3 == 0) {\n    \
    \                if ($num % 5 == 0) {\n                        $count++;\n   \
    \                 }\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    my $count = 0;\n    foreach my $num (@$nums) {\n        if\
    \ ($num > 10 and $num % 2 != 0) {\n            if ($num % 2 != 0) {\n        \
    \        $count++;\n            }\n        }\n    }\n    return $count;\n}", " \
    \   my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10 and\
    \ $num % 2 != 0) {\n            if ($num % 2 != 0) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    foreach my $num (@$nums) {\n        if ($num > 10) {\n            if ($num\
    \ % 2 != 0) {\n                if ($num % 10 == 1) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}", " \
    \   my $count = 0;\n    foreach my $num (@$nums) {\n        if ($num > 10 && $num\
    \ % 2 != 0 && $num % 2 != 1) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

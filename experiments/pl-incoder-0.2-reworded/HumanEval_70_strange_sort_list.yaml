name: HumanEval_70_strange_sort_list
language: pl
prompt: "# Given array of integers, return array in strange order.\n# Strange sorting,\
  \ is when you start with the minimum value,\n# then maximum of the remaining integers,\
  \ then minimum and so on.\n# Examples:\n# >>> strange_sort_list([1, 2, 3, 4])\n\
  # [1, 4, 2, 3]\n# >>> strange_sort_list([5, 5, 5, 5])\n# [5, 5, 5, 5]\n# >>> strange_sort_list([])\n\
  # []\nsub strange_sort_list {\n    my($lst) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&strange_sort_list;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4]),[1, 4, 2, 3])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 6, 7, 8, 9]),[5, 9, 6, 8, 7])) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),[1, 5, 2, 4, 3]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 6, 7, 8, 9, 1]),[1, 9, 5, 8, 6, 7])) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->([5, 5, 5, 5]),[5, 5, 5,\
  \ 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 4, 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([0, 2, 2, 2, 5, 5,\
  \ -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2])) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->([111111]),[111111])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @sorted = ();\n    my $min = $lst[0];\n    my $max = $lst[0];\n\
    \    foreach my $num (@$lst) {\n        if ($num < $min) {\n            $min =\
    \ $num;\n        } elsif ($num > $max) {\n            $max = $num;\n        }\
    \ else {\n            push(@sorted, $num);\n        }\n    }\n    foreach my $num\
    \ (@sorted) {\n        my $tmp = $num;\n        $num = $min;\n        $min = $tmp;\n\
    \    }\n    return @sorted;\n}", "    my @sorted_list = ();\n    my $min = $lst[0];\n\
    \    my $max = $lst[0];\n    foreach my $i (@$lst) {\n        if ($i < $min) {\n\
    \            $min = $i;\n        } elsif ($i > $max) {\n            $max = $i;\n\
    \        } else {\n            push (@sorted_list, $i);\n        }\n    }\n  \
    \  foreach my $i (@sorted_list) {\n        push (@sorted_list, $i);\n    }\n \
    \   return @sorted_list;\n}", "    my @sorted = ();\n    my $min = $lst[0];\n\
    \    my $max = $lst[0];\n    my $i;\n    for ($i = 1; $i < @$lst; $i++) {\n  \
    \      if ($lst[$i] < $min) {\n            $min = $lst[$i];\n        } elsif ($lst[$i]\
    \ > $max) {\n            $max = $lst[$i];\n        }\n    }\n    for ($i = 1;\
    \ $i < @$lst; $i++) {\n        if ($lst[$i] < $min) {\n            push (@sorted,\
    \ $min);\n            $min = $lst[$i];\n        } elsif ($lst[$i] > $max) {\n\
    \            push (@sorted, $max);\n            $max = $lst[$i];\n        }\n\
    \    }\n    push (@sorted, $min);\n    push (@sorted, $max);\n    return @sorted;\n\
    }", "    my @result;\n    my $min = $lst[0];\n    my $max = $lst[0];\n    my $i;\n\
    \    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min) {\n      \
    \      $min = $lst[$i];\n        } elsif ($lst[$i] > $max) {\n            $max\
    \ = $lst[$i];\n        }\n    }\n    for ($i = 1; $i < @$lst; $i++) {\n      \
    \  if ($lst[$i] < $min) {\n            $min = $lst[$i];\n        } elsif ($lst[$i]\
    \ > $max) {\n            $max = $lst[$i];\n        }\n    }\n    for ($i = 1;\
    \ $i < @$lst; $i++) {\n        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n\
    \        } elsif ($lst[$i] > $max) {\n            $max = $lst[$i];\n        }\n\
    \    }\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min = $lst[$i];\n        } elsif ($lst[$i] > $max) {\n         \
    \   $max = $lst[$i];\n        }\n    }\n    for ($i = 1; $i < @$lst; $i++) {\n\
    \        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n        } elsif\
    \ ($lst[$i] > $max) {\n            $max = $lst[$i];\n        }\n    }\n    for\
    \ ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min) {\n            $min\
    \ = $lst[$i];\n        } elsif ($lst[$i] > $max) {\n            $max = $lst[$i];\n\
    \        }\n    }\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $min = $lst[$i];\n        } elsif ($lst[$i] > $max) {\n\
    \            $max = $lst[$i];\n        }\n    }\n    for ($i = 1; $i < @$lst;\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n    \
    \    } elsif ($lst[$i] > $max) {\n            $max = $lst[$i];\n        }\n  \
    \  }\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min) {\n \
    \           $min = $lst[$i];\n        } elsif ($lst[$i] > $max", "    my @sorted_list\
    \ = ();\n    my $min = $lst[0];\n    my $max = $lst[0];\n    foreach my $num (@$lst)\
    \ {\n        if ($num < $min) {\n            $min = $num;\n        }\n       \
    \ if ($num > $max) {\n            $max = $num;\n        }\n    }\n    foreach\
    \ my $num (@$lst) {\n        if ($num < $min) {\n            push (@sorted_list,\
    \ $min);\n            $min = $num;\n        }\n        if ($num > $max) {\n  \
    \          push (@sorted_list, $max);\n            $max = $num;\n        }\n \
    \       push (@sorted_list, $num);\n    }\n    return @sorted_list;\n}", "   \
    \ my @result;\n    my $min = $lst[0];\n    my $max = $lst[0];\n    my $i;\n  \
    \  foreach my $num (@$lst) {\n        if ($num < $min) {\n            $min = $num;\n\
    \        }\n        if ($num > $max) {\n            $max = $num;\n        }\n\
    \    }\n    for ($i = 0; $i < @$lst; $i++) {\n        my $num = $lst[$i];\n  \
    \      if ($num < $min) {\n            $num = $min;\n        }\n        if ($num\
    \ > $max) {\n            $num = $max;\n        }\n        push(@result, $num);\n\
    \    }\n    return @result;\n}", "    my @sorted = ();\n    my $min = $lst[0];\n\
    \    my $max = $lst[0];\n    foreach my $num (@$lst) {\n        if ($num < $min)\
    \ {\n            $min = $num;\n        } elsif ($num > $max) {\n            $max\
    \ = $num;\n        }\n    }\n    foreach my $num (@$lst) {\n        if ($num <\
    \ $min) {\n            push (@sorted, $min);\n            $min = $num;\n     \
    \   } elsif ($num > $max) {\n            push (@sorted, $max);\n            $max\
    \ = $num;\n        } else {\n            push (@sorted, $num);\n        }\n  \
    \  }\n    push (@sorted, $min);\n    push (@sorted, $max);\n    return @sorted;\n\
    }", "    my @sorted = ();\n    my $min = $lst[0];\n    my $max = $lst[0];\n  \
    \  foreach my $num (@$lst) {\n        if ($num < $min) {\n            $min = $num;\n\
    \        } elsif ($num > $max) {\n            $max = $num;\n        } else {\n\
    \            push (@sorted, $num);\n        }\n    }\n    foreach my $num (@$lst)\
    \ {\n        if ($num < $min) {\n            $min = $num;\n        } elsif ($num\
    \ > $max) {\n            $max = $num;\n        } else {\n            push (@sorted,\
    \ $num);\n        }\n    }\n    foreach my $num (@$lst) {\n        if ($num <\
    \ $min) {\n            $min = $num;\n        } elsif ($num > $max) {\n       \
    \     $max = $num;\n        } else {\n            push (@sorted, $num);\n    \
    \    }\n    }\n    foreach my $num (@$lst) {\n        if ($num < $min) {\n   \
    \         $min = $num;\n        } elsif ($num > $max) {\n            $max = $num;\n\
    \        } else {\n            push (@sorted, $num);\n        }\n    }\n    foreach\
    \ my $num (@$lst) {\n        if ($num < $min) {\n            $min = $num;\n  \
    \      } elsif ($num > $max) {\n            $max = $num;\n        } else {\n \
    \           push (@sorted, $num);\n        }\n    }\n    foreach my $num (@$lst)\
    \ {\n        if ($num < $min) {\n            $min = $num;\n        } elsif ($num\
    \ > $max) {\n            $max = $num;\n        } else {\n            push (@sorted,\
    \ $num);\n        }\n    }\n    foreach my $num (@$lst) {\n        if ($num <\
    \ $min) {\n            $min = $num;\n        } elsif ($num > $max) {\n       \
    \     $max = $num;\n        } else {\n            push (@sorted, $num);\n    \
    \    }\n    }\n    foreach my $num (@$lst) {\n        if ($num < $min) {\n   \
    \         $min = $num;\n        } elsif ($num > $max) {\n            $max = $num;\n\
    \        } else {\n            push (@sorted, $num);\n        }\n    }\n    foreach\
    \ my $num (@$lst) {\n        if ($num < $min) {\n            $min = $num;\n  \
    \      } elsi", "    my @new_lst;\n    my $min = $lst[0];\n    my $max = $lst[0];\n\
    \    my $i;\n    foreach my $num (@$lst) {\n        if ($num < $min) {\n     \
    \       $min = $num;\n        }\n        if ($num > $max) {\n            $max\
    \ = $num;\n        }\n    }\n    for ($i = 0; $i < @$lst; $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            push @new_lst, $min;\n            $min = $lst[$i];\n\
    \        }\n        if ($lst[$i] > $max) {\n            push @new_lst, $max;\n\
    \            $max = $lst[$i];\n        }\n    }\n    push @new_lst, $min;\n  \
    \  push @new_lst, $max;\n    return @new_lst;\n}", "    my @sorted_list = ();\n\
    \    my $min = $lst[0];\n    my $max = $lst[0];\n    my $i = 0;\n    my $j = 0;\n\
    \    my $temp;\n    foreach my $num (@$lst) {\n        if ($num > $max) {\n  \
    \          $max = $num;\n        }\n        if ($num < $min) {\n            $min\
    \ = $num;\n        }\n    }\n    foreach my $num (@$lst) {\n        if ($num >\
    \ $max) {\n            $max = $num;\n        }\n        if ($num < $min) {\n \
    \           $min = $num;\n        }\n    }\n    foreach my $num (@$lst) {\n  \
    \      if ($num > $max) {\n            $max = $num;\n        }\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    foreach my $num (@$lst)\
    \ {\n        if ($num > $max) {\n            $max = $num;\n        }\n       \
    \ if ($num < $min) {\n            $min = $num;\n        }\n    }\n    foreach\
    \ my $num (@$lst) {\n        if ($num > $max) {\n            $max = $num;\n  \
    \      }\n        if ($num < $min) {\n            $min = $num;\n        }\n  \
    \  }\n    foreach my $num (@$lst) {\n        if ($num > $max) {\n            $max\
    \ = $num;\n        }\n        if ($num < $min) {\n            $min = $num;\n \
    \       }\n    }\n    foreach my $num (@$lst) {\n        if ($num > $max) {\n\
    \            $max = $num;\n        }\n        if ($num < $min) {\n           \
    \ $min = $num;\n        }\n    }\n    foreach my $num (@$lst) {\n        if ($num\
    \ > $max) {\n            $max = $num;\n        }\n        if ($num < $min) {\n\
    \            $min = $num;\n        }\n    }\n    foreach my $num (@$lst) {\n \
    \       if ($num > $max) {\n            $max = $num;\n        }\n        if ($num\
    \ < $min) {\n            $min = $num;\n        }\n    }\n    foreach my $num (@$lst)\
    \ {\n        if ($num > $max) {\n            $max = $num;\n        }\n       \
    \ if ($num < $min) {\n            $min = $num;\n        }\n    }\n    foreach\
    \ my $num (@$lst) {\n        if ($num > $max) {\n            $max = $num;\n  \
    \      }\n        if (", "    my @sorted = ();\n    my $min = $lst[0];\n    my\
    \ $max = $lst[0];\n    my $i = 0;\n    foreach my $num (@$lst) {\n        if ($num\
    \ < $min) {\n            $min = $num;\n        } elsif ($num > $max) {\n     \
    \       $max = $num;\n        }\n        push(@sorted, $num);\n    }\n    foreach\
    \ my $num (@sorted) {\n        $i++;\n        if ($i == 1) {\n            $min\
    \ = $num;\n            $max = $num;\n        } else {\n            if ($num <\
    \ $min) {\n                $min = $num;\n            } elsif ($num > $max) {\n\
    \                $max = $num;\n            }\n        }\n    }\n    return @sorted;\n\
    }", "    my @sorted = ();\n    my $min = $lst[0];\n    my $max = $lst[0];\n  \
    \  my $i;\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $min = $lst[$i];\n        }\n        if ($lst[$i] > $max) {\n\
    \            $max = $lst[$i];\n        }\n    }\n    for ($i = 1; $i < @$lst;\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n    \
    \    }\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n       \
    \ }\n    }\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $min = $lst[$i];\n        }\n        if ($lst[$i] > $max) {\n\
    \            $max = $lst[$i];\n        }\n    }\n    for ($i = 1; $i < @$lst;\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n    \
    \    }\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n       \
    \ }\n    }\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $min = $lst[$i];\n        }\n        if ($lst[$i] > $max) {\n\
    \            $max = $lst[$i];\n        }\n    }\n    for ($i = 1; $i < @$lst;\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n    \
    \    }\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n       \
    \ }\n    }\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $min = $lst[$i];\n        }\n        if ($lst[$i] > $max) {\n\
    \            $max = $lst[$i];\n        }\n    }\n    for ($i = 1; $i < @$lst;\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n    \
    \    }\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n       \
    \ }\n    }\n    for ($i = 1; $i < @$lst; $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $min = $lst[$i];\n        }\n        if ($lst[$i] > $max) {\n\
    \            $max = $lst[$", "    my @sorted_list = ();\n    my $min = $lst[0];\n\
    \    my $max = $lst[0];\n    foreach my $num (@$lst) {\n        if ($num < $min)\
    \ {\n            $min = $num;\n        } elsif ($num > $max) {\n            $max\
    \ = $num;\n        } else {\n            push @sorted_list, $num;\n        }\n\
    \    }\n    return @sorted_list;\n}", "    my @sorted_lst = ();\n    my $min_val\
    \ = $lst[0];\n    my $max_val = $lst[0];\n    my $min_idx = -1;\n    my $max_idx\
    \ = -1;\n    my $i = 0;\n    foreach my $val (@$lst) {\n        if ($val < $min_val)\
    \ {\n            $min_val = $val;\n            $min_idx = $i;\n        }\n   \
    \     if ($val > $max_val) {\n            $max_val = $val;\n            $max_idx\
    \ = $i;\n        }\n        push @sorted_lst, $val;\n        $i++;\n    }\n  \
    \  push @sorted_lst, $min_val if $min_idx < 0;\n    push @sorted_lst, $max_val\
    \ if $max_idx < 0;\n    return @sorted_lst;\n}", "    my @sorted = ();\n    my\
    \ $min = $lst[0];\n    my $max = $lst[0];\n    my $i = 0;\n    foreach my $num\
    \ (@$lst) {\n        if ($num > $max) {\n            $max = $num;\n        } elsif\
    \ ($num < $min) {\n            $min = $num;\n        }\n        push(@sorted,\
    \ $num);\n    }\n    foreach my $num (@sorted) {\n        $i++;\n        if ($i\
    \ == 1) {\n            $min = $num;\n            $max = $num;\n        } elsif\
    \ ($num > $max) {\n            $max = $num;\n        } elsif ($num < $min) {\n\
    \            $min = $num;\n        }\n    }\n    return @sorted;\n}", "    my\
    \ @sorted_list = ();\n    my $min = $lst[0];\n    my $max = $lst[0];\n    my $i\
    \ = 0;\n    foreach my $num (@$lst) {\n        if ($num < $min) {\n          \
    \  $min = $num;\n        }\n        elsif ($num > $max) {\n            $max =\
    \ $num;\n        }\n        elsif ($num == $min) {\n            $min = $max;\n\
    \            $max = $num;\n        }\n        elsif ($num == $max) {\n       \
    \     $max = $num;\n        }\n        elsif ($num > $max) {\n            $sorted_list[$i]\
    \ = $num;\n            $i++;\n        }\n        elsif ($num < $min) {\n     \
    \       $sorted_list[$i] = $num;\n            $i++;\n        }\n    }\n    return\
    \ @sorted_list;\n}", "    my @sorted_list = ();\n    my $min = @$lst ? $lst[0]\
    \ : 0;\n    my $max = @$lst ? $lst[-1] : 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $temp;\n    foreach my $num (@$lst) {\n        $j++;\n        if ($j ==\
    \ 1) {\n            $temp = $num;\n        }\n        if ($num > $max) {\n   \
    \         $max = $num;\n        }\n        if ($num < $min) {\n            $min\
    \ = $num;\n        }\n        if ($num == $min) {\n            $sorted_list[$i]\
    \ = $temp;\n            $i++;\n            $j = 0;\n            $temp = $num;\n\
    \        }\n    }\n    return @sorted_list;\n}", "    my @sorted = ();\n    my\
    \ $min = $lst[0];\n    my $max = $lst[0];\n    foreach my $num (@$lst) {\n   \
    \     if ($num > $max) {\n            $max = $num;\n        } elsif ($num < $min)\
    \ {\n            $min = $num;\n        } else {\n            push(@sorted, $num);\n\
    \        }\n    }\n    foreach my $num (@sorted) {\n        push(@sorted, $num);\n\
    \    }\n    return @sorted;\n}", "    my @sorted_lst;\n    my $min = $lst[0];\n\
    \    my $max = $lst[0];\n    my $i = 0;\n    foreach my $num (@$lst) {\n     \
    \   if ($num < $min) {\n            $min = $num;\n        }\n        if ($num\
    \ > $max) {\n            $max = $num;\n        }\n        $sorted_lst[$i] = $num;\n\
    \        $i++;\n    }\n    foreach my $num (@$lst) {\n        $sorted_lst[$i]\
    \ = $num;\n        $i++;\n    }\n    foreach my $num (@$sorted_lst) {\n      \
    \  $sorted_lst[$i] = $num;\n        $i++;\n    }\n    return @sorted_lst;\n}",
  "    my @sorted_list = ();\n    my $min = $lst[0];\n    my $max = $lst[0];\n   \
    \ my $i;\n    my $j;\n    my $k;\n    my $temp;\n    my $count = 0;\n    my $temp_count\
    \ = 0;\n    my $temp_min;\n    my $temp_max;\n    foreach $i (0 .. $#$lst) {\n\
    \        $temp_min = $min;\n        $temp_max = $max;\n        $temp_count = $count;\n\
    \        $count = 1;\n        foreach $j ($i + 1 .. $#$lst) {\n            if\
    \ ($lst[$j] < $temp_min) {\n                $temp_min = $lst[$j];\n          \
    \      $temp_count = $temp_count + 1;\n            }\n            if ($lst[$j]\
    \ > $temp_max) {\n                $temp_max = $lst[$j];\n                $temp_count\
    \ = $temp_count + 1;\n            }\n            $count = $count + 1;\n      \
    \  }\n        foreach $k ($i .. $#$lst) {\n            if ($lst[$k] < $temp_min)\
    \ {\n                $temp_min = $lst[$k];\n                $temp_count = $temp_count\
    \ + 1;\n            }\n            if ($lst[$k] > $temp_max) {\n             \
    \   $temp_max = $lst[$k];\n                $temp_count = $temp_count + 1;\n  \
    \          }\n            $count = $count + 1;\n        }\n        if ($temp_count\
    \ > 1) {\n            push(@sorted_list, $temp_min);\n            push(@sorted_list,\
    \ $temp_max);\n            push(@sorted_list, $temp_min);\n            push(@sorted_list,\
    \ $temp_max);\n        } else {\n            push(@sorted_list, $temp_min);\n\
    \        }\n    }\n    return @sorted_list;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

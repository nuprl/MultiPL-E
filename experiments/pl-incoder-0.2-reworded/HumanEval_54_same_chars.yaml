name: HumanEval_54_same_chars
language: pl
prompt: "# Check if two words have the same characters.\n# >>> same_chars(\"eabcdzzzz\"\
  , \"dddzzzzzzzddeddabc\")\n# 1\n# >>> same_chars(\"abcd\", \"dddddddabc\")\n# 1\n\
  # >>> same_chars(\"dddddddabc\", \"abcd\")\n# 1\n# >>> same_chars(\"eabcd\", \"\
  dddddddabc\")\n# \"\"\n# >>> same_chars(\"abcd\", \"dddddddabce\")\n# \"\"\n# >>>\
  \ same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n# \"\"\nsub same_chars {\n \
  \   my($s0, $s1) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&same_chars;\n\
  \        if(eq_deeply($candidate->(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"),1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  abcd\", \"dddddddabc\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n \
  \       }\n        if(eq_deeply($candidate->(\"dddddddabc\", \"abcd\"),1)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  eabcd\", \"dddddddabc\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->(\"abcd\", \"dddddddabcf\"),\"\"))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  eabcdzzzz\", \"dddzzzzzzzddddabc\"),\"\")) {\n        print \"ok!\" }else{\n   \
  \     exit 1;\n        }\n        if(eq_deeply($candidate->(\"aabb\", \"aaccc\"\
  ),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $len0 = length($s0);\n    my $len1 = length($s1);\n    my $same\
    \ = 0;\n    for (my $i = 0; $i < $len0; $i++) {\n        for (my $j = 0; $j <\
    \ $len1; $j++) {\n            if ($s0 eq $s1) {\n                $same++;\n  \
    \              last;\n            }\n        }\n    }\n    return $same;\n}",
  "    my $len0 = length($s0);\n    my $len1 = length($s1);\n    my $same = 0;\n \
    \   my $i;\n    for ($i = 0; $i < $len0; $i++) {\n        if ($s0 eq $s1) {\n\
    \            $same++;\n        }\n        $s0 = substr($s0, $i + 1);\n       \
    \ $s1 = substr($s1, $i + 1);\n    }\n    return $same;\n}", "    my $len0 = length($s0);\n\
    \    my $len1 = length($s1);\n    my $same = 0;\n    for (my $i = 0; $i < $len0;\
    \ $i++) {\n        my $c0 = substr($s0, $i, 1);\n        my $c1 = substr($s1,\
    \ $i, 1);\n        if ($c0 ne $c1) {\n            $same++;\n        }\n    }\n\
    \    return $same;\n}", "    my $len0 = length($s0);\n    my $len1 = length($s1);\n\
    \    my $len2 = $len0 != $len1 ? $len0 : $len1;\n    my $same = 0;\n    my $i\
    \ = 0;\n    my $j = 0;\n    my $k = 0;\n    my $samechar;\n    my $samechar2;\n\
    \    my $samechar3;\n    my $samechar4;\n    my $samechar5;\n    my $samechar6;\n\
    \    my $samechar7;\n    my $samechar8;\n    my $samechar9;\n    my $samechar10;\n\
    \    my $samechar11;\n    my $samechar12;\n    my $samechar13;\n    my $samechar14;\n\
    \    my $samechar15;\n    my $samechar16;\n    my $samechar17;\n    my $samechar18;\n\
    \    my $samechar19;\n    my $samechar20;\n    my $samechar21;\n    my $samechar22;\n\
    \    my $samechar23;\n    my $samechar24;\n    my $samechar25;\n    my $samechar26;\n\
    \    my $samechar27;\n    my $samechar28;\n    my $samechar29;\n    my $samechar30;\n\
    \    my $samechar31;\n    my $samechar32;\n    my $samechar33;\n    my $samechar34;\n\
    \    my $samechar35;\n    my $samechar36;\n    my $samechar37;\n    my $samechar38;\n\
    \    my $samechar39;\n    my $samechar40;\n    my $samechar41;\n    my $samechar42;\n\
    \    my $samechar43;\n    my $samechar44;\n    my $samechar45;\n    my $samechar46;\n\
    \    my $samechar47;\n    my $samechar48;\n    my $samechar49;\n    my $samechar50;\n\
    \    my $samechar51;\n    my $samechar52;\n    my $samechar53;\n    my $samechar54;\n\
    \    my $samechar55;\n    my $samechar56;\n    my $samechar57;\n    my $samechar58;\n\
    \    my $samechar59;\n    my $samechar60;\n    my $samechar61;\n    my $samechar62;\n\
    \    my $samechar63;\n    my $samechar64;\n    my $samechar65;\n    my $samechar66;\n\
    \    my $samechar67;\n    my $samechar68;\n    ", "    my $len0 = length($s0);\n\
    \    my $len1 = length($s1);\n    my $same = 0;\n    for (my $i = 0; $i < $len0;\
    \ $i++) {\n        if ($s0 eq $s1) {\n            $same++;\n            $s0 =\
    \ substr($s0, $i + 1);\n            $s1 = substr($s1, $i + 1);\n        }\n  \
    \  }\n    return $same;\n}", "    my $len0 = length($s0);\n    my $len1 = length($s1);\n\
    \    my $same = 0;\n    for (my $i = 0; $i < $len0; $i++) {\n        if ($s0 eq\
    \ $s1) {\n            $same++;\n        }\n        $s0 = substr($s0, $i + 1);\n\
    \        $s1 = substr($s1, $i + 1);\n    }\n    return $same;\n}", "    my $len\
    \ = length($s0);\n    my $len1 = length($s1);\n    my $same = 0;\n    my $i =\
    \ 0;\n    my $j = 0;\n    while ($i < $len and $j < $len1) {\n        if ($s0\
    \ eq $s1) {\n            $same++;\n            $i++;\n            $j++;\n    \
    \    } elsif ($s0 eq $s1 . $s1) {\n            $same++;\n            $i++;\n \
    \       } elsif ($s0 eq $s1 . $s1 . $s1) {\n            $same++;\n           \
    \ $i++;\n            $j++;\n        } elsif ($s0 eq $s1 . $s1 . $s1 . $s1) {\n\
    \            $same++;\n            $i++;\n            $j++;\n        } elsif ($s0\
    \ eq $s1 . $s1 . $s1 . $s1 . $s1) {\n            $same++;\n            $i++;\n\
    \            $j++;\n            $j++;\n        } elsif ($s0 eq $s1 . $s1 . $s1\
    \ . $s1 . $s1 . $s1) {\n            $same++;\n            $i++;\n            $j++;\n\
    \            $j++;\n            $j++;\n        } elsif ($s0 eq $s1 . $s1 . $s1\
    \ . $s1 . $s1 . $s1 . $s1) {\n            $same++;\n            $i++;\n      \
    \      $j++;\n            $j++;\n            $j++;\n            $j++;\n      \
    \  } elsif ($s0 eq $s1 . $s1 . $s1 . $s1 . $s1 . $s1 . $s1 . $s1) {\n        \
    \    $same++;\n            $i++;\n            $j++;\n            $j++;\n     \
    \       $j++;\n            $j++;\n            $j++;\n        } elsif ($s0 eq $s1\
    \ . $s1 . $s1 . $s1 . $s1 . $s1 . $s1 . $s1 . $s1) {\n            $same++;\n \
    \           $i++;\n            $j++;\n            $j++;\n            $j++;\n \
    \           $j++;\n            $j++;\n            $j++;\n            $j++;\n \
    \       } elsif ($s0 eq $s1 . $s1 . $s1 . $s1 . $s1 . $s1 . $s1 . $s1 . $s1 .\
    \ $s1) {\n            $same++;\n            $i++;\n            $j++;\n       \
    \     $j++;\n            $j++;\n            $j++;\n            $j++;\n       \
    \     $j++;\n            $j++;\n            $j++;\n            $j++;\n       \
    \ } elsif ($", "    my $len0 = length($s0);\n    my $len1 = length($s1);\n   \
    \ my $same = 0;\n    my $i;\n    for ($i = 0; $i < $len0; $i++) {\n        if\
    \ ($s0 eq $s1) {\n            $same++;\n        }\n        $s0 = substr($s0, $i\
    \ + 1);\n        $s1 = substr($s1, $i + 1);\n    }\n    return $same;\n}", " \
    \   my $len0 = length($s0);\n    my $len1 = length($s1);\n    my $same = 0;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $diff;\n    my $diff2;\n    my $diff3;\n\
    \    my $diff4;\n    my $diff5;\n    my $diff6;\n    my $diff7;\n    my $diff8;\n\
    \    my $diff9;\n    my $diff10;\n    my $diff11;\n    my $diff12;\n    my $diff13;\n\
    \    my $diff14;\n    my $diff15;\n    my $diff16;\n    my $diff17;\n    my $diff18;\n\
    \    my $diff19;\n    my $diff20;\n    my $diff21;\n    my $diff22;\n    my $diff23;\n\
    \    my $diff24;\n    my $diff25;\n    my $diff26;\n    my $diff27;\n    my $diff28;\n\
    \    my $diff29;\n    my $diff30;\n    my $diff31;\n    my $diff32;\n    my $diff33;\n\
    \    my $diff34;\n    my $diff35;\n    my $diff36;\n    my $diff37;\n    my $diff38;\n\
    \    my $diff39;\n    my $diff40;\n    my $diff41;\n    my $diff42;\n    my $diff43;\n\
    \    my $diff44;\n    my $diff45;\n    my $diff46;\n    my $diff47;\n    my $diff48;\n\
    \    my $diff49;\n    my $diff50;\n    my $diff51;\n    my $diff52;\n    my $diff53;\n\
    \    my $diff54;\n    my $diff55;\n    my $diff56;\n    my $diff57;\n    my $diff58;\n\
    \    my $diff59;\n    my $diff60;\n    my $diff61;\n    my $diff62;\n    my $diff63;\n\
    \    my $diff64;\n    my $diff65;\n    my $diff66;\n    my $diff67;\n    my $diff68;\n\
    \    my $diff69;\n    my $diff70;\n    my $diff71;\n    my $diff72;\n    my $diff73;\n\
    \    my $diff74;\n    my $diff75;\n    my $diff76;\n    my $diff77;\n    my $diff78;\n\
    \    my $diff79;\n    my $diff80;\n    my $diff81;\n    my $diff82;\n    my $diff83",
  "    my(@s0) = split(//, $s0);\n    my(@s1) = split(//, $s1);\n    my $len0 = scalar(@s0);\n\
    \    my $len1 = scalar(@s1);\n    my $same = 0;\n    for (my $i = 0; $i < $len0;\
    \ $i++) {\n        if ($s0[$i] ne $s1[$i]) {\n            $same++;\n        }\n\
    \    }\n    return $same;\n}", "    my $len0 = length($s0);\n    my $len1 = length($s1);\n\
    \    my $same = 0;\n    for (my $i = 0; $i < $len0; $i++) {\n        my $c0 =\
    \ substr($s0, $i, 1);\n        my $c1 = substr($s1, $i, 1);\n        if ($c0 ne\
    \ $c1) {\n            $same++;\n        }\n    }\n    return $same;\n}", "   \
    \ my $len0 = length($s0);\n    my $len1 = length($s1);\n    my $len2 = $len0 >\
    \ $len1 ? $len1 : $len0;\n    my $len3 = $len0 > $len2 ? $len2 : $len0;\n    my\
    \ $len4 = $len1 > $len3 ? $len3 : $len1;\n    my $len5 = $len1 > $len4 ? $len4\
    \ : $len1;\n    my $len6 = $len2 > $len5 ? $len5 : $len2;\n    my $len7 = $len2\
    \ > $len6 ? $len6 : $len2;\n    my $len8 = $len3 > $len7 ? $len7 : $len3;\n  \
    \  my $len9 = $len3 > $len8 ? $len8 : $len3;\n    my $len10 = $len4 > $len9 ?\
    \ $len9 : $len4;\n    my $len11 = $len4 > $len10 ? $len10 : $len4;\n    my $len12\
    \ = $len5 > $len11 ? $len11 : $len5;\n    my $len13 = $len5 > $len12 ? $len12\
    \ : $len5;\n    my $len14 = $len6 > $len13 ? $len13 : $len6;\n    my $len15 =\
    \ $len6 > $len14 ? $len14 : $len6;\n    my $len16 = $len7 > $len15 ? $len15 :\
    \ $len7;\n    my $len17 = $len7 > $len16 ? $len16 : $len7;\n    my $len18 = $len8\
    \ > $len17 ? $len17 : $len8;\n    my $len19 = $len8 > $len18 ? $len18 : $len8;\n\
    \    my $len20 = $len9 > $len19 ? $len19 : $len9;\n    my $len21 = $len9 > $len20\
    \ ? $len20 : $len9;\n    my $len22 = $len10 > $len21 ? $len21 : $len10;\n    my\
    \ $len23 = $len10 > $len22 ? $len22 : $len10;\n    my $len24 = $len11 > $len23\
    \ ? $len23 : $len11;\n    my $len25 = $len11 > $len24 ? $len24 : $len11;\n   \
    \ my $len26 = $len12 > $len25 ? $len25 : $len12;\n    my $", "    my $len0 = length($s0);\n\
    \    my $len1 = length($s1);\n    my $same = 0;\n    my $i = 0;\n    my $j = 0;\n\
    \    while ($i < $len0 && $j < $len1) {\n        if ($s0 eq $s1) {\n         \
    \   $same++;\n            $i++;\n            $j++;\n        } elsif ($s0 eq $s1\
    \ . substr($s1, 0, $i)) {\n            $same++;\n            $i++;\n        }\
    \ elsif ($s1 eq $s0 . substr($s1, 0, $j)) {\n            $same++;\n          \
    \  $j++;\n        } else {\n            $i++;\n            $j++;\n        }\n\
    \    }\n    return $same;\n}", "    my $len0 = length($s0);\n    my $len1 = length($s1);\n\
    \    my $same = 0;\n    for (my $i = 0; $i < $len0; $i++) {\n        my $c0 =\
    \ substr($s0, $i, 1);\n        my $c1 = substr($s1, $i, 1);\n        if ($c0 ne\
    \ $c1) {\n            $same++;\n        }\n    }\n    return $same;\n}", "   \
    \ my(@s0) = split(//, $s0);\n    my(@s1) = split(//, $s1);\n    my $same = 0;\n\
    \    for (my $i = 0; $i < @s0; $i++) {\n        if ($s1[$i] eq $s0[$i]) {\n  \
    \          $same++;\n        }\n    }\n    return $same;\n}", "    my $len0 =\
    \ length($s0);\n    my $len1 = length($s1);\n    my $same = 0;\n    my $i;\n \
    \   my $j;\n    my $k;\n    for ($i = 0; $i < $len0; $i++) {\n        for ($j\
    \ = 0; $j < $len1; $j++) {\n            $k = $s1[$j];\n            if ($s1[$j]\
    \ eq $s0[$i]) {\n                $same++;\n                last;\n           \
    \ }\n        }\n    }\n    return $same;\n}", "    my($len0, $len1) = length($s0),\
    \ length($s1);\n    my($i, $j, $c0, $c1);\n    my($diff) = 0;\n    my($same) =\
    \ 0;\n    my($diffs) = ();\n    my($diffs_count) = 0;\n    my($diffs_count) =\
    \ 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($diffs_count) = 0;\n    my($diffs_count)\
    \ = 0;\n    my($diffs_count) = 0;\n    my($", "    my $len0 = length($s0);\n \
    \   my $len1 = length($s1);\n    my $same = 0;\n    my $i;\n    for ($i = 0; $i\
    \ < $len0; $i++) {\n        if ($s0 eq $s1) {\n            $same++;\n        }\n\
    \        $s0 = substr($s0, $i + 1);\n        $s1 = substr($s1, $i + 1);\n    }\n\
    \    return $same;\n}", "    my $len0 = length($s0);\n    my $len1 = length($s1);\n\
    \    my $same = 0;\n    for (my $i = 0; $i < $len0; $i++) {\n        if ($s0 eq\
    \ $s1) {\n            $same++;\n            $s0 = substr($s0, $i + 1);\n     \
    \       $s1 = substr($s1, $i + 1);\n        }\n    }\n    return $same;\n}", " \
    \   my $len = length($s0);\n    my $len1 = length($s1);\n    my $diff = $len1\
    \ - $len;\n    if ($diff > 0) {\n        return 0;\n    }\n    elsif ($diff <\
    \ 0) {\n        return 1;\n    }\n    my $i = 0;\n    my $j = 0;\n    my $same\
    \ = 0;\n    while ($i < $len and $j < $len1) {\n        if (substr($s0, $i, 1)\
    \ ne substr($s1, $j, 1)) {\n            $same = 0;\n            last;\n      \
    \  }\n        $i++;\n        $j++;\n    }\n    return $same;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

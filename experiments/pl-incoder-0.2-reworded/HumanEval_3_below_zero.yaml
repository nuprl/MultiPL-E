name: HumanEval_3_below_zero
language: pl
prompt: "# You're given an array of deposit and withdrawal operations on a bank account\
  \ that starts with\n# zero balance. Your task is to detect if at any point the balance\
  \ of account fallls below zero, and\n# at that point function should return 1. Otherwise\
  \ it should return .\n# >>> below_zero([1, 2, 3])\n# \"\"\n# >>> below_zero([1,\
  \ 2, -4, 5])\n# 1\nsub below_zero {\n    my($operations) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&below_zero;\n\
  \        if(eq_deeply($candidate->([]),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, -3, 1, 2,\
  \ -3]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->([1, 2, -4, 5, 6]),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, -1, 2, -2, 5,\
  \ -5, 4, -4]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([1, -1, 2, -2, 5, -5, 4, -5]),1)) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ -2, 2, -2, 5, -5, 4, -4]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n}\n\ntesthumaneval();"
completions: ["    my $balance = $operations[0]->{balance};\n    my $index = 0;\n\
    \    my $result = \"\";\n    foreach my $operation (@$operations) {\n        if\
    \ ($operation->{operation} eq \"deposit\") {\n            $balance += $operation->{amount};\n\
    \        } elsif ($operation->{operation} eq \"withdraw\") {\n            $balance\
    \ -= $operation->{amount};\n        }\n        if ($balance < 0) {\n         \
    \   $result = 1;\n            last;\n        }\n        $index++;\n    }\n   \
    \ return $result;\n}", "    my $balance = 0;\n    foreach my $op (@$operations)\
    \ {\n        if ($op == 1) {\n            $balance += $op;\n        }\n      \
    \  elsif ($op == -1) {\n            $balance -= $op;\n        }\n    }\n    return\
    \ $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n    foreach my $operation\
    \ (@$operations) {\n        if ($operation eq 'deposit') {\n            $balance\
    \ += $operation->{amount};\n        } elsif ($operation eq 'withdraw') {\n   \
    \         $balance -= $operation->{amount};\n        }\n    }\n    return $balance\
    \ < 0 ? 1 : 0;\n}", "    my $balance = 0;\n    foreach my $op (@$operations) {\n\
    \        if ($op == 1) {\n            $balance += $op;\n        }\n        else\
    \ {\n            $balance -= $op;\n        }\n        if ($balance < 0) {\n  \
    \          return 1;\n        }\n    }\n    return 0;\n}", "    my $balance =\
    \ 0;\n    foreach my $op (@$operations) {\n        if ($op == 1) {\n         \
    \   $balance += $op;\n        }\n        elsif ($op == -1) {\n            $balance\
    \ -= $op;\n        }\n        else {\n            return \"\";\n        }\n  \
    \  }\n    return $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n    my $operation;\n\
    \    foreach $operation (@$operations) {\n        if ($operation =~ /^deposit/i)\
    \ {\n            $balance += $1;\n        } elsif ($operation =~ /^withdraw/i)\
    \ {\n            $balance -= $1;\n        }\n    }\n    return $balance < 0 ?\
    \ 1 : 0;\n}", "    my $balance = 0;\n    foreach my $operation (@$operations)\
    \ {\n        if ($operation eq 'deposit') {\n            $balance += $operation->{amount};\n\
    \        } elsif ($operation eq 'withdraw') {\n            $balance -= $operation->{amount};\n\
    \        }\n    }\n    return $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n\
    \    foreach my $operation (@$operations) {\n        if ($operation eq 'deposit')\
    \ {\n            $balance += $operation->{amount};\n        }\n        elsif ($operation\
    \ eq 'withdraw') {\n            $balance -= $operation->{amount};\n        }\n\
    \    }\n    return $balance < 0;\n}", "    my $balance = 0;\n    foreach my $operation\
    \ (@$operations) {\n        if ($operation eq 'deposit') {\n            $balance\
    \ += $operation->{amount};\n        } elsif ($operation eq 'withdraw') {\n   \
    \         $balance -= $operation->{amount};\n        }\n    }\n    return $balance\
    \ < 0;\n}", "    my $balance = 0;\n    foreach my $operation (@$operations) {\n\
    \        if ($operation eq 'deposit') {\n            $balance += $operation->{amount};\n\
    \        } elsif ($operation eq 'withdraw') {\n            $balance -= $operation->{amount};\n\
    \        }\n    }\n    return $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n\
    \    foreach my $operation (@$operations) {\n        if ($operation eq 'deposit')\
    \ {\n            $balance += $operation->{amount};\n        } elsif ($operation\
    \ eq 'withdraw') {\n            $balance -= $operation->{amount};\n        } else\
    \ {\n            die \"Unknown operation $operation\";\n        }\n    }\n   \
    \ return $balance < 0;\n}", "    my $balance = 0;\n    foreach my $operation (@$operations)\
    \ {\n        if ($operation eq 'deposit') {\n            $balance += $operation->{amount};\n\
    \        } elsif ($operation eq 'withdraw') {\n            $balance -= $operation->{amount};\n\
    \        }\n    }\n    return $balance < 0;\n}", "    my $balance = 0;\n    foreach\
    \ my $operation (@$operations) {\n        if ($operation eq 'deposit') {\n   \
    \         $balance += $operation->{amount};\n        } elsif ($operation eq 'withdraw')\
    \ {\n            $balance -= $operation->{amount};\n        }\n    }\n    return\
    \ $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n    foreach my $op (@$operations)\
    \ {\n        if ($op == 1) {\n            $balance += $op;\n        }\n      \
    \  elsif ($op == -1) {\n            $balance -= $op;\n        }\n        else\
    \ {\n            die \"Unknown operation: $op\";\n        }\n    }\n    return\
    \ $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n    foreach my $operation\
    \ (@$operations) {\n        if ($operation eq 'deposit') {\n            $balance\
    \ += $operation->{amount};\n        }\n        elsif ($operation eq 'withdraw')\
    \ {\n            $balance -= $operation->{amount};\n        }\n    }\n    return\
    \ $balance < 0;\n}", "    my $balance = 0;\n    foreach my $op (@$operations)\
    \ {\n        if ($op > 0) {\n            $balance += $op;\n        }\n       \
    \ elsif ($op < 0) {\n            $balance -= $op;\n        }\n    }\n    return\
    \ $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n    foreach my $operation\
    \ (@$operations) {\n        if ($operation eq 'deposit') {\n            $balance\
    \ += $operation->{amount};\n        } elsif ($operation eq 'withdraw') {\n   \
    \         $balance -= $operation->{amount};\n        }\n    }\n    return $balance\
    \ < 0 ? 1 : 0;\n}", "    my $balance = 0;\n    foreach my $operation (@$operations)\
    \ {\n        if ($operation eq 'deposit') {\n            $balance += $operation->{amount};\n\
    \        } elsif ($operation eq 'withdraw') {\n            $balance -= $operation->{amount};\n\
    \        }\n    }\n    return $balance < 0 ? 1 : 0;\n}", "    my $balance = 0;\n\
    \    foreach my $operation (@$operations) {\n        if ($operation eq 'deposit')\
    \ {\n            $balance += $operation->{amount};\n        }\n        elsif ($operation\
    \ eq 'withdraw') {\n            $balance -= $operation->{amount};\n        }\n\
    \    }\n    return $balance < 0 ? 1 : 0;\n}", "    my $balance = shift;\n    my\
    \ $result = \"\";\n    foreach my $operation (@$operations) {\n        if ($operation\
    \ eq \"deposit\") {\n            $result .= $balance < 0 ? 1 : 0;\n        }\n\
    \        elsif ($operation eq \"withdraw\") {\n            $result .= $balance\
    \ < 0 ? 0 : 1;\n        }\n    }\n    return $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_20_find_closest_elements
language: pl
prompt: "# From a supplied array of numbers (of length at least two) select and return\
  \ two that are the closest to each\n# other and return them in order (smaller number,\
  \ larger number).\n# >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n\
  # [2.0, 2.2]\n# >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n# [2.0,\
  \ 2.0]\nsub find_closest_elements {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_closest_elements;\n\
  \        if(eq_deeply($candidate->([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
  \ 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9])) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0,\
  \ 2.2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
  \ 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0])) {\n        print \"ok!\" }else{\n     \
  \   exit 1;\n        }\n        if(eq_deeply($candidate->([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
  \ 3.1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @closest_elements;\n    my $smallest_number = $numbers[0];\n\
    \    my $largest_number = $numbers[0];\n    my $smallest_index = 0;\n    my $largest_index\
    \ = 0;\n    foreach my $number (@$numbers) {\n        if ($number < $smallest_number)\
    \ {\n            $smallest_number = $number;\n            $smallest_index = $_;\n\
    \        } elsif ($number > $largest_number) {\n            $largest_number =\
    \ $number;\n            $largest_index = $_;\n        }\n    }\n    push @closest_elements,\
    \ $smallest_number, $largest_number;\n    push @closest_elements, $smallest_index,\
    \ $largest_index;\n    return @closest_elements;\n}", "    my $min = Math::BigRat->new('1');\n\
    \    my $max = $numbers[0];\n    my $index = 0;\n    my $found = 0;\n    my $found2\
    \ = 0;\n    my $diff;\n    my $diff2;\n    my $diff3;\n    my $diff4;\n    my\
    \ $diff5;\n    my $diff6;\n    my $diff7;\n    my $diff8;\n    my $diff9;\n  \
    \  my $diff10;\n    my $diff11;\n    my $diff12;\n    my $diff13;\n    my $diff14;\n\
    \    my $diff15;\n    my $diff16;\n    my $diff17;\n    my $diff18;\n    my $diff19;\n\
    \    my $diff20;\n    my $diff21;\n    my $diff22;\n    my $diff23;\n    my $diff24;\n\
    \    my $diff25;\n    my $diff26;\n    my $diff27;\n    my $diff28;\n    my $diff29;\n\
    \    my $diff30;\n    my $diff31;\n    my $diff32;\n    my $diff33;\n    my $diff34;\n\
    \    my $diff35;\n    my $diff36;\n    my $diff37;\n    my $diff38;\n    my $diff39;\n\
    \    my $diff40;\n    my $diff41;\n    my $diff42;\n    my $diff43;\n    my $diff44;\n\
    \    my $diff45;\n    my $diff46;\n    my $diff47;\n    my $diff48;\n    my $diff49;\n\
    \    my $diff50;\n    my $diff51;\n    my $diff52;\n    my $diff53;\n    my $diff54;\n\
    \    my $diff55;\n    my $diff56;\n    my $diff57;\n    my $diff58;\n    my $diff59;\n\
    \    my $diff60;\n    my $diff61;\n    my $diff62;\n    my $diff63;\n    my $diff64;\n\
    \    my $diff65;\n    my $diff66;\n    my $diff67;\n    my $diff68;\n    my $diff69;\n\
    \    my $diff70;\n    my $diff71;\n    my $diff72;\n    my $diff73;\n    my $diff74;\n\
    \    my $diff75;\n    my $diff76;\n    my $diff77;\n    my $diff78;\n    my $diff79;\n\
    \    my $diff80;\n    my $diff81;\n    my $diff82;\n    my $diff83;\n", "    my\
    \ $min = Math::BigInt->new('1');\n    my $max = $numbers[0];\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    my $i;\n    for ($i = 0; $i < @$numbers; $i++)\
    \ {\n        if ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n  \
    \          $min_index = $i;\n        }\n        if ($numbers[$i] > $max) {\n \
    \           $max = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return @$numbers[$min_index..$max_index];\n}", "    my($min, $max);\n\
    \    my($min_index, $max_index);\n    my($min_diff, $max_diff);\n    my $min_diff\
    \ = 0;\n    my $max_diff = 0;\n    my $min_index = 0;\n    my $max_index = 0;\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n            $max_index = $numbers;\n        }\n       \
    \ if ($number < $min) {\n            $min = $number;\n            $min_index =\
    \ $numbers;\n        }\n        if ($number - $min < $max_diff and $number - $min\
    \ > $min_diff) {\n            $min_diff = $number - $min;\n            $min_index\
    \ = $numbers;\n        }\n        if ($number - $max < $min_diff and $number -\
    \ $max > $max_diff) {\n            $max_diff = $number - $max;\n            $max_index\
    \ = $numbers;\n        }\n    }\n    return ($min_index, $max_index);\n}", " \
    \   my $min = Math::BigRat->new('1');\n    my $max = $numbers[0];\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    my $i;\n    for ($i = 0; $i < @$numbers; $i++)\
    \ {\n        if ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n  \
    \          $min_index = $i;\n        }\n        if ($numbers[$i] > $max) {\n \
    \           $max = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    return ($numbers[$min_index], $numbers[$max_index]);\n}", "    my $min\
    \ = Math::BigRat->new('1');\n    my $max = Math::BigRat->new('0');\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    foreach my $number (@$numbers) {\n       \
    \ $min = $min->add($number);\n        $max = $max->subtract($number);\n      \
    \  if ($min->is_int() && $max->is_int()) {\n            if ($min->compare($max)\
    \ < 0) {\n                $min_index = $number->{index};\n            }\n    \
    \        else {\n                $max_index = $number->{index};\n            }\n\
    \        }\n    }\n    return ($min_index, $max_index);\n}", "    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    my $min_index = 0;\n    my $max_index = 0;\n\
    \    my $min_diff = 0;\n    my $max_diff = 0;\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n            $min_index\
    \ = 0;\n        } elsif ($number > $max) {\n            $max = $number;\n    \
    \        $max_index = 0;\n        } else {\n            $min_index++;\n      \
    \      $max_index++;\n        }\n        $min_diff = $min_diff + $number - $min;\n\
    \        $max_diff = $max_diff + $max - $number;\n    }\n    if ($min_index ==\
    \ 0) {\n        return $numbers[$max_index];\n    } elsif ($max_index == 0) {\n\
    \        return $numbers[$min_index];\n    }\n    return $numbers[$min_index -\
    \ 1];\n}", "    my $min = Math::BigRat->new('1');\n    my $max = Math::BigRat->new('1');\n\
    \    my $min_index = 0;\n    my $max_index = 0;\n    my $i;", "    my $min = Math::BigRat->new('1');\n\
    \    my $max = $numbers[0];\n    my $min_index = 0;\n    my $max_index = 0;\n\
    \    my $i;", "    my $min = $numbers[0];\n    my $max = $numbers[0];\n    my\
    \ $min_index = 0;\n    my $max_index = 0;\n    my $i;", "    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    my $min_index = 0;\n    my $max_index = 0;\n\
    \    my $i;", "    my $min = Math::BigFloat->new('inf');\n    my $max = Math::BigFloat->new('-inf');\n\
    \    my $min_index = 0;\n    my $max_index = 0;\n    my $i;\n    my $j;\n    my\
    \ $diff;\n    my $diff2;\n    my $diff3;\n    my $diff4;\n    my $diff5;\n   \
    \ my $diff6;\n    my $diff7;\n    my $diff8;\n    my $diff9;\n    my $diff10;\n\
    \    my $diff11;\n    my $diff12;\n    my $diff13;\n    my $diff14;\n    my $diff15;\n\
    \    my $diff16;\n    my $diff17;\n    my $diff18;\n    my $diff19;\n    my $diff20;\n\
    \    my $diff21;\n    my $diff22;\n    my $diff23;\n    my $diff24;\n    my $diff25;\n\
    \    my $diff26;\n    my $diff27;\n    my $diff28;\n    my $diff29;\n    my $diff30;\n\
    \    my $diff31;\n    my $diff32;\n    my $diff33;\n    my $diff34;\n    my $diff35;\n\
    \    my $diff36;\n    my $diff37;\n    my $diff38;\n    my $diff39;\n    my $diff40;\n\
    \    my $diff41;\n    my $diff42;\n    my $diff43;\n    my $diff44;\n    my $diff45;\n\
    \    my $diff46;\n    my $diff47;\n    my $diff48;\n    my $diff49;\n    my $diff50;\n\
    \    my $diff51;\n    my $diff52;\n    my $diff53;\n    my $diff54;\n    my $diff55;\n\
    \    my $diff56;\n    my $diff57;\n    my $diff58;\n    my $diff59;\n    my $diff60;\n\
    \    my $diff61;\n    my $diff62;\n    my $diff63;\n    my $diff64;\n    my $diff65;\n\
    \    my $diff66;\n    my $diff67;\n    my $diff68;\n    my $diff69;\n    my $diff70;\n\
    \    my $diff71;\n    my $diff72;\n    my $diff73;\n    my $diff74;\n    my $diff75;\n\
    \    my $diff76;\n    my $diff77;\n    my $diff78;\n    my $diff79;\n    my $diff80;\n\
    \    my $diff81;\n    ", "    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    my $min_index = 0;\n    my $max_index = 0;\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n            $min_index\
    \ = $_;\n        } elsif ($number > $max) {\n            $max = $number;\n   \
    \         $max_index = $_;\n        }\n    }\n    return ($min_index, $max_index);\n\
    }", "    my $min = Math::BigInt->new($numbers[0]);\n    my $max = Math::BigInt->new($numbers[0]);\n\
    \    my $min_index = 0;\n    my $max_index = 0;\n    my $min_diff = 0;\n    my\
    \ $max_diff = 0;\n    my $i;", "    my @closest_elements;\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $smallest_number) {\n            $smallest_number\
    \ = $number;\n        }\n        if ($number > $largest_number) {\n          \
    \  $largest_number = $number;\n        }\n    }\n    push @closest_elements, $smallest_number;\n\
    \    push @closest_elements, $largest_number;\n    return @closest_elements;\n\
    }", "    my $min = Math::BigRat->new('1');\n    my $max = $numbers[0];\n    my\
    \ $min_index = 0;\n    my $max_index = 0;\n    my $i;\n    my $diff;\n    my $diff2;\n\
    \    my $diff3;\n    my $diff4;\n    my $diff5;\n    my $diff6;\n    my $diff7;\n\
    \    my $diff8;\n    my $diff9;\n    my $diff10;\n    my $diff11;\n    my $diff12;\n\
    \    my $diff13;\n    my $diff14;\n    my $diff15;\n    my $diff16;\n    my $diff17;\n\
    \    my $diff18;\n    my $diff19;\n    my $diff20;\n    my $diff21;\n    my $diff22;\n\
    \    my $diff23;\n    my $diff24;\n    my $diff25;\n    my $diff26;\n    my $diff27;\n\
    \    my $diff28;\n    my $diff29;\n    my $diff30;\n    my $diff31;\n    my $diff32;\n\
    \    my $diff33;\n    my $diff34;\n    my $diff35;\n    my $diff36;\n    my $diff37;\n\
    \    my $diff38;\n    my $diff39;\n    my $diff40;\n    my $diff41;\n    my $diff42;\n\
    \    my $diff43;\n    my $diff44;\n    my $diff45;\n    my $diff46;\n    my $diff47;\n\
    \    my $diff48;\n    my $diff49;\n    my $diff50;\n    my $diff51;\n    my $diff52;\n\
    \    my $diff53;\n    my $diff54;\n    my $diff55;\n    my $diff56;\n    my $diff57;\n\
    \    my $diff58;\n    my $diff59;\n    my $diff60;\n    my $diff61;\n    my $diff62;\n\
    \    my $diff63;\n    my $diff64;\n    my $diff65;\n    my $diff66;\n    my $diff67;\n\
    \    my $diff68;\n    my $diff69;\n    my $diff70;\n    my $diff71;\n    my $diff72;\n\
    \    my $diff73;\n    my $diff74;\n    my $diff75;\n    my $diff76;\n    my $diff77;\n\
    \    my $diff78;\n    my $diff79;\n    my $diff80;\n    my $diff81;\n    my $diff82;\n\
    \    my $diff83;", "    my @closest_elements;\n    my $smallest_number = $numbers[0];\n\
    \    my $largest_number = $numbers[0];\n    my $smallest_index = 0;\n    my $largest_index\
    \ = 0;\n    my $smallest_diff = 0;\n    my $largest_diff = 0;\n    my $smallest_diff_index\
    \ = 0;\n    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $largest_diff_value = $numbers[0];\n    my $smallest_diff_index = 0;\n\
    \    my $largest_diff_index = 0;\n    my $smallest_diff_value = $numbers[0];\n\
    \    my $", "    my $min = $numbers[0];\n    my $max = $numbers[0];\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    foreach my $number (@$numbers) {\n       \
    \ if ($number < $min) {\n            $min = $number;\n            $min_index =\
    \ $_;\n        } elsif ($number > $max) {\n            $max = $number;\n     \
    \       $max_index = $_;\n        }\n    }\n    return ($min_index, $max_index);\n\
    }", "    my $min = $numbers[0];\n    my $max = $numbers[0];\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    my $i;", "    my $min_diff = $numbers[0] -\
    \ $numbers[1];\n    my $max_diff = $numbers[1] - $numbers[0];\n    my $min_diff_index\
    \ = 0;\n    my $max_diff_index = 1;\n    my $min_diff_index2 = 0;\n    my $max_diff_index2\
    \ = 1;\n    my $min_diff_index3 = 0;\n    my $max_diff_index3 = 1;\n    my $min_diff_index4\
    \ = 0;\n    my $max_diff_index4 = 1;\n    my $min_diff_index5 = 0;\n    my $max_diff_index5\
    \ = 1;\n    my $min_diff_index6 = 0;\n    my $max_diff_index6 = 1;\n    my $min_diff_index7\
    \ = 0;\n    my $max_diff_index7 = 1;\n    my $min_diff_index8 = 0;\n    my $max_diff_index8\
    \ = 1;\n    my $min_diff_index9 = 0;\n    my $max_diff_index9 = 1;\n    my $min_diff_index10\
    \ = 0;\n    my $max_diff_index10 = 1;\n    my $min_diff_index11 = 0;\n    my $max_diff_index11\
    \ = 1;\n    my $min_diff_index12 = 0;\n    my $max_diff_index12 = 1;\n    my $min_diff_index13\
    \ = 0;\n    my $max_diff_index13 = 1;\n    my $min_diff_index14 = 0;\n    my $max_diff_index14\
    \ = 1;\n    my $min_diff_index15 = 0;\n    my $max_diff_index15 = 1;\n    my $min_diff_index16\
    \ = 0;\n    my $max_diff_index16 = 1;\n    my $min_diff_index17 = 0;\n    my $max_diff_index17\
    \ = 1;\n    my $min_diff_index18 = 0;\n    my $max_diff_index18 = 1;\n    my $min_diff_index19\
    \ = 0;\n    my $max_diff_index19 = 1;\n    my $min_diff_index20 = 0;\n    my $max_diff_index20\
    \ = 1;\n    my $min_diff_index21 = 0;\n    my $max_diff_index21 = 1;\n    my $min_diff_index22\
    \ = 0;\n    my $max_diff_index22 = 1;\n    my $min_diff_index23 = 0;\n    my $max_diff_index23\
    \ = 1;\n    my $min_diff_index24 = 0;\n    my $max_diff_index24 = 1;\n    my $min_diff_index25\
    \ = 0;\n    my $max_diff_index25 = 1;\n    my $min_diff_index26 = 0;\n    my $max_diff_index26\
    \ = 1;\n    my $min_diff_index27 = 0;\n    my $max_diff_index27 = 1;\n    my $min_diff_index28\
    \ = 0;\n    my $max_diff_index28 = 1;\n    my $min_diff_index29 = 0;\n    my $max_diff_index29\
    \ = 1;\n    my $min_diff_index30 = 0;\n    my $max_diff_index30 = 1;\n    my $min_diff_index31\
    \ = 0;\n    my $max_diff_index3"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

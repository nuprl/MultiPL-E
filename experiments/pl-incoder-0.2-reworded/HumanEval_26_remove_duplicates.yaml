name: HumanEval_26_remove_duplicates
language: pl
prompt: "# From an array of integers, remove all elements that occur more than once.\n\
  # Keep order of elements left the same as in the input.\n# >>> remove_duplicates([1,\
  \ 2, 3, 2, 4])\n# [1, 3, 4]\nsub remove_duplicates {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&remove_duplicates;\n\
  \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n  \
  \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4]),[1, 2,\
  \ 3, 4])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 2, 4, 3, 5]),[1, 4, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n}\n\ntesthumaneval();"
completions: ["    my @unique;\n    my $i = 0;\n    foreach my $number (@$numbers)\
    \ {\n        if ($unique[$i] eq $number) {\n            $i++;\n        } else\
    \ {\n            $unique[$i] = $number;\n            $i++;\n        }\n    }\n\
    \    return @unique;\n}", "    my @unique;\n    my $index = 0;\n    my $unique_index\
    \ = 0;\n    foreach my $number (@$numbers) {\n        if ($unique_index != $index)\
    \ {\n            push(@unique, $number);\n            $unique_index = $index;\n\
    \        }\n        $index++;\n    }\n    return @unique;\n}", "    my @unique;\n\
    \    my $index = 0;\n    foreach my $num (@$numbers) {\n        if ($unique[$index++]\
    \ eq $num) {\n            next;\n        }\n        $unique[$index] = $num;\n\
    \    }\n    return @unique;\n}", "    my @result;\n    my $index = 0;\n    foreach\
    \ my $number (@$numbers) {\n        if ($result[$index] eq $number) {\n      \
    \      $index++;\n        } else {\n            $result[$index] = $number;\n \
    \           $index++;\n        }\n    }\n    return @result;\n}", "    my @output;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $last_seen;\n    my $last_seen_index;\n\
    \    my $last_seen_value;\n    my $last_seen_count;\n    my $last_seen_count_index;\n\
    \    my $last_seen_count_value;\n    my $last_seen_count_count;\n    my $last_seen_count_count_index;\n\
    \    my $last_seen_count_count_value;\n    my $last_seen_count_count_count;\n\
    \    my $last_seen_count_count_count_index;\n    my $last_seen_count_count_count_value;\n\
    \    my $last_seen_count_count_count_count;\n    my $last_seen_count_count_count_count_index;\n\
    \    my $last_seen_count_count_count_count_value;\n    my $last_seen_count_count_count_count_count;\n\
    \    my $last_seen_count_count_count_count_count_index;\n    my $last_seen_count_count_count_count_count_value;\n\
    \    my $last_seen_count_count_count_count_count_count;\n    my $last_seen_count_count_count_count_count_count_index;\n\
    \    my $last_seen_count_count_count_count_count_count_value;\n    my $last_seen_count_count_count_count_count_count_count;\n\
    \    my $last_seen_count_count_count_count_count_count_count_index;\n    my $last_seen_count_count_count_count_count_count_count_value;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count;\n    my $last_seen_count_count_count_count_count_count_count_count_index;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_value;\n  \
    \  my $last_seen_count_count_count_count_count_count_count_count_count;\n    my\
    \ $last_seen_count_count_count_count_count_count_count_count_count_index;\n  \
    \  my $last_seen_count_count_count_count_count_count_count_count_count_value;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_index;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_value;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_index;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_value;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_count;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_count_index;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_count_value;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_count_count;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_count_count_index;\n\
    \    my $last_seen_count_count_count_count_count_count_count_count_count_", " \
    \   my @unique;\n    my $i = 0;\n    my $j = 0;\n    my $unique_count = 0;\n \
    \   my $unique_index;\n    my $number;\n    foreach $number (@$numbers) {\n  \
    \      if ($unique_count++ == 1) {\n            $unique_index = $i;\n        }\n\
    \        $unique[$unique_index] = $number;\n        $i++;\n    }\n    return @unique;\n\
    }", "    my @unique;\n    my $index = 0;\n    my $last_index = 0;\n    my $last_number\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number ==\
    \ $last_number) {\n            $last_index++;\n        } else {\n            if\
    \ ($last_index != 0) {\n                push(@unique, $last_number);\n       \
    \     }\n            $last_number = $number;\n            $last_index = 1;\n \
    \       }\n    }\n    if ($last_index != 0) {\n        push(@unique, $last_number);\n\
    \    }\n    return @unique;\n}", "    my @output;\n    my $i = 0;\n    my $j =\
    \ 0;\n    my $last;\n    my $first;\n    my $found;\n    my $found2;\n    my $found3;\n\
    \    my $found4;\n    my $found5;\n    my $found6;\n    my $found7;\n    my $found8;\n\
    \    my $found9;\n    my $found10;\n    my $found11;\n    my $found12;\n    my\
    \ $found13;\n    my $found14;\n    my $found15;\n    my $found16;\n    my $found17;\n\
    \    my $found18;\n    my $found19;\n    my $found20;\n    my $found21;\n    my\
    \ $found22;\n    my $found23;\n    my $found24;\n    my $found25;\n    my $found26;\n\
    \    my $found27;\n    my $found28;\n    my $found29;\n    my $found30;\n    my\
    \ $found31;\n    my $found32;\n    my $found33;\n    my $found34;\n    my $found35;\n\
    \    my $found36;\n    my $found37;\n    my $found38;\n    my $found39;\n    my\
    \ $found40;\n    my $found41;\n    my $found42;\n    my $found43;\n    my $found44;\n\
    \    my $found45;\n    my $found46;\n    my $found47;\n    my $found48;\n    my\
    \ $found49;\n    my $found50;\n    my $found51;\n    my $found52;\n    my $found53;\n\
    \    my $found54;\n    my $found55;\n    my $found56;\n    my $found57;\n    my\
    \ $found58;\n    my $found59;\n    my $found60;\n    my $found61;\n    my $found62;\n\
    \    my $found63;\n    my $found64;\n    my $found65;\n    my $found66;\n    my\
    \ $found67;\n    my $found68;\n    my $found69;\n    my $found70;\n    my $found71;\n\
    \    my $found72;\n    my $found73;\n    my $found74;\n    my $found75;\n    my\
    \ $found76;\n    my $found77;\n    my $found78;\n    my $found79;\n    my $found80;\n\
    \    my $found81;\n    my $found82;\n    my $found83;\n    my $found84;\n    my\
    \ $found85;", "    my @unique;\n    my $i = 0;\n    my $j = 0;\n    my $last;\n\
    \    my $last_value;", "    my @unique;\n    my $i = 0;\n    foreach my $num (@$numbers)\
    \ {\n        if ($unique[$i] eq $num) {\n            $i++;\n        } else {\n\
    \            $unique[$i] = $num;\n            $i++;\n        }\n    }\n    return\
    \ @unique;\n}", "    my @result;\n    my $i = 0;\n    my $j = 0;\n    my $last;\n\
    \    my $first;\n    my $count;\n    my $max;\n    my $found;\n    foreach my\
    \ $num (@$numbers) {\n        $found = 0;\n        $max = $num;\n        $first\
    \ = $num;\n        $count = 1;\n        foreach my $num2 (@$numbers) {\n     \
    \       if ($num2 > $num) {\n                $count++;\n                if ($count\
    \ > 1) {\n                    $found = 1;\n                    $max = $num2;\n\
    \                    $first = $num2;\n                }\n            }\n     \
    \   }\n        if (!$found) {\n            push(@result, $first);\n        }\n\
    \    }\n    return @result;\n}", "    my $result = ();\n    my $i = 0;\n    my\
    \ $j = 0;\n    my $k = 0;\n    my $last_seen = 0;\n    my $last_seen_value = 0;\n\
    \    my $last_seen_position = 0;\n    my $last_seen_position_value = 0;\n    my\
    \ $last_seen_position_value2 = 0;\n    my $last_seen_position_value3 = 0;\n  \
    \  my $last_seen_position_value4 = 0;\n    my $last_seen_position_value5 = 0;\n\
    \    my $last_seen_position_value6 = 0;\n    my $last_seen_position_value7 = 0;\n\
    \    my $last_seen_position_value8 = 0;\n    my $last_seen_position_value9 = 0;\n\
    \    my $last_seen_position_value10 = 0;\n    my $last_seen_position_value11 =\
    \ 0;\n    my $last_seen_position_value12 = 0;\n    my $last_seen_position_value13\
    \ = 0;\n    my $last_seen_position_value14 = 0;\n    my $last_seen_position_value15\
    \ = 0;\n    my $last_seen_position_value16 = 0;\n    my $last_seen_position_value17\
    \ = 0;\n    my $last_seen_position_value18 = 0;\n    my $last_seen_position_value19\
    \ = 0;\n    my $last_seen_position_value20 = 0;\n    my $last_seen_position_value21\
    \ = 0;\n    my $last_seen_position_value22 = 0;\n    my $last_seen_position_value23\
    \ = 0;\n    my $last_seen_position_value24 = 0;\n    my $last_seen_position_value25\
    \ = 0;\n    my $last_seen_position_value26 = 0;\n    my $last_seen_position_value27\
    \ = 0;\n    my $last_seen_position_value28 = 0;\n    my $last_seen_position_value29\
    \ = 0;\n    my $last_seen_position_value30 = 0;\n    my $last_seen_position_value31\
    \ = 0;\n    my $last_seen_position_value32 = 0;\n    my $last_seen_position_value33\
    \ = 0;\n    my $last_seen_position_value34 = 0;\n    my $last_seen_position_value35\
    \ = 0;\n    my $last_seen_position_value36 = 0;\n    my $last_seen_position_value37\
    \ = 0;\n    my $last_seen_position_value38 = 0;\n    my $last_seen_position_value39\
    \ = 0;\n    my $last_seen_position_value40 = 0;\n    my $last_seen_position_value41\
    \ = 0;\n    my $last_seen_position_value42 = 0;\n    my $last_seen_position_value43\
    \ = 0;\n    my $last_seen_position_value44 = 0;\n    my $last_seen_position_value45\
    \ = 0;\n    my $last_seen_position_value46 = 0;\n    my $last_seen_position_value47\
    \ = 0;\n    my $last_seen_position_value48 = 0;\n    my $last_seen_position_value49\
    \ = 0;\n    my $last_seen_position_value50 = 0;\n    my $last_seen_position_value51\
    \ = 0;\n    my $last_seen_position_value52 = 0;\n    my $last_seen_position_value53\
    \ = 0;\n    ", "    my @unique_numbers;\n    my $index = 0;\n    foreach my $number\
    \ (@$numbers) {\n        if ($unique_numbers->[$index] eq $number) {\n       \
    \     $index++;\n        } else {\n            $unique_numbers->[$index] = $number;\n\
    \            $index++;\n        }\n    }\n    return @unique_numbers;\n}", " \
    \   my @unique;\n    my $i = 0;\n    foreach my $number (@$numbers) {\n      \
    \  if ($unique[$i] eq $number) {\n            $i++;\n        }\n        else {\n\
    \            $unique[$i] = $number;\n            $i++;\n        }\n    }\n   \
    \ return @unique;\n}", "    my @result;\n    my $index = 0;\n    my $last_value\
    \ = $numbers[0];\n    foreach my $value (@$numbers) {\n        if ($value eq $last_value)\
    \ {\n            $index++;\n        } else {\n            push @result, $last_value;\n\
    \            $last_value = $value;\n            $index = 1;\n        }\n    }\n\
    \    push @result, $last_value;\n    return @result;\n}", "    my @unique;\n \
    \   my $i = 0;\n    foreach my $num (@$numbers) {\n        if ($unique[$i] eq\
    \ $num) {\n            $i++;\n        } else {\n            $unique[$i] = $num;\n\
    \            $i++;\n        }\n    }\n    return @unique;\n}", "    my @result;\n\
    \    my $index = 0;\n    my $last_index = 0;\n    my $last_number = $numbers[$index];\n\
    \    foreach my $number (@$numbers) {\n        if ($number == $last_number) {\n\
    \            $last_index++;\n        } else {\n            if ($last_index !=\
    \ 0) {\n                push(@result, $last_number);\n                $last_index\
    \ = 0;\n            }\n            $last_number = $number;\n            $last_index++;\n\
    \        }\n    }\n    if ($last_index != 0) {\n        push(@result, $last_number);\n\
    \    }\n    return @result;\n}", "    my @unique;\n    my $i = 0;\n    foreach\
    \ my $number (@$numbers) {\n        next if $unique[$i] eq $number;\n        $unique[$i]\
    \ = $number;\n        $i++;\n    }\n    return @unique;\n}", "    my @result;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $last;\n    my $last_index;\n    my $last_value;",
  "    my @unique;\n    my $i = 0;\n    my $j = 0;\n    my $k;\n    my $num;\n   \
    \ my $found;\n    my $first;\n    my $last;\n    my $count;\n    my $junk;\n \
    \   my $junk2;\n    my $junk3;\n    my $junk4;\n    my $junk5;\n    my $junk6;\n\
    \    my $junk7;\n    my $junk8;\n    my $junk9;\n    my $junk10;\n    my $junk11;\n\
    \    my $junk12;\n    my $junk13;\n    my $junk14;\n    my $junk15;\n    my $junk16;\n\
    \    my $junk17;\n    my $junk18;\n    my $junk19;\n    my $junk20;\n    my $junk21;\n\
    \    my $junk22;\n    my $junk23;\n    my $junk24;\n    my $junk25;\n    my $junk26;\n\
    \    my $junk27;\n    my $junk28;\n    my $junk29;\n    my $junk30;\n    my $junk31;\n\
    \    my $junk32;\n    my $junk33;\n    my $junk34;\n    my $junk35;\n    my $junk36;\n\
    \    my $junk37;\n    my $junk38;\n    my $junk39;\n    my $junk40;\n    my $junk41;\n\
    \    my $junk42;\n    my $junk43;\n    my $junk44;\n    my $junk45;\n    my $junk46;\n\
    \    my $junk47;\n    my $junk48;\n    my $junk49;\n    my $junk50;\n    my $junk51;\n\
    \    my $junk52;\n    my $junk53;\n    my $junk54;\n    my $junk55;\n    my $junk56;\n\
    \    my $junk57;\n    my $junk58;\n    my $junk59;\n    my $junk60;\n    my $junk61;\n\
    \    my $junk62;\n    my $junk63;\n    my $junk64;\n    my $junk65;\n    my $junk66;\n\
    \    my $junk67;\n    my $junk68;\n    my $junk69;\n    my $junk70;\n"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

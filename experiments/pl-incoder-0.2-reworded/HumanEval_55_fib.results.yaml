language: pl
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    my $b = $fib - 1;\n\
    \    $fib += $n if $n < $b;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $fib;\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp0p_onz6a.pl line 43, at
    end of line

    syntax error at /tmp/tmp0p_onz6a.pl line 43, at EOF

    Execution of /tmp/tmp0p_onz6a.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        return $n;\n    }\n    $fib = ($n < 4) ? 1 : fib($n-1) + fib($n-2)\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n <= 1 ? $n\
    \ : $fib($n-2) + $fib($n-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpkt3y7a4g.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpkt3y7a4g.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    for ($c = 0; $c < $n; $c++) {\n        $a = $b;\n        $b = $a + $b;\n\
    \    }\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $i;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp9i2hk49v.pl line 41, at
    end of line

    syntax error at /tmp/tmp9i2hk49v.pl line 41, at EOF

    Execution of /tmp/tmp9i2hk49v.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $fib;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp7gsqp7pp.pl line 42, at
    end of line

    syntax error at /tmp/tmp7gsqp7pp.pl line 42, at EOF

    Execution of /tmp/tmp7gsqp7pp.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my\
    \ $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmphzb45ask.pl line 131, at end
    of line

    syntax error at /tmp/tmphzb45ask.pl line 131, near "$u

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmphzb45ask.pl line 158, at end
    of line

    syntax error at /tmp/tmphzb45ask.pl line 158, at EOF

    Execution of /tmp/tmphzb45ask.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 1) ? $n : $fib\
    \ + $fib - $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $m;\n    my $n;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my\
    \ $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n\
    \    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my\
    \ $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n\
    \    my $u;\n    my $v;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpzw_hcet3.pl line 131,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpzw_hcet3.pl line 131, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpzw_hcet3.pl line 158, at end of line\nsyntax\
    \ error at /tmp/tmpzw_hcet3.pl line 158, at EOF\nExecution of /tmp/tmpzw_hcet3.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 1) ? $n : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n < 4) ? $n\
    \ : ($n - 1) + fib(int($n / 4));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpbggk_n67.pl line 41, at
    end of line

    syntax error at /tmp/tmpbggk_n67.pl line 41, at EOF

    Execution of /tmp/tmpbggk_n67.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    while ($n > 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \        $n--;\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpuo41c7xl.pl line 131,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpuo41c7xl.pl line 131, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpuo41c7xl.pl line 158, at end of line\nsyntax\
    \ error at /tmp/tmpuo41c7xl.pl line 158, at EOF\nExecution of /tmp/tmpuo41c7xl.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $f;\n    my $fib;\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpecoc5j4q.pl line 43, at
    end of line

    syntax error at /tmp/tmpecoc5j4q.pl line 43, at EOF

    Execution of /tmp/tmpecoc5j4q.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $fib[$n] if $n\
    \ <= $#fib;\n    my $a = $fib[$n-1];\n    my $b = $fib[$n-2] + $a;\n    $fib[$n]\
    \ = $b;\n    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 1) ? 1 : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    \n    for(my $i = 0; $i < $n; $i++) {\n        $fib\
    \ += $a;\n        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 2) ? 1\
    \ : fib($n - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    my $b = $fib;\n \
    \   my $c = $fib;\n    while ($n > 0) {\n        $b = $c;\n        $c = $a + $b;\n\
    \        $a = $b;\n        $b = $c;\n        $n--;\n    }\n    return $c;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $i;\n    for ($i = 1; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    while($n--) {\n        $fib += $a;\n        $a    =\
    \ $b;\n        $b    = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my $b;\n    my $c;\n\
    \    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp0vmp8sv8.pl line 131,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp0vmp8sv8.pl line 131, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp0vmp8sv8.pl line 158, at end of line\nsyntax\
    \ error at /tmp/tmp0vmp8sv8.pl line 158, at EOF\nExecution of /tmp/tmp0vmp8sv8.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    $fib += $fib;\n \
    \   $fib -= $a;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 1) ? $n\
    \ : $fib + $fib - $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n-2) + $fib($n-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmp2trocv7i.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmp2trocv7i.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n-1)\
    \ + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $fib;\n    my $fib2;\n    my $fib3;\n \
    \   my $fib4;\n    my $fib5;\n    my $fib6;\n    my $fib7;\n    my $fib8;\n  \
    \  my $fib9;\n    my $fib10;\n    my $fib11;\n    my $fib12;\n    my $fib13;\n\
    \    my $fib14;\n    my $fib15;\n    my $fib16;\n    my $fib17;\n    my $fib18;\n\
    \    my $fib19;\n    my $fib20;\n    my $fib21;\n    my $fib22;\n    my $fib23;\n\
    \    my $fib24;\n    my $fib25;\n    my $fib26;\n    my $fib27;\n    my $fib28;\n\
    \    my $fib29;\n    my $fib30;\n    my $fib31;\n    my $fib32;\n    my $fib33;\n\
    \    my $fib34;\n    my $fib35;\n    my $fib36;\n    my $fib37;\n    my $fib38;\n\
    \    my $fib39;\n    my $fib40;\n    my $fib41;\n    my $fib42;\n    my $fib43;\n\
    \    my $fib44;\n    my $fib45;\n    my $fib46;\n    my $fib47;\n    my $fib48;\n\
    \    my $fib49;\n    my $fib50;\n    my $fib51;\n    my $fib52;\n    my $fib53;\n\
    \    my $fib54;\n    my $fib55;\n    my $fib56;\n    my $fib57;\n    my $fib58;\n\
    \    my $fib59;\n    my $fib60;\n    my $fib61;\n    my $fib62;\n    my $fib63;\n\
    \    my $fib64;\n    my $fib65;\n    my $fib66;\n    my $fib67;\n    my $fib68;\n\
    \    my $fib69;\n    my $fib70;\n    my $fib71;\n    my $fib72;\n    my $fib73;\n\
    \    my $fib74;\n    my $fib75;\n    my $fib76;\n    my $fib77;\n    my $fib78;\n\
    \    my $fib79;\n    my $fib80;\n    my $fib81;\n    my $fib82;\n    my $fib83;\n\
    \    my $fib84;\n    my $fib85;\n    my $fib86\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp53e_cpab.pl line 100, at end
    of line

    syntax error at /tmp/tmp53e_cpab.pl line 100, near "$fib86

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp53e_cpab.pl line 127, at end
    of line

    syntax error at /tmp/tmp53e_cpab.pl line 127, at EOF

    Execution of /tmp/tmp53e_cpab.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n <= 1 ? 1 :\
    \ $fib($n-1) + $fib($n-2)\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpznlvuewl.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpznlvuewl.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n-1) + $fib;\n \
    \   }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n < 2;\n\
    \    return $fib($n-1) + $fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmptgcarg75.pl line 11, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmptgcarg75.pl line 13.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a *= $b;\n        $b += $a;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $m;\n    my $n;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpmdk31zy_.pl line 46, at
    end of line

    syntax error at /tmp/tmpmdk31zy_.pl line 46, at EOF

    Execution of /tmp/tmpmdk31zy_.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($n <= 2) ? 1 : fib($n - 1) +\
    \ fib($n - 2);\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n\
    \    return $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    $fib += $fib;\n \
    \   $fib -= $a;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $fib;\n    my $fib2;\n\
    \    my $fib3;\n    my $fib4;\n    my $fib5;\n    my $fib6;\n    my $fib7;\n \
    \   my $fib8;\n    my $fib9;\n    my $fib10;\n    my $fib11;\n    my $fib12;\n\
    \    my $fib13;\n    my $fib14;\n    my $fib15;\n    my $fib16;\n    my $fib17;\n\
    \    my $fib18;\n    my $fib19;\n    my $fib20;\n    my $fib21;\n    my $fib22;\n\
    \    my $fib23;\n    my $fib24;\n    my $fib25;\n    my $fib26;\n    my $fib27;\n\
    \    my $fib28;\n    my $fib29;\n    my $fib30;\n    my $fib31;\n    my $fib32;\n\
    \    my $fib33;\n    my $fib34;\n    my $fib35;\n    my $fib36;\n    my $fib37;\n\
    \    my $fib38;\n    my $fib39;\n    my $fib40;\n    my $fib41;\n    my $fib42;\n\
    \    my $fib43;\n    my $fib44;\n    my $fib45;\n    my $fib46;\n    my $fib47;\n\
    \    my $fib48;\n    my $fib49;\n    my $fib50;\n    my $fib51;\n    my $fib52;\n\
    \    my $fib53;\n    my $fib54;\n    my $fib55;\n    my $fib56;\n    my $fib57;\n\
    \    my $fib58;\n    my $fib59;\n    my $fib60;\n    my $fib61;\n    my $fib62;\n\
    \    my $fib63;\n    my $fib64;\n    my $fib65;\n    my $fib66;\n    my $fib67;\n\
    \    my $fib68;\n    my $fib69;\n    my $fib70;\n    my $fib71;\n    my $fib72;\n\
    \    my $fib73;\n    my $fib74;\n    my $fib75;\n    my $fib76;\n    my $fib77;\n\
    \    my $fib78;\n    my $fib79;\n    my $fib80;\n    my $fib81;\n    my $fib82;\n\
    \    my $fib83;\n    my $fib84;\n    my $fib85;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpytews8a8.pl line 127,
    at end of line

    syntax error at /tmp/tmpytews8a8.pl line 127, at EOF

    Execution of /tmp/tmpytews8a8.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($n <= 3) ? 1 : fib($n-2) + fib($n-1);\n\
    \    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c\
    \ = 1;\n    my $d = 1;\n    my $e = 1;\n    my $f = 1;\n    my $g = 1;\n    my\
    \ $h = 1;\n    my $i = 1;\n    my $j = 1;\n    my $k = 1;\n    my $l = 1;\n  \
    \  my $m = 1;\n    my $n = 1;\n    my $o = 1;\n    my $p = 1;\n    my $q = 1;\n\
    \    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n    my $u = 1;\n    my $v = 1;\n\
    \    my $w = 1;\n    my $x = 1;\n    my $y = 1;\n    my $z = 1;\n    my $a = 1;\n\
    \    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n    my $e = 1;\n    my $f = 1;\n\
    \    my $g = 1;\n    my $h = 1;\n    my $i = 1;\n    my $j = 1;\n    my $k = 1;\n\
    \    my $l = 1;\n    my $m = 1;\n    my $n = 1;\n    my $o = 1;\n    my $p = 1;\n\
    \    my $q = 1;\n    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n    my $u = 1;\n\
    \    my $v = 1;\n    my $w = 1;\n    my $x = 1;\n    my $y = 1;\n    my $z = 1;\n\
    \    my $a = 1;\n    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n    my $e = 1;\n\
    \    my $f = 1;\n    my $g = 1;\n    my $h = 1;\n    my $i = 1;\n    my $j = 1;\n\
    \    my $k = 1;\n    my $l = 1;\n    my $m = 1;\n    my $n = 1;\n    my $o = 1;\n\
    \    my $p = 1;\n    my $q = 1;\n    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n\
    \    my $u = 1;\n    my $v = 1;\n    my $w = 1;\n    my $x = 1;\n    my $y = 1;\n\
    \    my $z = 1;\n    my $a = 1;\n    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n\
    \    my $e = 1;\n    my $f = 1;\n    my $g = 1;\n    my $h = 1;\n    my $i = 1;\n\
    \    my $j = 1;\n    my $k = 1;\n    my $l = 1;\n    my $m = 1;\n    my $n = 1;\n\
    \    my $o = 1;\n    my $p = 1;\n    my $q = 1;\n    my $r = 1;\n    my $s = 1;\n\
    \    my $t = 1;\n    my $u = 1;\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp_7wxpxu0.pl line 141,
    at end of line

    syntax error at /tmp/tmp_7wxpxu0.pl line 141, at EOF

    Execution of /tmp/tmp_7wxpxu0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-2) + fib($n-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = $fib[$_-1];\n\
    \    my $b = $fib[$_-2];\n    return $a if $n <= $b;\n    return $b;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib\
    \ % $n) % $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n <= 1 ? 1 :\
    \ $fib($n-2) + $fib($n-1);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpcp3gnxff.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpcp3gnxff.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n \
    \   my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n \
    \   my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp3sozek0v.pl line 99, at end
    of line

    syntax error at /tmp/tmp3sozek0v.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp3sozek0v.pl line 126, at end
    of line

    syntax error at /tmp/tmp3sozek0v.pl line 126, at EOF

    Execution of /tmp/tmp3sozek0v.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($n <= 4) ? $fib + $fib : $fib\
    \ + $fib(4 - $n);\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpvn1vjplq.pl line 14, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpvn1vjplq.pl line 17.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $fib;\n    my $fib2;\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpdlscvn7e.pl line 43, at
    end of line

    syntax error at /tmp/tmpdlscvn7e.pl line 43, at EOF

    Execution of /tmp/tmpdlscvn7e.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 3) ? $n : ($fib\
    \ + $fib - $n - 1);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    my $b = $fib;\n \
    \   my $c = $fib;\n    my $d = $fib;\n    while ($n > 0) {\n        $d = $a +\
    \ $b;\n        $c = $b;\n        $b = $a;\n        $a = $d;\n        $n--;\n \
    \   }\n    return $a;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $d;\n    while ($n > 0) {\n        $c = $a;\n        $d = $b;\n      \
    \  $a = $b;\n        $b = $c + $d;\n        $n--;\n    }\n    return $b;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n < 2;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659820995
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib % $n) % $n;\n\
    \    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $fib;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp7gsqp7pp.pl line 42, at
    end of line

    syntax error at /tmp/tmp7gsqp7pp.pl line 42, at EOF

    Execution of /tmp/tmp7gsqp7pp.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n < 4) ? $n : ($n\
    \ - 1) + fib(int($n/2));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib += $a;\n\
    \        $a *= $b;\n        $b += 1;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib\
    \ - $fib - $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $i;\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $fib += $a;\n        $a    = $b;\n        $b    = $fib;\n    }\n    return\
    \ $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 3) ? $n : (fib($n\
    \ - 1) + fib($n - 2));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $i;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $fib = $a + $b;\n        $a = $b;\n\
    \        $b = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $d;\n    while ($n > 0) {\n        $c = $a;\n        $d = $b;\n      \
    \  $a = $b;\n        $b = $c + $d;\n        $n--;\n    }\n    return $b;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n      \
    \  if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n      \
    \  exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($n <= 2) ? 1\
    \ : fib($n-1) + fib($n-2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpvmbqzgv_.pl line 42, at
    end of line

    syntax error at /tmp/tmpvmbqzgv_.pl line 42, at EOF

    Execution of /tmp/tmpvmbqzgv_.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 2) ? 1 : fib($n\
    \ - 1) + fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4 = 1;\n    my\
    \ $fib5 = 1;\n    my $fib6 = 1;\n    my $fib7 = 1;\n    my $fib8 = 1;\n    my\
    \ $fib9 = 1;\n    my $fib10 = 1;\n    my $fib11 = 1;\n    my $fib12 = 1;\n   \
    \ my $fib13 = 1;\n    my $fib14 = 1;\n    my $fib15 = 1;\n    my $fib16 = 1;\n\
    \    my $fib17 = 1;\n    my $fib18 = 1;\n    my $fib19 = 1;\n    my $fib20 = 1;\n\
    \    my $fib21 = 1;\n    my $fib22 = 1;\n    my $fib23 = 1;\n    my $fib24 = 1;\n\
    \    my $fib25 = 1;\n    my $fib26 = 1;\n    my $fib27 = 1;\n    my $fib28 = 1;\n\
    \    my $fib29 = 1;\n    my $fib30 = 1;\n    my $fib31 = 1;\n    my $fib32 = 1;\n\
    \    my $fib33 = 1;\n    my $fib34 = 1;\n    my $fib35 = 1;\n    my $fib36 = 1;\n\
    \    my $fib37 = 1;\n    my $fib38 = 1;\n    my $fib39 = 1;\n    my $fib40 = 1;\n\
    \    my $fib41 = 1;\n    my $fib42 = 1;\n    my $fib43 = 1;\n    my $fib44 = 1;\n\
    \    my $fib45 = 1;\n    my $fib46 = 1;\n    my $fib47 = 1;\n    my $fib48 = 1;\n\
    \    my $fib49 = 1;\n    my $fib50 = 1;\n    my $fib51 = 1;\n    my $fib52 = 1;\n\
    \    my $fib53 = 1;\n    my $fib54 = 1;\n    my $fib55 = 1;\n    my $fib56 = 1;\n\
    \    my $fib57 = 1;\n    my $fib58 = 1;\n    my $fib59 = 1;\n    my $fib60 = 1;\n\
    \    my $fib61 = 1;\n    my $fib62 = 1;\n    my $fib63 = 1;\n    my $fib64 = 1;\n\
    \    my $fib65 = 1;\n    my $fib66 = 1;\n    my $fib67 = 1;\n    my $fib68 = 1;\n\
    \    my $fib69 = 1;\n    my $fib70 = 1;\n    my $fib71 = 1;\n    my $fib72 = 1;\n\
    \    my $fib73 = 1;\n    my $fib74 = 1;\n    my $fib75 = 1;\n    my $fib76 = 1;\n\
    \    my $fib77 = 1;\n    my $fib78 = 1;\n    my $fib79 = 1;\n    my $fib80 = 1;\n\
    \    my $fib81 = 1;\n    my $fib82 = 1;\n    my $fib83 = 1;\n    my $\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp9tqepbjz.pl line 95,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 95, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp9tqepbjz.pl line 122, at end of line\nsyntax\
    \ error at /tmp/tmp9tqepbjz.pl line 122, at EOF\nExecution of /tmp/tmp9tqepbjz.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n < 4) ? $n : ($n\
    \ - 1) + fib(int($n / 4));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\n    my $fib;\n    my $fib2;\n    my $fib3;\n \
    \   my $fib4;\n    my $fib5;\n    my $fib6;\n    my $fib7;\n    my $fib8;\n  \
    \  my $fib9;\n    my $fib10;\n    my $fib11;\n    my $fib12;\n    my $fib13;\n\
    \    my $fib14;\n    my $fib15;\n    my $fib16;\n    my $fib17;\n    my $fib18;\n\
    \    my $fib19;\n    my $fib20;\n    my $fib21;\n    my $fib22;\n    my $fib23;\n\
    \    my $fib24;\n    my $fib25;\n    my $fib26;\n    my $fib27;\n    my $fib28;\n\
    \    my $fib29;\n    my $fib30;\n    my $fib31;\n    my $fib32;\n    my $fib33;\n\
    \    my $fib34;\n    my $fib35;\n    my $fib36;\n    my $fib37;\n    my $fib38;\n\
    \    my $fib39;\n    my $fib40;\n    my $fib41;\n    my $fib42;\n    my $fib43;\n\
    \    my $fib44;\n    my $fib45;\n    my $fib46;\n    my $fib47;\n    my $fib48;\n\
    \    my $fib49;\n    my $fib50;\n    my $fib51;\n    my $fib52;\n    my $fib53;\n\
    \    my $fib54;\n    my $fib55;\n    my $fib56;\n    my $fib57;\n    my $fib58;\n\
    \    my $fib59;\n    my $fib60;\n    my $fib61;\n    my $fib62;\n    my $fib63;\n\
    \    my $fib64;\n    my $fib65;\n    my $fib66;\n    my $fib67;\n    my $fib68;\n\
    \    my $fib69;\n    my $fib70;\n    my $fib71;\n    my $fib72;\n    my $fib73;\n\
    \    my $fib74;\n    my $fib75;\n    my $fib76;\n    my $fib77;\n    my $fib78;\n\
    \    my $fib79;\n    my $fib80;\n    my $fib81;\n    my $fib82;\n    my $fib83;\n\
    \    my $fib84;\n    my $fib85;\n    my $fib86\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp53e_cpab.pl line 100, at end
    of line

    syntax error at /tmp/tmp53e_cpab.pl line 100, near "$fib86

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp53e_cpab.pl line 127, at end
    of line

    syntax error at /tmp/tmp53e_cpab.pl line 127, at EOF

    Execution of /tmp/tmp53e_cpab.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n - 1) +\
    \ fib($n - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a;\n\
    \    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my\
    \ $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n\
    \    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my\
    \ $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n\
    \    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my\
    \ $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n\
    \    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my\
    \ $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $_fib\
    \ = 1;\n    my $_fib1 = 1;\n    my $_fib2 = 1;\n    my $_fib3 = 1;\n    my $_fib4\
    \ = 1;\n    my $_fib5 = 1;\n    my $_fib6 = 1;\n    my $_fib7 = 1;\n    my $_fib8\
    \ = 1;\n    my $_fib9 = 1;\n    my $_fib10 = 1;\n    my $_fib11 = 1;\n    my $_fib12\
    \ = 1;\n    my $_fib13 = 1;\n    my $_fib14 = 1;\n    my $_fib15 = 1;\n    my\
    \ $_fib16 = 1;\n    my $_fib17 = 1;\n    my $_fib18 = 1;\n    my $_fib19 = 1;\n\
    \    my $_fib20 = 1;\n    my $_fib21 = 1;\n    my $_fib22 = 1;\n    my $_fib23\
    \ = 1;\n    my $_fib24 = 1;\n    my $_fib25 = 1;\n    my $_fib26 = 1;\n    my\
    \ $_fib27 = 1;\n    my $_fib28 = 1;\n    my $_fib29 = 1;\n    my $_fib30 = 1;\n\
    \    my $_fib31 = 1;\n    my $_fib32 = 1;\n    my $_fib33 = 1;\n    my $_fib34\
    \ = 1;\n    my $_fib35 = 1;\n    my $_fib36 = 1;\n    my $_fib37 = 1;\n    my\
    \ $_fib38\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpd9_bg_ac.pl line 102, at end
    of line

    syntax error at /tmp/tmpd9_bg_ac.pl line 102, near "$_fib38

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpd9_bg_ac.pl line 129, at end
    of line

    syntax error at /tmp/tmpd9_bg_ac.pl line 129, at EOF

    Execution of /tmp/tmpd9_bg_ac.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $i;\n    for ($i = 0; $i < $n; $i++) {\n   \
    \     $fib = $a + $b;\n        $a = $b;\n        $b = $fib;\n    }\n    return\
    \ $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n < 2 ? $n :\
    \ $fib($n - 1) + $fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpjvm7kp_9.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpjvm7kp_9.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $n)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($n <= 2) ? 1 : fib($n-1) + fib($n-2);\n\
    \    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = $fib[$n-1];\n\
    \    my $b = $fib[$n-2] + $a;\n    $fib[$n] = $b;\n    return $b;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $fib;\n    my $fib2;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my $fib6;\n\
    \    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my $fib11;\n\
    \    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n    my $fib16;\n\
    \    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n    my $fib21;\n\
    \    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n    my $fib26;\n\
    \    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n    my $fib31;\n\
    \    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n    my $fib36;\n\
    \    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n    my $fib41;\n\
    \    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n    my $fib46;\n\
    \    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n    my $fib51;\n\
    \    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n    my $fib56;\n\
    \    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n    my $fib61;\n\
    \    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n    my $fib66;\n\
    \    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n    my $fib71;\n\
    \    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n    my $fib76;\n\
    \    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n    my $fib81;\n\
    \    my $fib82;\n    my $fib83;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmp3l2qeo_y.pl line 101,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmp3l2qeo_y.pl line 101, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmp3l2qeo_y.pl line 128, at end of line\nsyntax\
    \ error at /tmp/tmp3l2qeo_y.pl line 128, at EOF\nExecution of /tmp/tmp3l2qeo_y.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = ($fib + $fib -\
    \ $fib) / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 1) ? $n : (fib($n\
    \ - 1) + fib($n - 2));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    while($n > 0) {\n        $fib = ($a + $b) % $n;\n  \
    \      $a = $b;\n        $b = $fib;\n        $n--;\n    }\n    return $fib;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n   \
    \     if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n   \
    \     exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    my $b = $fib;\n \
    \   my $c = $fib;\n    my $d = $fib;\n    my $e = $fib;\n    my $f = $fib;\n \
    \   my $g = $fib;\n    my $h = $fib;\n    my $i = $fib;\n    my $j = $fib;\n \
    \   my $k = $fib;\n    my $l = $fib;\n    my $m = $fib;\n    my $n = $fib;\n \
    \   my $o = $fib;\n    my $p = $fib;\n    my $q = $fib;\n    my $r = $fib;\n \
    \   my $s = $fib;\n    my $t = $fib;\n    my $u = $fib;\n    my $v = $fib;\n \
    \   my $w = $fib;\n    my $x = $fib;\n    my $y = $fib;\n    my $z = $fib;\n \
    \   my $a = $fib;\n    my $b = $fib;\n    my $c = $fib;\n    my $d = $fib;\n \
    \   my $e = $fib;\n    my $f = $fib;\n    my $g = $fib;\n    my $h = $fib;\n \
    \   my $i = $fib;\n    my $j = $fib;\n    my $k = $fib;\n    my $l = $fib;\n \
    \   my $m = $fib;\n    my $n = $fib;\n    my $o = $fib;\n    my $p = $fib;\n \
    \   my $q = $fib;\n    my $r = $fib;\n    my $s = $fib;\n    my $t = $fib;\n \
    \   my $u = $fib;\n    my $v = $fib;\n    my $w = $fib;\n    my $x = $fib;\n \
    \   my $y = $fib;\n    my $z = $fib;\n    my $a = $fib;\n    my $b = $fib;\n \
    \   my $c = $fib;\n    my $d = $fib;\n    my $e = $fib;\n    my $f = $fib;\n \
    \   my $g = $fib;\n    my $h = $fib;\n    my $i = $fib;\n    my $j = $fib;\n \
    \   my $k = $fib;\n    my $l = $fib;\n    my $m = $fib;\n    my $n = $fib;\n \
    \   my $o = $fib;\n    my $p = $fib;\n    my $q = $fib;\n    my $r = $fib;\n \
    \   my $s = $fib\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpsgavq8ll.pl line 85, at end
    of line

    syntax error at /tmp/tmpsgavq8ll.pl line 85, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpsgavq8ll.pl line 112, at end
    of line

    syntax error at /tmp/tmpsgavq8ll.pl line 112, at EOF

    Execution of /tmp/tmpsgavq8ll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($n <= 1) ? $n : (fib($n - 1)\
    \ + fib($n - 2));\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    for\
    \ my $i (2..$n) {\n        $fib += $a;\n        $a *= $b;\n        $b += $a;\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return $fib($n - 1) + $fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpxv6upsw5.pl line 11, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpxv6upsw5.pl line 13.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $fib;\n    my $fib2;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpjym4ut4n.pl line 101,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpjym4ut4n.pl line 101, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpjym4ut4n.pl line 128, at end of line\nsyntax\
    \ error at /tmp/tmpjym4ut4n.pl line 128, at EOF\nExecution of /tmp/tmpjym4ut4n.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 1) ? $n : $fib\
    \ + $fib - $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval {\n   \
    \ my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpbggk_n67.pl line 41, at
    end of line

    syntax error at /tmp/tmpbggk_n67.pl line 41, at EOF

    Execution of /tmp/tmpbggk_n67.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp_nviyzr2.pl line 99, at end
    of line

    syntax error at /tmp/tmp_nviyzr2.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp_nviyzr2.pl line 126, at end
    of line

    syntax error at /tmp/tmp_nviyzr2.pl line 126, at EOF

    Execution of /tmp/tmp_nviyzr2.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n-1) + fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821038
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c\
    \ = 1;\n    my $d = 1;\n    my $e = 1;\n    my $f = 1;\n    my $g = 1;\n    my\
    \ $h = 1;\n    my $i = 1;\n    my $j = 1;\n    my $k = 1;\n    my $l = 1;\n  \
    \  my $m = 1;\n    my $n = 1;\n    my $o = 1;\n    my $p = 1;\n    my $q = 1;\n\
    \    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n    my $u = 1;\n    my $v = 1;\n\
    \    my $w = 1;\n    my $x = 1;\n    my $y = 1;\n    my $z = 1;\n    my $a = 1;\n\
    \    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n    my $e = 1;\n    my $f = 1;\n\
    \    my $g = 1;\n    my $h = 1;\n    my $i = 1;\n    my $j = 1;\n    my $k = 1;\n\
    \    my $l = 1;\n    my $m = 1;\n    my $n = 1;\n    my $o = 1;\n    my $p = 1;\n\
    \    my $q = 1;\n    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n    my $u = 1;\n\
    \    my $v = 1;\n    my $w = 1;\n    my $x = 1;\n    my $y = 1;\n    my $z = 1;\n\
    \    my $a = 1;\n    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n    my $e = 1;\n\
    \    my $f = 1;\n    my $g = 1;\n    my $h = 1;\n    my $i = 1;\n    my $j = 1;\n\
    \    my $k = 1;\n    my $l = 1;\n    my $m = 1;\n    my $n = 1;\n    my $o = 1;\n\
    \    my $p = 1;\n    my $q = 1;\n    my $r = 1;\n    my $s = 1;\n    my $t = 1;\n\
    \    my $u = 1;\n    my $v = 1;\n    my $w = 1;\n    my $x = 1;\n    my $y = 1;\n\
    \    my $z = 1;\n    my $a = 1;\n    my $b = 1;\n    my $c = 1;\n    my $d = 1;\n\
    \    my $e = 1;\n    my $f = 1;\n    my $g = 1;\n    my $h = 1;\n    my $i = 1;\n\
    \    my $j = 1;\n    my $k = 1;\n    my $l = 1;\n    my $m = 1;\n    my $n = 1;\n\
    \    my $o = 1;\n    my $p = 1;\n    my $q = 1;\n    my $r = 1;\n    my $s = 1;\n\
    \    my $t = 1;\n    my $u = 1;\n\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmp_7wxpxu0.pl line 141,
    at end of line

    syntax error at /tmp/tmp_7wxpxu0.pl line 141, at EOF

    Execution of /tmp/tmp_7wxpxu0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return fib($n - 1) + fib($n - 2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = 1;\n    my $b = 1;\n    my $c;\n\
    \    my $i;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $c;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n if $n <= 1;\n\
    \    return $fib($n-1) + $fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpvzmc515j.pl line 11, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpvzmc515j.pl line 13.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib\
    \ - $n) % $n;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n\
    \    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $a;\n    my\
    \ $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my\
    \ $o;\n    my $p;\n    my $q\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpvzj0mn62.pl line 131, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 131, near "$q

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpvzj0mn62.pl line 158, at end
    of line

    syntax error at /tmp/tmpvzj0mn62.pl line 158, at EOF

    Execution of /tmp/tmpvzj0mn62.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $a = 1;\n    my $b\
    \ = 1;\n    my $fib;\n    for(my $i = 0; $i < $n; $i++) {\n        $fib = $a +\
    \ $b;\n        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = ($fib + $fib - $fib)\
    \ / 2;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my\
    \ $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n\
    \    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my\
    \ $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n\
    \    my $n;\n    my $o;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpw_g6_t7x.pl line 131,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpw_g6_t7x.pl line 131, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpw_g6_t7x.pl line 158, at end of line\nsyntax\
    \ error at /tmp/tmpw_g6_t7x.pl line 158, at EOF\nExecution of /tmp/tmpw_g6_t7x.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n < 4) ? $n : ($n\
    \ - 1) + fib(int($n / 4));\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $a\
    \ = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n    my\
    \ $m;\n    my $n;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpge3j7inz.pl line 46, at
    end of line

    syntax error at /tmp/tmpge3j7inz.pl line 46, at EOF

    Execution of /tmp/tmpge3j7inz.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n -= 2) + fib(--$n);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    return $n <= 1 ? $n\
    \ : $fib($n-1) + $fib($n-2);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n  \
    \  my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'syntax error at /tmp/tmpec10d2ea.pl line 10, near "$fib("

    BEGIN not safe after errors--compilation aborted at /tmp/tmpec10d2ea.pl line 12.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ < 2) {\n        $fib = $n;\n    } else {\n        $fib = ($n <= 1) ? $n : $fib\
    \ + $fib - $fib + $n - 1;\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub\
    \ testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $fib1 = 1;\n    my $fib2 = 1;\n    my $fib3 = 1;\n    my $fib4;\n    my $fib5;\n\
    \    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n\
    \    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n\
    \    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpn_zb_5h0.pl line 99, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 99, near "$fib

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpn_zb_5h0.pl line 126, at end
    of line

    syntax error at /tmp/tmpn_zb_5h0.pl line 126, at EOF

    Execution of /tmp/tmpn_zb_5h0.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $result;\n    my $fib1;\n    my $fib2;\n    my $fib3;\n    my $fib4;\n \
    \   my $fib5;\n    my $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n  \
    \  my $fib10;\n    my $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n\
    \    my $fib15;\n    my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n\
    \    my $fib20;\n    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n\
    \    my $fib25;\n    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n\
    \    my $fib30;\n    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n\
    \    my $fib35;\n    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n\
    \    my $fib40;\n    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n\
    \    my $fib45;\n    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n\
    \    my $fib50;\n    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n\
    \    my $fib55;\n    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n\
    \    my $fib60;\n    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n\
    \    my $fib65;\n    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n\
    \    my $fib70;\n    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n\
    \    my $fib75;\n    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n\
    \    my $fib80;\n    my $fib81;\n    my $fib82;\n    my $fib83\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmp4_jwj49k.pl line 101, at end
    of line

    syntax error at /tmp/tmp4_jwj49k.pl line 101, near "$fib83

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmp4_jwj49k.pl line 128, at end
    of line

    syntax error at /tmp/tmp4_jwj49k.pl line 128, at EOF

    Execution of /tmp/tmp4_jwj49k.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    my $fib1\
    \ = 1;\n    my $fib2 = 1;\n    my $fib3;\n    my $fib4;\n    my $fib5;\n    my\
    \ $fib6;\n    my $fib7;\n    my $fib8;\n    my $fib9;\n    my $fib10;\n    my\
    \ $fib11;\n    my $fib12;\n    my $fib13;\n    my $fib14;\n    my $fib15;\n  \
    \  my $fib16;\n    my $fib17;\n    my $fib18;\n    my $fib19;\n    my $fib20;\n\
    \    my $fib21;\n    my $fib22;\n    my $fib23;\n    my $fib24;\n    my $fib25;\n\
    \    my $fib26;\n    my $fib27;\n    my $fib28;\n    my $fib29;\n    my $fib30;\n\
    \    my $fib31;\n    my $fib32;\n    my $fib33;\n    my $fib34;\n    my $fib35;\n\
    \    my $fib36;\n    my $fib37;\n    my $fib38;\n    my $fib39;\n    my $fib40;\n\
    \    my $fib41;\n    my $fib42;\n    my $fib43;\n    my $fib44;\n    my $fib45;\n\
    \    my $fib46;\n    my $fib47;\n    my $fib48;\n    my $fib49;\n    my $fib50;\n\
    \    my $fib51;\n    my $fib52;\n    my $fib53;\n    my $fib54;\n    my $fib55;\n\
    \    my $fib56;\n    my $fib57;\n    my $fib58;\n    my $fib59;\n    my $fib60;\n\
    \    my $fib61;\n    my $fib62;\n    my $fib63;\n    my $fib64;\n    my $fib65;\n\
    \    my $fib66;\n    my $fib67;\n    my $fib68;\n    my $fib69;\n    my $fib70;\n\
    \    my $fib71;\n    my $fib72;\n    my $fib73;\n    my $fib74;\n    my $fib75;\n\
    \    my $fib76;\n    my $fib77;\n    my $fib78;\n    my $fib79;\n    my $fib80;\n\
    \    my $fib81;\n    my $fib82;\n    my $fib83;\n    my $fib84;\n    my $fib85;\n\
    \    my $fib86;\n    my $fib87;\n    my $fib88\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: '"use" not allowed in expression at /tmp/tmpni08dtll.pl line 99, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 99, near "$fib88

    use Test::Deep"

    Missing right curly or square bracket at /tmp/tmpni08dtll.pl line 126, at end
    of line

    syntax error at /tmp/tmpni08dtll.pl line 126, at EOF

    Execution of /tmp/tmpni08dtll.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    my $a = $fib;\n    my $b = $fib;\n \
    \   for my $i ($n-2) {\n        $b = $a + $b;\n        $a = $b;\n    }\n    return\
    \ $b;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&fib;\n\
    \        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1)) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpb4lysub7.pl line 42, at
    end of line

    syntax error at /tmp/tmpb4lysub7.pl line 42, at EOF

    Execution of /tmp/tmpb4lysub7.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 0
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        $fib = $n;\n    } else {\n        $fib = fib($n - 1) + fib($n\
    \ - 2);\n    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n \
    \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: OK
  stderr: ''
  stdout: ok!ok!ok!ok!ok!
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        return $n;\n    }\n    $fib = ($fib + $fib - $fib) / 2;\n \
    \   return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Missing right curly or square bracket at /tmp/tmpb4lysub7.pl line 42, at
    end of line

    syntax error at /tmp/tmpb4lysub7.pl line 42, at EOF

    Execution of /tmp/tmpb4lysub7.pl aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1659821061
- exit_code: 255
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib = 0;\n    my\
    \ $a = 1;\n    my $b = 1;\n    my $c;\n    my $i;\n    my $j;\n    my $k;\n  \
    \  my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n\
    \    my $z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my\
    \ $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n\
    \    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my\
    \ $s;\n    my $t;\n    my $u;\n    my $\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: "Bareword found where operator expected at /tmp/tmpuo41c7xl.pl line 131,\
    \ near \"$\nuse Test::Deep\"\n\t(Missing operator before Test::Deep?)\nsyntax\
    \ error at /tmp/tmpuo41c7xl.pl line 131, near \"$\nuse Test::Deep\"\nMissing right\
    \ curly or square bracket at /tmp/tmpuo41c7xl.pl line 158, at end of line\nsyntax\
    \ error at /tmp/tmpuo41c7xl.pl line 158, at EOF\nExecution of /tmp/tmpuo41c7xl.pl\
    \ aborted due to compilation errors.\n"
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 1) {\n        return $n;\n    }\n    $fib = ($fib + $fib + $fib - $fib) /\
    \ $n;\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061
- exit_code: 1
  program: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n#\
    \ 1\n# >>> fib(8)\n# 21\nsub fib {\n    my($n) = @_;\n    my $fib;\n    if ($n\
    \ <= 2) {\n        $fib = $n;\n    }\n    else {\n        $fib = fib($n-1) + fib($n-2);\n\
    \    }\n    return $fib;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my\
    \ $candidate = \\&fib;\n        if(eq_deeply($candidate->(10),55)) {\n       \
    \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1),1))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(8),21))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(11),89))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),144))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659821061

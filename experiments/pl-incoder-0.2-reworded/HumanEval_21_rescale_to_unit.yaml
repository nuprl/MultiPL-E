name: HumanEval_21_rescale_to_unit
language: pl
prompt: "# Given array of numbers (of at least two elements), apply a linear transform\
  \ to that array,\n# such that the smallest number will become 0 and the largest\
  \ will become 1\n# >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n# [0.0, 0.25,\
  \ 0.5, 0.75, 1.0]\nsub rescale_to_unit {\n    my($numbers) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rescale_to_unit;\n\
  \        if(eq_deeply($candidate->([2.0, 49.9]),[0.0, 1.0])) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([100.0,\
  \ 49.9]),[1.0, 0.0])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),[0.0, 0.25, 0.5,\
  \ 0.75, 1.0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->([2.0, 1.0, 5.0, 3.0, 4.0]),[0.25, 0.0, 1.0, 0.5,\
  \ 0.75])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([12.0,\
  \ 11.0, 15.0, 13.0, 14.0]),[0.25, 0.0, 1.0, 0.5, 0.75])) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $rescaled = ($number - $min) / ($max - $min);\n        push(@rescaled, $rescaled);\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n    my $min_number\
    \ = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max_number) {\n            $max_number = $number;\n\
    \        }\n        if ($number < $min_number) {\n            $min_number = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        my $new_number\
    \ = $number - $min_number;\n        $new_number /= ($max_number - $min_number);\n\
    \        $new_number *= $max_number;\n        $new_number += $min_number;\n  \
    \      $rescaled_numbers->[$_] = $new_number;\n    }\n    return @$rescaled_numbers;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $scale\
    \ = 1.0 * ($max - $min) / $max;\n    my $result = [];\n    foreach my $num (@$numbers)\
    \ {\n        $result[$num] = $num * $scale;\n    }\n    return $result;\n}", " \
    \   my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range = @$numbers\
    \ - 1;\n    my $scale = ($max - $min) / $range;\n    my @rescaled;\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled[$_] = $number * $scale;\n    }\n\
    \    return @rescaled;\n}", "    my @rescaled;\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / $numbers[-1];\n\
    \    foreach my $num (@$numbers) {\n        $num *= $scale;\n        push(@rescaled,\
    \ $num);\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n    my\
    \ $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $min = $min > $number ? $min : $number;\n        $max = $max < $number\
    \ ? $max : $number;\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n        $rescaled_numbers[$number] = $rescaled_numbers[$number]\
    \ / $max - $min;\n    }\n    return @$numbers;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $smallest_number = $numbers[0];\n    my $largest_number = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $smallest_number = $number if $number\
    \ < $smallest_number;\n        $largest_number = $number if $number > $largest_number;\n\
    \        $rescaled_numbers[] = $number / $largest_number;\n    }\n    return @rescaled_numbers;\n\
    }", "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
    \ = $number - $min;\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = 1.0 / $range;\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers[] = $min + ($number * $scale);\n    }\n    return $new_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $scale = $range / $numbers[0];\n    my $result =\
    \ [];\n    foreach my $number (@$numbers) {\n        $result[$number] = $number\
    \ * $scale;\n    }\n    return $result;\n}", "    my @rescaled_numbers = ();\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $min > $number ? $min : $number;\n        $max\
    \ = $max < $number ? $max : $number;\n    }\n    my $scale = ($max - $min) / @$numbers;\n\
    \    foreach my $number (@$numbers) {\n        push @rescaled_numbers, $min +\
    \ ($number - $min) * $scale;\n    }\n    return @rescaled_numbers;\n}", "    my\
    \ @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / 100;\n    foreach my $number (@$numbers) {\n\
    \        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max\
    \ = max($numbers);\n    my $new_range = abs($new_max - $new_min);\n    my $scale\
    \ = $new_range / $range;\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers[] = $new_min + ($number - $min) * $scale;\n    }\n \
    \   return @$new_numbers;\n}", "    my @rescaled;\n    my $min = @$numbers < 2\
    \ ? 0 : $numbers[0];\n    my $max = @$numbers < 2 ? 1 : $numbers[-1];\n    my\
    \ $scale = ($max - $min) / @$numbers;\n    foreach my $num (@$numbers) {\n   \
    \     $rescaled[$_] = $num + $min * $scale;\n    }\n    return @$rescaled;\n}",
  "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = $range / $numbers[0];\n    return map { $_ * $scale\
    \ } @$numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my $result = $numbers[0] + $scale * ($numbers[1] - $min);\n    return $result;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = ($max - $min) / $numbers[0];\n    my @rescaled = map { $_ * $scale } @$numbers;\n\
    \    return @rescaled;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n \
    \   my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        } elsif ($number < $min) {\n\
    \            $min = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$_] = $number - $min;\n    }\n    return @rescaled;\n}",
  "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $rescaled_number = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers\
    \ + 1] = $rescaled_number / $max - $min;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = ($max - $min) / 0.0;\n    my @rescaled;\n    foreach my $num (@$numbers) {\n\
    \        $rescaled[$_] = $num * $scale;\n    }\n    return \\@rescaled;\n}", " \
    \   my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = ($range == 0) ? 0 : ($range == 1) ? 1.0 : ($range\
    \ / $min);\n    my @rescaled = map { $_ * $scale } @$numbers;\n    return @rescaled;\n\
    }", "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $num (@$numbers) {\n        if ($num < $min) {\n            $min\
    \ = $num;\n        }\n        if ($num > $max) {\n            $max = $num;\n \
    \       }\n    }\n    foreach my $num (@$numbers) {\n        $num = $num - $min;\n\
    \        $num = $num / $max - $min;\n        push(@rescaled, $num);\n    }\n \
    \   return @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my $result = [];\n    foreach my $number (@$numbers) {\n        $result[$number]\
    \ = $number * $scale;\n    }\n    return $result;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my @rescaled = map { $_ * $scale } @$numbers;\n\
    \    return @rescaled;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n \
    \   my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number\
    \ < $min) {\n            $min = $number;\n        }\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        my $rescaled = $number - $min;\n        $rescaled = $rescaled / ($max\
    \ - $min);\n        push(@rescaled, $rescaled);\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $min_value = $numbers[0];\n    my $max_value\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number <\
    \ $min_value) {\n            $min_value = $number;\n        } elsif ($number >\
    \ $max_value) {\n            $max_value = $number;\n        }\n    }\n    foreach\
    \ my $number (@$numbers) {\n        my $new_number = $number - $min_value;\n \
    \       $new_number /= ($max_value - $min_value);\n        push @rescaled_numbers,\
    \ $new_number;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled =\
    \ ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        } elsif ($number < $min) {\n            $min = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $new_number = $number\
    \ - $min;\n        $new_number = $new_number / $max - $min;\n        push(@rescaled,\
    \ $new_number);\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $rescaled_number = $number\
    \ - $min;\n        $rescaled_numbers[$#rescaled_numbers + 1] = $rescaled_number\
    \ / $max - $min;\n    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $result = [];\n    foreach my $num (@$numbers)\
    \ {\n        $result[$num] = $num * $scale;\n    }\n    return $result;\n}", " \
    \   my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / 1.0;\n    my @rescaled;\n    foreach my $num (@$numbers) {\n     \
    \   $rescaled[$_] = $num * $scale;\n    }\n    return @rescaled;\n}", "    my\
    \ @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n\
    \        $max = $max < $number ? $max : $number;\n    }\n    my $scale = ($max\
    \ - $min) / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled[$_]\
    \ = $min + $scale * $number;\n    }\n    return @$rescaled;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max - $min);\n\
    \    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n    my $new_range\
    \ = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n    my $new_numbers\
    \ = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[] = $new_min\
    \ + ($number * $scale);\n    }\n    return $new_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number\
    \ - $min) / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n \
    \   return @rescaled;\n}", "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n\
    \    my $max_number = $numbers[0];\n    foreach my $number (@$numbers) {\n   \
    \     if ($number > $max_number) {\n            $max_number = $number;\n     \
    \   }\n        if ($number < $min_number) {\n            $min_number = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min_number;\n    }\n    return @$rescaled_numbers;\n}", "    my\
    \ $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[]\
    \ = $new_min + ($number * $scale);\n    }\n    return $new_numbers;\n}", "   \
    \ my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min :\
    \ $number;\n        $max = $max < $number ? $max : $number;\n    }\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled_numbers[$number] = $number - $min;\n\
    \        $rescaled_numbers[$number] = $rescaled_numbers[$number] / $max - $min;\n\
    \    }\n    return @$numbers;\n}", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        }\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($number - $min)\
    \ * ($max - $min) / ($max - $min);\n    }\n    return @rescaled_numbers;\n}",
  "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[]\
    \ = $new_min + ($number - $min) * $scale;\n    }\n    return @$new_numbers;\n}",
  "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        } elsif ($number < $min) {\n            $min =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_]\
    \ = $number - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $smallest_number = $numbers[0];\n    my $largest_number = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $smallest_number = $number if $number\
    \ < $smallest_number;\n        $largest_number = $number if $number > $largest_number;\n\
    \    }\n    my $scale = ($largest_number - $smallest_number) / ($largest_number\
    \ + $smallest_number);\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $smallest_number + $scale * ($number - $smallest_number);\n    }\n    return\
    \ @$rescaled_numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / 1.0;\n    return map { $_ * $scale + $min };\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = 1.0 * ($max - $min);\n    my @rescaled;\n    foreach my $num (@$numbers) {\n\
    \        $rescaled[$_] = $num / $scale;\n    }\n    return @rescaled;\n}", " \
    \   my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min + ($number * $scale);\n    }\n\
    \    return @$rescaled_numbers;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $range = abs($max - $min);\n    my $new_min = min($numbers);\n\
    \    my $new_max = max($numbers);\n    my $new_range = abs($new_max - $new_min);\n\
    \    my $scale = $new_range / $range;\n    my $new_numbers = ();\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers[] = $new_min + ($number - $min)\
    \ * $scale;\n    }\n    return @$new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n    }\n    return @$numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = @$numbers < 2 ? 0 : $numbers[0];\n    my $max = @$numbers < 2 ?\
    \ 1 : $numbers[-1];\n    my $scale = ($max - $min) / @$numbers;\n    foreach my\
    \ $number (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($number\
    \ - $min) * $scale;\n    }\n    return @$rescaled_numbers;\n}", "    my @rescaled\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        } elsif ($number < $min) {\n            $min = $number;\n        } else\
    \ {\n            $rescaled[$#rescaled + 1] = $number - $min;\n        }\n    }\n\
    \    my $scale = ($max - $min);\n    foreach my $number (@$numbers) {\n      \
    \  $rescaled[$#rescaled + 1] = $rescaled[$#rescaled] * $scale + $min;\n    }\n\
    \    return @$numbers;\n}", "    my @rescaled_numbers;\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / 0.0;\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min + ($number\
    \ * $scale);\n    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number < $min) {\n            $min = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ - $min;\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n \
    \   my $max = max($numbers);\n    my $range = $max - $min;\n    my $scale = $range\
    \ / $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n    return\
    \ $new_numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my $result = [];\n    foreach my $num (@$numbers) {\n        $result[$num]\
    \ = $num * $scale;\n    }\n    return @$result;\n}", "    my $min = min @$numbers;\n\
    \    my $max = max @$numbers;\n    my $range = @$numbers - 1;\n    my $scale =\
    \ ($max - $min) / $range;\n    my @result;\n    foreach my $number (@$numbers)\
    \ {\n        $number *= $scale;\n        $number += $min;\n        push @result,\
    \ $number;\n    }\n    return @result;\n}", "    my $min = min($numbers);\n  \
    \  my $max = max($numbers);\n    my @rescaled;\n    my $scale = ($max - $min)\
    \ / scalar(@$numbers);\n    foreach my $number (@$numbers) {\n        $rescaled[$_]\
    \ = $min + ($number * $scale);\n    }\n    return @rescaled;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled;\n    my $min =\
    \ $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n        }\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    foreach my $number (@$numbers) {\n        my $scale = ($number - $min) /\
    \ ($max - $min);\n        push(@rescaled, $min + $scale * ($max - $min));\n  \
    \  }\n    return @rescaled;\n}", "    my $min = min @$numbers;\n    my $max =\
    \ max @$numbers;\n    my $range = $max - $min;\n    my $new_min = min @$numbers;\n\
    \    my $new_max = max @$numbers;\n    my $new_range = $new_max - $new_min;\n\
    \    my $new_scale = $range / $new_range;\n    my $new_numbers = ();\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers[$number] = $new_min + ($new_scale\
    \ * $number);\n    }\n    return @$new_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = max - min;\n    my $scale = $range\
    \ / $max;\n    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n \
    \       $new_numbers->[$number] = $number * $scale;\n    }\n    return $new_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = ($max - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_scale = ($new_max - $new_min);\n    my $new_numbers = [];\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers[$number] = $new_min + ($number\
    \ - $min) * $new_scale / $scale;\n    }\n    return $new_numbers;\n}", "    my\
    \ @rescaled_numbers = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
    \ {\n        push(@rescaled_numbers, $min + ($number * $scale));\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n   \
    \ my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number\
    \ > $max) {\n            $max = $number;\n        } elsif ($number < $min) {\n\
    \            $min = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        my $rescaled = ($number - $min) / ($max - $min);\n        push(@rescaled,\
    \ $rescaled);\n    }\n    return @rescaled;\n}", "    my @rescaled = ();\n   \
    \ my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $min = $number if $number < $min;\n        $max = $number if $number\
    \ > $max;\n        $rescaled[$#rescaled+1] = $number - $min;\n    }\n    return\
    \ @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / 0.0;\n    my $new_numbers = ();\n    foreach\
    \ my $number (@$numbers) {\n        $new_numbers->[$number] = $min + ($number\
    \ * $scale);\n    }\n    return $new_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n\
    \    return $new_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$_] = $number / $max - $min;\n    }\n    return\
    \ @rescaled;\n}", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n\
    \    my $range = max - min;\n    my $scale = ($range == 0) ? 0 : ($range / $max);\n\
    \    my $new_numbers = map { $_ * $scale + $min } @$numbers;\n    return @$new_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
    \ = $new_min + $scale * ($number - $min);\n    }\n    return $new_numbers;\n}",
  "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = ($range == 0) ? 1.0 : ($range / $min);\n    my $new_numbers\
    \ = map { $_ * $scale } @$numbers;\n    return $new_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $min > $number ? $min : $number;\n        $max\
    \ = $max < $number ? $max : $number;\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$_] = $number / ($max - $min);\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $min = min @$numbers;\n    my $max = max\
    \ @$numbers;\n    my $range = max - min;\n    my $scale = $range / $max;\n   \
    \ my $offset = $min - $range;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number + $offset;\n    }\n    return @$rescaled_numbers;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $range = max - min;\n\
    \    my $scale = $range / $max;\n    my $new_numbers = ();\n    foreach my $number\
    \ (@$numbers) {\n        $new_numbers->[$number] = $number * $scale;\n    }\n\
    \    return $new_numbers;\n}", "    my @rescaled_numbers;\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / $numbers[-1];\n\
    \    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min\
    \ + $scale * $number;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number - $min)\
    \ / ($max - $min);\n        push(@rescaled, $scale * $max);\n    }\n    return\
    \ @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my $result = $numbers[0] + $scale * ($numbers[1] - $min);\n    return $result;\n\
    }", "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n    my $max_number\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number >\
    \ $max_number) {\n            $max_number = $number;\n        }\n        if ($number\
    \ < $min_number) {\n            $min_number = $number;\n        }\n    }\n   \
    \ foreach my $number (@$numbers) {\n        my $new_number = ($number - $min_number)\
    \ / ($max_number - $min_number);\n        push(@rescaled_numbers, $new_number);\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my\
    \ $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $min = $number if $number < $min;\n        $max = $number if $number\
    \ > $max;\n    }\n    my $scale = ($max - $min) / @$numbers;\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n\
    \    }\n    return @$rescaled_numbers;\n}", "    my @rescaled;\n    my $min =\
    \ $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n        } elsif\
    \ ($number > $max) {\n            $max = $number;\n        }\n    }\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled[$_] = $number - $min;\n    }\n \
    \   foreach my $index (0..$#rescaled) {\n        $rescaled[$index] = $rescaled[$index]\
    \ / $max - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        $min = $min > $number ? $min : $number;\n   \
    \     $max = $max < $number ? $max : $number;\n    }\n    foreach my $number (@$numbers)\
    \ {\n        my $rescaled = ($number - $min) / ($max - $min);\n        push(@rescaled_numbers,\
    \ $rescaled);\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ / ($max - $min);\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        }\n        if ($number > $max) {\n            $max = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        } elsif ($number < $min) {\n            $min = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ - $min if $number > $min;\n        $rescaled[$_] = $max - $number if $number\
    \ < $max;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n    return @$rescaled_numbers;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        } elsif ($number < $min) {\n            $min =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $new_number = $number - $min;\n        $new_number /= ($max - $min);\n     \
    \   push(@rescaled, $new_number);\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        } elsif ($number < $min) {\n            $min = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n    }\n    return @$numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers->[$number] = $number * $scale;\n    }\n    return @$new_numbers;\n\
    }", "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $diff = $max - $min;\n    my $scale = $diff / $numbers[-1];\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled_numbers[$#rescaled_numbers+1] =\
    \ $number * $scale;\n    }\n    return @rescaled_numbers;\n}", "    my $min =\
    \ min @$numbers;\n    my $max = max @$numbers;\n    my $scale = 1.0 * ($max -\
    \ $min);\n    my @result;\n    foreach my $number (@$numbers) {\n        $number\
    \ *= $scale;\n        $number += $min;\n        push @result, $number;\n    }\n\
    \    return @result;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my @rescaled = ();\n    foreach my $num (@$numbers) {\n        $num = $num\
    \ - $min;\n        $num = $num / $max - $min;\n        push(@rescaled, $num);\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n    my $min_value\
    \ = $numbers[0];\n    my $max_value = $numbers[0];\n    my $scale = 1;\n    foreach\
    \ my $number (@$numbers) {\n        if ($number > $max_value) {\n            $max_value\
    \ = $number;\n        }\n        if ($number < $min_value) {\n            $min_value\
    \ = $number;\n        }\n        $rescaled_numbers[$#rescaled_numbers + 1] = $number\
    \ * $scale;\n        $scale *= $scale;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[]\
    \ = $new_min + ($number - $min) * $scale;\n    }\n    return @$new_numbers;\n}",
  "    my @rescaled;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $num (@$numbers)\
    \ {\n        $rescaled[$_] = $num * $scale;\n    }\n    return @rescaled;\n}",
  "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = 1.0 / $range;\n    my @rescaled;\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$_] = $number * $scale;\n    }\n    return\
    \ @rescaled;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max\
    \ = max($numbers);\n    my $new_range = abs($new_max - $new_min);\n    my $scale\
    \ = $new_range / $range;\n    my $new_numbers = map { $_ * $scale } @$numbers;\n\
    \    return $new_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $scale = $number - $min;\n        $rescaled[$_] =\
    \ $scale / $max - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min_number = $numbers[0];\n    my $max_number = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max_number) {\n\
    \            $max_number = $number;\n        }\n        if ($number < $min_number)\
    \ {\n            $min_number = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $new_number = ($number - $min_number) / ($max_number\
    \ - $min_number);\n        push(@rescaled_numbers, $new_number);\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        }\n        if ($number\
    \ < $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$number] = $number - $min;\n    }\n    foreach\
    \ my $number (@$numbers) {\n        $rescaled[$number] = $rescaled[$number] /\
    \ $max - $min;\n    }\n    return @$numbers;\n}", "    my @rescaled_numbers =\
    \ ();\n    my $min_value = $numbers[0];\n    my $max_value = $numbers[0];\n  \
    \  my $scale = 1;\n    foreach my $number (@$numbers) {\n        if ($number <\
    \ $min_value) {\n            $min_value = $number;\n        }\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n        }\n        $rescaled_numbers[$#rescaled_numbers\
    \ + 1] = $number * $scale;\n        $scale *= $scale;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
    \ = $new_min + ($number - $min) * $scale;\n    }\n    return $new_numbers;\n}",
  "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $new_min = min($numbers);\n    my $new_max = max($numbers);\n\
    \    my $new_range = abs($new_max - $new_min);\n    my $scale = $new_range / $range;\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers[$number]\
    \ = $new_min + $scale * ($number - $min);\n    }\n    return @$new_numbers;\n}",
  "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers = map {\
    \ $_ * $scale } @$numbers;\n    return @$new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $min = $number if $number < $min;\n        $max = $number\
    \ if $number > $max;\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + ($max - $min) * $number / $max;\n    }\n    return @$rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $scale = ($range == 0) ? 0 : (1.0 / $range);\n \
    \   return map { $min + ($numbers - $_) * $scale };\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n\
    \    return $new_numbers;\n}", "    my @rescaled_numbers = ();\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        $smallest_number = $number if $number < $smallest_number;\n\
    \        $largest_number = $number if $number > $largest_number;\n        $rescaled_numbers[]\
    \ = $number / $largest_number;\n    }\n    return @rescaled_numbers;\n}", "  \
    \  my @rescaled_numbers = ();\n    my $min = @$numbers < 2 ? 0 : $numbers[0];\n\
    \    my $max = @$numbers < 2 ? 1 : $numbers[-1];\n    my $scale = ($max - $min)\
    \ / @$numbers;\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + $scale * $number;\n    }\n    return @$rescaled_numbers;\n}", "   \
    \ my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        if ($number < $min) {\n            $min =\
    \ $number;\n        }\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_]\
    \ = $number - ($min - $max) / @$numbers;\n    }\n    return @rescaled;\n}", " \
    \   my $min = min($numbers);\n    my $max = max($numbers);\n    my @rescaled;\n\
    \    foreach my $num (@$numbers) {\n        $num = $num - $min;\n        $num\
    \ = $num / $max - $min;\n        push(@rescaled, $num);\n    }\n    return @rescaled;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range\
    \ = max - min;\n    my $scale = 1.0 * $range / $max;\n    my $new_numbers = map\
    \ { $_ * $scale } @$numbers;\n    return $new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $min + ($number * $scale);\n    }\n    return @$rescaled_numbers;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_]\
    \ = $number / $max - $min;\n    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $result = $numbers[0] + $scale * ($numbers[1]\
    \ - $min);\n    return $result;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        }\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $scale = ($number - $min) / ($max - $min);\n     \
    \   push(@rescaled, $min + $scale * ($max - $min));\n    }\n    return @rescaled;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range\
    \ = 1 - $min / $max;\n    my @rescaled;\n    foreach my $number (@$numbers) {\n\
    \        $rescaled[$_] = $range * $number + $min;\n    }\n    return @rescaled;\n\
    }", "    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range\
    \ = @$numbers - 1;\n    my $scale = ($max - $min) / $range;\n    my @new_numbers;\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers[$number] = $min +\
    \ ($number - $min) * $scale;\n    }\n    return @new_numbers;\n}", "    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max - $min);\n\
    \    my $scale = $range / $numbers[0];\n    my $result = $numbers[0] + $scale\
    \ * ($numbers[1] - $min);\n    return $result;\n}", "    my @rescaled_numbers;\n\
    \    my $min_number = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        if ($number < $min_number) {\n           \
    \ $min_number = $number;\n        }\n        if ($number > $max_number) {\n  \
    \          $max_number = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        my $rescaled_number = $number - $min_number;\n        $rescaled_numbers[$#rescaled_numbers\
    \ + 1] = $rescaled_number * $max_number / $min_number;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = 1.0 * ($max - $min);\n    my @rescaled = ();\n    foreach my $num (@$numbers)\
    \ {\n        $rescaled[$num] = $num / $scale;\n    }\n    return @rescaled;\n}",
  "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        }\n        if ($number < $min) {\n            $min\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $new_number = ($number - $min) / ($max - $min);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $result = $numbers[0] * $scale;\n    foreach\
    \ my $number (@$numbers) {\n        $result -= $number * $scale;\n    }\n    return\
    \ $result;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max\
    \ = max($numbers);\n    my $new_range = abs($new_max - $new_min);\n    my $scale\
    \ = $new_range / $range;\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers[] = $new_min + ($number * $scale);\n    }\n    return\
    \ $new_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number >\
    \ $max) {\n            $max = $number;\n        }\n        if ($number < $min)\
    \ {\n            $min = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        my $scale = ($number - $min) / ($max - $min);\n        push(@rescaled,\
    \ $min + $scale * ($max - $min));\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $min + ($number * $scale);\n    }\n    return @$rescaled_numbers;\n\
    }", "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  foreach my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min\
    \ + $scale * $number;\n    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max\
    \ - $min) / scalar(@$numbers);\n    for (@$numbers) {\n        my $new_number\
    \ = $min + ($_ * $scale);\n        push(@rescaled_numbers, $new_number);\n   \
    \ }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n    my\
    \ $max = max($numbers);\n    my $range = abs($max - $min);\n    my $new_min =\
    \ min($numbers);\n    my $new_max = max($numbers);\n    my $new_range = abs($new_max\
    \ - $new_min);\n    my $scale = $new_range / $range;\n    my $new_numbers = ();\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers[] = $new_min + ($number\
    \ - $min) * $scale;\n    }\n    return @$new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min_value = $numbers[0];\n    my $max_value = $numbers[0];\n    my $prev_value\
    \ = $numbers[0];\n    my $prev_rescaled_value = $numbers[0];\n    my $prev_rescaled_value_magnitude\
    \ = 0;\n    my $prev_rescaled_value_magnitude2 = 0;\n    my $prev_rescaled_value_magnitude3\
    \ = 0;\n    my $prev_rescaled_value_magnitude4 = 0;\n    my $prev_rescaled_value_magnitude5\
    \ = 0;\n    my $prev_rescaled_value_magnitude6 = 0;\n    my $prev_rescaled_value_magnitude7\
    \ = 0;\n    my $prev_rescaled_value_magnitude8 = 0;\n    my $prev_rescaled_value_magnitude9\
    \ = 0;\n    my $prev_rescaled_value_magnitude10 = 0;\n    my $prev_rescaled_value_magnitude11\
    \ = 0;\n    my $prev_rescaled_value_magnitude12 = 0;\n    my $prev_rescaled_value_magnitude13\
    \ = 0;\n    my $prev_rescaled_value_magnitude14 = 0;\n    my $prev_rescaled_value_magnitude15\
    \ = 0;\n    my $prev_rescaled_value_magnitude16 = 0;\n    my $prev_rescaled_value_magnitude17\
    \ = 0;\n    my $prev_rescaled_value_magnitude18 = 0;\n    my $prev_rescaled_value_magnitude19\
    \ = 0;\n    my $prev_rescaled_value_magnitude20 = 0;\n    my $prev_rescaled_value_magnitude21\
    \ = 0;\n    my $prev_rescaled_value_magnitude22 = 0;\n    my $prev_rescaled_value_magnitude23\
    \ = 0;\n    my $prev_rescaled_value_magnitude24 = 0;\n    my $prev_rescaled_value_magnitude25\
    \ = 0;\n    my $prev_rescaled_value_magnitude26 = 0;\n    my $prev_rescaled_value_magnitude27\
    \ = 0;\n    my $prev_rescaled_value_magnitude28 = 0;\n    my $prev_rescaled_value_magnitude29\
    \ = 0;\n    my $prev_rescaled_value_magnitude30 = 0;\n    my $prev_rescaled_value_magnitude31\
    \ = 0;\n    my $prev_rescaled_value_magnitude32 = 0;\n    my $prev_rescaled_value_magnitude33\
    \ = 0;\n    my $prev_rescaled_value_magnitude34 = 0;\n    my $prev_rescaled_value_magnitude35\
    \ = 0;\n    my $prev_rescaled_value_magnitude36 = 0;\n    my $prev_rescaled_value_magnitude37\
    \ = 0;\n    my $prev_rescaled_value_magnitude38 = 0;\n    my $prev_rescaled_value_magnitude39\
    \ = 0;\n    my $prev_rescaled_value_magnitude40 = 0;\n    my $prev_rescaled_value_magnitude41\
    \ = 0;\n    my $prev_rescaled_value_magnitude42 = 0;\n    my $prev_rescaled_value_magnitude43\
    \ = 0;\n    my $prev_rescaled_value_magnitude44 = 0;\n    my $prev_rescaled_value_magnitude45\
    \ = 0;\n    my $prev_rescaled_value_magnitude46 = 0;\n    my $prev_rescaled_value_magnitude47\
    \ = 0;\n    my $prev_rescaled_value_", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        } elsif ($number >\
    \ $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $rescaled = ($number - $min) / ($max - $min);\n  \
    \      push(@rescaled, $rescaled);\n    }\n    return @rescaled;\n}", "    my\
    \ @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n  \
    \  foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
    \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
    \ = $number - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $rescaled_number = $number\
    \ - $min;\n        $rescaled_numbers[$#rescaled_numbers + 1] = $rescaled_number\
    \ * $max / $min;\n    }\n    return @rescaled_numbers;\n}", "    my @new_numbers\
    \ = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n    my $diff\
    \ = $max - $min;\n    my $scale = $diff / $numbers[-1];\n    foreach my $number\
    \ (@$numbers) {\n        $new_numbers->[$number] = $min + ($number * $scale);\n\
    \    }\n    return @new_numbers;\n}", "    my @rescaled_numbers;\n    my $min\
    \ = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max - $min)\
    \ / $numbers[0];\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + $scale * $number;\n    }\n    return @rescaled_numbers;\n}", "    my\
    \ @rescaled_numbers = ();\n    my $min_value = $numbers[0];\n    my $max_value\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number <\
    \ $min_value) {\n            $min_value = $number;\n        }\n        if ($number\
    \ > $max_value) {\n            $max_value = $number;\n        }\n    }\n    my\
    \ $scale = ($max_value - $min_value) / @$numbers;\n    foreach my $number (@$numbers)\
    \ {\n        my $new_number = $number - $min_value;\n        $new_number = $new_number\
    \ * $scale;\n        $new_number = $new_number + $min_value;\n        push @rescaled_numbers,\
    \ $new_number;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers\
    \ = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my\
    \ $number (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number < $min) {\n            $min = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        my $new_number = $number\
    \ - $min;\n        $new_number = $new_number / $max - $min;\n        $new_number\
    \ = $new_number * $max;\n        $new_number += $min;\n        push @rescaled_numbers,\
    \ $new_number;\n    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my @rescaled = ();\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$number] = $number * $scale;\n    }\n    return \\@rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        }\n        if ($number < $min) {\n            $min\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $rescaled_number = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers\
    \ + 1] = $rescaled_number / $max - $min;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = ($max - $min) / 1.0;\n    my $result = [];\n    foreach my $number (@$numbers)\
    \ {\n        $result[$number] = $min + ($number - $min) * $scale;\n    }\n   \
    \ return $result;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  my $result = [];\n    foreach my $num (@$numbers) {\n        $result[$num]\
    \ = $num * $scale;\n    }\n    return @$result;\n}", "    my @rescaled = ();\n\
    \    my $min = min @$numbers;\n    my $max = max @$numbers;\n    my $range = max\
    \ - min;\n    my $scale = $range / $max;\n    foreach my $num (@$numbers) {\n\
    \        $num *= $scale;\n        $num += $min;\n        $rescaled[$#rescaled+1]\
    \ = $num;\n    }\n    return @$rescaled;\n}", "    my @rescaled_numbers;\n   \
    \ my $min_number = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        $min_number = $number if $number < $min_number;\n\
    \        $max_number = $number if $number > $max_number;\n    }\n    my $scale\
    \ = ($max_number - $min_number) / (@$numbers - 1);\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min_number + ($number * $scale);\n\
    \    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my\
    \ $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       if ($number < $min) {\n            $min = $number;\n        }\n    }\n\
    \    foreach my $number (@$numbers) {\n        my $rescaled_number = $number -\
    \ $min;\n        $rescaled_numbers[$#rescaled_numbers+1] = $rescaled_number;\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / scalar(@$numbers);\n\
    \    foreach my $num (@$numbers) {\n        $rescaled[$_] = $num + $min * $scale;\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled;\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / @$numbers;\n  \
    \  foreach my $num (@$numbers) {\n        $rescaled[$_] = $num * $scale;\n   \
    \ }\n    return @$rescaled;\n}", "    my @rescaled_numbers;\n    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = $max - $min;\n    my $scale = $range\
    \ / $numbers[0];\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $min + $scale * $number;\n    }\n    return @$rescaled_numbers;\n}", "   \
    \ my @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        }\n        if ($number > $max) {\n            $max\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $number - $min;\n    }\n    return @rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my @rescaled;\n\
    \    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number / $max\
    \ - $min + $min;\n    }\n    return \\@rescaled;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $new_min\
    \ = min($numbers);\n    my $new_max = max($numbers);\n    my $new_range = abs($new_max\
    \ - $new_min);\n    my $scale = $new_range / $range;\n    my $new_numbers = ();\n\
    \    foreach my $number (@$numbers) {\n        $new_numbers[] = $new_min + ($number\
    \ - $min) * $scale;\n    }\n    return @$new_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = @$numbers < 2 ? 0 : $numbers[0];\n    my $max = @$numbers < 2 ?\
    \ 1 : $numbers[0];\n    foreach my $number (@$numbers) {\n        my $new_number\
    \ = $number - $min;\n        $new_number /= $max - $min;\n        push @rescaled_numbers,\
    \ $new_number;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number < $min) {\n            $min = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number\
    \ - ($min - $max) / ($max - $min);\n    }\n    return @rescaled;\n}", "    my\
    \ @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n  \
    \  foreach my $number (@$numbers) {\n        if ($number < $min) {\n         \
    \   $min = $number;\n        } elsif ($number > $max) {\n            $max = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        my $rescaled\
    \ = ($number - $min) / ($max - $min);\n        push(@rescaled, $rescaled);\n \
    \   }\n    return @rescaled;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $number if $number < $min;\n        $max = $number if $number > $max;\n  \
    \  }\n    foreach my $number (@$numbers) {\n        $rescaled[$number] = $min\
    \ + ($max - $min) * $number / $max;\n    }\n    return @rescaled;\n}", "    my\
    \ @rescaled_numbers;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $min = $min > $number ? $min :\
    \ $number;\n        $max = $max < $number ? $max : $number;\n    }\n    my $scale\
    \ = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers) {\n       \
    \ $rescaled_numbers[$number] = $min + ($number - $min) * $scale;\n    }\n    return\
    \ @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my $min = @$numbers\
    \ < 2 ? 0 : $numbers[0];\n    my $max = @$numbers < 2 ? 1 : $numbers[-1];\n  \
    \  my $scale = ($max - $min) / @$numbers;\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min + ($number - $min) * $scale;\n\
    \    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my\
    \ $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n        } elsif\
    \ ($number > $max) {\n            $max = $number;\n        }\n    }\n    foreach\
    \ my $number (@$numbers) {\n        my $new_number = $number - $min;\n       \
    \ $new_number /= ($max - $min);\n        push(@rescaled_numbers, $new_number);\n\
    \    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number > $max) {\n            $max = $number;\n        }\n        if ($number\
    \ < $min) {\n            $min = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$_] = $number - $min;\n    }\n    foreach my\
    \ $index (@$numbers) {\n        $rescaled[$index] = $rescaled[$index] / $max -\
    \ $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n    my\
    \ $min_value = $numbers[0];\n    my $max_value = $numbers[0];\n    my $min_rescaled_value\
    \ = $min_value;\n    my $max_rescaled_value = $max_value;\n    my $min_rescaled_index\
    \ = 0;\n    my $max_rescaled_index = 0;\n    my $index = 0;\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min_value) {\n            $min_rescaled_value\
    \ = $number;\n            $min_rescaled_index = $index;\n        } elsif ($number\
    \ > $max_value) {\n            $max_rescaled_value = $number;\n            $max_rescaled_index\
    \ = $index;\n        }\n        $index++;\n    }\n    my $rescaled_min_rescaled_value\
    \ = $min_rescaled_value;\n    my $rescaled_max_rescaled_value = $max_rescaled_value;\n\
    \    my $rescaled_min_rescaled_index = $min_rescaled_index;\n    my $rescaled_max_rescaled_index\
    \ = $max_rescaled_index;\n    my $rescaled_index = 0;\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min_value) {\n            $rescaled_numbers[$rescaled_index]\
    \ = $min_rescaled_value;\n            $rescaled_index++;\n        } elsif ($number\
    \ > $max_value) {\n            $rescaled_numbers[$rescaled_index] = $max_rescaled_value;\n\
    \            $rescaled_index++;\n        } else {\n            $rescaled_numbers[$rescaled_index]\
    \ = $number;\n            $rescaled_index++;\n        }\n    }\n    return @$numbers;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        $min = $number if $number < $min;\n\
    \        $max = $number if $number > $max;\n        $rescaled[$#rescaled + 1]\
    \ = $number - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min_number = $numbers[0];\n    my $max_number = $numbers[0];\n    foreach\
    \ my $number (@$numbers) {\n        if ($number < $min_number) {\n           \
    \ $min_number = $number;\n        }\n        if ($number > $max_number) {\n  \
    \          $max_number = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $number - $min_number;\n    }\n    return\
    \ @rescaled_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n   \
    \ my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number\
    \ < $min) {\n            $min = $number;\n        }\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled[$_] = $number / ($max - $min);\n    }\n    return @rescaled;\n\
    }", "    my @rescaled_numbers;\n    my $smallest_number = $numbers[0];\n    my\
    \ $largest_number = $numbers[0];\n    foreach my $number (@$numbers) {\n     \
    \   if ($number < $smallest_number) {\n            $smallest_number = $number;\n\
    \        }\n        if ($number > $largest_number) {\n            $largest_number\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $rescaled_number = $smallest_number + ($number - $smallest_number) * ($largest_number\
    \ - $smallest_number) / ($largest_number - $smallest_number);\n        push(@rescaled_numbers,\
    \ $rescaled_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min =\
    \ min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max - $min);\n\
    \    my $scale = 1.0 / $range;\n    my @rescaled_numbers;\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled_numbers[$number] = $scale * $number;\n    }\n\
    \    return \\@rescaled_numbers;\n}", "    my @rescaled = ();\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $number if $number < $min;\n        $max = $number if $number > $max;\n  \
    \      $rescaled[$#rescaled + 1] = $number - $min;\n    }\n    my $scale = ($max\
    \ - $min) / $#rescaled;\n    foreach my $number (@$numbers) {\n        $rescaled[$#rescaled\
    \ + 1] = $rescaled[$#rescaled] * $scale + $min;\n    }\n    return @$numbers;\n\
    }", "    my @rescaled = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        } elsif ($number < $min) {\n            $min =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled[$number]\
    \ = $number - $min;\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers;\n\
    \    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range = abs($max\
    \ - $min);\n    my $scale = $range / $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min + ($number - $min) * $scale;\n\
    \    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my\
    \ $min = min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max -\
    \ $min) / scalar(@$numbers);\n    for (@$numbers) {\n        $rescaled_numbers[$_]\
    \ = $min + $_ * $scale;\n    }\n    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    my $scale = ($max - $min) / 100;\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min + ($number * $scale);\n    }\n\
    \    return @$rescaled_numbers;\n}", "    my @rescaled_numbers;\n    my $min =\
    \ min($numbers);\n    my $max = max($numbers);\n    my $scale = ($max - $min)\
    \ / $numbers[0];\n    foreach my $number (@$numbers) {\n        my $new_number\
    \ = $min + ($number * $scale);\n        push(@rescaled_numbers, $new_number);\n\
    \    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n   \
    \ my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale =\
    \ 1.0 / $range;\n    my @new_numbers;\n    foreach my $number (@$numbers) {\n\
    \        $new_numbers[$number] = $scale * $number;\n    }\n    return \\@new_numbers;\n\
    }", "    my @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max =\
    \ $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number > $max)\
    \ {\n            $max = $number;\n        }\n        if ($number < $min) {\n \
    \           $min = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        my $rescaled_number = $number - $min;\n        $rescaled_numbers[$#rescaled_numbers\
    \ + 1] = $rescaled_number;\n    }\n    return @rescaled_numbers;\n}", "    my\
    \ @rescaled_numbers = ();\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $new_number = ($number - $min) / ($max - $min);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled_numbers;\n\
    \    my $min_value = $numbers[0];\n    my $max_value = $numbers[0];\n    my $prev_max_value\
    \ = $numbers[0];\n    my $prev_min_value = $numbers[0];\n    my $prev_max_value_diff\
    \ = 0;\n    my $prev_min_value_diff = 0;\n    my $prev_max_value_diff2 = 0;\n\
    \    my $prev_min_value_diff2 = 0;\n    my $prev_max_value_diff3 = 0;\n    my\
    \ $prev_min_value_diff3 = 0;\n    my $prev_max_value_diff4 = 0;\n    my $prev_min_value_diff4\
    \ = 0;\n    my $prev_max_value_diff5 = 0;\n    my $prev_min_value_diff5 = 0;\n\
    \    my $prev_max_value_diff6 = 0;\n    my $prev_min_value_diff6 = 0;\n    my\
    \ $prev_max_value_diff7 = 0;\n    my $prev_min_value_diff7 = 0;\n    my $prev_max_value_diff8\
    \ = 0;\n    my $prev_min_value_diff8 = 0;\n    my $prev_max_value_diff9 = 0;\n\
    \    my $prev_min_value_diff9 = 0;\n    my $prev_max_value_diff10 = 0;\n    my\
    \ $prev_min_value_diff10 = 0;\n    my $prev_max_value_diff11 = 0;\n    my $prev_min_value_diff11\
    \ = 0;\n    my $prev_max_value_diff12 = 0;\n    my $prev_min_value_diff12 = 0;\n\
    \    my $prev_max_value_diff13 = 0;\n    my $prev_min_value_diff13 = 0;\n    my\
    \ $prev_max_value_diff14 = 0;\n    my $prev_min_value_diff14 = 0;\n    my $prev_max_value_diff15\
    \ = 0;\n    my $prev_min_value_diff15 = 0;\n    my $prev_max_value_diff16 = 0;\n\
    \    my $prev_min_value_diff16 = 0;\n    my $prev_max_value_diff17 = 0;\n    my\
    \ $prev_min_value_diff17 = 0;\n    my $prev_max_value_diff18 = 0;\n    my $prev_min_value_diff18\
    \ = 0;\n    my $prev_max_value_diff19 = 0;\n    my $prev_min_value_diff19 = 0;\n\
    \    my $prev_max_value_diff20 = 0;\n    my $prev_min_value_diff20 = 0;\n    my\
    \ $prev_max_value_diff21 = 0;\n    my $prev_min_value_diff21 = 0;\n    my $prev_max_value_diff22\
    \ = 0;\n    my $prev_min_value_diff22 = 0;\n    my $prev_max_value_diff23 = 0;\n\
    \    my $prev_min_value_diff23 = 0;\n    my $prev_max_value_diff24 = 0;\n    my\
    \ $prev_min_value_diff24 = 0;\n    my $prev_max_value_diff25 = 0;\n    my $prev_min_value_diff25\
    \ = 0;\n    my $prev_max_value_diff26 = 0;\n    my $prev_min_value_diff26 = 0;\n\
    \    my $prev_max_value_diff27 = 0;\n    my $prev_min_", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n\
    \    return @$new_numbers;\n}", "    my @rescaled_numbers = ();\n    my $smallest_number\
    \ = $numbers[0];\n    my $largest_number = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $largest_number) {\n            $largest_number\
    \ = $number;\n        }\n        if ($number < $smallest_number) {\n         \
    \   $smallest_number = $number;\n        }\n    }\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $smallest_number + ($number - $smallest_number)\
    \ / ($largest_number - $smallest_number);\n    }\n    return @$rescaled_numbers;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my @rescaled;\n\
    \    foreach my $num (@$numbers) {\n        $num = $num - $min;\n        $num\
    \ = $num / $max - $min;\n        push(@rescaled, $num);\n    }\n    return @rescaled;\n\
    }", "    my @rescaled;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $scale = $range / $numbers[0];\n  \
    \  foreach my $num (@$numbers) {\n        $rescaled[$_] = $num * $scale;\n   \
    \ }\n    return @rescaled;\n}", "    my $min = min @$numbers;\n    my $max = max\
    \ @$numbers;\n    my $range = max - min;\n    my $scale = $range / $max;\n   \
    \ my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers->[$number]\
    \ = $min + ($number * $scale);\n    }\n    return @$new_numbers;\n}", "    my\
    \ $min = min @$numbers;\n    my $max = max @$numbers;\n    my $scale = ($max -\
    \ $min) / @$numbers;\n    my @rescaled;\n    foreach my $number (@$numbers) {\n\
    \        $rescaled[$_] = $number * $scale + $min;\n    }\n    return @rescaled;\n\
    }", "    my $min = min($numbers);\n    my $max = max($numbers);\n    my $range\
    \ = abs($max - $min);\n    my $scale = $range / $numbers[0];\n    my $new_numbers\
    \ = map { $_ * $scale } @$numbers;\n    return $new_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    my $scale = ($max - $min);\n    foreach my $number (@$numbers) {\n\
    \        push @rescaled, $min + ($number - $min) * $scale;\n    }\n    return\
    \ @rescaled;\n}", "    my @rescaled_numbers;\n    my $min_number = $numbers[0];\n\
    \    my $max_number = $numbers[0];\n    foreach my $number (@$numbers) {\n   \
    \     if ($number > $max_number) {\n            $max_number = $number;\n     \
    \   }\n        if ($number < $min_number) {\n            $min_number = $number;\n\
    \        }\n    }\n    foreach my $number (@$numbers) {\n        my $new_number\
    \ = ($number - $min_number) / ($max_number - $min_number);\n        push(@rescaled_numbers,\
    \ $new_number);\n    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $scale = ($max - $min) / scalar(@$numbers);\n\
    \    my $new_numbers = ();\n    foreach my $number (@$numbers) {\n        $new_numbers->[$number]\
    \ = $number * $scale;\n    }\n    return @$new_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = $range / $numbers[0];\n    my $new_numbers = map { $_ * $scale } @$numbers;\n\
    \    return $new_numbers;\n}", "    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $range = abs($max - $min);\n    my $new_min = min($numbers);\n    my $new_max\
    \ = max($numbers);\n    my $new_range = abs($new_max - $new_min);\n    my $scale\
    \ = $new_range / $range;\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers[] = $new_min + ($number - $min) * $scale;\n    }\n \
    \   return @$new_numbers;\n}", "    my @rescaled_numbers = ();\n    my $min =\
    \ $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number > $max) {\n            $max = $number;\n        }\n \
    \       if ($number < $min) {\n            $min = $number;\n        }\n    }\n\
    \    foreach my $number (@$numbers) {\n        my $new_number = $number - $min;\n\
    \        $new_number /= ($max - $min);\n        $new_number *= $max;\n       \
    \ $new_number += $min;\n        push(@rescaled_numbers, $new_number);\n    }\n\
    \    return @rescaled_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        }\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        $rescaled[$_] = $number - $min;\n    }\n    return @rescaled;\n\
    }", "    my @new_numbers = ();\n    my $min_number = $numbers[0];\n    my $max_number\
    \ = $numbers[0];\n    foreach my $number (@$numbers) {\n        if ($number <\
    \ $min_number) {\n            $min_number = $number;\n        }\n        if ($number\
    \ > $max_number) {\n            $max_number = $number;\n        }\n    }\n   \
    \ foreach my $number (@$numbers) {\n        my $new_number = $number - $min_number;\n\
    \        $new_number *= $max_number / $min_number;\n        $new_numbers += $new_number;\n\
    \    }\n    return @new_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        if\
    \ ($number < $min) {\n            $min = $number;\n        }\n        if ($number\
    \ > $max) {\n            $max = $number;\n        }\n    }\n    foreach my $number\
    \ (@$numbers) {\n        my $scale = ($number - $min) / ($max - $min);\n     \
    \   push(@rescaled, $min + $scale * ($max - $min));\n    }\n    return @rescaled;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $new_number = ($number - $min) / ($max - $min);\n        push(@rescaled, $new_number);\n\
    \    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n    my $min\
    \ = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number (@$numbers)\
    \ {\n        if ($number < $min) {\n            $min = $number;\n        }\n \
    \       if ($number > $max) {\n            $max = $number;\n        }\n    }\n\
    \    my $scale = ($max - $min);\n    foreach my $number (@$numbers) {\n      \
    \  $rescaled_numbers[$number] = $number - $min;\n        $rescaled_numbers[$number]\
    \ = $rescaled_numbers[$number] / $scale;\n    }\n    return @$rescaled_numbers;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number > $max) {\n       \
    \     $max = $number;\n        }\n        if ($number < $min) {\n            $min\
    \ = $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n       \
    \ my $rescaled = $number - $min;\n        $rescaled /= ($max - $min);\n      \
    \  push(@rescaled, $rescaled);\n    }\n    return @rescaled;\n}", "    my @rescaled\
    \ = ();\n    my $min = min($numbers);\n    my $max = max($numbers);\n    my $scale\
    \ = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers) {\n\
    \        $rescaled[$number] = $min + $scale * $number;\n    }\n    return @$rescaled;\n\
    }", "    my @rescaled;\n    my $min = $numbers[0];\n    my $max = $numbers[0];\n\
    \    foreach my $number (@$numbers) {\n        if ($number < $min) {\n       \
    \     $min = $number;\n        } elsif ($number > $max) {\n            $max =\
    \ $number;\n        }\n    }\n    foreach my $number (@$numbers) {\n        my\
    \ $scale = ($number - $min) / ($max - $min);\n        push(@rescaled, $scale *\
    \ $max);\n    }\n    return @rescaled;\n}", "    my @rescaled_numbers = ();\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number > $max) {\n            $max = $number;\n\
    \        }\n        if ($number < $min) {\n            $min = $number;\n     \
    \   }\n    }\n    foreach my $number (@$numbers) {\n        $rescaled_numbers[$number]\
    \ = $number - $min;\n    }\n    return @rescaled_numbers;\n}", "    my @rescaled;\n\
    \    my $min = $numbers[0];\n    my $max = $numbers[0];\n    foreach my $number\
    \ (@$numbers) {\n        if ($number < $min) {\n            $min = $number;\n\
    \        } elsif ($number > $max) {\n            $max = $number;\n        }\n\
    \    }\n    foreach my $number (@$numbers) {\n        my $scale = ($number - $min)\
    \ / ($max - $min);\n        push(@rescaled, $min + $scale * ($max - $min));\n\
    \    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $range = abs($max - $min);\n    my $scale = $range\
    \ / $numbers[0];\n    my $new_numbers = ();\n    foreach my $number (@$numbers)\
    \ {\n        $new_numbers->[$number] = $number * $scale;\n    }\n    return $new_numbers;\n\
    }", "    my @rescaled_numbers;\n    my $min = min($numbers);\n    my $max = max($numbers);\n\
    \    my $scale = ($max - $min) / scalar(@$numbers);\n    foreach my $number (@$numbers)\
    \ {\n        $rescaled_numbers[$number] = $min + $scale * $number;\n    }\n  \
    \  return @$rescaled_numbers;\n}", "    my @rescaled;\n    my $min = $numbers[0];\n\
    \    my $max = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min\
    \ = $number if $number < $min;\n        $max = $number if $number > $max;\n  \
    \  }\n    foreach my $number (@$numbers) {\n        $rescaled[$_] = $number /\
    \ $max if $number > 0;\n        $rescaled[$_] = $number / $min if $number < 0;\n\
    \    }\n    return @rescaled;\n}", "    my $min = min($numbers);\n    my $max\
    \ = max($numbers);\n    my $range = abs($max - $min);\n    my $scale = $range\
    \ / $numbers[0];\n    my $result = $numbers[0] + $scale * ($numbers[1] - $min);\n\
    \    return $result;\n}", "    my @rescaled_numbers;\n    my $min = @$numbers\
    \ < 2 ? 0 : $numbers[0];\n    my $max = @$numbers < 2 ? 1 : $numbers[0];\n   \
    \ foreach my $number (@$numbers) {\n        $rescaled_numbers[$number] = $min\
    \ + ($number - $min) / ($max - $min) * ($max - $min);\n    }\n    return @$rescaled_numbers;\n\
    }", "    my @rescaled_numbers = ();\n    my $min_value = $numbers[0];\n    my\
    \ $max_value = $numbers[0];\n    foreach my $number (@$numbers) {\n        $min_value\
    \ = $number if $number < $min_value;\n        $max_value = $number if $number\
    \ > $max_value;\n        $rescaled_numbers[] = $number / $max_value - $min_value\
    \ / $max_value;\n    }\n    return @rescaled_numbers;\n}", "    my $min = min($numbers);\n\
    \    my $max = max($numbers);\n    my $range = abs($max - $min);\n    my $scale\
    \ = 1.0 * $range / $numbers[0];\n    my @result = ();\n    foreach my $num (@$numbers)\
    \ {\n        $num *= $scale;\n        $num += $min;\n        $result[$_] = $num;\n\
    \    }\n    return \\@result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

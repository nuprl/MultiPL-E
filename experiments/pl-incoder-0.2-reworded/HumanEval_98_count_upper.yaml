name: HumanEval_98_count_upper
language: pl
prompt: "# Given a string s, count the number of uppercase vowels in even indices.\n\
  # For example:\n# >>> count_upper(\"aBCdEf\")\n# 1\n# >>> count_upper(\"abcdefg\"\
  )\n# 0\n# >>> count_upper(\"dBBE\")\n# 0\nsub count_upper {\n    my($s) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&count_upper;\n\
  \        if(eq_deeply($candidate->(\"aBCdEf\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abcdefg\"),0))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  dBBE\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"B\"),0)) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->(\"U\"),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  EEEE\"),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $count = 0;\n    for (my $i = 0; $i < length($s); $i++) {\n\
    \        if ($s[$i] eq \"A\" || $s[$i] eq \"a\") {\n            $count++;\n  \
    \      }\n        if ($s[$i] eq \"B\" || $s[$i] eq \"b\") {\n            $count++;\n\
    \        }\n        if ($s[$i] eq \"C\" || $s[$i] eq \"c\") {\n            $count++;\n\
    \        }\n        if ($s[$i] eq \"D\" || $s[$i] eq \"d\") {\n            $count++;\n\
    \        }\n        if ($s[$i] eq \"E\" || $s[$i] eq \"e\") {\n            $count++;\n\
    \        }\n        if ($s[$i] eq \"F\" || $s[$i] eq \"f\") {\n            $count++;\n\
    \        }\n        if ($s[$i] eq \"G\" || $s[$i] eq \"g\") {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    my $count = 0;\n    my $i = 0;\n\
    \    while($i < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c\
    \ eq \"A\" || $c eq \"E\" || $c eq \"I\" || $c eq \"O\" || $c eq \"U\") {\n  \
    \          $count++;\n        }\n        $i++;\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my $i = 0;\n    while ($i < length($s)) {\n        my $c\
    \ = substr($s, $i, 1);\n        if ($c eq \"A\" || $c eq \"E\" || $c eq \"I\"\
    \ || $c eq \"O\" || $c eq \"U\") {\n            $count++;\n        }\n       \
    \ $i++;\n    }\n    return $count;\n}", "    my $count = 0;\n    my $i = 0;\n\
    \    while($i < length($s)) {\n        if($s[i] eq 'A' .. $s[i] eq 'Z') {\n  \
    \          $count++;\n        }\n        $i++;\n    }\n    return $count;\n}",
  "    my $count = 0;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[i]\
    \ eq \"A\") {\n            $count++;\n        }\n        $i++;\n    }\n    return\
    \ $count;\n}", "    $s =~ tr/A-Z/0/;\n    $s =~ tr/[a-z]/0/;\n    $s =~ tr/0/A/;\n\
    \    return $s =~ tr/0/A/;\n}", "    my $count = 0;\n    my $i = 0;\n    my $j\
    \ = 0;\n    while($i < length($s)) {\n        my $c = substr($s, $i, 1);\n   \
    \     if($c eq \"A\") {\n            $count++;\n        }\n        elsif($c eq\
    \ \"a\") {\n            $count++;\n        }\n        elsif($c eq \"B\") {\n \
    \           $count++;\n        }\n        elsif($c eq \"b\") {\n            $count++;\n\
    \        }\n        elsif($c eq \"C\") {\n            $count++;\n        }\n \
    \       elsif($c eq \"c\") {\n            $count++;\n        }\n        elsif($c\
    \ eq \"D\") {\n            $count++;\n        }\n        elsif($c eq \"d\") {\n\
    \            $count++;\n        }\n        elsif($c eq \"E\") {\n            $count++;\n\
    \        }\n        elsif($c eq \"e\") {\n            $count++;\n        }\n \
    \       elsif($c eq \"F\") {\n            $count++;\n        }\n        elsif($c\
    \ eq \"f\") {\n            $count++;\n        }\n        elsif($c eq \"G\") {\n\
    \            $count++;\n        }\n        elsif($c eq \"g\") {\n            $count++;\n\
    \        }\n        elsif($c eq \"H\") {\n            $count++;\n        }\n \
    \       elsif($c eq \"h\") {\n            $count++;\n        }\n        elsif($c\
    \ eq \"I\") {\n            $count++;\n        }\n        elsif($c eq \"i\") {\n\
    \            $count++;\n        }\n        elsif($c eq \"J\") {\n            $count++;\n\
    \        }\n        elsif($c eq \"j\") {\n            $count++;\n        }\n \
    \       elsif($c eq \"K\") {\n            $count++;\n        }\n        elsif($c\
    \ eq \"k\") {\n            $count++;\n        }\n        elsif($c eq \"L\") {\n\
    \            $count++;\n        }\n        elsif($c eq \"l\") {\n            $count++;\n\
    \        }\n        elsif($c eq \"M\") {\n            $count++;\n        }\n \
    \       elsif($c eq \"m\") {\n            $count++;\n        }\n        elsif($c\
    \ eq \"N\") {\n            $count++;\n        }\n        elsif($c eq \"n\") {\n\
    \            $count++;\n        }\n        elsif($c eq \"O\") {\n            $count++;\n\
    \        }\n        elsif($c eq \"o\") {\n            $count++;\n        }\n \
    \       elsif", "    my $count = 0;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        my $c = substr($s, $i, 1);\n        if($c eq \"A\" || $c eq \"E\"\
    \ || $c eq \"I\" || $c eq \"O\" || $c eq \"U\") {\n            $count++;\n   \
    \     }\n        $i++;\n    }\n    return $count;\n}", "    my $count = 0;\n \
    \   my $i = 0;\n    my $j = 0;\n    while($i < length($s)) {\n        $j = 0;\n\
    \        while($j < length($s) && $s[i] eq $s[$j]) {\n            $j++;\n    \
    \    }\n        if($j % 2 == 0) {\n            $count++;\n        }\n        $i++;\n\
    \    }\n    return $count;\n}", "    my $count = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        my $c = substr($s, $i, 1);\n        if($c eq \"A\"\
    \ || $c eq \"E\" || $c eq \"I\" || $c eq \"O\" || $c eq \"U\") {\n           \
    \ $count++;\n        }\n        $i++;\n    }\n    return $count;\n}", "    $s\
    \ =~ tr/A-Z/a-z/;\n    $s =~ tr/aeiou/AEIOU/;\n    $s =~ tr/yY/Y/;\n    $s =~\
    \ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n \
    \   $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n\
    \    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY/Y/;\n    $s =~ tr/yY",
  "    my $count = 0;\n    my $i = 0;\n    while($i < length($s)) {\n        if($s[i]\
    \ eq \"A\" || $s[i] eq \"E\" || $s[i] eq \"I\" || $s[i] eq \"O\" || $s[i] eq \"\
    U\") {\n            $count++;\n        }\n        $i++;\n    }\n    return $count;\n\
    }", "    $s =~ tr/A-Z/a-z/;\n    $s =~ tr/aeiouAEIOU/AEIOU/;\n    return $s =~\
    \ tr/aeiouAEIOU/AEIOU/;\n}", "    my $count = 0;\n    my $i = 0;\n    while($i\
    \ < length($s)) {\n        if(substr($s, $i, 1) =~ /[AEIOU]/) {\n            $count++;\n\
    \        }\n        $i++;\n    }\n    return $count;\n}", "    my $count = 0;\n\
    \    my $i = 0;\n    while($i < length($s)) {\n        my $c = substr($s, $i,\
    \ 1);\n        if($c eq \"A\" || $c eq \"E\" || $c eq \"I\" || $c eq \"O\" ||\
    \ $c eq \"U\") {\n            $count++;\n        }\n        $i++;\n    }\n   \
    \ return $count;\n}", "    my $count = 0;\n    my $i = 0;\n    while($i < length($s))\
    \ {\n        my $c = substr($s, $i, 1);\n        if($c eq 'A' || $c eq 'E' ||\
    \ $c eq 'I' || $c eq 'O' || $c eq 'U') {\n            $count++;\n        }\n \
    \       $i++;\n    }\n    return $count;\n}", "    my $count = 0;\n    my $i =\
    \ 0;\n    while ($i < length($s)) {\n        my $c = substr($s, $i, 1);\n    \
    \    if ($c eq \"A\" || $c eq \"E\" || $c eq \"I\" || $c eq \"O\" || $c eq \"\
    U\") {\n            $count++;\n        }\n        $i++;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $i = 0;\n    while($i < length($s)) {\n      \
    \  my $c = substr($s, $i, 1);\n        if($c eq \"A\" || $c eq \"E\" || $c eq\
    \ \"I\" || $c eq \"O\" || $c eq \"U\") {\n            $count++;\n        }\n \
    \       $i++;\n    }\n    return $count;\n}", "    my $count = 0;\n    my $i =\
    \ 0;\n    while($i < length($s)) {\n        my $c = substr($s, $i, 1);\n     \
    \   if($c eq \"A\" || $c eq \"E\" || $c eq \"I\" || $c eq \"O\" || $c eq \"U\"\
    ) {\n            $count++;\n        }\n        $i++;\n    }\n    return $count;\n\
    }", "    my $count = 0;\n    my $i = 0;\n    while($i < length($s)) {\n      \
    \  my $c = substr($s, $i, 1);\n        if($c eq \"A\" || $c eq \"E\" || $c eq\
    \ \"I\" || $c eq \"O\" || $c eq \"U\") {\n            $count++;\n        }\n \
    \       $i++;\n    }\n    return $count;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

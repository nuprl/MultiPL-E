name: HumanEval_162_string_to_md5
language: pl
prompt: "# Given a string 'text', return its md5 hash equivalent string.\n# If 'text'\
  \ is an empty string, return undef.\n# >>> string_to_md5(\"Hello world\")\n# \"\
  3e25960a79dbc69b674cd4ec67a72c62\"\nsub string_to_md5 {\n    my($text) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&string_to_md5;\n\
  \        if(eq_deeply($candidate->(\"Hello world\"),\"3e25960a79dbc69b674cd4ec67a72c62\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  \"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
  \  if(eq_deeply($candidate->(\"A B C\"),\"0ef78513b0cb8cef12743f5aeb35f888\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  password\"),\"5f4dcc3b5aa765d61d8327deb882cf99\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    return undef unless defined $text;\n    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    return undef unless\
    \ defined $text;\n    return md5($text);\n}", "    return undef unless defined\
    \ $text;\n    my $md5 = Digest::MD5->new;\n    $md5->add($text);\n    return $md5->hexdigest;\n\
    }", "    return undef unless defined $text;\n    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    return undef unless\
    \ defined $text;\n    return md5($text);\n}", "    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    return undef unless\
    \ defined $text;\n    return md5($text);\n}", "    return undef unless defined\
    \ $text;\n    my $md5 = Digest::MD5->new;\n    $md5->add($text);\n    return $md5->hexdigest;\n\
    }", "    return undef unless defined $text;\n    return md5($text);\n}", "   \
    \ return undef unless defined $text;\n    $text =~ s/\\s+//g;\n    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    return undef unless\
    \ defined $text;\n    $text =~ s/\\s+//g;\n    return md5($text);\n}", "    my\
    \ $md5 = Digest::MD5->new;\n    $md5->add($text);\n    return $md5->hexdigest;\n\
    }", "    return undef unless defined $text;\n    my $md5 = Digest::MD5->new;\n\
    \    $md5->add($text);\n    return $md5->hexdigest;\n}", "    return undef unless\
    \ defined $text;\n    my $md5 = Digest::MD5->new;\n    $md5->add($text);\n   \
    \ return $md5->hexdigest;\n}", "    return undef unless defined $text;\n    my\
    \ $md5 = Digest::MD5->new;\n    $md5->add($text);\n    return $md5->hexdigest;\n\
    }", "    return undef unless defined $text;\n    return md5($text);\n}", "   \
    \ return undef unless defined $text;\n    return md5($text);\n}", "    my $md5\
    \ = Digest::MD5->new;\n    $md5->add($text);\n    return $md5->hexdigest;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

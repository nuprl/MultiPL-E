{
  "language": "ts",
  "name": "HumanEval_98_count_upper",
  "results": [
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt9l9cm4d.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt9l9cm4d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpz75ntr9m.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz75ntr9m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp0hlbpsyr.ts(6,27): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i += 2) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"A\" || s[i] === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wOrld\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n0\n1\n0\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === 5);\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ') === count_upper('aBcDeFgHiJk\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpqv6xmwx1.ts(22,83): error TS1002: Unterminated string literal.\n../../../../tmp/tmpqv6xmwx1.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmpqv6xmwx1.ts(23,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"A\" || s[i] === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\nconsole.log(count_upper(\"abcdefghijklmnopqrstuvwxyz\"));\nconsole.log(count_upper(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n0\n5\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"hELlo\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLo\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp1a7gz_o0.js:47:12)\n    at Object.<anonymous> (/tmp/tmp1a7gz_o0.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n1\n3\n2\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && isUpper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpewdbm3l4.ts(6,28): error TS2304: Cannot find name 'isUpper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"Hello World!\"));\nconsole.log(count_upper(\"Hello World!!\"));\nconsole.log(count_upper(\"Hello World!!!\"));\nconsole.log(count_upper(\"Hello World!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"));\nconsole.log(count_upper(\"Hello World!!!!!!!!!!!!!!!!!!!!!!!!\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpfyk9v5l5.ts(41,61): error TS1002: Unterminated string literal.\n../../../../tmp/tmpfyk9v5l5.ts(42,1): error TS1005: ',' expected.\n../../../../tmp/tmpfyk9v5l5.ts(42,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2dhzsx0r.js:16:12)\n    at Object.<anonymous> (/tmp/tmp2dhzsx0r.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpx5gjk5w3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpx5gjk5w3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt9l9cm4d.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt9l9cm4d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i])) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp482wxsr9.ts(6,24): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('ABCDE'));\nconsole.log(count_upper('abcde'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp6iyv0nqo.ts(43,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hElLo\"));\nconsole.log(count_upper(\"wOrLd\"));\nconsole.log(count_upper(\"HeLlO\"));\nconsole.log(count_upper(\"WoRlD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpjbungzxu.js:23:12)\n    at Object.<anonymous> (/tmp/tmpjbungzxu.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n3\n0\n0\n3\n3\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt9l9cm4d.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt9l9cm4d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp0hlbpsyr.ts(6,27): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpz75ntr9m.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz75ntr9m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('AEIOU'));\nconsole.log(count_upper('aeiou'));\nconsole.log(count_upper('AEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOU'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOUaeiou'));\nconsole.log(count_upper('AEIOUaeiouAEIOUaeiouAEIOUaei\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmps9joq4gi.ts(28,54): error TS1002: Unterminated string literal.\n../../../../tmp/tmps9joq4gi.ts(29,1): error TS1005: ',' expected.\n../../../../tmp/tmps9joq4gi.ts(29,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt9l9cm4d.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt9l9cm4d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpy7ijvgy6.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy7ijvgy6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n0\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp3a_4r6x0.js:16:12)\n    at Object.<anonymous> (/tmp/tmp3a_4r6x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp3a_4r6x0.js:16:12)\n    at Object.<anonymous> (/tmp/tmp3a_4r6x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\")); // 5\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpjlo6apt4.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmpjlo6apt4.ts(23,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i])) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp482wxsr9.ts(6,24): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 10);\nconsole.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 11);\nconsole.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\nconsole.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 11);\nconsole.log(count_upper('aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\nconsole.log(count_upper('aAaBbCcDd\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpacw6fnnc.ts(21,35): error TS1002: Unterminated string literal.\n../../../../tmp/tmpacw6fnnc.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpacw6fnnc.ts(22,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpx5gjk5w3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpx5gjk5w3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"A\" || s[i] === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n      if (i % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"ABCDE\"));\nconsole.log(count_upper(\"abcde\"));\nconsole.log(count_upper(\"ABcde\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "2\n0\n1\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpx5gjk5w3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpx5gjk5w3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 10);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 10);\nconsole.log(count_upper('AaBbCcDdE\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpsdwtkogg.ts(21,35): error TS1002: Unterminated string literal.\n../../../../tmp/tmpsdwtkogg.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmpsdwtkogg.ts(22,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i])) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp482wxsr9.ts(6,24): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"Hi\")); // 0\nconsole.log(count_upper(\"HELlo\")); // 2\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp13p25r5d.ts(39,26): error TS1002: Unterminated string literal.\n../../../../tmp/tmp13p25r5d.ts(40,1): error TS1005: ',' expected.\n../../../../tmp/tmp13p25r5d.ts(40,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333608
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeF\"));\nconsole.log(count_upper(\"aBcDeFg\"));\nconsole.log(count_upper(\"aBcDeFgH\"));\nconsole.log(count_upper(\"aBcDeFgHiJ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkL\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoP\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuV\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpcb7hlokw.js:23:12)\n    at Object.<anonymous> (/tmp/tmpcb7hlokw.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpc12livw6.js:19:12)\n    at Object.<anonymous> (/tmp/tmpc12livw6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n2\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp5ump220l.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5ump220l.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp5ump220l.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5ump220l.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wOrld\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpvjznwysz.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvjznwysz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n0\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp0hlbpsyr.ts(6,27): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp5glisj7t.js:16:12)\n    at Object.<anonymous> (/tmp/tmp5glisj7t.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"abcdefg\"));\nconsole.log(count_upper(\"ABCDEFG\"));\nconsole.log(count_upper(\"AbCdEfG\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp38v0wm16.js:18:12)\n    at Object.<anonymous> (/tmp/tmp38v0wm16.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n4\n4\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp8chemod2.js:16:12)\n    at Object.<anonymous> (/tmp/tmp8chemod2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpy7ijvgy6.js:19:12)\n    at Object.<anonymous> (/tmp/tmpy7ijvgy6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n0\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpx5gjk5w3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpx5gjk5w3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"abcdefg\"));\nconsole.log(count_upper(\"ABCDEFG\"));\nconsole.log(count_upper(\"Abcdefg\"));\nconsole.log(count_upper(\"AbCdEfG\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpeea33hw3.js:19:12)\n    at Object.<anonymous> (/tmp/tmpeea33hw3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n4\n1\n4\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpx5gjk5w3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpx5gjk5w3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hElLo\"));\nconsole.log(count_upper(\"wOrLd\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpakgz7ds2.js:21:12)\n    at Object.<anonymous> (/tmp/tmpakgz7ds2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n3\n0\n0\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpx5gjk5w3.js:18:12)\n    at Object.<anonymous> (/tmp/tmpx5gjk5w3.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp30_e0jli.js:18:12)\n    at Object.<anonymous> (/tmp/tmp30_e0jli.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i])) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp482wxsr9.ts(6,24): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] == \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('Apples and Bananas'));\nconsole.log(count_upper('Pears and Oranges'));\nconsole.log(count_upper('Cucumbers and Tomatoes'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "1\n1\n0\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp0hlbpsyr.ts(6,27): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpeec22ybd.js:18:12)\n    at Object.<anonymous> (/tmp/tmpeec22ybd.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp8chemod2.js:16:12)\n    at Object.<anonymous> (/tmp/tmp8chemod2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wOrld\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpvjznwysz.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvjznwysz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n0\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"HELLO WORLD\"));\nconsole.log(count_upper(\"HELLO world\"));\nconsole.log(count_upper(\"hello WORLD\"));\nconsole.log(count_upper(\"hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpazt_hssk.js:22:12)\n    at Object.<anonymous> (/tmp/tmpazt_hssk.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n6\n3\n3\n1\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpz75ntr9m.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz75ntr9m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"wORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpc12livw6.js:19:12)\n    at Object.<anonymous> (/tmp/tmpc12livw6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n2\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('AEIOU'));\nconsole.log(count_upper('AaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUuAaEeIiOoUu'));\nconsole.log(count_upper('AaEeIiOoUuAaEeIiOoUuAaEeIi\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp9tf1apzm.ts(23,52): error TS1002: Unterminated string literal.\n../../../../tmp/tmp9tf1apzm.ts(24,1): error TS1005: ',' expected.\n../../../../tmp/tmp9tf1apzm.ts(24,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"Hi\")); // 0\nconsole.log(count_upper(\"hEllo\")); // 2\nconsole.log(count_upper(\"hEllO\")); // 3\nconsole.log(count_upper(\"wOrLd\")); // 1\nconsole.log(count_upper(\"ThIs Is A VeRy LoNg SenTeNcE\")); // 6\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp9rtus8zq.js:21:12)\n    at Object.<anonymous> (/tmp/tmp9rtus8zq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n0\n1\n0\n8\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n      if (i % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper('Apples and Oranges'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "1\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmptywfmfe3.ts(6,27): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n",
      "timestamp": 1660333612
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello World\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp8chemod2.js:16:12)\n    at Object.<anonymous> (/tmp/tmp8chemod2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_vowel(s[i])) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpefdtkupb.ts(6,24): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333612
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && /[AEIOU]/.test(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333612
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello World\")); // 1\nconsole.log(count_upper(\"Hello World!\")); // 2\nconsole.log(count_upper(\"HELLO WORLD\")); // 5\nconsole.log(count_upper(\"HELLO WORLD!\")); // 6\nconsole.log(count_upper(\"hello world\")); // 0\nconsole.log(count_upper(\"hello world!\")); // 0\nconsole.log(count_upper(\"\")); // 0\nconsole.log(count_upper(\"a\")); // 0\nconsole.log(count_upper(\"A\")); // 1\nconsole.log(count_upper(\"b\")); // 0\nconsole.log(count_upper(\"B\")); // 1\nconsole.log(count_upper(\"c\")); // 0\nconsole.log(count_upper(\"C\")); // 1\nconsole.log(count_upper(\"d\")); // 0\nconsole.log(count_upper(\"D\")); // 1\nconsole.log(count_upper(\"e\")); // 0\nconsole.log(count_upper(\"E\")); // 1\nconsole.log(count_upper(\"f\")); // 0\nconsole.log(count_upper(\"F\")); // 1\nconsole.log(count_upper(\"g\")); // 0\nconsole.log(count_upper(\"G\")); // 1\nconsole.log(count_upper(\"h\")); // 0\nconsole.log(count_upper(\"H\")); // 1\nconsole.log(count_upper(\"i\")); // 0\nconsole.log(count_upper(\"I\")); // 1\nconsole.log(count_upper(\"j\")); // 0\nconsole.log(count_upper(\"J\")); // 1\nconsole.log(count_upper(\"k\")); // 0\nconsole.log(count_upper(\"K\")); // 1\nconsole.log(count_upper(\"l\")); // 0\nconsole.log(count_upper(\"L\")); // 1\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpiptsn461.js:46:12)\n    at Object.<anonymous> (/tmp/tmpiptsn461.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n2\n6\n6\n0\n0\n0\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n",
      "timestamp": 1660333612
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"HELlo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp_5w12vh5.js:18:12)\n    at Object.<anonymous> (/tmp/tmp_5w12vh5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"hElLo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp2ixs2jyn.js:18:12)\n    at Object.<anonymous> (/tmp/tmp2ixs2jyn.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n3\n0\n",
      "timestamp": 1660333612
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt9l9cm4d.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt9l9cm4d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_vowel(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp63aqm1t8.ts(6,28): error TS2304: Cannot find name 'is_vowel'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpw5jq1z5i.js:22:12)\n    at Object.<anonymous> (/tmp/tmpw5jq1z5i.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n2\n2\n2\n2\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hello\"));\nconsole.log(count_upper(\"world\"));\nconsole.log(count_upper(\"hEllo\"));\nconsole.log(count_upper(\"wOrld\"));\nconsole.log(count_upper(\"HeLlO\"));\nconsole.log(count_upper(\"WoRlD\"));\nconsole.log(count_upper(\"hElLo\"));\nconsole.log(count_upper(\"wOrLd\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpqtrgfvt4.js:27:12)\n    at Object.<anonymous> (/tmp/tmpqtrgfvt4.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n3\n0\n0\n0\n0\n3\n3\n0\n0\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp5ump220l.js:15:12)\n    at Object.<anonymous> (/tmp/tmp5ump220l.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"World\")); // 0\nconsole.log(count_upper(\"HELLO\")); // 2\nconsole.log(count_upper(\"wOrld\")); // 1\nconsole.log(count_upper(\"\")); // 0\nconsole.log(count_upper(\"a\")); // 0\nconsole.log(count_upper(\"A\")); // 1\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"aBcDeFg\")); // 2\nconsole.log(count_upper(\"AbCdEfG12345\")); // 3\nconsole.log(count_upper(\"aBcDeFg12345\")); // 2\nconsole.log(count_upper(\"AbCdEfG123456789\")); // 3\nconsole.log(count_upper(\"aBcDeFg123456789\")); // 2\nconsole.log(count_upper(\"AbCdEfG123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100\")); // 3\nconsole.log(count_upper(\"aBcDeFg123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100\")); // 2\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp98t7ubu3.js:30:12)\n    at Object.<anonymous> (/tmp/tmp98t7ubu3.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n0\n0\n0\n1\n4\n0\n6\n2\n8\n4\n100\n96\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"abcdefg\")); // 0\nconsole.log(count_upper(\"ABCDEFG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdEfG\")); // 3\nconsole.log(count_upper(\"AbCdE\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpti67m_ee.ts(36,31): error TS1002: Unterminated string literal.\n../../../../tmp/tmpti67m_ee.ts(37,1): error TS1005: ',' expected.\n../../../../tmp/tmpti67m_ee.ts(37,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333612
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hElLo\"));\nconsole.log(count_upper(\"wOrLd\"));\nconsole.log(count_upper(\"HeLlO\"));\nconsole.log(count_upper(\"WoRlD\"));\nconsole.log(count_upper(\"\"));\nconsole.log(count_upper(\"h\"));\nconsole.log(count_upper(\"H\"));\nconsole.log(count_upper(\"e\"));\nconsole.log(count_upper(\"E\"));\nconsole.log(count_upper(\"l\"));\nconsole.log(count_upper(\"L\"));\nconsole.log(count_upper(\"o\"));\nconsole.log(count_upper(\"O\"));\nconsole.log(count_upper(\"w\"));\nconsole.log(count_upper(\"W\"));\nconsole.log(count_upper(\"r\"));\nconsole.log(count_upper(\"R\"));\nconsole.log(count_upper(\"d\"));\nconsole.log(count_upper(\"D\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpryen_aql.js:38:12)\n    at Object.<anonymous> (/tmp/tmpryen_aql.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n3\n0\n0\n3\n3\n0\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \"A\" || s[i] === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n      if (i % 2 === 0) {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"AEIOU\"));\nconsole.log(count_upper(\"ABCDE\"));\nconsole.log(count_upper(\"aBcDe\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "3\n2\n0\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"HELLO WORLD\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmppvde5m1q.js:19:12)\n    at Object.<anonymous> (/tmp/tmppvde5m1q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n3\n6\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hEllo\"));\nconsole.log(count_upper(\"wORld\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp3arft6b6.js:21:12)\n    at Object.<anonymous> (/tmp/tmp3arft6b6.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n3\n0\n1\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"H\"));\nconsole.log(count_upper(\"\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpvf733pyr.js:19:12)\n    at Object.<anonymous> (/tmp/tmpvf733pyr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n0\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt9l9cm4d.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt9l9cm4d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpeec22ybd.js:18:12)\n    at Object.<anonymous> (/tmp/tmpeec22ybd.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333609
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('Hello'));\nconsole.log(count_upper('World'));\nconsole.log(count_upper('HELLO'));\nconsole.log(count_upper('WORLD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\nconsole.log(count_upper('hElLo'));\nconsole.log(count_upper('wOrLd'));\nconsole.log(count_upper('HeLlO'));\nconsole.log(count_upper('WoRlD'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n1\n0\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"A\" || s[i] === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] === \"U\") {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('AEIOU'));\nconsole.log(count_upper('AaIiOoUu'));\nconsole.log(count_upper('AaIiOoUuEe'));\nconsole.log(count_upper('AaIiOoUuEeOo'));\nconsole.log(count_upper('AaIiOoUuEeOoAaIiOoUuEeOo'));\nconsole.log(count_upper('AaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOo'));\nconsole.log(count_upper('AaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEeOoAaIiOoUuEe\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4jjsx6g9.ts(21,252): error TS1002: Unterminated string literal.\n../../../../tmp/tmp4jjsx6g9.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmp4jjsx6g9.ts(22,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpwogf1bfa.js:47:12)\n    at Object.<anonymous> (/tmp/tmpwogf1bfa.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"Heeololeo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpt9l9cm4d.js:18:12)\n    at Object.<anonymous> (/tmp/tmpt9l9cm4d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('ABCDE'));\nconsole.log(count_upper('aBcDe'));\nconsole.log(count_upper('abcdE'));\nconsole.log(count_upper('abcde'));\nconsole.log(count_upper('ABCDEFG'));\nconsole.log(count_upper('ABCDEFGh'));\nconsole.log(count_upper('ABCDEFGhI'));\nconsole.log(count_upper('ABCDEFGhIJ'));\nconsole.log(count_upper('ABCDEFGhIJK'));\nconsole.log(count_upper('ABCDEFGhIJKL'));\nconsole.log(count_upper('ABCDEFGhIJKLM'));\nconsole.log(count_upper('ABCDEFGhIJKLMN'));\nconsole.log(count_upper('ABCDEFGhIJKLMNO'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOP'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQ'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQR'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRS'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRST'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRSTU'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRSTUV'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOPQRSTUVW'));\nconsole.log(count_upper('ABCDEFGhIJKLMNOP\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp4k1zvygc.ts(36,42): error TS1002: Unterminated string literal.\n../../../../tmp/tmp4k1zvygc.ts(37,1): error TS1005: ',' expected.\n../../../../tmp/tmp4k1zvygc.ts(37,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeF\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\nconsole.log(count_upper(\"aBc\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpsqhaullp.ts(27,29): error TS1002: Unterminated string literal.\n../../../../tmp/tmpsqhaullp.ts(28,1): error TS1005: ',' expected.\n../../../../tmp/tmpsqhaullp.ts(28,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"Hello World!\"));\nconsole.log(count_upper(\"Hello World!!\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpafujk5ol.js:18:12)\n    at Object.<anonymous> (/tmp/tmpafujk5ol.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n2\n3\n",
      "timestamp": 1660333613
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"Hi\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp82uwxpvh.js:18:12)\n    at Object.<anonymous> (/tmp/tmp82uwxpvh.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'));\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 5);\nconsole.log(count_upper('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') === 5);\nconsole.log(count_upper('AaBbCcDdE\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmplon2g5y1.ts(21,35): error TS1002: Unterminated string literal.\n../../../../tmp/tmplon2g5y1.ts(22,1): error TS1005: ',' expected.\n../../../../tmp/tmplon2g5y1.ts(22,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333614
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\")); // 1\nconsole.log(count_upper(\"Hi\")); // 0\nconsole.log(count_upper(\"HELlo\")); // 2\nconsole.log(count_upper(\"HELloO\")); // 3\nconsole.log(count_upper(\"HELloOo\")); // 4\nconsole.log(count_upper(\"HELloOoO\")); // 5\nconsole.log(count_upper(\"HELloOoOo\")); // 6\nconsole.log(count_upper(\"HELloOoOoO\")); // 7\nconsole.log(count_upper(\"HELloOoOoOo\")); // 8\nconsole.log(count_upper(\"HELloOoOoOoO\")); // 9\nconsole.log(count_upper(\"HELloOoOoOoOo\")); // 10\nconsole.log(count_upper(\"HELloOoOoOoOoO\")); // 11\nconsole.log(count_upper(\"HELloOoOoOoOoOo\")); // 12\nconsole.log(count_upper(\"HELloOoOoOoOoOoO\")); // 13\nconsole.log(count_upper(\"HELloOoOoOoOoOoOo\")); // 14\nconsole.log(count_upper(\"HELloOoOoOoOoOoOoO\")); // 15\nconsole.log(count_upper(\"HELloOoOoOoOoOoOoOo\")); // 16\nconsole.log(count_upper(\"HELloOoOoOoOoOoOoOoO\")); // 17\nconsole.log(count_upper(\"HELloOoOoOoOoOoOoOoOo\")); // 18\nconsole.log(count_upper\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpxxqemfxy.ts(33,1): error TS1005: ',' expected.\n../../../../tmp/tmpxxqemfxy.ts(33,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i % 2 === 0 && is_upper(s[i])) {\n      count++;\n    }\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmp482wxsr9.ts(6,24): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"WORLD\"));\nconsole.log(count_upper(\"hELLO\"));\nconsole.log(count_upper(\"wORLD\"));\nconsole.log(count_upper(\"HeLLo\"));\nconsole.log(count_upper(\"WoRLD\"));\nconsole.log(count_upper(\"\"));\nconsole.log(count_upper(\"a\"));\nconsole.log(count_upper(\"A\"));\nconsole.log(count_upper(\"b\"));\nconsole.log(count_upper(\"B\"));\nconsole.log(count_upper(\"c\"));\nconsole.log(count_upper(\"C\"));\nconsole.log(count_upper(\"d\"));\nconsole.log(count_upper(\"D\"));\nconsole.log(count_upper(\"e\"));\nconsole.log(count_upper(\"E\"));\nconsole.log(count_upper(\"f\"));\nconsole.log(count_upper(\"F\"));\nconsole.log(count_upper(\"g\"));\nconsole.log(count_upper(\"G\"));\nconsole.log(count_upper(\"h\"));\nconsole.log(count_upper(\"H\"));\nconsole.log(count_upper(\"i\"));\nconsole.log(count_upper(\"I\"));\nconsole.log(count_upper(\"j\"));\nconsole.log(count_upper(\"J\"));\nconsole.log(count_upper(\"k\"));\nconsole.log(count_upper(\"K\"));\nconsole.log(count_upper(\"l\"));\nconsole.log(count_upper(\"L\"));\nconsole.log(count_upper(\"m\"));\nconsole.log(count_upper(\"M\"));\nconsole.log(count_upper(\"n\"));\nconsole\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmph1opmuoj.js:52:12)\n    at Object.<anonymous> (/tmp/tmph1opmuoj.js:60:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n3\n3\n2\n2\n2\n3\n0\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"abcdEfghi\"));\nconsole.log(count_upper(\"abcdEfghiJKL\"));\nconsole.log(count_upper(\"abcdEfghiJKLmnopqrstuvwxyz\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpv26ak4i9.js:18:12)\n    at Object.<anonymous> (/tmp/tmpv26ak4i9.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n2\n2\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] == \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJ\"));\nconsole.log(count_upper(\"aBcDeFgHiJk\"));\nconsole.log(count_upper(\"aBcDeFgHiJkl\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLm\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoP\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRs\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTu\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVw\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXy\"));\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello World\"));\nconsole.log(count_upper(\"Hello World!\"));\nconsole.log(count_upper(\"Hello World!!\"));\nconsole.log(count_upper(\"Hello World!!!\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpkuc06a7x.js:19:12)\n    at Object.<anonymous> (/tmp/tmpkuc06a7x.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "2\n2\n3\n3\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp3a_4r6x0.js:16:12)\n    at Object.<anonymous> (/tmp/tmp3a_4r6x0.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"hello\"));\nconsole.log(count_upper(\"HELLO\"));\nconsole.log(count_upper(\"hElLo\"));\nconsole.log(count_upper(\"hEllo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp4nr2dl2w.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4nr2dl2w.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "0\n3\n0\n0\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] == \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333609
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U') {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660333613
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U')) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('HELLO'));\nconsole.log(count_upper('HELLO WORLD'));\nconsole.log(count_upper('HELLO WORLD!'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "1\n1\n1\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"Hi\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"HELlo\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmp9rxopxbi.js:47:12)\n    at Object.<anonymous> (/tmp/tmp9rxopxbi.js:55:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && isUpper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpewdbm3l4.ts(6,28): error TS2304: Cannot find name 'isUpper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] == \"A\" || s[i] == \"E\" || s[i] == \"I\" || s[i] == \"O\" || s[i] == \"U\") {\n            if (i % 2 == 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "5\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 0,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'A' || s[i] === 'E' || s[i] === 'I' || s[i] === 'O' || s[i] === 'U') {\n            if (i % 2 === 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper('aBcDeFgHiJkLmNoPqRsTuVwXyZ'));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "OK",
      "stderr": "",
      "stdout": "0\n",
      "timestamp": 1660333615
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\")); // 5\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toLowerCase().toUpperCase().toLowerCase().toUpperCase())); // 13\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase())); // 0\nconsole.log(count_upper(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\".toUpperCase().toLowerCase().toUpperCase().toLowerCase\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpjlo6apt4.ts(23,1): error TS1005: ',' expected.\n../../../../tmp/tmpjlo6apt4.ts(23,9): error TS1005: ',' expected.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpz75ntr9m.js:15:12)\n    at Object.<anonymous> (/tmp/tmpz75ntr9m.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && s[i] === s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpysyoqkul.js:15:12)\n    at Object.<anonymous> (/tmp/tmpysyoqkul.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "",
      "timestamp": 1660333605
    },
    {
      "exit_code": 2,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 === 0 && is_upper(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "SyntaxError",
      "stderr": "",
      "stdout": "../../../../tmp/tmpzuszjur8.ts(6,28): error TS2304: Cannot find name 'is_upper'.\n",
      "timestamp": 1660333605
    },
    {
      "exit_code": 1,
      "program": "//Given a string s, count the number of uppercase vowels in even indices.\n// For example:\nfunction count_upper(s: string): number {\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 && s[i] == s[i].toUpperCase()) {\n            count++;\n        }\n    }\n    return count;\n}\n\nconsole.log(count_upper(\"Hello\"));\nconsole.log(count_upper(\"World\"));\nconsole.log(count_upper(\"HELlo\"));\nconsole.log(count_upper(\"wORld\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"EEEE\"),2);\n}\n\ntest();",
      "status": "AssertionError",
      "stderr": "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely deep-equal\n\n1\n    at test (/tmp/tmpaz2ycif_.js:19:12)\n    at Object.<anonymous> (/tmp/tmpaz2ycif_.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47 {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n",
      "stdout": "1\n1\n2\n1\n",
      "timestamp": 1660333615
    }
  ]
}
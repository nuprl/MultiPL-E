name: HumanEval_124_valid_date
language: rkt
prompt: "#lang racket\n\n;; You have to write a function which validates a given date\
  \ string and\n;; returns True if the date is valid otherwise False.\n;; The date\
  \ is valid if all of the following rules are satisfied:\n;; 1. The date string is\
  \ not empty.\n;; 2. The number of days is not less than 1 or higher than 31 days\
  \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
  \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or\
  \ higher than 29 for the month 2.\n;; 3. The months should not be less than 1 or\
  \ higher than 12.\n;; 4. The date should be in the format: mm-dd-yyyy\n;; for example:\
  \ \n;; valid_date('03-11-2000') => True\n;; valid_date('15-01-2012') => False\n\
  ;; valid_date('04-0-2040') => False\n;; valid_date('06-04-2020') => True\n;; valid_date('06/04/2020')\
  \ => False\n(define (valid_date date)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate valid_date))\n\
  \    (check-equal? (candidate \"03-11-2000\") #t)\n    (check-equal? (candidate\
  \ \"15-01-2012\") #f)\n    (check-equal? (candidate \"04-0-2040\") #f)\n    (check-equal?\
  \ (candidate \"06-04-2020\") #t)\n    (check-equal? (candidate \"01-01-2007\") #t)\n\
  \    (check-equal? (candidate \"03-32-2011\") #f)\n    (check-equal? (candidate\
  \ \"\") #f)\n    (check-equal? (candidate \"04-31-3000\") #f)\n    (check-equal?\
  \ (candidate \"06-06-2005\") #t)\n    (check-equal? (candidate \"21-31-2000\") #f)\n\
  \    (check-equal? (candidate \"04-12-2003\") #t)\n    (check-equal? (candidate\
  \ \"04122003\") #f)\n    (check-equal? (candidate \"20030412\") #f)\n    (check-equal?\
  \ (candidate \"2003-04\") #f)\n    (check-equal? (candidate \"2003-04-12\") #f)\n\
  \    (check-equal? (candidate \"04-2003\") #f)\n))\n\n(test-humaneval)"
completions: ["  (cond [(not (string? date)) false]\n        [(< 1 (string-length\
    \ date)) false]\n        [(< 1 (string-to-number (substring date 0 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 2 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 3 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 4 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 5 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 7 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 8 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 10 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 12 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 13 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 14 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 16 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 17 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 19 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 20 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 21 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 23 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 24 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 25 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 26 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 28 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 29 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring date 30 (string-length\
    \ date) 2)) false]\n        [(< 1 (string-to-number (substring ", "  (and (not\
    \ (empty? date))\n       (not (< 1 (string-length (substring date 1 2)))\n   \
    \        (> 31 (string-length (substring date (+ 2 1) 2)))\n           (> 30 (string-length\
    \ (substring date (+ 2 3) 2)))\n           (> 29 (string-length (substring date\
    \ (+ 2 3) 2)))\n           (not (< 1 (string-length (substring date (+ 2 1) 2)))\n\
    \           (not (> 12 (string-length (substring date (+ 2 2) 2)))\n         \
    \  (string= (substring date 2 2) '-')\n           (string= (substring date (+\
    \ 2 2) 2) '-'\n           (string= (substring date (+ 2 3) 2) '-'\n          \
    \ (string= (substring date (+ 2 4) 2) '-'\n           (string= (substring date\
    \ (+ 2 5) 2) '-'\n           (string= (substring date (+ 2 7) 2) '-'\n       \
    \    (string= (substring date (+ 2 8) 2) '-'\n           (string= (substring date\
    \ (+ 2 9) 2) '-'\n           (string= (substring date (+ 2 10) 2) '-'\n      \
    \     (string= (substring date (+ 2 11) 2) '-'\n           (string= (substring\
    \ date (+ 2 12) 2) '-'\n           (string= (substring date (+ 2 13) 2) '-'\n\
    \           (string= (substring date (+ 2 14) 2) '-'\n           (string= (substring\
    \ date (+ 2 15) 2) '-'\n           (string= (substring date (+ 2 16) 2) '-'\n\
    \           (string= (substring date (+ 2 17) 2) '-'\n           (string= (substring\
    \ date (+ 2 18) 2) '-'\n           (string= (substring date (+ 2 19) 2) '-'\n\
    \           (string= (substring date (+ 2 20) 2) '-'\n           (string= (substring\
    \ date (+ 2 21) 2) '-'\n           (string= (substring date (+ 2 22) 2) '-'\n\
    \           (string= (substring date (+ 2 23) 2) '-'\n           (string= (substring\
    \ date (+ 2 24) 2) '-'\n           (string= (substring date (+ 2 25) 2) '-'\n\
    \           (string= (substring date (+ 2 26) 2) '-'\n           (string= (substring\
    \ date (+ 2 27) 2) '-'\n           (string= (substring date (+ 2 28) 2) '-'\n\
    \           (string= (substring date (+ 2 29) 2) '-'\n           (", "  (cond\n\
    \    [(empty? date) #false]\n    [(and (number? (string->number (car date))) (string->number\
    \ (cadr date)) (string->number (caddr date)))\n     (and (< 1 (string->number\
    \ (cadr date))) (< 31 (string->number (caddr date))) (< 1 (string->number (caddr\
    \ date))) (< 30 (string->number (cadr date))) (< 12 (string->number (car date))))]\n\
    \    [(and (< 1 (string->number (cadr date))) (< 29 (string->number (cadr date))))\n\
    \     (and (< 1 (string->number (car date))) (< 12 (string->number (car date))))]\n\
    \    [(and (< 1 (string->number (cadr date))) (< 12 (string->number (car date))))\n\
    \     (and (< 1 (string->number (car date))) (< 31 (string->number (car date)))\
    \ (< 30 (string->number (car date))) (< 29 (string->number (car date))))]\n  \
    \  [(and (< 1 (string->number (cadr date))) (< 31 (string->number (cadr date))))\n\
    \     (and (< 1 (string->number (caddr date))) (< 30 (string->number (caddr date)))\
    \ (< 29 (string->number (caddr date))))]\n    [(and (< 1 (string->number (cadr\
    \ date))) (< 30 (string->number (cadr date))))\n     (and (< 1 (string->number\
    \ (caddr date))) (< 29 (string->number (caddr date))))]\n    [(and (< 1 (string->number\
    \ (cadr date))) (< 29 (string->number (cadr date))))\n     (and (< 1 (string->number\
    \ (caddr date))) (< 12 (string->number (caddr date))))]\n    [(and (< 1 (string->number\
    \ (cadr date))) (< 30 (string->number (cadr date))))\n     (and (< 1 (string->number\
    \ (caddr date))) (< 12 (string->number (caddr date))))]\n    [(and (< 1 (string->number\
    \ (cadr date))) (< 29 (string->number (cadr date))))\n     (and (< 1 (string->number\
    \ (caddr date))) (< 12 (string->number (caddr date))))]\n    [(and (< 1 (string->number\
    \ (cadr date))) (< 12 (string->number (cadr date))))\n     (and (< 1 (string->number\
    \ (cadd", "  (cond\n    ((null? date) False)\n    ((< (length date) (* 2 12))\
    \ False)\n    ((< (length (substring date 0 2)) 1) False)\n    ((< (length (substring\
    \ date 2 4)) 1) False)\n    ((< (length (substring date 4 6)) 1) False)\n    ((<\
    \ (length (substring date 6 8)) 1) False)\n    ((< (length (substring date 8 10))\
    \ 1) False)\n    ((< (length (substring date 10 12)) 1) False)\n    ((< 1 (substring\
    \ date 0 2)) False)\n    ((< 1 (substring date 2 4)) False)\n    ((< 1 (substring\
    \ date 4 6)) False)\n    ((< 1 (substring date 6 8)) False)\n    ((< 1 (substring\
    \ date 8 10)) False)\n    ((< 1 (substring date 10 12)) False)\n    ((< 1 (substring\
    \ date 12 14)) False)\n    ((< 1 (substring date 14 16)) False)\n    ((< 1 (substring\
    \ date 16 18)) False)\n    ((< 1 (substring date 18 20)) False)\n    ((< 1 (substring\
    \ date 20 22)) False)\n    ((< 1 (substring date 22 24)) False)\n    ((< 1 (substring\
    \ date 24 26)) False)\n    ((< 1 (substring date 26 28)) False)\n    ((< 1 (substring\
    \ date 28 30)) False)\n    ((< 1 (substring date 30 32)) False)\n    ((< 1 (substring\
    \ date 32 34)) False)\n    ((< 1 (substring date 34 36)) False)\n    ((< 1 (substring\
    \ date 36 38)) False)\n    ((< 1 (substring date 38 40)) False)\n    ((< 1 (substring\
    \ date 40 42)) False)\n    ((< 1 (substring date 42 44)) False)\n    ((< 1 (substring\
    \ date 44 46)) False)\n    ((< 1 (substring date 46 48)) False)\n    ((< 1 (substring\
    \ date 48 50)) False)\n    ((< 1 (substring date 50 52)) False)\n    ((< 1 (substring\
    \ date 52 54)) False)\n    ((< 1 (substring date 54 56)) False)\n    ((< 1 (substring\
    \ date 56 58)) False)\n    ((< 1 (substring date 58 60)) False)\n    ((< 1 (substring\
    \ date 60 62)) False)\n    ((< 1 (substring date 62 64)) False)\n    ((< 1 (substring\
    \ date 64 66)) False)\n    ((< 1 (substring date 66 68)) False)\n    ((< 1 (substring\
    \ date 68 70)) False)\n    ((< 1 (substring date 70 72)) False)\n    ((< ", " \
    \ (cond\n    ((null? date) #t)\n    ((string-empty? date) #t)\n    ((< (string-length\
    \ (symbol->string date)) 1) #t)\n    ((< (< (string->number (symbol->string date))\
    \ 12) #t)\n    ((< (< (string->number (symbol->string date)) 31) #t)\n    ((<\
    \ (< (string->number (symbol->string date)) 30) #t)\n    ((< (< (string->number\
    \ (symbol->string date)) 29) #t)\n    ((< (< (string->number (symbol->string date))\
    \ 12) #t)\n    ((< (< (string->number (symbol->string date)) 12) #t)\n    ((<\
    \ (< (string->number (symbol->string date)) 31)) #t)\n    ((< (< (string->number\
    \ (symbol->string date)) 31)) #t)\n    ((< (< (string->number (symbol->string\
    \ date)) 30) #t)\n    ((< (< (string->number (symbol->string date)) 30) #t)\n\
    \    ((< (< (string->number (symbol->string date)) 29) #t)\n    ((< (< (string->number\
    \ (symbol->string date)) 12)) #t)\n    ((< (< (string->number (symbol->string\
    \ date)) 12)) #t)\n    ((< (< (string->number (symbol->string date)) 31)) #t)\n\
    \    ((< (< (string->number (symbol->string date)) 31)) #t)\n    ((< (< (string->number\
    \ (symbol->string date)) 30)) #t)\n    ((< (< (string->number (symbol->string\
    \ date)) 30)) #t)\n    ((< (< (string->number (symbol->string date)) 29)) #t)\n\
    \    ((< (< (string->number (symbol->string date)) 12)) #t)\n    ((< (< (string->number\
    \ (symbol->string date)) 12)) #t)\n    ((< (< (string->number (symbol->string\
    \ date)) 31)) #t)\n    ((< (< (string->number (symbol->string date)) 31)) #t)\n\
    \    ((< (< (string->number (symbol->string date)) 30)) #t)\n    ((< (< (string->number\
    \ (symbol->string date)) 30)) #t)\n    ((< (< (string->number (symbol->string\
    \ date)) 29)) #t)\n    ((< (< (string->number (symbol->string date)) 12)) #t)\n\
    \    ((< (< (string->number (symbol->string date)) 12)) #t)\n    ((< (< (string->number\
    \ (symbol->string date)) 31)) #t)\n    ((< (< (string->number (symbol->string\
    \ date)) 31)) #t)\n    ((< (< (string->number (symbol->string date)) 30)) #t)\n\
    \    ((< (< (string->number (symbol->string ", "  (cond\n    [(string? date) True]\n\
    \    [(< 1 (string-length date)) False]\n    [(< 31 (string-length date)) False]\n\
    \    [(< 30 (string-length date)) False]\n    [(< 29 (string-length date)) False]\n\
    \    [(string-match? \"[0-9]+-[0-9]+-[0-9]+\" date) True]\n    [else False]))\n",
  "  (and (not (string? date))\n       (< (length (string->list date)) 3)\n      \
    \ (< (< (length (string->list (string->list (string->list date))) 3) 1) (length\
    \ (string->list date)))\n       (< (< (length (string->list (string->list (string->list\
    \ (string->list date))) 3) 1) (length (string->list (string->list (string->list\
    \ (string->list date))) 3))\n       (< (< (length (string->list (string->list\
    \ (string->list (string->list (string->list date))) 3) 1) (length (string->list\
    \ (string->list (string->list (string->list (string->list date))) 3))\n      \
    \ (< (< (length (string->list (string->list (string->list (string->list (string->list\
    \ (string->list date))) 3) 1) (length (string->list (string->list (string->list\
    \ (string->list (string->list (string->list date))) 3))\n       (< (< (length\
    \ (string->list (string->list (string->list (string->list (string->list (string->list\
    \ (string->list date))) 3) 1) (length (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list (string->list date)))\
    \ 3))))\n       (< (< (length (string->list (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list (string->list date)))\
    \ 3) 1) (length (string->list (string->list (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list date))) 3))))\n    \
    \   (< (< (length (string->list (string->list (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list (string->list (string->list\
    \ (string->list (string->list date))) 3) 1) (length (string->list (string->list\
    \ (string->list (string->list (string->list (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list (string->list date)))\
    \ 3))))\n       (< (< (length (string->list (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list date))) 3) 1) (length\
    \ (string->list (string->list (string->list (string->list (string->list (string->list\
    \ (string->list (string->list (string->list (string->list (string->", "  (cond\
    \ [(null? date) False]\n        [(< (length (string->list date)) 5) False]\n \
    \       [(< (length (string->list (substring-no-cases (string->list date) 0 0)))\
    \ 3) False]\n        [(< (length (string->list (substring-no-cases (string->list\
    \ date) 0 1))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 2))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 3))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 4))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 5))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 6))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 7))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 8))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 9))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 10))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 11))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 12))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 13))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 14))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 15))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 16))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 17))) 3) False]\n        [(< (length (string->list (substring-no-cases\
    \ (string->list date) 0 18))) 3) False]\n        [(< (length", "  (let ((m1 0)\n\
    \        (m2 0)\n        (m3 0)\n        (m4 0)\n        (m5 0)\n        (m6 0)\n\
    \        (m7 0)\n        (m8 0)\n        (m9 0)\n        (m10 0)\n        (m11\
    \ 0)\n        (m12 0))\n    (if (equal? (cadr date) \"\")\n        false\n   \
    \     (if (number? (car date))\n            (if (<= (cadr (cdr date)) 31)\n  \
    \              (if (<= (cadr (cdr (cdr date))) 30)\n                    (if (<=\
    \ (cadr (cdr (cdr (cdr date))) 29)\n                        (if (<= (cadr (cadr\
    \ (cadr (cadr (cadr (cadr (cadr (cadr (cadr (cadr (cadr date) 0))))))) 12)\n \
    \                           true\n                            false)))))))))\n",
  "  (= (length date) 6)\n  (< (length date) 5)\n  (let ((month (substring date 0\
    \ 2))\n        (day (substring date 2 4))\n        (year (substring date 4 6)))\n\
    \    (and (<= 2 month)\n         (<= 3 month)\n         (<= 12 month)\n      \
    \   (= day \"-\")\n         (= day \"-\")\n         (<= 1 day)\n         (<= 31\
    \ day)\n         (<= 29 day)))\n  (let ((month (substring date 0 2))\n       \
    \ (day (substring date 2 4)))\n    (and (<= 2 month)\n         (<= 3 month)\n\
    \         (<= 12 month)\n         (= day \"-\")\n         (= day \"-\")\n    \
    \     (<= 1 day)\n         (<= 30 day)\n         (<= 29 day)))\n  (let ((month\
    \ (substring date 0 2))\n        (day (substring date 2 4)))\n    (and (<= 2 month)\n\
    \         (<= 3 month)\n         (<= 12 month)\n         (= day \"-\")\n     \
    \    (= day \"-\")\n         (<= 1 day)\n         (<= 28 day)\n         (<= 29\
    \ day)))\n  (let ((month (substring date 0 2)))\n        (day (substring date\
    \ 2 4)))\n    (and (<= 2 month)\n         (<= 3 month)\n         (<= 12 month)\n\
    \         (= day \"-\")\n         (= day \"-\")\n         (<= 1 day)\n       \
    \  (<= 27 day)\n         (<= 29 day)))\n  (let ((month (substring date 0 2)))\n\
    \        (day (substring date 2 4)))\n    (and (<= 2 month)\n         (<= 3 month)\n\
    \         (<= 12 month)\n         (= day \"-\")\n         (= day \"-\")\n    \
    \     (<= 1 day)\n         (<= 26 day)\n         (<= 29 day)))\n  (let ((month\
    \ (substring date 0 2)))\n        (day (substring date 2 4)))\n    (and (<= 2\
    \ month)\n         (<= 3 month)\n         (<= 12 month)\n         (= day \"-\"\
    )\n         (= day \"-\")\n         (<= 1 day)\n         (<= 25 day)\n       \
    \  (<= 29 day)))\n  (let ((month (substring date 0 2)))\n        (day (substring\
    \ date 2 4)))\n    (and (<= 2 month)\n         (<= 3 month)\n         (<= 12 month)\n\
    \         (= day \"-\")\n         (= day \"-\")\n         (<= 1 day)\n       \
    \  (<= 24 day)\n         (<= 29 day)))\n  (let ((month (substring date 0 2)))\n\
    \        (", "  (cond\n    [(empty? date) #f]\n    [(< (length (string->list date))\
    \ 4) #f]\n    [(< (length (string->list date)) 6) #f]\n    [(< (length (string->list\
    \ date)) 5) #f]\n    [(< (length (string->list date)) 3) #f]\n    [(string->number\
    \ (car date)) #t]\n    [(> (string->number (car date)) 1) #f]\n    [(> (string->number\
    \ (car date)) 31) #f]\n    [(> (string->number (car date)) 30) #f]\n    [(> (string->number\
    \ (car date)) 29) #f]\n    [(> (string->number (car date)) 12) #f]\n    [(> (string->list\
    \ (sub1 (car date)))) #f]\n    [(> (string->list (sub1 (sub1 (car date))))) #f]\n\
    \    [(> (string->list (sub1 (sub1 (sub1 (car date))))) #f]\n    [(> (string->list\
    \ (sub1 (sub1 (sub1 (sub1 (car date))))))) #f]\n    [(> (string->list (sub1 (sub1\
    \ (sub1 (sub1 (sub1 (car date))))))) #f]\n    [(> (string->list (sub1 (sub1 (sub1\
    \ (sub1 (sub1 (sub1 (car date))))))) #f]\n    [(> (string->list (sub1 (sub1 (sub1\
    \ (sub1 (sub1 (sub1 (sub1 (car date))))))) #f]\n    [(> (string->list (sub1 (sub1\
    \ (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (car date))))))))) #f]\n    [(> (string->list\
    \ (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (car date)))))))))))\
    \ #f]\n    [(> (string->list (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1\
    \ (sub1 (sub1 (sub1 (sub1 (car date))))))))))))) #f]\n    [(> (string->list (sub1\
    \ (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1\
    \ (car date))))))))))))) #f]\n    [(> (string->list (sub1 (sub1 (sub1 (sub1 (sub1\
    \ (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (sub1 (car date))))))))))))))",
  "  (cond\n    ((empty? date) #f)\n    ((< (string-length date) 3) #f)\n    ((< (string->number\
    \ (substring (string date 1) 0 2)) 1) #f)\n    ((< (string->number (substring\
    \ (string date 2) 0 2)) 31) #f)\n    ((< (string->number (substring (string date\
    \ 2) 0 2)) 29) #f)\n    ((< (string->number (substring (string date 3) 0 2)) 1)\
    \ #f)\n    ((< (string->number (substring (string date 3) 0 2)) 12) #f)\n    ((<\
    \ (string->number (substring (string date 3) 0 2)) 4) #f)\n    ((< (string->number\
    \ (substring (string date 3) 0 2)) 6) #f)\n    ((< (string->number (substring\
    \ (string date 3) 0 2)) 9) #f)\n    ((< (string->number (substring (string date\
    \ 3) 0 2)) 11) #f)\n    ((< (string->number (substring (string date 3) 0 2)) 12)\
    \ #f)\n    ((< (string->number (substring (string date 3) 0 2)) 3) #f)\n    ((<\
    \ (string->number (substring (string date 3) 0 2)) 5) #f)\n    ((< (string->number\
    \ (substring (string date 3) 0 2)) 7) #f)\n    ((< (string->number (substring\
    \ (string date 3) 0 2)) 8) #f)\n    ((< (string->number (substring (string date\
    \ 3) 0 2)) 10) #f)\n    ((< (string->number (substring (string date 3) 0 2)) 12)\
    \ #f)\n    ((string->number (substring (string date 3) 1 2)) (- (string->number\
    \ (substring (string date 3) 1 2)) 1) #f)\n    ((string->number (substring (string\
    \ date 3) 2 2)) (- (string->number (substring (string date 3) 2 2)) 1) #f)\n \
    \   ((string->number (substring (string date 3) 3 2)) (< (string->number (substring\
    \ (string date 3) 3 2)) 30) #f)\n    ((string->number (substring (string date\
    \ 3) 4 2)) (- (string->number (substring (string date 3) 4 2)) 1) #f)\n    ((string->number\
    \ (substring (string date 3) 5 2)) (- (string->number (substring (string date\
    \ 3) 5 2)) 1) #f)\n    ((string->number (substring (string date 3) 6 2)) (- (string->number\
    \ (substring (string date 3) 6 2)) 1) #f)\n    ((string->number (substring (string\
    \ date 3) 7 2)) (- (string->number (substring (string date 3) 7 2)) 1) #f)\n \
    \   ((string->number (substring (string date 3) 8 2)) (- (string->number (sub",
  "  (cond\n    ((empty? date) #t)\n    ((>= (length (string->list (string->string\
    \ date))) 3) #f)\n    ((> (length date) 2) #f)\n    ((> (length date) 3) #f)\n\
    \    ((> (string->char (substring date 0 2)) '-0) #f)\n    ((> (string->char (substring\
    \ date 0 2)) '-') #f)\n    ((> (string->char (substring date 0 1)) '-') #f)\n\
    \    ((> (string->char (substring date 1 1)) '-') #f)\n    ((> (string->char (substring\
    \ date 1 2)) '-') #f)\n    ((> (string->char (substring date 2 1)) '-') #f)\n\
    \    ((> (string->char (substring date 2 2)) '-') #f)\n    ((> (string->char (substring\
    \ date 0 1)) '-') #f)\n    ((> (string->char (substring date 1 1)) '-') #f)\n\
    \    ((> (string->char (substring date 2 1)) '-') #f)\n    ((> (string->char (substring\
    \ date 0 2)) '-') #f)\n    ((> (string->char (substring date 1 2)) '-') #f)\n\
    \    ((> (string->char (substring date 2 2)) '-') #f)\n    ((> (string->char (substring\
    \ date 0 3)) '-') #f)\n    ((> (string->char (substring date 1 3)) '-') #f)\n\
    \    ((> (string->char (substring date 2 3)) '-') #f)\n    ((> (string->char (substring\
    \ date 0 4)) '-') #f)\n    ((> (string->char (substring date 1 4)) '-') #f)\n\
    \    ((> (string->char (substring date 2 4)) '-') #f)\n    ((> (string->char (substring\
    \ date 0 5)) '-') #f)\n    ((> (string->char (substring date 1 5)) '-') #f)\n\
    \    ((> (string->char (substring date 2 5)) '-') #f)\n    ((> (string->char (substring\
    \ date 0 6)) '-') #f)\n    ((> (string->char (substring date 1 6)) '-') #f)\n\
    \    ((> (string->char (substring date 2 6)) '-') #f)\n    ((> (string->char (substring\
    \ date 0 7)) '-') #f)\n    ((> (", "  (cond\n    [(and (not (null? date)) (length\
    \ (string->list date) 3)\n           (not (< (length (string->list date) 2) 2)\
    \ \n                (< (length (string->list date) 3) 3) \n                (<\
    \ (length (string->list date) 4) 4) \n                (< (length (string->list\
    \ date) 5) 5) \n                (< (length (string->list date) 7) 7) \n      \
    \          (< (length (string->list date) 8) 8) \n                (< (length (string->list\
    \ date) 10) 10) \n                (< (length (string->list date) 12) 12) \n  \
    \              (> (length (string->list date) 1) 1))]\n    [(and (not (null? date))\
    \ (length (string->list date) 2)\n           (not (< (length (string->list date)\
    \ 2) 2) \n                (< (length (string->list date) 3) 3) \n            \
    \    (< (length (string->list date) 4) 4) \n                (< (length (string->list\
    \ date) 5) 5) \n                (< (length (string->list date) 7) 7) \n      \
    \          (< (length (string->list date) 8) 8) \n                (< (length (string->list\
    \ date) 10) 10) \n                (< (length (string->list date) 12) 12) \n  \
    \              (> (length (string->list date) 1) 1))]\n    [(and (not (null? date))\
    \ (length (string->list date) 1)\n           (not (< (length (string->list date)\
    \ 2) 2) \n                (< (length (string->list date) 3) 3) \n            \
    \    (< (length (string->list date) 4) 4) \n                (< (length (string->list\
    \ date) 5) 5) \n                (< (length (string->list date) 7) 7) \n      \
    \          (< (length (string->list date) 8) 8) \n                (< (length (string->list\
    \ date) 10) 10) \n                (< (length (string->list date) 12) 12) \n  \
    \              (> (length (string->list date) 1) 1))]\n    [(and (not (null? date))\
    \ (length (string->list date) 2)\n           (not (< (length (string->list date)\
    \ 2) 2) \n                (< (length (string->list date) 3) 3) \n            \
    \    (< (length (string->list date) 4) 4) \n                (< (length (string->list\
    \ date) 5) 5) \n                (< (length (string->list date) 7) 7) \n      \
    \          (< (length (string->list date) 8) 8) \n                (< (length (string->list\
    \ date) 10) 10) \n                (< (length (string->list date", "  (cond [(null?\
    \ date) #f]\n        [(string-length date > 0) #t]\n        [(string-match \"\
    ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\" (string->list date)) #t]\n        [(and (< 1 (length\
    \ date))\n               (< 1 (string-length (substring date 0 (string-length\
    \ (substring date 0 2))) ))\n               (< 1 (string-length (substring date\
    \ 0 (string-length (substring date 0 3))) ))\n               (< 1 (string-length\
    \ (substring date 0 (string-length (substring date 0 4))) ))\n               (<\
    \ 1 (length date))\n               (< 1 (string-length (substring date 0 (string-length\
    \ (substring date 0 5))) ))\n               (< 1 (string-length (substring date\
    \ 0 (string-length (substring date 0 6))) ))\n               (< 1 (string-length\
    \ (substring date 0 (string-length (substring date 0 7))) ))\n               (<\
    \ 1 (string-length (substring date 0 (string-length (substring date 0 8))) ))\n\
    \               (< 1 (string-length (substring date 0 (string-length (substring\
    \ date 0 9))) ))\n               (< 1 (string-length (substring date 0 (string-length\
    \ (substring date 0 10))))\n               (< 1 (string-length (substring date\
    \ 0 (string-length (substring date 0 11))))\n               (< 1 (string-length\
    \ (substring date 0 (string-length (substring date 0 12))))\n               (<\
    \ 1 (string-length (substring date 0 (string-length (substring date 0 13))))\n\
    \               (< 1 (string-length (substring date 0 (string-length (substring\
    \ date 0 14))))\n               (< 1 (string-length (substring date 0 (string-length\
    \ (substring date 0 15))))\n               (< 1 (string-length (substring date\
    \ 0 (string-length (substring date 0 16))))\n               (< 1 (string-length\
    \ (substring date 0 (string-length (substring date 0 17))))\n               (<\
    \ 1 (string-length (substring date 0 (string-length (substring date 0 18))))\n\
    \               (< 1 (string-length (substring date 0 (string-length (substring\
    \ date 0 19))))\n               (< 1 (string-length (substring date 0 (string-length\
    \ (substring date 0 20)))))\n               (< 1 (string-length (substring date\
    \ 0 (string-length (substring date 0 21)))))\n               (< 1 (string-length\
    \ (substring date 0 (string-length (sub", "  (= (length date) 10)\n  (< 1 (cadr\
    \ (split date #\\/)))\n  (< 30 (mod (cadr (split date #\\/)) 12))\n  (< 29 (mod\
    \ (cadr (split date #\\/)) 2))\n  (< 12 (cdr (split date #\\/)))\n  (= (string-char\
    \ (car date) (string-length date))))\n", "  (cond\n    [(empty? date) false]\n\
    \    [(= (length date) 2) false]\n    [(< (length date) 3) false]\n    [(< ((length\
    \ date) 3) 3) false]\n    [(< ((length date) 3) 2) false]\n    [(< months (length\
    \ date)) false]\n    [(< days (length date)) false]\n    [(< months (length date))\
    \ false]\n    [(< days (length date)) false]\n    [(< (length date) 7) false]\n\
    \    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n  \
    \  [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(<\
    \ ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length\
    \ date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date)\
    \ 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7)\
    \ 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7)\
    \ false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n\
    \    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n  \
    \  [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(<\
    \ ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length\
    \ date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date)\
    \ 7) 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7)\
    \ 7) false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7)\
    \ false]\n    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n\
    \    [(< ((length date) 7) 7) false]\n    [(< ((length date) 7) 7) false]\n  \
    \  [(< ((length date) 7) 7) false]\n    [(< ((length ", "  (cond\n    [(empty?\
    \ date) False]\n    [(< 1 (length date)) False]\n    [(> (length date) 2) False]\n\
    \    [(< (car date) (list (cond \n                          [(< 1 (length date))\
    \ False]\n                          [(> (length date) 2) False]\n            \
    \              [(< (car date) (list (cond \n                                 \
    \                 [(< 1 (length date)) False]\n                              \
    \                    [(> (length date) 2) False]\n                           \
    \                       [(< (car date) (list (cond \n                        \
    \                                      [(< 1 (length date)) False]\n         \
    \                                                     [(> (length date) 2) False]\n\
    \                                                              [(< (car date)\
    \ (list (cond \n                                                             \
    \              [(< 1 (length date)) False]\n                                 \
    \                                          [(> (length date) 2) False]\n     \
    \                                                                      [(< (car\
    \ date) (list (cond \n                                                       \
    \                                               [(< 1 (length date)) False]\n\
    \                                                                            \
    \                          [(> (length date) 2) False]\n                     \
    \                                                                            \
    \     [(< (car date) (list (cond \n                                          \
    \                                                                            \
    \         [(< 1 (length date)) False]\n                                      \
    \                                                                            \
    \             [(> (length date) 2) False]\n                                  \
    \                                                                            \
    \                 [(< (car date) (list (cond \n                              \
    \                                                                            \
    \                               [(< 1 (length date)) False]\n                \
    \                                                                            \
    \                                             [(> (length date) 2) False]\n  \
    \                                                                            \
    \                                                           [(< (car date) (list\
    \ (cond \n                                                                   \
    \                                                                            \
    \  [(< 1 (length date)) False]\n                                             \
    \                                                                            \
    \                        [(> (length date) 2) False]\n                       \
    \                                                                            \
    \                                              [(< (car date) (list (cond \n \
    \                                                                            \
    \                                                                            \
    \            [(< 1 (length date)) False]\n                                   \
    \                                                                            \
    \                                                      [(> (length date) 2) False]\n\
    \                                                                            \
    \                                                                            \
    \             [(< (car date) (list (cond \n                                  \
    \                                                                            \
    \                                                                   [(< 1 (length\
    \ date)) False]\n                                                            \
    \                                                                            \
    \                                         [(> (length date) 2) False]\n      \
    \                                                                            \
    \                                                                            \
    \                   [(< (car date) (list (cond \n                            \
    \                                                                            \
    \                                                                            \
    \     [(< 1 (length date)) False]\n                                          \
    \                                                                            \
    \                                                                   [(> (length\
    \ date) 2) False]\n                                                          \
    \                                                                            \
    \                                                   [(< (car date) (list (cond\
    \ \n                                                                         \
    \                                                                            \
    \                                               [(< 1 (length date)) False]\n\
    \                                                                            \
    \                                                                            \
    \                                            [(> (length date) 2) False]\n   \
    \                                                                            \
    \                                                                            \
    \                                         [(< (car date) (list (cond \n      \
    \                                                                            \
    \                                                                            \
    \                                                              [(< 1 (length date))\
    \ False]\n                                                                   \
    \                                                                            \
    \                                                                            \
    \ [(> (length date) 2) False]\n                                              \
    \                                                                            \
    \                                                                            \
    \                      [(< (car date) (list (cond \n                         \
    \                                                                            \
    \                                                                            \
    \                                                        [(< 1 (length date",
  "  (or (empty? date)\n      (< (length date) 5)\n      (< (< (string-length (substring\
    \ date 0 2)) 1 3)\n           (< (string-length (substring date 1 2)) 1 3)\n \
    \          (< (string-length (substring date 2 2)) 1 3)\n           (< (string-length\
    \ (substring date 3 2)) 1 3)\n           (< (string-length (substring date 4 2))\
    \ 1 3)\n           (< (string-length (substring date 5 2)) 1 3))\n      (< (<\
    \ (string->number (substring date 0 2)) 1 3)\n           (< (string->number (substring\
    \ date 1 2)) 1 3)\n           (< (string->number (substring date 2 2)) 1 3)\n\
    \           (< (string->number (substring date 3 2)) 1 3)\n           (< (string->number\
    \ (substring date 4 2)) 1 3)\n           (< (string->number (substring date 5\
    \ 2)) 1 3))\n      (< (< (string->number (substring date 0 2)) 4 6)\n        \
    \   (< (string->number (substring date 1 2)) 4 6)\n           (< (string->number\
    \ (substring date 2 2)) 4 6)\n           (< (string->number (substring date 3\
    \ 2)) 4 6)\n           (< (string->number (substring date 4 2)) 4 6)\n       \
    \    (< (string->number (substring date 5 2)) 4 6))\n      (< (< (string->number\
    \ (substring date 0 2)) 2 4)\n           (< (string->number (substring date 1\
    \ 2)) 2 4)\n           (< (string->number (substring date 2 2)) 2 4)\n       \
    \    (< (string->number (substring date 3 2)) 2 4)\n           (< (string->number\
    \ (substring date 4 2)) 2 4)\n           (< (string->number (substring date 5\
    \ 2)) 2 4))\n      (< (< (string->number (substring date 0 2)) 1 2)\n        \
    \   (< (string->number (substring date 1 2)) 1 2)\n           (< (string->number\
    \ (substring date 2 2)) 1 2)\n           (< (string->number (substring date 3\
    \ 2)) 1 2)\n           (< (string->number (substring date 4 2)) 1 2)\n       \
    \    (< (string->number (substring date 5 2)) 1 2))\n      (< (< (string->number\
    \ (substring date 0 2)) 3 4)\n           (< (string->number (substring date 1\
    \ 2)) 3 4)\n           (< (string->number (substring date 2 2)) 3 4)\n       \
    \    (< (string->number (substring date 3 2)) 3 4)\n           (< (string->number\
    \ (substring date 4 2)) 3 4)\n           (< (string", "  (cond\n    [(null? date)\
    \ #t]\n    [(symbol=? (string-length date) #f)\n     (cond\n       [(string=?\
    \ date \"0\") #t]\n       [(string=? date \"00\") #t]\n       [(string=? date\
    \ \"000\") #t]\n       [(string=? date \"0000\") #t]\n       [(string=? date \"\
    00000\") #t]\n       [(string=? date \"000000\") #t]\n       [(string=? date \"\
    0000000\") #t]\n       [(string=? date \"00000000\") #t]\n       [(string=? date\
    \ \"000000000\") #t]\n       [(string=? date \"0000000000\") #t]\n       [(string=?\
    \ date \"00000000000\") #t]\n       [(string=? date \"000000000000\") #t]\n  \
    \     [(string=? date \"0000000000000\") #t]\n       [(string=? date \"00000000000000\"\
    ) #t]\n       [(string=? date \"000000000000000\") #t]\n       [(string=? date\
    \ \"0000000000000000\") #t]\n       [(string=? date \"00000000000000000\") #t]\n\
    \       [(string=? date \"000000000000000000\") #t]\n       [(string=? date \"\
    0000000000000000000\") #t]\n       [(string=? date \"00000000000000000000\") #t]\n\
    \       [(string=? date \"000000000000000000000\") #t]\n       [(string=? date\
    \ \"0000000000000000000000\") #t]\n       [(string=? date \"00000000000000000000000\"\
    ) #t]\n       [(string=? date \"000000000000000000000000\") #t]\n       [(string=?\
    \ date \"0000000000000000000000000\") #t]\n       [(string=? date \"00000000000000000000000000\"\
    ) #t]\n       [(string=? date \"000000000000000000000000000\") #t]\n       [(string=?\
    \ date \"0000000000000000000000000000\") #t]\n       [(string=? date \"00000000000000000000000000000\"\
    ) #t]\n       [(string=? date \"000000000000000000000000000000\") #t]\n      \
    \ [(string=? date \"0000000000000000000000000000000\") #t]\n       [(string=?\
    \ date \"00000000000000000000000000000000\") #t]\n       [(string=? date \"000000000000000000000000000000000\"\
    ) #t]\n       [(string=? date \"0000000000000000000000000000000000\") #t]\n  \
    \     [(string=? date \"00000000000000000000000000000000000", "  (cond [(empty?\
    \ date) #t]\n        [(<= 1 (number? (string->number (first date)))) #f]\n   \
    \     [(<= 30 (number? (string->number (first date)))) #f]\n        [(and (number?\
    \ (string->number (first date))) (<= 1 (number? (string->number (sub1 (first date)))))\
    \ #f]\n        [(and (number? (string->number (first date))) (<= 12 (number? (string->number\
    \ (sub1 (first date))))) #f]\n        [(and (number? (string->number (first date)))\
    \ (< (string->number (sub1 (first date)) \"-\")) #f]\n        [(and (number? (string->number\
    \ (first date))) (< (string->number (sub1 (first date)) \"/\")) #f]\n        [(and\
    \ (number? (string->number (first date))) (< (string->number (sub1 (first date))\
    \ \"-\") (< (string->number (sub1 (sub1 (first date))) \"/\")) #f]\n        [(and\
    \ (number? (string->number (first date))) (< (string->number (sub1 (first date))\
    \ \"/\") (< (string->number (sub1 (sub1 (first date))) \"/\")) #f]\n        [(and\
    \ (number? (string->number (first date))) (< (string->number (sub1 (first date))\
    \ \"-\") (< (string->number (sub1 (sub1 (first date))) \"/\") (< (string->number\
    \ (sub1 (sub1 (sub1 (first date))) \"/\")) #f]\n        [(and (number? (string->number\
    \ (first date))) (< (string->number (sub1 (first date)) \"-\") (< (string->number\
    \ (sub1 (sub1 (first date))) \"/\") (< (string->number (sub1 (sub1 (sub1 (sub1\
    \ (first date))) \"/\")) #f]\n        [(and (number? (string->number (first date)))\
    \ (< (string->number (sub1 (first date)) \"-\") (< (string->number (sub1 (sub1\
    \ (first date))) \"/\") (< (string->number (sub1 (sub1 (sub1 (sub1 (first date)))\
    \ \"/\")) #f]\n        [(and (number? (string->number (first date))) (< (string->number\
    \ (sub1 (first date)) \"-\") (< (string->number (sub1 (sub1 (first date))) \"\
    /\") (< (string->number (sub1 (sub1 (sub1 (sub1 (first date))) \"/\") (< (string->number\
    \ (sub1 (sub1 (sub1 (sub1 (sub1 (first date))) \"/\")) #f]\n        [(and (number?\
    \ (", "  (cond\n    [(and (not (empty? date)) (< 31 \n                       \
    \    (length (substring (date 0 1) 1) \n                             (length (substring\
    \ (date 0 2) 2) \n                              (length (substring (date 0 3)\
    \ 3) \n                               (length (substring (date 0 4) 4) \n    \
    \                           (length (substring (date 0 5) 5) \n              \
    \                 (length (substring (date 0 6) 6) \n                        \
    \       (length (substring (date 0 7) 7) \n                               (length\
    \ (substring (date 0 8) 8) \n                               (length (substring\
    \ (date 0 9) 9) \n                               (length (substring (date 0 10)\
    \ 10) \n                               (length (substring (date 0 11) 11) \n \
    \                              (length (substring (date 0 12) 12)))))))\n    \
    \   (not (< 1 (length (substring (date 0 1) 1) \n                        (length\
    \ (substring (date 0 2) 2) \n                          (length (substring (date\
    \ 0 3) 3) \n                          (length (substring (date 0 4) 4) \n    \
    \                      (length (substring (date 0 5) 5) \n                   \
    \       (length (substring (date 0 6) 6) \n                          (length (substring\
    \ (date 0 7) 7) \n                          (length (substring (date 0 8) 8) \n\
    \                          (length (substring (date 0 9) 9) \n               \
    \           (length (substring (date 0 10) 10) \n                          (length\
    \ (substring (date 0 11) 11) \n                          (length (substring (date\
    \ 0 12) 12))))))))\n       (not (< 1 (length (substring (date 0 1) 1) \n     \
    \                   (length (substring (date 0 2) 2) \n                      \
    \    (length (substring (date 0 3) 3) \n                          (length (substring\
    \ (date 0 4) 4) \n                          (length (substring (date 0 5) 5) \n\
    \                          (length (substring (date 0 6) 6) \n               \
    \           (length (substring (date 0 7) 7) \n                          (length\
    \ (substring (date 0 8) 8) \n                          (length (substring (date\
    \ 0 9) 9) \n                          (length (substring (date 0 10) 10) \n  \
    \                        (length (substring (date 0 11) 11) \n               \
    \           (length (substring (date 0 12) 12)))))))\n       (not (< 1 (length\
    \ (substring (date 0 1) 1) \n                        (length (substring (date\
    \ 0 2) 2) \n                          (length (substring (date 0 3) 3) \n    \
    \                      (length (substring (date 0 4) 4) \n                   \
    \       (length (substring (date 0 5) 5) \n                          (length (substring\
    \ (date 0 6) 6) \n                          (length (substring (date ", "  (cond\n\
    \    ((empty? date) #t)\n    ((< (length (substring date 2 4)) 3) #f)\n    ((<\
    \ (length (substring date 5 2)) (length ('01-))) #f)\n    ((< (length (substring\
    \ date 7 2)) (length ('01-))) #f)\n    ((< (length (substring date 8 2)) (length\
    \ ('01-))) #f)\n    ((< (length (substring date 10 2)) (length ('01-))) #f)\n\
    \    ((< (length (substring date 12 2)) (length ('01-))) #f)\n    ((< (length\
    \ (substring date 1 2)) (length ('02-))) #f)\n    ((< (length (substring date\
    \ 3 2)) (length ('02-))) #f)\n    ((< (length (substring date 5 2)) (length ('02-)))\
    \ #f)\n    ((< (length (substring date 7 2)) (length ('02-))) #f)\n    ((< (length\
    \ (substring date 8 2)) (length ('02-))) #f)\n    ((< (length (substring date\
    \ 10 2)) (length ('02-))) #f)\n    ((< (length (substring date 12 2)) (length\
    \ ('02-))) #f)\n    ((< (length (substring date 1 2)) (length ('03-))) #f)\n \
    \   ((< (length (substring date 3 2)) (length ('03-))) #f)\n    ((< (length (substring\
    \ date 5 2)) (length ('03-))) #f)\n    ((< (length (substring date 7 2)) (length\
    \ ('03-))) #f)\n    ((< (length (substring date 8 2)) (length ('03-))) #f)\n \
    \   ((< (length (substring date 10 2)) (length ('03-))) #f)\n    ((< (length (substring\
    \ date 12 2)) (length ('03-))) #f)\n    ((< (length (substring date 1 2)) (length\
    \ ('04-))) #f)\n    ((< (length (substring date 3 2)) (length ('04-))) #f)\n \
    \   ((< (length (substring date 5 2)) (length ('04-))) #f)\n    ((< (length (substring\
    \ date 7 2)) (length ('04-))) #f)\n    ((< (length (substring date 8 2)) (length\
    \ ('04-))) #f)\n    ((< (length (substring date 10 2)) (length ('04-))) #f)\n\
    \    ((< (length (substring date 12 2)) (length ('04-))) #f)\n    ((< (length\
    \ (substring date 1 2)) (length ('05-))) #f)\n    ((< (", "  (cond\n    ((string-empty?\
    \ date) #f)\n    ((< (string-length date) 5) #f) ; check length\n    ((< (< (string->number\
    \ (string-ref date 0 2)) 12) 1) #f) ; check month\n    ((< (< (string->number\
    \ (string-ref date 2 2)) 31) 1) #f) ; check day\n    ((< (< (string->number (string-ref\
    \ date 4 2)) 30) 1) #f) ; check day\n    ((< (< (string->number (string-ref date\
    \ 6 2)) 29) 1) #f) ; check month\n    ((= (string-ref date 0 1) 'm) ; check month\n\
    \    ((= (string-ref date 0 3) '-) ; check separator\n    ((= (string-ref date\
    \ 2 1) '-) ; check separator\n    ((= (string-ref date 4 1) '-) ; check separator\n\
    \    ((= (string-ref date 6 1) '-) ; check separator\n    ((= (string-ref date\
    \ 8 1) '-) ; check separator\n    ((= (string-ref date 10 1) '-) ; check separator\n\
    \    ((= (string-ref date 12 1) '-) ; check separator\n    ((= (string-ref date\
    \ 14 1) '-) ; check separator\n    (#t (#f date)))))\n", "  (if (and (not (empty?\
    \ date))\n           (not (< (string->number (first date)) 1)\n              \
    \  ((string->number (first date)) > 31)\n                ((string->number (second\
    \ date)) > 30)\n                ((string->number (third date)) > 29)\n       \
    \         ((string->number (fourth date)) > 12))\n      (True)))\n", "  (and (not\
    \ (empty? date))\n       (and (< 31 \n               (- 1 (string-length (substring\
    \ date 0 (string-length (substring date 1 2)))))\n               (- 1 (string-length\
    \ (substring date 1 (string-length (substring date 1 4)))))\n               (<\
    \ 31\n                  (- 1 (string-length (substring date 0 (string-length (substring\
    \ date 1 6))))))\n               (< 30\n                  (- 1 (string-length\
    \ (substring date 0 (string-length (substring date 1 9))))))\n               (<\
    \ 29\n                  (- 1 (string-length (substring date 0 (string-length (substring\
    \ date 1 11))))))\n               (< 12\n                  (- 1 (string-length\
    \ (substring date 0 (string-length (substring date 1 12))))))\n              \
    \ (string-equal? (substring date 0 1) \"-\")\n               (string-equal? (substring\
    \ date 1 2) \"-\")\n               (string-equal? (substring date 2 4) \"-\")\n\
    \               (string-equal? (substring date 0 3) \"-\")\n               (string-equal?\
    \ (substring date 3 6) \"-\")\n               (string-equal? (substring date 0\
    \ 4) \"-\")\n               (string-equal? (substring date 4 9) \"-\")\n     \
    \          (string-equal? (substring date 0 5) \"-\")\n               (string-equal?\
    \ (substring date 5 11) \"-\")\n               (string-equal? (substring date\
    \ 0 7) \"-\")\n               (string-equal? (substring date 7 12) \"-\")\n  \
    \             (string-equal? (substring date 0 8) \"-\")\n               (string-equal?\
    \ (substring date 8 11) \"-\")\n               (string-equal? (substring date\
    \ 0 9) \"-\")\n               (string-equal? (substring date 9 11) \"-\")\n  \
    \             (string-equal? (substring date 0 10) \"-\")\n               (string-equal?\
    \ (substring date 10 12) \"-\")\n               (string-equal? (substring date\
    \ 0 11) \"-\")\n               (string-equal? (substring date 11 12) \"-\")\n\
    \               (string-equal? (substring date 0 12) \"-\"))\n  (and (< 1 \n \
    \         (string-length (substring date 0 (string-length (substring date 1 2)))))\n\
    \       (< 1 \n          (string-length (substring date 1 (string-length (substring\
    \ date 1 4)))))\n       (< 1 \n          (string-length (substring date 0 (string-length\
    \ (substring date 1 6))))))\n  (and (< 1 \n          (string-length (substring\
    \ date 0 (string-length", "  (cond\n    ((null? date) #t)\n    ((< (string-length\
    \ date) 3) #t)\n    ((< (string-length date) 13) #t)\n    ((< (string-to-int (string-ref\
    \ date 0 2)) 1) #t)\n    ((< (string-to-int (string-ref date 0 2)) 13) #t)\n \
    \   ((< (string-to-int (string-ref date 0 2)) 31) #t)\n    ((< (string-to-int\
    \ (string-ref date 0 2)) 30) #t)\n    ((< (string-to-int (string-ref date 0 2))\
    \ 29) #t)\n    ((< (string-to-int (string-ref date 0 2)) 12) #t)\n    ((< (string-to-int\
    \ (string-ref date 0 2)) 4) #t)\n    ((< (string-to-int (string-ref date 0 2))\
    \ 6) #t)\n    ((< (string-to-int (string-ref date 0 2)) 9) #t)\n    ((< (string-to-int\
    \ (string-ref date 0 2)) 11) #t)\n    ((< (string-to-int (string-ref date 0 2))\
    \ 2) #t)\n    ((< (string-to-int (string-ref date 0 2)) 7) #t)\n    ((< (string-to-int\
    \ (string-ref date 0 2)) 8) #t)\n    ((< (string-to-int (string-ref date 0 2))\
    \ 10) #t)\n    ((< (string-to-int (string-ref date 0 2)) 12) #t)\n    (#t (#f))\n\
    \    )\n  )\n", "  (not (empty? date)))\n</code>\n<code>", "  (cond\n    [(empty?\
    \ date) #f]\n    [(< (length date) 3) #f]\n    [(< (- 3 (length date)) 1) #f]\n\
    \    [(< (- 3 (length date)) 30) #f]\n    [(< (- 2 (length date)) 29) #f]\n  \
    \  [(< (- 2 (length date)) 31) #f]\n    [(< 1 (length date)) #f]\n    [(< 4 (length\
    \ date)) #f]\n    [(< 6 (length date)) #f]\n    [(< 9 (length date)) #f]\n   \
    \ [(< 11 (length date)) #f]\n    [(< 12 (length date)) #f]\n    [else (< 1 (length\
    \ date)) #f]\n    [else (< 2 (length date)) #f]\n    [else (< 3 (length date))\
    \ #f]\n    [else (< 4 (length date)) #f]\n    [else (< 5 (length date)) #f]\n\
    \    [else (< 6 (length date)) #f]\n    [else (< 7 (length date)) #f]\n    [else\
    \ (< 8 (length date)) #f]\n    [else (< 9 (length date)) #f]\n    [else (< 10\
    \ (length date)) #f]\n    [else (< 11 (length date)) #f]\n    [else (< 12 (length\
    \ date)) #f]\n    [else (< 1 (length date)) #f]\n    [else (< 2 (length date))\
    \ #f]\n    [else (< 3 (length date)) #f]\n    [else (< 4 (length date)) #f]\n\
    \    [else (< 5 (length date)) #f]\n    [else (< 6 (length date)) #f]\n    [else\
    \ (< 7 (length date)) #f]\n    [else (< 8 (length date)) #f]\n    [else (< 9 (length\
    \ date)) #f]\n    [else (< 10 (length date)) #f]\n    [else (< 11 (length date))\
    \ #f]\n    [else (< 12 (length date)) #f]\n    [else (< 1 (length date)) #f]\n\
    \    [else (< 2 (length date)) #f]\n    [else (< 3 (length date)) #f]\n    [else\
    \ (< 4 (length date)) #f]\n    [else (< 5 (length date)) #f]\n    [else (< 6 (length\
    \ date)) #f]\n    [else (< 7 (length date)) #f]\n    [else (< 8 (length date))\
    \ #f]", "  (cond\n    [(empty? date) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^\\d{1,2}-\\d{1,2}-\\d{4}\"\n                                       (string->list\
    \ date))\n              2)) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^\\d{1,2}\\/\\d{1,2}\\/\\d{4}\"\n                                       (string->list\
    \ date))\n              2)) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^(1[0-2]|0?[1-9]):([0-5][0-9])$\"\n                                      \
    \ (string->list date))\n              2)) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^(3[01]|[12]\\d|0?[1-9]):[0-5]\\d$\"\n                                   \
    \    (string->list date))\n              2)) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^(3[01]|[12]\\d|0?[1-9]):[0-5]\\d$\"\n                                   \
    \    (string->list date))\n              2)) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^(3[01]|[12]\\d|0?[1-9]):[0-5]\\d$\"\n                                   \
    \    (string->list date))\n              2)) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^(2\\d|1[012])-([0-3]\\d|[12]\\d)-\\d{4}\"\n                             \
    \          (string->list date))\n              3)) #false]\n    [(< (count (regexp-match-all-strings\
    \ \"^(2\\d|1[012])\\/([0-3]\\d|[12]\\d)\\/\\d{4}\"\n                         \
    \              (string->list date))\n              3)) #false]\n    [(< (count\
    \ (regexp-match-all-strings \"^(1[0-2]|0?[1-9]):([0-5][0-9])-([0-3]\\d|[12]\\\
    d)-\\d{4}\"\n                                       (string->list date))\n   \
    \           3)) #false]\n    [(< (count (regexp-match-all-strings \"^(2[0-3]|[01]\\\
    d|0?[1-9]):([0-5][0-9])-([0-3]\\d|[12]\\d)-\\d{4}\"\n                        \
    \               (string->list date))\n              3)) #false]\n    [(< (count\
    \ (regexp-match-all-strings \"^(2[0-3]|[01]\\d|0?[1-9]):([0-5][0-9])\\/([0-3]\\\
    d|[12]\\d)\\/\\d{4}\"\n                                       (string->list date))\n\
    \              3)) #false]\n    [else #true]\n  ))\n", "  (cond\n    ((not (string?\
    \ date))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< 1 (string->number (string-ref date\
    \ 0)))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< 1 (string->number (string-ref date\
    \ 0)))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< 1 (string->number (string-ref date\
    \ 0)))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< 1 (string->number (string-ref date\
    \ 0)))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< 1 (string->number (string-ref date\
    \ 0)))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< 1 (string->number (string-ref date\
    \ 0)))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< 1 (string->number (string-ref date\
    \ 0)))\n     #t)\n    ((< 1 (string->number (string-ref date 0)))\n     #t)\n\
    \    ((< 1 (string->number (string-ref date 0)))\n     #t)\n    ((< 1 (string->number\
    \ (string-ref date 0)))\n     #t)\n    ((< ", "  (and (not (empty? (string-length\
    \ date))) (not (< (string-length date) 2))\n      (not (< ((string-length date)\
    \ 2) 12))\n      (not (< ((string-length date) 2) 29))\n      (< ((string-length\
    \ date) 2) 12)))\n", "  (cond\n    [(empty? date) false]\n    [(< (days (date-month\
    \ (date-string date)) 1) 1) false]\n    [(< (days (date-month (date-string date))\
    \ 31) 1) false]\n    [(< (days (date-month (date-string date)) 30) 1) false]\n\
    \    [(< (days (date-month (date-string date)) 29) 1) false]\n    [(< (days (date-month\
    \ (date-string date)) 28) 1) false]\n    [(< (months (date-month (date-string\
    \ date)) 1) 1) false]\n    [(< (months (date-month (date-string date)) 12) 1)\
    \ false]\n    [(< (months (date-month (date-string date)) 13) 1) false]\n    [(<\
    \ (months (date-month (date-string date)) 14) 1) false]\n    [(< (months (date-month\
    \ (date-string date)) 15) 1) false]\n    [(< (months (date-month (date-string\
    \ date)) 16) 1) false]\n    [(< (months (date-month (date-string date)) 17) 1)\
    \ false]\n    [(< (months (date-month (date-string date)) 18) 1) false]\n    [(<\
    \ (months (date-month (date-string date)) 19) 1) false]\n    [(< (months (date-month\
    \ (date-string date)) 20) 1) false]\n    [(< (months (date-month (date-string\
    \ date)) 21) 1) false]\n    [(< (months (date-month (date-string date)) 22) 1)\
    \ false]\n    [(< (months (date-month (date-string date)) 23) 1) false]\n    [(<\
    \ (months (date-month (date-string date)) 24) 1) false]\n    [(< (months (date-month\
    \ (date-string date)) 25) 1) false]\n    [(< (months (date-month (date-string\
    \ date)) 26) 1) false]\n    [(< (months (date-month (date-string date)) 27) 1)\
    \ false]\n    [(< (months (date-month (date-string date)) 28) 1) false]\n    [(<\
    \ (months (date-month (date-string date)) 29) 1) false]\n    [(< (months (date-month\
    \ (date-string date)) 30) 1) false]\n    [(", "  (cond\n    [(string-empty? date)\
    \ False]\n    [(< (string-length date) 3) False]\n    [(< (string-length date)\
    \ 6) False]\n    [(< (string-length date) 10) False]\n    [(< (string-length date)\
    \ 13) False]\n    [(< (string-length date) 15) False]\n    [(< (string-length\
    \ date) 17) False]\n    [(< (string-length date) 19) False]\n    [(< (string-length\
    \ date) 21) False]\n    [(< (string-length date) 23) False]\n    [(< (string-length\
    \ date) 26) False]\n    [(< (string-length date) 29) False]\n    [(< (string-length\
    \ date) 32) False]\n    [(< (string-length date) 36) False]\n    [(< (string-length\
    \ date) 40) False]\n    [(< (string-length date) 43) False]\n    [(< (string-length\
    \ date) 47) False]\n    [(< (string-length date) 52) False]\n    [(< (string-length\
    \ date) 57) False]\n    [(< (string-length date) 62) False]\n    [(< (string-length\
    \ date) 67) False]\n    [(< (string-length date) 71) False]\n    [(< (string-length\
    \ date) 76) False]\n    [(< (string-length date) 80) False]\n    [(< (string-length\
    \ date) 84) False]\n    [(< (string-length date) 89) False]\n    [(< (string-length\
    \ date) 92) False]\n    [(< (string-length date) 96) False]\n    [(< (string-length\
    \ date) 101) False]\n    [(< (string-length date) 105) False]\n    [(< (string-length\
    \ date) 110) False]\n    [(< (string-length date) 114) False]\n    [(< (string-length\
    \ date) 119) False]\n    [(< (string-length date) 122) False]\n    [(< (string-length\
    \ date) 126) False]\n    [(< (string-length date) 130) False]\n    [(< (string-length\
    \ date) 133) False]\n    [(< (string-length date) 137) False]\n    [(< (string-length\
    \ date) 141) False]\n    [(< (string-length date) 144) False]\n    [(< (string-length\
    \ date) 148) False]\n    [(< (string-length date) 152) False]\n    [(< (string-length\
    \ date) 157) False", "  (cond ((empty? date) #f)\n        ((< (days-of-month (date\
    \ 0 1 date)) 1) #f)\n        ((or (<= (months-of-year (date 0 1 date)) 12) (<=\
    \ (months-of-year (date 0 3 date)) 12) (<= (months-of-year (date 1 5 date)) 12)\
    \ (<= (months-of-year (date 3 7 date)) 12) (<= (months-of-year (date 5 8 date))\
    \ 12) (<= (months-of-year (date 7 10 date)) 12) (<= (months-of-year (date 8 12\
    \ date)) 12) #f)\n        ((or (<= (months-of-year (date 0 4 date)) 12) (<= (months-of-year\
    \ (date 1 6 date)) 12) (<= (months-of-year (date 3 9 date)) 12) (<= (months-of-year\
    \ (date 5 11 date)) 12) (<= (months-of-year (date 7 12 date)) 12) #f)\n      \
    \  ((or (<= (months-of-year (date 0 2 date)) 12) (<= (months-of-year (date 1 3\
    \ date)) 12) (<= (months-of-year (date 3 5 date)) 12) (<= (months-of-year (date\
    \ 5 7 date)) 12) (<= (months-of-year (date 7 8 date)) 12) (<= (months-of-year\
    \ (date 8 10 date)) 12) #f)\n        ((or (<= (months-of-year (date 0 1 date))\
    \ 12) (<= (months-of-year (date 1 3 date)) 12) (<= (months-of-year (date 3 5 date))\
    \ 12) (<= (months-of-year (date 5 7 date)) 12) (<= (months-of-year (date 7 8 date))\
    \ 12) (<= (months-of-year (date 8 10 date)) 12) #f)\n        ((or (<= (months-of-year\
    \ (date 0 4 date)) 12) (<= (months-of-year (date 1 6 date)) 12) (<= (months-of-year\
    \ (date 3 9 date)) 12) (<= (months-of-year (date 5 11 date)) 12) (<= (months-of-year\
    \ (date 7 12 date)) 12) #f)\n        ((or (<= (months-of-year (date 0 2 date))\
    \ 12) (<= (months-of-year (date 1 3 date)) 12) (<= (months-of-year (date 3 5 date))\
    \ 12) (<= (months-of-year (date 5 ", "  (cond ((not (null? date))\n         (cond\
    \ ((< 1 (string->number date))\n                (return False))\n            \
    \  ((and (< 1 (string->number date))\n                   (< 1 (string->number\
    \ date)))\n               (return False))\n              ((and (< 1 (string->number\
    \ date))\n                   (< 1 (string->number date)))\n               (return\
    \ False))\n              ((and (< 1 (string->number date))\n                 \
    \  (< 1 (string->number date)))\n               (return False))\n            \
    \  ((< 1 (string->number date))\n               (return False))\n            \
    \  ((> (string->number date) '31'-months)\n               (return False))\n  \
    \            ((> (string->number date) '30'-months)\n               (return False))\n\
    \              ((> (string->number date) '29'-months)\n               (return\
    \ False))\n              ((string->date date))\n              (return True))\n\
    \              (else (return False))\n         )\n         ))\n", "  (cond\n \
    \   ((null? date) #f)\n    ((< 1 (string->number (substring date 0 1)))\n    \
    \ (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 1 2)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 2 3)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 3 4)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 4 5)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 5 6)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 6 7)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 7 8)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 8 9)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 9 10)))\n\
    \     (error \"Invalid date\"))\n    ((< 1 (string->number (substring date 10\
    \ 11)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 11 12)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 12 2)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 2 3)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 3 4)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 4 5)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 5 6)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 6 7)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 7 8)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 8 9)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 9 10)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 10 11)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 11 12)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 12 2)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date 2 3)))\n     (error \"Invalid date\"))\n    ((< 1 (string->number (substring\
    \ date ", "  (cond\n    [(empty? date) #false]\n    [(< (count date) 1) #false]\n\
    \    [(> (count date) 31) #false]\n    [(< (count (substring date 1 2)) 1) #false]\n\
    \    [(> (count (substring date 1 2)) 30) #false]\n    [(< (count (substring date\
    \ 3 4)) 1) #false]\n    [(> (count (substring date 3 4)) 29) #false]\n    [(<\
    \ (count (substring date 5 6)) 1) #false]\n    [(> (count (substring date 5 6))\
    \ 30) #false]\n    [(< (count (substring date 7 8)) 1) #false]\n    [(> (count\
    \ (substring date 7 8)) 31) #false]\n    [(< (count (substring date 10 12)) 1)\
    \ #false]\n    [(> (count (substring date 10 12)) 30) #false]\n    [(< (count\
    \ (substring date 1 2)) 1) #false]\n    [(> (count (substring date 1 2)) 12) #false]\n\
    \    [else #true]))\n", "  (cond\n    [(empty? date) #f]\n    [(< 1 (string-length\
    \ date))\n     (begin (display \"Invalid date. Date is not in the right format.\"\
    )\n             (newline))\n     #f]\n    [(< 1 (string-length date))\n     (begin\
    \ (display \"Invalid date. Date is too short. Date has only \" \n            \
    \           string((string-length date)) \" characters.\")\n             (newline))\n\
    \     #f]\n    [(< 1 (string-length date))\n     (begin (display \"Invalid date.\
    \ Date has too many days in the month of \" \n                       string((string-length\
    \ date) string-length (date-part (date-part (date-part (date-month date))) date))\n\
    \                       \".\")\n             (newline))\n     #f]\n    [(< 1 (string-length\
    \ date))\n     (begin (display \"Invalid date. Date is out of range. Date has\
    \ \" \n                       string((string-length date) string-length (date-part\
    \ (date-part (date-month date))) date))\n                       \" days for month\
    \ \" \n                       string((date-part (date-month date)) string-length\
    \ (date-part (date-year date))) \".\")\n             (newline))\n     #f]\n  \
    \  [else (let ([date-month (string->number (string->symbol (string-ref date 0\
    \ string-length (date-month date))))]\n                     [date-year (string->number\
    \ (string->symbol (string-ref date 1 string-length (date-year date))))])\n   \
    \             (and (< 1 (string-length date))\n                     (< 1 (string-length\
    \ (date-month))\n                       (< 1 (string-length (date-year)))\n  \
    \                   (< 1 (string-length (date-month)) (> 12))))\n          (cond\
    \ [(< 1 (string-length date))\n                   (begin (display \"Invalid date.\
    \ Date is out of range. Date has \" \n                                 string((string-length\
    \ date) string-length (date-part (date-part (date-month date))) date))\n     \
    \                       (newline))\n                  #f]\n                [else\
    \ (let ([date (string->symbol (string-ref date 0 string-length (date-part (date-part\
    \ (date-month date))) date))]\n                             [days (string->number\
    \ (string->symbol (string-ref date 1 string-length (date-year date))))])\n   \
    \                       (and (< 1 (string-length date))\n                    \
    \           (< 1 (string-length (date-month))\n                              \
    \  (< 1 (string-length", "  (cond\n    [(empty? date) #f]\n    [(> (month (string->date\
    \ date)) 12) #f]\n    [(> (days (string->date date)) 31) #f]\n    [(> (days (string->date\
    \ date)) 30) #f]\n    [(> (month (string->date date)) 2) #f]\n    [(equal? (day\
    \ (string->date date)) days)] \n    [else #t]))\n", "  (cond\n    [(empty? date)\
    \ false]\n    [(and (empty? (substring date 0 2)) \n          (or (= (string-length\
    \ date) 4)\n              (= (string-length date) 6))\n          (= (string-length\
    \ date) 7))\n      false]\n    [(and (empty? (substring date 0 2)) \n        \
    \  (or (= (string-length date) 4)\n              (= (string-length date) 6))\n\
    \          (= (string-length date) 7)\n          (= (string-length date) 10))\n\
    \      false]\n    [(and (empty? (substring date 0 2)) \n          (or (= (string-length\
    \ date) 4)\n              (= (string-length date) 6))\n          (= (string-length\
    \ date) 7)\n          (= (string-length date) 10)\n          (= (string-length\
    \ date) 12))\n      false]\n    [(and (empty? (substring date 0 2)) \n       \
    \   (= (string-length date) 2)\n          (string= date \"01\" #t)\n         \
    \ (string= date \"03\" #t)\n          (string= date \"05\" #t)\n          (string=\
    \ date \"07\" #t)\n          (string= date \"08\" #t)\n          (string= date\
    \ \"10\" #t)\n          (string= date \"12\" #t))\n      false]\n    [(and (empty?\
    \ (substring date 0 2)) \n          (= (string-length date) 2)\n          (string=\
    \ date \"04\" #t)\n          (string= date \"06\" #t)\n          (string= date\
    \ \"09\" #t)\n          (string= date \"11\" #t))\n      true]\n    [(and (empty?\
    \ (substring date 0 2)) \n          (= (string-length date) 2)\n          (string=\
    \ date \"04\" #t)\n          (string= date \"06\" #t)\n          (string= date\
    \ \"09\" #t))\n      true]\n    [(and (empty? (substring date 0 2)) \n       \
    \   (= (string-length date) 2)\n          (string= date \"04\" #t))\n      true]\n\
    \    [(and (empty? (substring date 0 2)) \n          (= (string-length date) 2)\n\
    \          (string= date \"06\" #t))\n      true]\n    [(and (empty? (substring\
    \ date 0 2)) \n          (= (string-length date) 2)\n          (string= date \"\
    09\" #t))\n      true]\n    [(and (", "  ; Convert date string to a list of integers\n\
    \  (let ([date-str (string->list date)])\n    ; Validate that date string is not\
    \ empty\n    (cond [(empty? date-str) #f]\n          [else\n           ;; Validate\
    \ that days and months are not less than 1 or higher than 31\n           ;; for\
    \ months 1,3,5,7,8,10,12\n           ;; And, validate that days and months are\
    \ not less than 1 or higher than 30\n           ;; for months 4,6,9,11\n     \
    \      ;; And, validate that days and months are not less than 1 or higher than\
    \ 29\n           ;; for the month 2\n           ;; And validate that the months\
    \ are in the valid range 1-12\n           (and (number? (first date-str))\n  \
    \              (or (and (number? (second date-str))\n                        \
    \ (<= (second date-str) 31))\n                    (or (and (number? (second date-str))\n\
    \                             (<= (second date-str) 30))\n                   \
    \     (or (and (number? (second date-str))\n                                 (<=\
    \ (second date-str) 29))\n                                (and (number? (third\
    \ date-str))\n                                      (<= (third date-str) 12))))\n\
    \                    (and (number? (third date-str))\n                       \
    \ (<= (third date-str) 12))))\n           ;; Validate that date is in the format:\
    \ mm-dd-yyyy\n           (and (number? (first date-str))\n                (<=\
    \ (first date-str) 12)\n                (<= (second date-str) 0\n            \
    \          (or (= (second date-str) 1)\n                          (= (second date-str)\
    \ 3)\n                          (= (second date-str) 5)\n                    \
    \      (= (second date-str) 7)\n                          (= (second date-str)\
    \ 8)\n                          (= (second date-str) 10)\n                   \
    \       (= (second date-str) 12)\n                          (= (second date-str)\
    \ 4)))\n                (<= (third date-str) 0\n                      (or (= (third\
    \ date-str) 1)\n                          (= (third date-str) 3)\n           \
    \               (= (third date-str) 5)\n                          (= (third date-str)\
    \ 7)\n                          (= (third date-str) 8)\n                     \
    \     (= (third date-str) 10)\n                          (= (third date-str) 12)\n\
    \                          (= (third date-str) 6)))\n                (= (fourth\
    \ date-str) 0)\n                (", "  (not (empty? date)))\n", "  (cond \n  \
    \  [(string=? date \"\") false]\n    [(or (< (length? date) 3) (> (length? date)\
    \ 31)) false]\n    [(or (< (length (substring date 0 2)) 1) (> (length (substring\
    \ date 0 2)) 31)) false]\n    [(or (< (length (substring date 2 2)) 1) (> (length\
    \ (substring date 2 2)) 30)) false]\n    [(or (< (length (substring date 0 2))\
    \ 1) (> (length (substring date 0 2)) 29)) false]\n    [(and (< (length (substring\
    \ date 0 2)) 1) (< (length (substring date 2 2)) 12)) false]\n    [(or (< (length\
    \ (substring date 2 2)) 1) (> (length (substring date 2 2)) 12)) false]\n    [(and\
    \ (< (length (substring date 2 2)) 1) (< (length (substring date 2 2)) 31)) false]\n\
    \    [(and (< (length (substring date 0 2)) 1) (< (length (substring date 2 2))\
    \ 30)) false]\n    [(and (< (length (substring date 2 2)) 1) (< (length (substring\
    \ date 2 2)) 29)) false]\n    [(and (< (length (substring date 0 2)) 1) (< (length\
    \ (substring date 2 2)) 28)) false]\n    [(and (< (length (substring date 2 2))\
    \ 1) (< (length (substring date 2 2)) 31)) false]\n    [(and (< (length (substring\
    \ date 0 2)) 1) (< (length (substring date 2 2)) 30)) false]\n    [(and (< (length\
    \ (substring date 2 2)) 1) (< (length (substring date 2 2)) 29)) false]\n    [(and\
    \ (< (length (substring date 0 2)) 1) (< (length (substring date 2 2)) 28)) false]\n\
    \    [(and (< (length (substring date 2 2)) 1) (< (length (substring date 2 2))\
    \ 31)) false]\n    [(and (< (length (substring date 0 2)) 1) (< (length (substring\
    \ date 2 2)) 30)) false]\n    [(and (< (length (substring date 2 2)) 1) (< (length\
    \ (substring date 2 2)) 29)) false]\n    [(and (< (length (substring date 0 2))\
    \ 1) (< (length (substring date 2 2)) 28)) false]\n    [(", "  (define days (string-length\
    \ (string-replace date \"-\" \"\"))) \n  (define m1 (substring date 0 2)) \n \
    \ (define d2 (substring date 3 4)) \n  (define y1 (substring date 6 4)) \n  (define\
    \ y2 (substring date 9 6)) \n\n  (cond\n    [(and (empty? date) (> 1 days) (<\
    \ 31 days)) false]\n    [(and (empty? date) (< 1 days) (< 30 days)) false]\n \
    \   [(and (empty? date) (< 1 days) (< 29)) false]\n    [(and (< 1 m1) (< 12 m1))\
    \ false]\n    [(and (< 1 d1) (< 30 d1)) false]\n    [(and (< 1 y1) (< 32 y1))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 y2))\
    \ false]\n    [(and (< 1 y2) (< 100 y2)) false]\n    [(and (< 1 y2) (< 100 ",
  "  (cond\n    [(empty? date) #f]\n    [(< (string-length date) 5) #f]\n    [(< (string->integer\
    \ date) 1) #f]\n    [(< (string->integer (substring date 0 2)) 12) #f]\n    [(<\
    \ (string->integer (substring date 2 2)) 31) #f]\n    [(< (string->integer (substring\
    \ date 4 2)) 30) #f]\n    [(< (string->integer (substring date 6 2)) 29) #f]\n\
    \    [(< (string->integer (substring date 8 2)) 31) #f]\n    [(< (string->integer\
    \ (substring date 10 2)) 30) #f]\n    [(< (string->integer (substring date 12\
    \ 2)) 31) #f]\n    [else #t]))\n", "  (and (not (null? date))\n       (string=?\
    \ date \"~s\")\n       (< (string-length date) 7)\n       (> (string-length date)\
    \ 4)\n       (not (string=? date \"01-03-2000\")\n           (string=? date \"\
    15-01-2012\")\n           (string=? date \"04-0-2040\")\n           (string=?\
    \ date \"06-04-2020\")\n           (string=? date \"06/04/2020\"))\n       (not\
    \ (< 1 (string-length date))\n           (< 3 (string-length date))\n        \
    \   (< 29 (string-length date))\n           (< 12 (string-length date))))\n",
  "  (and (not (empty? date))\n       (> (length date) 3)\n       (> (modulo (length\
    \ date) 3) 2)\n       (<= (string-length (string-ref date 1 \"-\")) 2)\n     \
    \  (<= (string-length (string-ref date 2 \"-\")) 2)\n       (<= (string-length\
    \ (string-ref date 3 \"-\")) 4)\n       (string=? (string-ref date 1 \"-\") \"\
    -\")\n       (string=? (string-ref date 2 \"-\") \"-\")\n       (string=? (string-ref\
    \ date 3 \"-\") \"-\")\n       (= (string-length (string-ref date 1 \"-\")) 2)\n\
    \       (= (string-length (string-ref date 2 \"-\")) 2)\n       (= (string-length\
    \ (string-ref date 3 \"-\")) 4)\n       (= (string-length (string-ref date 4 \"\
    -\")) 4)\n       (= (string-length (string-ref date 5 \"-\")) 4)\n       (= (string-length\
    \ (string-ref date 6 \"-\")) 4)\n       (= (string-length (string-ref date 7 \"\
    -\")) 4)\n       (= (string-length (string-ref date 8 \"-\")) 4)\n       (= (string-length\
    \ (string-ref date 9 \"-\")) 4)\n       (= (string-length (string-ref date 10\
    \ \"-\")) 4)\n       (= (string-length (string-ref date 11 \"-\")) 4)\n      \
    \ (= (string-length (string-ref date 12 \"-\")) 4)\n       (= (string-length (string-ref\
    \ date 13 \"-\")) 4)\n       (= (string-length (string-ref date 14 \"-\")) 4)\n\
    \       (= (string-length (string-ref date 15 \"-\")) 4)\n       (= (string-length\
    \ (string-ref date 16 \"-\")) 4)\n       (= (string-length (string-ref date 17\
    \ \"-\")) 4)\n       (= (string-length (string-ref date 18 \"-\")) 4)\n      \
    \ (= (string-length (string-ref date 19 \"-\")) 4)\n       (= (string-length (string-ref\
    \ date 20 \"-\")) 4)\n       (= (string-length (string-ref date 21 \"-\")) 4)\n\
    \       (= (string-length (string-ref date 22 \"-\")) 4)\n       (= (string-length\
    \ (string-ref date 23 \"-\")) 4)\n       (= (string-length (string-ref date 24\
    \ \"-\")) 4)\n       (= (string-length (string-ref date 25 \"-\")) 4)\n      \
    \ (= (string-length (string-ref date 26 \"-\")) 4)\n       (= (string-length (string-ref ",
  "  (let ([mm-dd-yyyy (substring date 0 2)])\n    (cond\n      [(empty? date) #false]\n\
    \      [(< mm-dd-yyyy 12) #false]\n      [(or (not (number? mm-dd-yyyy)) (< mm-dd-yyyy\
    \ 31)) #false]\n      [(or (not (number? mm-dd-yyyy)) (< mm-dd-yyyy 30)) #false]\n\
    \      [(or (not (number? mm-dd-yyyy)) (< mm-dd-yyyy 29)) #false]\n      [(or\
    \ (not (number? mm-dd-yyyy)) (< mm-dd-yyyy 28)) #false]\n      [(and (number?\
    \ mm-dd-yyyy) (< mm-dd-yyyy 28)) (< (substring date 1 1) '1') (< (substring date\
    \ 1 2) '3') (< (substring date 2 1) '5') (< (substring date 2 2) '7') (< (substring\
    \ date 3 1) '8') (< (substring date 3 2) '10') (< (substring date 4 1) '12')]\n\
    \      [else #true]\n    )\n  )\n)\n", "  (cond\n    [(empty? date) false]\n \
    \   [(<= 1 (length date)) false]\n    [(<= 31 (length (substring date 0 2))) false]\n\
    \    [(<= 30 (length (substring date 0 2))) false]\n    [(<= 29 (length (substring\
    \ date 0 2))) false]\n    [(<= 12 (length (substring date 0 2))) false]\n    [(<=\
    \ 31 (length (substring date 0 2))) false]\n    [(<= 30 (length (substring date\
    \ 0 2))) false]\n    [(<= 29 (length (substring date 0 2))) false]\n    [(<= 12\
    \ (length (substring date 0 2))) false]\n    [else true]\n  ))\n", "  (cond\n\
    \    ((not (string? date))\n     (raise (wrong-date)))\n    ((< 1 (string-length\
    \ date))\n     (raise (too-few-days)))\n    ((< 31 (string-length date))\n   \
    \  (raise (too-many-days-month-1)))\n    ((< 30 (string-length date))\n     (raise\
    \ (too-many-days-month-3)))\n    ((< 29 (string-length date))\n     (raise (too-many-days-month-2)))\n\
    \    ((string-match (string-ref date 0 (string- (length date) 3)) \"[0-9]{1,2}\"\
    )\n     (raise (wrong-date)))\n    ((string-match (string-ref date 0 (string-\
    \ (length date) 4)) \"[0-1][0-9]\")\n     (raise (wrong-date)))\n    ((string-match\
    \ (string-ref date 0 (string- (length date) 6)) \"[0-9]{2}\")\n     (raise (wrong-date)))\n\
    \    ((< 12 (string-length date))\n     (raise (too-many-months-12)))\n    ((string-match\
    \ (string-ref date 0 (string- (length date) 3)) \"[0-3]{1}[0-9]{2}\")\n     (raise\
    \ (wrong-date)))\n    ((string-match (string-ref date 0 (string- (length date)\
    \ 4)) \"[0-3]{1}[0-9]\")\n     (raise (wrong-date)))\n    ((string-match (string-ref\
    \ date 0 (string- (length date) 6)) \"[0-9]{4}\")\n     (raise (wrong-date)))\n\
    \    ((string-match (string-ref date 0 (string- (length date) 8)) \"[0-9]{6}\"\
    )\n     (raise (wrong-date)))\n    ((string-match (string-ref date 0 (string-\
    \ (length date) 10)) \"[0-9]{8}\")\n     (raise (wrong-date)))\n    ((string-match\
    \ (string-ref date 0 (string- (length date) 12)) \"[0-9]{10}\")\n     (raise (wrong-date)))\n\
    \    ((string-match (string-ref date 0 (string- (length date) 13)) \"[0-9]{12}\"\
    )\n     (raise (wrong-date)))\n    ((string-match (string-ref date 0 (string-\
    \ (length date) 14)) \"[0-9]{13}\")\n     (raise (wrong-date)))\n    ((string-match\
    \ (string-ref date 0 (string- (length date) 15)) \"[0-9]{14}\")\n     (raise (wrong-date)))\n\
    \    ((string-match (string-ref date 0 (string- (length date) 16)) \"[0-9]{15}\"\
    )\n     (raise (wrong-date)))\n    ((string-match (string-ref date 0 (string-\
    \ (length date) 17)) \"[0-9", "  (and\n    (not (empty? date))\n    (< 1 (string-length\
    \ date))\n    (> 31 (string-to-numbers (substring date 1 2)))\n    (< 1 (string-to-numbers\
    \ (substring date 2 2)))\n    (> 30 (string-to-numbers (substring date 3 2)))\n\
    \    (< 1 (string-to-numbers (substring date 4 2)))\n    (> 29 (string-to-numbers\
    \ (substring date 5 2)))\n    (< 1 (string-to-numbers (substring date 6 2)))\n\
    \    (> 12 (string-to-numbers (substring date 7 2)))\n    (< 1 (string-to-numbers\
    \ (substring date 8 2)))\n    (> 11 (string-to-numbers (substring date 9 2)))\n\
    \    (< 1 (string-to-numbers (substring date 10 2)))\n    (> 4 (string-to-numbers\
    \ (substring date 11 2)))\n    (< 1 (string-to-numbers (substring date 12 2)))\n\
    \    (= (string-to-numbers (substring date 0 2)) (string-to-numbers (substring\
    \ date 1 2)))\n    (= (string-to-numbers (substring date 0 3)) (string-to-numbers\
    \ (substring date 2 2)))\n    (= (string-to-numbers (substring date 0 4)) (string-to-numbers\
    \ (substring date 3 2)))\n    (= (string-to-numbers (substring date 0 5)) (string-to-numbers\
    \ (substring date 4 2)))\n    (= (string-to-numbers (substring date 0 6)) (string-to-numbers\
    \ (substring date 5 2)))\n    (= (string-to-numbers (substring date 0 7)) (string-to-numbers\
    \ (substring date 6 2)))\n    (= (string-to-numbers (substring date 0 8)) (string-to-numbers\
    \ (substring date 7 2)))\n    (= (string-to-numbers (substring date 0 9)) (string-to-numbers\
    \ (substring date 8 2)))\n    (= (string-to-numbers (substring date 0 10)) (string-to-numbers\
    \ (substring date 9 2)))\n    (= (string-to-numbers (substring date 0 11)) (string-to-numbers\
    \ (substring date 10 2)))\n    (= (string-to-numbers (substring date 0 12)) (string-to-numbers\
    \ (substring date 11 2)))\n    (= (string-to-numbers (substring date 1 0)) (=\
    \ (string-to-numbers (substring date 2 0)) (= (string-to-numbers (substring date\
    \ 3 0)) (= (string-to-numbers (substring date 4 0)) (= (string-to-numbers (substring\
    \ date 5 0)) (= (string-to-numbers (substring date 6 0)) (= (string-to-numbers\
    \ (substring date 7 0)) (= (string-to-numbers (substring date 8 0)) (", "  (cond\n\
    \    [(empty? date) #t]\n    [(< (length date) 2) #f]\n    [(> (length date) 6)\
    \ #f]\n    [(string-char? date #\\D) #f]\n    [(< (string-length date) 3) #f]\n\
    \    [(< (string-length date) 2) #f]\n    [(< (string-length date) 1) #f]\n  \
    \  [(< date '01-02) #f]\n    [(< date '12-31) #f]\n    [(< date '01-31) #f]\n\
    \    [(< date '01-29) #f]\n    [(< date '02-1) #f]\n    [(< date '02-3) #f]\n\
    \    [(< date '02-29) #f]\n    [else #t]))\n", "  (cond\n    [(and (not (empty?\
    \ date)) (< 1 (length date)) (< 31 (check-month-length date)) (< 30 (check-month-length\
    \ date)) (< 29 (check-month-length date))) (boolean? date)]\n    [(and (not (empty?\
    \ date)) (< 1 (length date)) (< 31 (check-month-length date)) (< 30 (check-month-length\
    \ date))) (boolean? date)]\n    [(and (not (empty? date)) (< 1 (length date))\
    \ (< 30 (check-month-length date))) (boolean? date)]\n    [(and (not (empty? date))\
    \ (< 1 (length date))) (boolean? date)])\n)\n", "  (cond\n    [(empty? date) #t]\n\
    \    [(< (number->string (string-length date)) 4) #f]\n    [(> (string->number\
    \ (substring (string date) (substring (string date) (substring (string date) 0\
    \ 1) 0 2)) 1) #f]\n    [(< (string->number (substring (string date) (substring\
    \ (string date) (substring (string date) 1 2) 0 2)) 31) #f]\n    [(> (string->number\
    \ (substring (string date) (substring (string date) (substring (string date) 1\
    \ 2) 0 2)) 30) #f]\n    [(< (string->number (substring (string date) (substring\
    \ (string date) (substring (string date) 1 2) 0 2)) 29) #f]\n    [(> (string->number\
    \ (substring (string date) (substring (string date) (substring (string date) 1\
    \ 2) 0 2)) 12) #f]\n    [else #t]\n  )\n)\n", "  (cond\n    [(empty? date) #f]\n\
    \    [(< 1 (string-length date)) #f]\n    [(< 1 (string-length date) (* 3 5))\n\
    \    #f]\n    [(< 1 (string-length date) (* 2 3))\n    #f]\n    [(< 1 (string-length\
    \ date) (* 2 4))\n    #f]\n    [(< 1 (string-length date) (* 2 6))\n    #f]\n\
    \    [(< 1 (string-length date) (* 2 9))\n    #f]\n    [(< 1 (string-length date)\
    \ (* 2 11))\n    #f]\n    [(< 1 (string-length date) (* 2 29))\n    #f]\n    [(<\
    \ 1 (string-length date) (* 2 31))\n    #t]\n    [(< 1 (string-length date) (*\
    \ 3 1))\n    #f]\n    [(< 1 (string-length date) (* 3 3))\n    #t]\n    [(< 1\
    \ (string-length date) (* 3 5))\n    #t]\n    [(< 1 (string-length date) (* 3\
    \ 7))\n    #t]\n    [(< 1 (string-length date) (* 3 8))\n    #t]\n    [(< 1 (string-length\
    \ date) (* 3 10))\n    #t]\n    [(< 1 (string-length date) (* 3 12))\n    #t]\n\
    \    [(< 1 (string-length date) (* 3 13))\n    #t]\n    [(< 1 (string-length date)\
    \ (* 3 14))\n    #t]\n    [(< 1 (string-length date) (* 3 15))\n    #t]\n    [(<\
    \ 1 (string-length date) (* 3 16))\n    #t]\n    [(< 1 (string-length date) (*\
    \ 3 17))\n    #t]\n    [(< 1 (string-length date) (* 3 18))\n    #t]\n    [(<\
    \ 1 (string-length date) (* 3 19))\n    #t]\n    [(< 1 (string-length date) (*\
    \ 3 20))\n    #t]\n    [(< 1 (string-length date) (* 3 21))\n    #t]\n    [(<\
    \ 1 (string-length date) (* 3 22))\n    #t]\n    [(< 1 (string-length date) (*\
    \ 3 23))\n    #t]\n    [(< 1 (string-length date) (* 3 24))\n    #t]\n    [(<\
    \ 1 (string-length date) (* 3 25))\n    #t]\n    [(< 1 (string-length date) (*\
    \ 3 26))\n    #t]\n    [(< 1 (string-length date", "  (cond\n    [(empty? date)\
    \ false]\n    [(< 1 (string-length date))\n     (cond\n       [(< 1 (string-length\
    \ date))\n        (error \"Invalid date: Too short\")] \n       [else false]]\n\
    \    [(< 1 (string-length date))\n     (cond\n       [(< 1 (string-length date))\n\
    \        (error \"Invalid date: Too short\")] \n       [else false]]\n    [(<\
    \ 1 (string-length date))\n     (cond\n       [(< 1 (string-length date))\n  \
    \      (error \"Invalid date: Too short\")] \n       [else false]]\n    [(< 1\
    \ (string-length date))\n     (cond\n       [(< 1 (string-length date))\n    \
    \    (error \"Invalid date: Too short\")] \n       [else false]]\n    [(< 1 (string-length\
    \ date))\n     (cond\n       [(< 1 (string-length date))\n        (error \"Invalid\
    \ date: Too short\")] \n       [else false]]\n    [(< 1 (string-length date))\n\
    \     (cond\n       [(< 1 (string-length date))\n        (error \"Invalid date:\
    \ Too short\")] \n       [else false]]\n    [(< 1 (string-length date))\n    \
    \ (cond\n       [(< 1 (string-length date))\n        (error \"Invalid date: Too\
    \ short\")] \n       [else false]]\n    [(< 1 (string-length date))\n     (cond\n\
    \       [(< 1 (string-length date))\n        (error \"Invalid date: Too short\"\
    )] \n       [else false]]\n    [(< 1 (string-length date))\n     (cond\n     \
    \  [(< 1 (string-length date))\n        (error \"Invalid date: Too short\")] \n\
    \       [else false]]\n    [(< 1 (string-length date))\n     (cond\n       [(<\
    \ 1 (string-length date))\n        (error \"Invalid date: Too short\")] \n   \
    \    [else false]]\n    [(< 1 (string-length date))\n     (cond\n       [(< 1\
    \ (string-length date))\n        (error \"Invalid date: Too short\")] \n     \
    \  [else false]]\n    [(< 1 (string-length date))\n     (cond\n       [(< 1 (string-length\
    \ date))\n        (error \"Invalid date: Too short\")] \n       [else false]]\n\
    \    [(< 1 (string-length date))\n     (cond\n       [(< 1 (string-length date))\n\
    \        (error \"Invalid date: Too short\")] \n       [else false]]\n    [(<\
    \ 1 (string-length date))\n     (cond\n       [(< 1 (string-length date", "  (cond\n\
    \    [(and (empty? date) \n           (< 1 (length date))\n           (< 1 (length\
    \ date) (substring date 0 (substring date 1 2)))\n           (< 1 (length date)\
    \ (substring date 0 (substring date 1 (substring date 1 2))))\n           (< 1\
    \ (length date) (substring date 0 (substring date 1 (substring date 1 2)) (substring\
    \ date 1 (substring date 1 3)))) \n          (< 1 (length date) (substring date\
    \ 0 (substring date 1 (substring date 1 2)) (substring date 1 (substring date\
    \ 1 3)))\n           (< 1 (length date) (substring date 0 (substring date 1 (substring\
    \ date 1 2)) (substring date 1 (substring date 1 3)))\n           (< 1 (length\
    \ date) (substring date 0 (substring date 1 (substring date 1 2)) (substring date\
    \ 1 (substring date 1 3))))\n          (< 1 (length date) (substring date 0 (substring\
    \ date 1 (substring date 1 2)) (substring date 1 (substring date 1 3)))\n    \
    \       (< 1 (length date) (substring date 0 (substring date 1 (substring date\
    \ 1 2)) (substring date 1 (substring date 1 3))))\n          (< 1 (length date)\
    \ (substring date 0 (substring date 1 (substring date 1 2)) (substring date 1\
    \ (substring date 1 3)))\n           (< 1 (length date) (substring date 0 (substring\
    \ date 1 (substring date 1 2)) (substring date 1 (substring date 1 3))))\n   \
    \       (< 1 (length date) (substring date 0 (substring date 1 (substring date\
    \ 1 2)) (substring date 1 (substring date 1 3)))\n           (< 1 (length date)\
    \ (substring date 0 (substring date 1 (substring date 1 2)) (substring date 1\
    \ (substring date 1 3))))\n          (< 1 (length date) (substring date 0 (substring\
    \ date 1 (substring date 1 2)) (substring date 1 (substring date 1 3))))\n   \
    \       (< 1 (length date) (substring date 0 (substring date 1 (substring date\
    \ 1 2)) (substring date 1 (substring date 1 3))))\n          (< 1 (length date)\
    \ (substring date 0 (substring date 1 (substring date 1 2))))\n          (< 1\
    \ (length date) (substring date 0 (substring date 1 (substring date 1 2))))]\n\
    \    [else\n     False]))\n", "  (or (not (empty? date))\n      (< (length (string-chars\
    \ (substring date 0 2))) 2)\n      (< (length (string-chars (substring date 2\
    \ 4))) 2)\n      (< (length (string-chars (substring date 2 6))) 2)\n      (<\
    \ (length (string-chars (substring date 4 6))) 2)\n      (< (length (string-chars\
    \ (substring date 6 8))) 2)\n      (< (length (string-chars (substring date 8\
    \ 10))) 2)\n      (< (length (string-chars (substring date 10 12))) 2)\n     \
    \ (< (length (string-chars (substring date 12 14))) 2)\n      (< (length (string-chars\
    \ (substring date 14 16))) 2)\n      (< (length (string-chars (substring date\
    \ 16 18))) 2)\n      (< (length (string-chars (substring date 18 20))) 2)\n  \
    \    (< (length (string-chars (substring date 20 22))) 2)\n      (< (length (string-chars\
    \ (substring date 22 24))) 2)\n      (< (length (string-chars (substring date\
    \ 24 26))) 2)\n      (< (length (string-chars (substring date 26 28))) 2)\n  \
    \    (< (length (string-chars (substring date 28 30))) 2)\n      (< (length (string-chars\
    \ (substring date 30 32))) 2)\n      (< (length (string-chars (substring date\
    \ 32 34))) 2)\n      (< (length (string-chars (substring date 34 36))) 2)\n  \
    \    (< (length (string-chars (substring date 36 38))) 2)\n      (< (length (string-chars\
    \ (substring date 38 40))) 2)\n      (< (length (string-chars (substring date\
    \ 40 42))) 2)\n      (< (length (string-chars (substring date 42 44))) 2)\n  \
    \    (< (length (string-chars (substring date 44 46))) 2)\n      (< (length (string-chars\
    \ (substring date 46 48))) 2)\n      (< (length (string-chars (substring date\
    \ 48 50))) 2)\n      (< (length (string-chars (substring date 50 52))) 2)\n  \
    \    (< (length (string-chars (substring date 52 54))) 2)\n      (< (length (string-chars\
    \ (substring date 54 56))) 2)\n      (< (length (string-chars (substring date\
    \ 56 58))) 2)\n      (< (length (string-chars (substring date 58 60))) 2)\n  \
    \    (< (length (string-chars (", "  (= (length date) 4)\n  (= (< 1 (string-length\
    \ date))\n     (string-length date)\n     (> 3 (string-length date))\n     (string-length\
    \ date)\n     (> 2 (string-length date))\n     (string-length date)\n     (> 29\
    \ (string-length date))\n     (> 29 (string-length date))\n     (string-length\
    \ date)\n     (> 12 (string-length date))\n     (> 12 (string-length date))\n\
    \     (> 12 (string-length date))\n     (> 12 (string-length date))\n     (> 12\
    \ (string-length date))\n     (> 12 (string-length date))\n     (> 12 (string-length\
    \ date))\n     (> 12 (string-length date))\n     (> 12 (string-length date))\n\
    \     (> 12 (string-length date))\n     (> 12 (string-length date))\n     (> 12\
    \ (string-length date))\n     (> 12 (string-length date))\n     (> 12 (string-length\
    \ date))\n     (> 12 (string-length date))\n     (> 12 (string-length date))\n\
    \     (> 12 (string-length date))\n     (> 12 (string-length date))\n     (> 12\
    \ (string-length date))\n     (> 12 (string-length date))\n     (> 12 (string-length\
    \ date))\n     (> 12 (string-length date))\n     (> 12 (string-length date))\n\
    \     (> 12 (string-length date))\n     (> 12 (string-length date))\n     (> 12\
    \ (string-length date))\n     (> 12 (string-length date))\n     (> 12 (string-length\
    \ date))\n     (> 12 (string-length date))\n     (> 12 (string-length date))\n\
    \     (> 12 (string-length date))\n     (> 12 (string-length date))\n     (> 12\
    \ (string-length date))\n     (> 12 (string-length date))\n     (> 12 (string-length\
    \ date))\n     (> 12 (string-length date))\n     (> 12 (string-length date))\n\
    \     (> 12 (string-length date))\n     (> 12 (string-length date))\n     (> 12\
    \ (string-length date))\n     (> 12 (string-length date))\n     (> 12 (string-length\
    \ date))\n     (> 12 (string-length date))\n     (> 12 (string-length date))\n\
    \     (> 12 (string-length date))\n     (> 12 (string-length date))\n     (> 12\
    \ (string-length date))\n     (> 12 (string-length date))\n     (> 12 (string-length\
    \ date))", "  (and (not (empty? date))\n       (< 1 (string-length date))\n  \
    \     (< 31 (string-length date \"dd\"))\n       (< 30 (string-length date \"\
    dd\"))\n       (< 29 (string-length date \"dd\"))\n       (< 12 (string-length\
    \ date \"mm\"))\n       (string=? (substring date 0 2) \"-\")\n       (string=?\
    \ (substring date 2 2) \"/\")\n       (string=? (substring date 4 2) \"-\")\n\
    \       (string=? (substring date 6 4) \"-\")))\n</code>\n<|/ a tags=date,racket\
    \ |>\n<| c |>\nNice answer! But `(check-expect (valid_date (substring \"10-11-2012\"\
    \ \"10\" \"11\" \"2012\"))  true)` returns false for me.\n<|/ c |>\n<| c |>\n\
    : I changed my code to fix a typo. My bad. Thank you!\n<|/ c |>\n<| a dscore=2\
    \ |>\nAs I mentioned in my comment to John's answer, the Racket function string-range\
    \ is the one you want. It allows you to specify start and end indices to extract\
    \ from a string, which are very handy.\nHowever, it won't work correctly with\
    \ the format dd-mm-yyyy. There's no way for Racket to know that you're requesting\
    \ month and day separately. Rather than writing your own function, it's better\
    \ to use a library function.\nThe one I recommend is called string-pattern, which\
    \ is available in the Racket web site, or available on Package and can be installed\
    \ directly from DrRacket. Here is an example to help you get started:\n<code>",
  "  (cond\n    [(string? date) (string->number (string-length date))]\n    [(< (car\
    \ date) 0) false]\n    [(< (cadr date) 1) false]\n    [(< (caddr date) 31) false]\n\
    \    [(< (cadddr date) 30) false]\n    [(< (cadddr date) 29) false]\n    [(< (cadddr\
    \ (caddr date) 12)) false]\n    [(< (caddr date) 12) false]\n    [(< (caddr date\
    \ 0) false) false]\n    [(< (caddr date 1) false) false]\n    [(< (caddr date\
    \ 2) false) false]\n    [(< (caddr date 3) false) false]\n    [(< (caddr date\
    \ 4) false) false]\n    [(< (caddr date 5) false) false]\n    [(< (caddr date\
    \ 6) false) false]\n    [(< (caddr date 7) false) false]\n    [(< (caddr date\
    \ 8) false) false]\n    [(< (caddr date 9) false) false]\n    [(< (caddr date\
    \ 10) false) false]\n    [(< (caddr date 11) false) false]\n    [(< (caddr date\
    \ 12) false) false]\n    [(< (caddr date 13) false) false]\n    [(< (caddr date\
    \ 14) false) false]\n    [(< (caddr date 15) false) false]\n    [(< (caddr date\
    \ 16) false) false]\n    [(< (caddr date 17) false) false]\n    [(< (caddr date\
    \ 18) false) false]\n    [(< (caddr date 19) false) false]\n    [(< (caddr date\
    \ 20) false) false]\n    [(< (caddr date 21) false) false]\n    [(< (caddr date\
    \ 22) false) false]\n    [(< (caddr date 23) false) false]\n    [(< (caddr date\
    \ 24) false) false]\n    [(< (caddr date 25) false) false]\n    [(< (caddr date\
    \ 26) false) false]\n    [(< (caddr date 27) false) false]\n    [(< (caddr date\
    \ 28) false) false]\n    [(< (caddr date ", "  (cond [(string=? date \"\") false]\n\
    \        [(number=? (string-to-integer date) 0) false]\n        [(< 1 (string-to-integer\
    \ date)) false]\n        [(< 31 (string-to-integer date)) false]\n        [(<\
    \ 30 (string-to-integer date)) false]\n        [(< 29 (string-to-integer date))\
    \ false]\n        [(< 12 (string-to-integer date)) false]\n        [(string=?\
    \ (string-ref date 0 1) \"-\") false]\n        [(string=? (string-ref date 0 2)\
    \ \"-\") false]\n        [(string=? (string-ref date 1 2) \"-\") false]\n    \
    \    [(string=? (string-ref date 1 2) \"/\") false]\n        [(string=? (string-ref\
    \ date 2 2) \"/\") false]\n        [(string=? (string-ref date 0 2) \"/\") false]\n\
    \        [(string=? (string-ref date 2 2) \"/\") false]\n        [(string=? (string-ref\
    \ date 1 3) \"/\") false]\n        [(string=? (string-ref date 2 3) \"/\") false]\n\
    \        [(string=? (string-ref date 0 3) \"/\") false]\n        [(string=? (string-ref\
    \ date 2 3) \"/\") false]\n        [(string=? (string-ref date 1 4)) false]\n\
    \        [(string=? (string-ref date 2 4)) false]\n        [(string=? (string-ref\
    \ date 0 4)) false]\n        [(string=? (string-ref date 2 4)) false]\n      \
    \  [(string=? (string-ref date 1 5)) false]\n        [(string=? (string-ref date\
    \ 2 5)) false]\n        [(string=? (string-ref date 0 5)) false]\n        [(string=?\
    \ (string-ref date 2 5)) false]\n        [(string=? (string-ref date 1 6)) false]\n\
    \        [(string=? (string-ref date 2 6)) false]\n        [(string=? (string-ref\
    \ date 0 6)) false]\n        [(string=? (string-ref date 2 6)) false]\n      \
    \  [(string=? (string-ref date 1 7)) false]\n        [(string=? (string-ref date\
    \ 2 7)) false]\n        [(string=? (string-ref date 0 7)) false]\n        [(string=?\
    \ (string-ref date 2 7)) false]\n        [(string=? (string-ref date 1 8)) false]\n\
    \        [(string=? (string-ref date 2 8)) false]\n        [(string=? (string-ref\
    \ date 0 8)) false]\n        [(string=? (string-ref date 2 8)) false]\n      \
    \  [(string=? (", "  (let ([month (substring date 0 (string-length date))]\n \
    \       [year (substring date (string-length date) (+ 1 (string-length date)))])\n\
    \    (and (number? (char->integer month))\n         (number? (char->integer year))\n\
    \         (and (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ year))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n              (< 1 (char->integer month))\n              (< 1 (char->integer\
    \ month))\n", "  (if (empty? date)\n      #t\n      (> (length date) 2) \n   \
    \   #f\n      (< (length date) 9)\n      #f\n      (< (length date) 13)\n    \
    \  #f\n      (< (length date) 14)\n      #f\n      (< (length date) 18)\n    \
    \  #f\n      (< (length date) 21) \n      #f\n      (< (length date) 25)\n   \
    \   #f\n      (< (length date) 29)\n      #f\n      (< (length date) 31) \n  \
    \    #f\n      (< (length date) 30) \n      #f\n      (< (length date) 31) \n\
    \      #f\n      (< (length date) 30) \n      #f\n      (< (length date) 29) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length date) 30) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length date) 30) \n\
    \      #f\n      (< (length date) 29) \n      #f\n      (< (length date) 31) \n\
    \      #f\n      (< (length date) 30) \n      #f\n      (< (length date) 31) \n\
    \      #f\n      (< (length date) 30) \n      #f\n      (< (length date) 29) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length date) 30) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length date) 30) \n\
    \      #f\n      (< (length date) 29) \n      #f\n      (< (length date) 31) \n\
    \      #f\n      (< (length date) 30) \n      #f\n      (< (length date) 31) \n\
    \      #f\n      (< (length date) 30) \n      #f\n      (< (length date) 29) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length date) 30) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length date) 30) \n\
    \      #f\n      (< (length date) 29) \n      #f\n      (< (length date) 31) \n\
    \      #f\n      (< (length date) 30) \n      #f\n      (< (length date) 31) \n\
    \      #f\n      (< (length date) 30) \n      #f\n      (< (length date) 29) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length date) 30) \n\
    \      #f\n      (< (length date) 31) \n      #f\n      (< (length ", "  (cond\n\
    \    [(empty? date) #false]\n    [(< 1 (string-length date)) #false]\n    [(<\
    \ 31 (string-length date))\n     (< (string-length date) (length (string-to-list\
    \ (substring date 0 2))))\n     (< (string-length date) (length (string-to-list\
    \ (substring date 0 1)))]\n    [(< 30 (string-length date))\n     (< (string-length\
    \ date) (length (string-to-list (substring date 0 2)))\n       (< (string-length\
    \ date) (length (string-to-list (substring date 0 1))))\n     (< (string-length\
    \ date) (length (string-to-list (substring date 0 1))))]\n    [(< 29 (string-length\
    \ date))\n     (< (string-length date) (length (string-to-list (substring date\
    \ 0 1)))\n       (< (string-length date) (length (string-to-list (substring date\
    \ 0 1))))\n       (< (string-length date) (length (string-to-list (substring date\
    \ 0 1))))\n       (< (string-length date) (length (string-to-list (substring date\
    \ 0 1))))])\n    [(string-equal? (substring date 0 2) \"-\")\n     (< (string-length\
    \ date) (length (string-to-list (substring date 1 3)))]\n    [(string-equal? (substring\
    \ date 0 2) \"/\")\n     (< (string-length date) (length (string-to-list (substring\
    \ date 1 3)))]\n    [(string-equal? (substring date 0 2) \"-\")\n     (< (string-length\
    \ date) (length (string-to-list (substring date 1 2)))]\n    [(string-equal? (substring\
    \ date 0 2) \"/\")\n     (< (string-length date) (length (string-to-list (substring\
    \ date 1 2)))]\n    [(string-equal? (substring date 0 1) \"-\")\n     (< (string-length\
    \ date) (length (string-to-list (substring date 1 1)))]\n    [(string-equal? (substring\
    \ date 0 1) \"/\")\n     (< (string-length date) (length (string-to-list (substring\
    \ date 1 1)))]\n    [(string-equal? (substring date 0 1) \"-\")\n     (< (string-length\
    \ date) (length (string-to-list (substring date 1 1)))]\n    [(string-equal? (substring\
    \ date 0 1) \"-\")\n     (< (string-length date) (length (string-to-list (substring\
    \ date 1 1)))]\n    [(string-equal? (substring date 0 1) \"-\")\n     (< (string-length\
    \ date) (length (string-to-list (substring date 1 1)))]\n    [(string-equal? (substring\
    \ date 0 1) \"-\")\n     (< (string-length date", "  (cond\n    [(empty? date)\
    \ #True]\n    [(< (days date) 1) #False]\n    [(< (days date) (+ 31 months))\n\
    \     (if (= (months date) 1) #True #False)]\n    [(< (days date) (+ 30 months))\n\
    \     (if (= (months date) 3) #True #False)]\n    [(< (days date) (+ 29 months))\n\
    \     (if (= (months date) 2) #True #False)]\n    [else (error \"The date is not\
    \ valid.\")]))\n", "  (if (string-empty? date)\n      (print false \"date is empty\"\
    )\n      (and (< 1 (string-length date))\n           (< 31 (string-length date\
    \ (substring date 0 2))) \n           (< 30 (string-length date (substring date\
    \ 0 3))) \n           (< 29 (string-length date (substring date 0 4)))\n     \
    \      (< 12 (string-length date (substring date 0 6)))\n           (= (substring\
    \ date 0 2) \"-\")\n           (= (substring date 0 3) \"-\")\n           (= (substring\
    \ date 0 4) \"-\")\n           (= (substring date 0 6) \"-\")\n           (= (string-length\
    \ date (substring date 0 2)) 2)\n           (= (string-length date (substring\
    \ date 0 3)) 2)\n           (= (string-length date (substring date 0 4)) 2)\n\
    \           (= (string-length date (substring date 0 6)) 2)\n           (= (string-length\
    \ date (substring date 0 8)) 2)\n           (= (string-length date (substring\
    \ date 0 10)) 2)\n           (= (string-length date (substring date 0 12)) 2)\n\
    \           (= (string-length date (substring date 0 14)) 2)\n           (= (string-length\
    \ date (substring date 0 16)) 2)\n           (= (string-length date (substring\
    \ date 0 18)) 2))))\n", "  (cond ((and (not (null? date)) \n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (length date)))\n              (< 1\
    \ (length date)))\n         (and (not (< 1 (", "  (cond\n    [(empty? date) #t]\n\
    \    [(= (length date) 4) #t]\n    [(< 1 (string->number date)) #f]\n    [(< 1\
    \ (string->number (string-ref date 0 1))) #f]\n    [(< 1 (string->number (string-ref\
    \ date 0 2))) #f]\n    [(< 1 (string->number (string-ref date 0 3))) #f]\n   \
    \ [(< 1 (string->number (string-ref date 0 4))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 1 1))) #f]\n    [(< 1 (string->number (string-ref date 1 2)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 1 3))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 1 4))) #f]\n    [(< 1 (string->number (string-ref date 2 1)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 2 2))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 2 3))) #f]\n    [(< 1 (string->number (string-ref date 2 4)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 3 1))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 3 2))) #f]\n    [(< 1 (string->number (string-ref date 3 3)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 3 4))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 4 1))) #f]\n    [(< 1 (string->number (string-ref date 4 2)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 4 3))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 4 4))) #f]\n    [(< 1 (string->number (string-ref date 5 1)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 5 2))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 5 3))) #f]\n    [(< 1 (string->number (string-ref date 5 4)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 6 1))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 6 2))) #f]\n    [(< 1 (string->number (string-ref date 6 3)))\
    \ #f]\n    [(< 1 (string->number (string-ref date 6 4))) #f]\n    [(< 1 (string->number\
    \ (string-ref date 7 1))) #f]\n    [(< 1 (string->number (string-ref date 7 ",
  "  (if (string? date)\n      (and (not (empty? date))\n           (< (count date)\
    \ 3)\n           (> (count date) 2)\n           (< (count (string-split date #\\\
    - #\\-)) 3)\n           (> (count (string-split date #\\- #\\-)) 2)\n        \
    \   (= (string-ref date 1)\n               (string-to-int (string-ref date 0)))\n\
    \           (= (string-ref date 2)\n               (string-to-int (string-ref\
    \ (substring date 2 1)))\n               (string-to-int (string-ref (substring\
    \ date 3 1)))\n               (string-to-int (string-ref (substring date 4 1)))\n\
    \               (string-to-int (string-ref (substring date 5 1)))\n          \
    \     (string-to-int (string-ref (substring date 6 1)))\n               (string-to-int\
    \ (string-ref (substring date 7 1)))\n               (string-to-int (string-ref\
    \ (substring date 8 1)))\n               (string-to-int (string-ref (substring\
    \ date 9 1)))\n               (string-to-int (string-ref (substring date 10 1)))\n\
    \               (string-to-int (string-ref (substring date 11 1)))\n         \
    \      (string-to-int (string-ref (substring date 12 1)))\n               (string-to-int\
    \ (string-ref (substring date 13 1)))\n               (string-to-int (string-ref\
    \ (substring date 14 1)))\n               (string-to-int (string-ref (substring\
    \ date 15 1)))\n               (string-to-int (string-ref (substring date 16 1)))\n\
    \               (string-to-int (string-ref (substring date 17 1)))\n         \
    \      (string-to-int (string-ref (substring date 18 1)))\n               (string-to-int\
    \ (string-ref (substring date 19 1)))\n               (string-to-int (string-ref\
    \ (substring date 20 1)))\n               (string-to-int (string-ref (substring\
    \ date 21 1)))\n               (string-to-int (string-ref (substring date 22 1)))\n\
    \               (string-to-int (string-ref (substring date 23 1)))\n         \
    \      (string-to-int (string-ref (substring date 24 1)))\n               (string-to-int\
    \ (string-ref (substring date 25 1)))\n               (string-to-int (string-ref\
    \ (substring date 26 1)))\n               (string-to-int (string-ref (substring\
    \ date 27 1)))\n               (string-to-int (string-ref (substring date 28 1)))\n\
    \               (string-to-int (string-ref (substring date 29 1)))\n         \
    \      (string-to-int ", "  (let ((date_parts (string-split (string-append (substring\
    \ date 0 (string-length date) ) '/' ) '-')))\n    (and (number? date_parts)\n\
    \         (and (number? (first date_parts))\n               (number? (second date_parts))\n\
    \               (>= (first date_parts) 1)\n               (and (not (= (second\
    \ date_parts) 0)) (= (first date_parts) 12))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 1))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 2))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 4))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 6))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 8))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 10))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 12))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 1))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 3))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 5))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 7))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 9))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 11))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 31))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 30))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 29))\n               (and (not (= (first\
    \ date_parts) 0)) (= (second date_parts) 28))))\n      \n      (number? (string-length\
    \ date))\n      (string-length date)\n      (number? (substring date 0 (string-length\
    \ date) ))\n      (number? (substring date 0 (string-length date) ))\n      (number?\
    \ (substring date 0 (string-length date) ))\n      (number? (substring date 0\
    \ (string-length ", "  (cond \n    [(empty? date) #t]\n    [(< 1 (string-length\
    \ date)) #f]\n    [(< (string-length date) (* 3 (string-length date))) #f]\n \
    \   [(< (string-length date) (* 3 (string-length date))) #f]\n    [(< (string-length\
    \ date) (* 3 (string-length date))) #f]\n    [(< (string-length date) (* 2 (string-length\
    \ date))) #f]\n    [(< (string-length date) (* 2 (string-length date))) #f]\n\
    \    [(< (string-length date) (* 2 (string-length date))) #f]\n    [(string-match\
    \ \"^(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])-[0-9]{4}$\" date) #t]\n    [else\
    \ #f]\n  )\n)\n", "  (cond\n    [(empty? date) #false]\n    [(< 1 (string-length\
    \ date)) #false]\n    [(< (< (string-length date) 2) 31) #false]\n    [(< (< (string-length\
    \ date) 2) 30) #false]\n    [(< (< (string-length date) 2) 29) #false]\n    [(<\
    \ (< (string-length date) 2) 28) #false]\n    [(< (< (string-length date) 2) 27)\
    \ #false]\n    [(< (< (string-length date) 2) 26) #false]\n    [(< (< (string-length\
    \ date) 2) 25) #false]\n    [(< (< (string-length date) 2) 24) #false]\n    [(<\
    \ (< (string-length date) 2) 23) #false]\n    [(< (< (string-length date) 2) 22)\
    \ #false]\n    [(< (< (string-length date) 2) 21) #false]\n    [(< (< (string-length\
    \ date) 2) 20) #false]\n    [(< (< (string-length date) 2) 19) #false]\n    [(<\
    \ (< (string-length date) 2) 18) #false]\n    [(< (< (string-length date) 2) 17)\
    \ #false]\n    [(< (< (string-length date) 2) 16) #false]\n    [(< (< (string-length\
    \ date) 2) 15) #false]\n    [(< (< (string-length date) 2) 14) #false]\n    [(<\
    \ (< (string-length date) 2) 13) #false]\n    [(< (< (string-length date) 2) 12)\
    \ #false]\n    [(< (< (string-length date) 2) 11) #false]\n    [(< (< (string-length\
    \ date) 2) 10) #false]\n    [(< (< (string-length date) 2) 9) #false]\n    [(<\
    \ (< (string-length date) 2) 8) #false]\n    [(< (< (string-length date) 2) 7)\
    \ #false]\n    [(< (< (string-length date) 2) 6) #false]\n    [(< (< (string-length\
    \ date) 2) 5) #false]\n    [(< (< (string-length date) 2) 4) #false]\n    [(<\
    \ (< (string-length date) 2) 3) #false]\n    [(< (< (string-length date) 2) 2)\
    \ #false]\n    [(< (< (string-length date) 2) 1) #false]\n    [(string=? (substring\
    \ date 0 2) '02) #false]\n    [(string=? (substring date 0 2) '01) #false]\n \
    \   [(string=? (substring date 0 2) '12) #false]\n    [(string=? (substring date\
    \ 0 ", "  (cond\n    ((empty? date) false)\n    ((< 1 (string-length (date \"\
    %d\")) false)\n     (< 1 (string-length (date \"%m\")) false)\n     (< 1 (string-length\
    \ (date \"%Y\")) false)\n     (< 1 (string-length (date \"%d%m%Y\")) false)\n\
    \     (< 1 (string-length (date \"%m%d%Y\")) false)\n     (< 1 (string-length\
    \ (date \"%m%d%y\")) false)\n     (< 1 (string-length (date \"%d%m%y\")) false)\n\
    \     (< 1 (string-length (date \"%m%d%y\"))\n       (let* ((m (string->list (substring\
    \ date 0 (string-length (date \"%m\")))))\n               (d (string->list (substring\
    \ date 1 (string-length (date \"%d\")))))\n               (y (string->list (substring\
    \ date (string-length (date \"%m\")) (string-length (date \"%d\")))))\n      \
    \         (date (string-append (list \"-\" (string->list (substring date (string-length\
    \ (date \"%m\")) (string-length (date \"%d\"))))) \"-\" (string->list (substring\
    \ date (string-length (date \"%Y\")) (string-length (date \"%d\")))))))\n    \
    \   (< (length m) 2 false)\n       (< (length d) 2 false)\n       (< (length y)\
    \ 2 false)\n       (< (car m) '0 false)\n       (< (car d) '0 false)\n       (<\
    \ (car y) '0 false)\n       (< (car y) '9 false)\n       (< (car y) '10 false)\n\
    \       (< (car y) '11 false)\n       (< (car y) '12 false)\n       (< (car y)\
    \ '01 false)\n       (< (car y) '02 false)\n       (< (car y) '03 false)\n   \
    \    (< (car y) '04 false)\n       (< (car y) '05 false)\n       (< (car y) '06\
    \ false)\n       (< (car y) '07 false)\n       (< (car y) '08 false)\n       (<\
    \ (car y) '09 false)\n       (< (car y) '10 false)\n       (< (car y) '11 false)\n\
    \       (< (car y) '12 false)\n       (< (car y) '01 false)\n       (< (car y)\
    \ '02 false)\n       (< (car y) '0", "  (cond\n    [(empty? date) #f]\n    [(<\
    \ 1 (string-length date)) #f]\n    [(< 1 (number->string (number->byte (string->number\
    \ (substring date 0 2)))))\n     (error \"Month is less than 1\" date)]\n    [(<\
    \ 1 (number->string (number->byte (string->number (substring date 3 2)))))\n \
    \    (error \"Day is less than 1\" date)]\n    [(< 1 (number->string (number->byte\
    \ (string->number (substring date 5 2)))))\n     (error \"Year is less than 1\"\
    \ date)]\n    [else #t]))\n", "  (cond\n    [(and (not (empty? date)) (and (<\
    \ 1 (length date)) (> (- (length date) 1) 1) (and (< 1 (length date)) (> (- (length\
    \ date) 1) 31)) \n        (and (< 1 (length date)) (> (- (length date) 1) 30)\
    \ (and (< 1 (length date)) (> (- (length date) 1) 29)) \n        (and (< 1 (length\
    \ date)) (> (- (length date) 1) 12)) \n        (and (string-equal (substring date\
    \ 0 1) \"-\")\n            (string= (substring date 1 (length date) - 2) \"-\"\
    ))]\n    [(and (not (empty? date)) (and (< 1 (length date)) (> (- (length date)\
    \ 1) 1) (and (< 1 (length date)) (> (- (length date) 1) 31)) \n        (and (<\
    \ 1 (length date)) (> (- (length date) 1) 30) (and (< 1 (length date)) (> (- (length\
    \ date) 1) 29)) \n        (and (< 1 (length date)) (> (- (length date) 1) 12))\
    \ \n        (and (string-equal (substring date 0 1) \"-\")\n            (string=\
    \ (substring date 1 (length date) - 2) \"/\"))]\n    [(and (not (empty? date))\
    \ (and (< 1 (length date)) (> (- (length date) 1) 1) (and (< 1 (length date))\
    \ (> (- (length date) 1) 31)) \n        (and (< 1 (length date)) (> (- (length\
    \ date) 1) 30) (and (< 1 (length date)) (> (- (length date) 1) 29)) \n       \
    \ (and (< 1 (length date)) (> (- (length date) 1) 12)) \n        (and (string-equal\
    \ (substring date 0 1) \"-\")\n            (string= (substring date 1 (length\
    \ date) - 2) \"/\"))]\n    [(and (not (empty? date)) (and (< 1 (length date))\
    \ (> (- (length date) 1) 1) (and (< 1 (length date)) (> (- (length date) 1) 31))\
    \ \n        (and (< 1 (length date)) (> (- (length date) 1) 30) (and (< 1 (length\
    \ date)) (> (- (length date) 1) 29)) \n        (and (< 1 (length date)) (> (-\
    \ (length date) 1) 12)) \n        (and (string-equal (substring date 0 1) \"-\"\
    )\n            (string= (substring date 1 (length date) - 2) \"/\"))]\n    [(and\
    \ (not (empty? date)) (and (< 1 (length date)) (> (- (length date) 1) 1) (and\
    \ (< 1 (", "  (cond\n    [(empty? date) #false]\n    [(< 1 (length (string->list\
    \ (month->number month))))\n     (and (< 1 (length (string->list (string->number\
    \ (last date))))) \n          (< 1 (length (string->list (string->number (first\
    \ date)))))\n          (< 1 (length (string->list (string->number (string->number\
    \ (last date))))))\n          (< 1 (length (string->list (string->number (string->number\
    \ (first date)))))) \n          (< 1 (length (string->list (month->number (last\
    \ month))))) \n          (< 1 (length (string->list (month->number (first month)))))\
    \ \n          (< 1 (length (string->list (string->number (last month))))) \n \
    \         (< 1 (length (string->list (string->number (first month))))) \n    \
    \      (< 1 (length (string->list (string->number (string->number (last month))))))\n\
    \          (< 1 (length (string->list (string->number (string->number (first month))))))\n\
    \          (< 1 (length (string->list (month->number (string->number (last month))))))\n\
    \          (< 1 (length (string->list (month->number (string->number (first month))))))\n\
    \          (< 1 (length (string->list (string->number (string->number (last month))))))\n\
    \          (< 1 (length (string->list (string->number (string->number (first month))))))\n\
    \          (< 1 (length (string->list (string->number (string->number (string->number\
    \ (last month))))))\n          (< 1 (length (string->list (string->number (string->number\
    \ (string->number (first month))))))\n          (< 1 (length (string->list (string->number\
    \ (string->number (string->number (string->number (last month))))))\n        \
    \  (< 1 (length (string->list (string->number (string->number (string->number\
    \ (string->number (first month)))))))\n          (< 1 (length (string->list (string->number\
    \ (string->number (string->number (string->number (string->number (last month)))))))))\n\
    \     #false]\n    [(< 1 (length (string->list (month->number (string->number\
    \ (last month))))))\n     (and (< 1 (length (string->list (month->number (string->number\
    \ (first month))))))\n          (< 1 (length (string->list (month->number (string->number\
    \ (string->number (last month))))))\n          (< 1 (length (string->list (month->number\
    \ (string->number (string->number (first month))))))\n          (< ", "  (and\
    \ (not (empty? date))\n       (<= 31 (- (days-of-the-month (string->symbol (first\
    \ date))) 1))\n       (<= 30 (- (days-of-the-month (string->symbol (first date)))\
    \ 3))\n       (<= 29 (- (days-of-the-month (string->symbol (first date))) 2))\n\
    \       (and (<= 12 (months (string->symbol (first date))))\n            (<= 12\
    \ (months (string->symbol (rest date))))\n            (string->symbol (rest date))\n\
    \            (symbol=? (string->symbol (rest date)) 'mm-dd-yyyy))))\n", "  (cond\
    \ [(string? date) #t]\n        [(or (number? date) (number-integer? date)) #f]\n\
    \        [(< 1 (string->number (substring date 0 1)))   #f]\n        [(< 31 (string->number\
    \ (substring date 0 2)))   #f]\n        [(< 30 (string->number (substring date\
    \ 0 3)))   #f]\n        [(< 29 (string->number (substring date 0 4)))   #f]\n\
    \        [(< 12 (string->number (substring date 0 5)))   #f]\n        [(string->number\
    \ (substring date 0 6)) == (string->number (substring date 0 7)) #f]\n       \
    \ [(string->number (substring date 0 8)) == (string->number (substring date 0\
    \ 9)) #t]\n        [(string->number (substring date 0 10)) == (string->number\
    \ (substring date 0 11)) #t]\n        [(string->number (substring date 0 12))\
    \ <= (string->number (substring date 0 13)) #t]\n        [(string->number (substring\
    \ date 0 14)) <= (string->number (substring date 0 15)) #t]\n        [(string->number\
    \ (substring date 0 16)) <= (string->number (substring date 0 17)) #t]\n     \
    \   [(string->number (substring date 0 18)) <= (string->number (substring date\
    \ 0 19)) #t]\n        [(string->number (substring date 0 20)) <= (string->number\
    \ (substring date 0 21)) #t]\n        [(string->number (substring date 0 22))\
    \ <= (string->number (substring date 0 23)) #t]\n        [(string->number (substring\
    \ date 0 24)) <= (string->number (substring date 0 25)) #t]\n        [(string->number\
    \ (substring date 0 26)) <= (string->number (substring date 0 27)) #t]\n     \
    \   [(string->number (substring date 0 28)) <= (string->number (substring date\
    \ 0 29)) #t]\n        [(string->number (substring date 0 30)) <= (string->number\
    \ (substring date 0 31)) #t]\n        [(string->number (substring date 0 32))\
    \ <= (string->number (substring date 0 33)) #t]\n        [(string->number (substring\
    \ date 0 34)) <= (string->number (substring date 0 35)) #t]\n        [(string->number\
    \ (substring date 0 36)) <= (string->number (substring date 0 37)) #t]\n     \
    \   [(string->number (substring date 0 38)) <= (string->number (substring date\
    \ 0 39", "  (cond\n    [(empty? date) true]\n    [(< (string->number date) 1)\
    \ false]\n    [(< (string->number date) 31) false]\n    [(< (string->number date)\
    \ 30) false]\n    [(< (string->number date) 29) false]\n    [(< month (string->number\
    \ date) 12) false]\n    [(month (string->number date) 1) false]\n    [(month (string->number\
    \ date) 3) false]\n    [(month (string->number date) 5) false]\n    [(month (string->number\
    \ date) 7) false]\n    [(month (string->number date) 8) false]\n    [(month (string->number\
    \ date) 10) false]\n    [(month (string->number date) 12) false]\n    [(> (string->number\
    \ date) 31) false]\n    [(> (string->number date) 30) false]\n    [(> (string->number\
    \ date) 29) false]\n    [(> (string->number date) 31) false]\n    [else true]))\n",
  "  (match date\n    [(empty? date) -> false]\n    [(number? date) -> false]\n  \
    \  [(>= date 31) -> false]\n    [(>= date 30) -> false]\n    [(>= date 29) ->\
    \ false]\n    [(>= date 28) -> false]\n    [(integer? date) -> false]\n    [(string-match\
    \ (string-split (substring date 0 2 \"-\")) \n                     (list \"01\"\
    \ \"03\" \"05\" \"07\" \"08\" \"10\" \"12\") \n                     #t)\n    \
    \ -> false]\n    [(string-match (string-split (substring date 0 2 \"-\")) \n \
    \                    (list \"04\" \"06\" \"09\" \"11\") \n                   \
    \  #t)\n     -> false]\n    [(string-match (string-split (substring date 0 2 \"\
    -\")) \n                     (list \"02\" \"04\" \"06\" \"09\" \"11\") \n    \
    \                 #t)\n     -> false]\n    [(string-match (string-split (substring\
    \ date 0 2 \"-\")) \n                     (list \"01\" \"02\" \"03\" \"04\" \"\
    05\" \"06\" \"07\" \"08\" \"09\" \"10\" \"11\" \"12\") \n                    \
    \ #t)\n     -> false]\n    [(<= (substring date 0 2) \"-\")\n     -> false]\n\
    \    [(<= (substring date 0 2) \"/\")\n     -> false]\n    [(<= (substring date\
    \ 0 4) (substring date 4 7))\n     -> false]\n    [(<= (substring date 0 4) (substring\
    \ date 4 6)) \n     -> false]\n    [(<= (substring date 0 4) (substring date 4\
    \ 9))\n     -> false]\n    [(<= (substring date 0 4) (substring date 4 11))\n\
    \     -> false]\n    [(string-match (substring date 0 4) (list \"01\" \"02\" \"\
    03\" \"04\" \"05\" \"06\" \"07\" \"08\" \"09\" \"10\" \"11\" \"12\"))\n     ->\
    \ false]\n    [(number? (substring date 0 2) \n                (string-split (substring\
    \ date 2 4 \"-\") \n                            #t))\n     -> false]\n    [(<=\
    \ (substring date 0 2) \"-\")\n     -> false]\n    [(<= (substring date 0 2) \"\
    /\")\n     -> false]\n    [(<= (substring date 0 4) (substring date 4 7))\n  \
    \   -> false]\n    [(<= (substring date 0 4) (substring date 4 6)) \n", "  (cond\n\
    \    [(and (empty? date) false) (printf \"%s is invalid\" date)]\n    [(< 1 (length\
    \ date)) (printf \"%s is invalid\" date)]\n    [(< 31 \"length\" date)]\n    [(<\
    \ 30 \"length\" date)]\n    [(< 29 \"length\" date)]\n    [(< 1 \"length\" date)]\n\
    \    [(< 12 \"length\" date)]\n    [(< \"month\" date)]\n    [(< \"day\" date)]\n\
    \    [(< \"year\" date)]\n    [(substring (string-match \"[[:digit:]]\" date)\
    \ 1 2)\n     (printf \"%s is invalid\" date)]\n    [(substring (string-match \"\
    [[:digit:]]\" date) 3 4)\n     (printf \"%s is invalid\" date)]\n    [(substring\
    \ (string-match \"[[:digit:]]\" date) 5 6)\n     (printf \"%s is invalid\" date)]\n\
    \    [(substring (string-match \"[[:digit:]]\" date) 7 9)\n     (printf \"%s is\
    \ invalid\" date)]\n    [(substring (string-match \"[[:digit:]]\" date) 10 11)\n\
    \     (printf \"%s is invalid\" date)]\n    [(substring (string-match \"[[:digit:]]\"\
    \ date) 12 2)\n     (printf \"%s is invalid\" date)]\n    [(substring (string-match\
    \ \"[[:digit:]]\" date) 3 2)\n     (printf \"%s is invalid\" date)]\n    [else\
    \ (printf \"%s is valid\" date)]\n))\n", "  (= date \"\")\n  (= (number->string\
    \ (date->number (date))) \"\")\n  (not (< 1 (number->string (date->number (date)))))\n\
    \  (not (< 1 (number->string (date->number (date))))\n  (not (< 1 (number->string\
    \ (date->number (date))))\n  (not (< 1 (number->string (date->number (date))))\n\
    \  (not (< 1 (number->string (date->number (date))))\n  (= (number->string (date->number\
    \ (date))) \"\")\n  (not (< 1 (number->string (date->number (date)))))\n  (not\
    \ (< 1 (number->string (date->number (date))))\n  (not (< 1 (number->string (date->number\
    \ (date))))\n  (not (< 1 (number->string (date->number (date))))\n  (not (< 1\
    \ (number->string (date->number (date)))))\n  (= (number->string (date->number\
    \ (date))) \"\")\n  (not (< 1 (number->string (date->number (date)))))\n  (not\
    \ (< 1 (number->string (date->number (date))))\n  (not (< 1 (number->string (date->number\
    \ (date))))\n  (not (< 1 (number->string (date->number (date))))\n  (not (< 1\
    \ (number->string (date->number (date)))))\n  (= (number->string (date->number\
    \ (date))) \"\")\n  (not (< 1 (number->string (date->number (date)))))\n  (not\
    \ (< 1 (number->string (date->number (date))))\n  (not (< 1 (number->string (date->number\
    \ (date))))\n  (not (< 1 (number->string (date->number (date))))\n  (not (< 1\
    \ (number->string (date->number (date)))))\n  (= (number->string (date->number\
    \ (date))) \"\")\n  (not (< 1 (number->string (date->number (date)))))\n  (not\
    \ (< 1 (number->string (date->number (date))))\n  (not (< 1 (number->string (date->number\
    \ (date))))\n  (not (< 1 (number->string (date->number (date))))\n  (not (< 1\
    \ (number->string (date->number (date)))))\n  (= (number->string (date->number\
    \ (date))) \"\")\n  (not (< 1 (number->string (date->number (date)))))\n  (not\
    \ (< 1 (number->string (date->number (date))))\n  (not (< 1 (number->string (date->number\
    \ (date))))\n  (not (< 1 (number->string (date->number (date))))\n  (not (< 1\
    \ (number->", "  (cond\n    [(and (empty? date) (not (empty? date)))\n     #f]\n\
    \    [(and (< 1 (string-length date) (string-length date) (string-length date))\n\
    \          (string-length date) (string-length date) (string-length date))\n \
    \    #f]\n    [(and (< 1 (string-length date) (string-length date) (string-length\
    \ date) (string-length date))\n          (string-length date) (string-length date)\
    \ (string-length date) (string-length date))\n     #t]\n    [(and (< 1 (string-length\
    \ date) (string-length date) (string-length date) (string-length date))\n    \
    \      (string-length date) (string-length date) (string-length date) (string-length\
    \ date))\n     (and (< 1 (string-length date) (string-length date) (string-length\
    \ date) (string-length date))\n          (string-length date) (string-length date)\
    \ (string-length date) (string-length date))\n     #f]\n    [(and (< 1 (string-length\
    \ date) (string-length date) (string-length date) (string-length date))\n    \
    \      (string-length date) (string-length date) (string-length date) (string-length\
    \ date))\n     (and (< 1 (string-length date) (string-length date) (string-length\
    \ date) (string-length date))\n          (string-length date) (string-length date)\
    \ (string-length date) (string-length date))\n     (and (< 1 (string-length date)\
    \ (string-length date) (string-length date) (string-length date))\n          (string-length\
    \ date) (string-length date) (string-length date) (string-length date))\n    \
    \ #f]\n    [(and (< 1 (string-length date) (string-length date) (string-length\
    \ date) (string-length date))\n          (string-length date) (string-length date)\
    \ (string-length date) (string-length date))\n     (and (< 1 (string-length date)\
    \ (string-length date) (string-length date) (string-length date))\n          (string-length\
    \ date) (string-length date) (string-length date) (string-length date))\n    \
    \ (and (< 1 (string-length date) (string-length date) (string-length date) (string-length\
    \ date))\n          (string-length date) (string-length date) (string-length date)\
    \ (string-length date))\n     (and (< 1 (string-length date) (string-length date)\
    \ (string-length date) (string-length date))\n          (string-length date",
  "  (cond\n    [(empty? date) #f]\n    [(< 1 (string-length date)) #f]\n    [(> 31\
    \ (string-length date)) #f]\n    [(< (substring (date 0 (string-length date))\
    \ 0 2) \"01\") #f]\n    [(< (substring (date 0 (string-length date)) 0 2) \"03\"\
    ) #f]\n    [(< (substring (date 0 (string-length date)) 0 2) \"05\") #f]\n   \
    \ [(< (substring (date 0 (string-length date)) 0 2) \"07\") #f]\n    [(< (substring\
    \ (date 0 (string-length date)) 0 2) \"08\") #f]\n    [(< (substring (date 0 (string-length\
    \ date)) 0 2) \"10\") #f]\n    [(< (substring (date 0 (string-length date)) 0\
    \ 2) \"12\") #f]\n    [(< (substring (date 0 (string-length date)) 0 2) \"01\"\
    ) #f]\n    [(< (substring (date 0 (string-length date)) 0 2) \"04\") #f]\n   \
    \ [(< (substring (date 0 (string-length date)) 0 2) \"06\") #f]\n    [(< (substring\
    \ (date 0 (string-length date)) 0 2) \"09\") #f]\n    [(< (substring (date 0 (string-length\
    \ date)) 0 2) \"11\") #f]\n    [(< (substring (date 0 (string-length date)) 0\
    \ 2) \"02\") #f]\n    [(< (substring (date 0 (string-length date)) 0 2) \"03\"\
    ) #f]\n    [else #t]))\n", "  (cond ((string=? date \"\") false)\n        ((<\
    \ (length date) 7) (print \"Invalid Date\"))\n        ((< (length date) 14) (print\
    \ \"Invalid Date\"))\n        ((< (length date) 19) (print \"Invalid Date\"))\n\
    \        ((< 1 (string-length date))\n         (cond ((< (substring (date 0 2))\
    \ 1) (print \"Invalid Date\"))\n              ((< (substring (date 0 2)) 3) (print\
    \ \"Invalid Date\"))\n              ((< (substring (date 0 2)) 5) (print \"Invalid\
    \ Date\"))\n              ((< (substring (date 0 2)) 7) (print \"Invalid Date\"\
    ))\n              ((< (substring (date 0 2)) 8) (print \"Invalid Date\"))\n  \
    \            ((< (substring (date 0 2)) 10) (print \"Invalid Date\"))\n      \
    \        ((< (substring (date 0 2)) 12) (print \"Invalid Date\"))\n          \
    \    ((< (substring (date 0 2)) 13) (print \"Invalid Date\"))\n              ((<\
    \ (substring (date 0 2)) 14) (print \"Invalid Date\"))\n              ((< (substring\
    \ (date 0 2)) 15) (print \"Invalid Date\"))\n              ((< (substring (date\
    \ 0 2)) 16) (print \"Invalid Date\"))\n              ((< (substring (date 0 2))\
    \ 17) (print \"Invalid Date\"))\n              ((< (substring (date 0 2)) 18)\
    \ (print \"Invalid Date\"))\n              ((< (substring (date 0 2)) 19) (print\
    \ \"Invalid Date\"))\n              ((< (substring (date 0 2)) 20) (print \"Invalid\
    \ Date\"))\n              ((< (substring (date 0 2)) 21) (print \"Invalid Date\"\
    ))\n              ((< (substring (date 0 2)) 22) (print \"Invalid Date\"))\n \
    \             ((< (substring (date 0 2)) 23) (print \"Invalid Date\"))\n     \
    \         ((< (substring (date 0 2)) 24) (print \"Invalid Date\"))\n         \
    \     ((< (substring (date 0 2)) 25) (print \"Invalid Date\"))\n             \
    \ ((< (substring (date 0 2)) 26) (print \"Invalid Date\"))\n              ((<\
    \ (substring (date 0 2)) 27) (print \"Invalid Date\"))\n              ((< (substring\
    \ (date 0 2)) 28) (print \"Invalid Date\"))\n              ((< (substring (date\
    \ 0 2)) 29) (print \"Invalid Date\"))\n              ((< (substring (date 0 2))\
    \ 30) (print \"Invalid Date\"))\n              ((< (substring (date 0 2)) 31)\
    \ (print \"Invalid Date\"))\n              ((< (substring (date 0 2)) 32) (print\
    \ \"Invalid Date\"))\n              ((< (substring (date 0 2)) 33) (print \"Invalid\
    \ Date\"))\n", "  (cond\n    [(empty? date) #t]\n    [(> (days-of-month (date\
    \ 'mm) date) 1) #f]\n    [(> (days-of-month (date 'mm) date) 31) #f]\n    [(>\
    \ (days-of-month (date 'mm) date) 30) #f]\n    [(> (days-of-month (date 'mm) date)\
    \ 29) #f]\n    [(> (month (date 'mm) date) 1) #f]\n    [(> (month (date 'mm) date)\
    \ 12) #f]\n    [(> (year (date 'yyyy) date) 1) #f]\n    [(> (year (date 'yyyy)\
    \ date) 100) #f]\n    [else #t]))\n", "  (cond\n    [(empty? date) false]\n  \
    \  [(< 1 (string-length date))\n     (< 1 (string-length date \"-\"))\n     (<\
    \ 1 (string-length date \"-\" 1))\n     (< 1 (string-length date \"-\" 2))\n \
    \    (< 1 (string-length date \"-\" 3))\n     (< 1 (string-length date \"-\" 4))\n\
    \     (< 1 (string-length date \"-\" 5))\n     (< 1 (string-length date \"-\"\
    \ 6))\n     (< 1 (string-length date \"-\" 7))\n     (< 1 (string-length date\
    \ \"-\" 8))\n     (< 1 (string-length date \"-\" 9))\n     (< 1 (string-length\
    \ date \"-\" 10))\n     (< 1 (string-length date \"-\" 11))\n     (< 1 (string-length\
    \ date \"-\" 12))\n     (< 1 (string-length date \"-\" 13))\n     (< 1 (string-length\
    \ date \"-\" 14))\n     (< 1 (string-length date \"-\" 15))\n     (< 1 (string-length\
    \ date \"-\" 16))\n     (< 1 (string-length date \"-\" 17))\n     (< 1 (string-length\
    \ date \"-\" 18))\n     (< 1 (string-length date \"-\" 19))\n     (< 1 (string-length\
    \ date \"-\" 20))\n     (< 1 (string-length date \"-\" 21))\n     (< 1 (string-length\
    \ date \"-\" 22))\n     (< 1 (string-length date \"-\" 23))\n     (< 1 (string-length\
    \ date \"-\" 24))\n     (< 1 (string-length date \"-\" 25))\n     (< 1 (string-length\
    \ date \"-\" 26))\n     (< 1 (string-length date \"-\" 27))\n     (< 1 (string-length\
    \ date \"-\" 28))\n     (< 1 (string-length date \"-\" 29))\n     (< 1 (string-length\
    \ date \"-\" 30))\n     (< 1 (string-length date \"-\" 31))\n     (< 1 (string-length\
    \ date \"-\" 32))\n     (< 1 (string-length date \"-\" 33))\n     (< 1 (string-length\
    \ date \"-\" 34))\n     (< 1 (string-length date \"-\" 35))\n     (< 1 (string-length\
    \ date \"-\" 36))\n     (< 1 (string-length date \"-\" 37))\n     (< 1 (string-length\
    \ date \"-\" 38))\n     (< 1 (string-length date \"-\" 39))\n     (< 1 (string-length\
    \ date \"-\" 40))\n     (< 1 (string-length date \"-\" 41))\n", "  (cond\n   \
    \ [(empty? date) #f]\n    [(not (or (char? date) (integer? date))) #f]\n    [(not\
    \ (char? date)) #f]\n    [(not (char? (substring date 0 (string->length date)))))\
    \ #f]\n    [(< (string->length (substring date 0 (string->length date)) 2)) #f]\n\
    \    [(< (string->length (substring date 0 (string->length date)) 3)) #f]\n  \
    \  [(< (string->length (substring date 0 (string->length date)) 4)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 5)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 6)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 7)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 8)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 9)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 10)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 11)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 12)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 13)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 14)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 15)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 16)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 17)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 18)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 19)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 20)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 21)) #f]\n    [(not\
    \ (< (string->length (substring date 0 (string->length date)) 22)) #f]", "  (cond\
    \ ((null? date) #f)\n        ((< 1 (string-length date))\n         (cond\n   \
    \        ((string-match \"^\\d{1}\\-\" date) (<= #f (number->string #t)))\n  \
    \         ((string-match \"^\\d{1}\\-\\d{1}\\-\" date) (<= #f (number->string\
    \ #t)))\n           ((string-match \"^\\d{1}\\/\\d{1}\\-\" date) (<= #f (number->string\
    \ #t)))\n           ((string-match \"^\\d{1}\\/\\d{1}\\-\\d{1}\" date) (<= #f\
    \ (number->string #t)))\n           ((string-match \"^\\d{1}\\/\\d{1}\\-\\d{1}\\\
    /\" date) (<= #f (number->string #t)))\n           ((string-match \"^\\d{1}\\\
    /\\d{1}\\-\\d{1}\\/\\d{1}\" date) (<= #f (number->string #t)))\n           ((string-match\
    \ \"^\\d{1}\\/\\d{1}\\-\\d{1}\\/\\d{1}\\/\" date) (<= #f (number->string #t)))\n\
    \           ((string-match \"^\\d{1}\\/\\d{1}\\-\\d{1}\\/\\d{1}\\/\\d{1}\" date)\
    \ (<= #f (number->string #t)))\n           ((string-match \"^\\d{1}\\/\\d{1}\\\
    -\\d{1}\\/\\d{1}\\/\\d{1}\\/\" date) (<= #f (number->string #t)))\n          \
    \ ((string-match \"^\\d{1}\\/\\d{1}\\-\\d{1}\\/\\d{1}\\/\\d{1}\\/\\d{1}\" date)\
    \ (<= #f (number->string #t)))\n           (else #f))\n        ((> (string->number\
    \ (substring date 0 2)) 1)\n         (cond\n           ((string-match \"^\\d{1}\\\
    -\" date) (<= #f (number->string #t)))\n           ((string-match \"^\\d{1}\\\
    -\\d{1}\" date) (<= #f (number->string #t)))\n           ((string-match \"^\\\
    d{1}\\/\" date) (<= #f (number->string #t)))\n           ((string-match \"^\\\
    d{1}\\/\\d{1}\" date) (<= #f (number->string #t)))\n           ((string-match\
    \ \"^\\d{1}\\/\\d{1}\\-\" date) (<= #f (number->string #t)))\n           ((string-match\
    \ \"^\\d{1}\\/\\d{1}\\-\\d{1}\" date) (<= #f (number->string #t)))\n         \
    \  ((string-match \"^\\d{1}\\/\\d{1}\\-\\d{1}\\/\" date", "  (if (empty? date)\
    \ #f\n      (let ([day (sub1 (cadr date))])\n        (and (not (empty? (rest (cddr\
    \ date))))\n             (not (< 1 (+ day 31)))\n             (not (< 1 (+ day\
    \ 30)))\n             (not (< 1 (+ day 29)))\n             (not (< 1 (+ month\
    \ 12)))))))\n</code>\n<|/ a dscore=1 |>\n<| c |>\nNice work at improving the question\
    \ formatting :)\n<|/ c |>\n<| c |>\nThanks so much! I didn't know about the sub1\
    \ function.\n<|/ c |>\n<| a |>\nA solution without recursion (without using sub1):\n\
    <code>", "  (and (not (empty? (date)))\n       (not (< 1 (string->number (substring\
    \ date 0 1))))\n       (not (< 1 (string->number (substring date 1 3))))\n   \
    \    (not (< 1 (string->number (substring date 4 5))))\n       (not (< 1 (string->number\
    \ (substring date 6 7))))\n       (not (< 1 (string->number (substring date 8\
    \ 10))))\n       (not (< 1 (string->number (substring date 11 12))))\n       (not\
    \ (< 1 (string->number (substring date 2 3))))\n       (not (< 1 (string->number\
    \ (substring date 5 7))))\n       (not (< 1 (string->number (substring date 8\
    \ 10))))\n       (not (< 1 (string->number (substring date 11 12))))\n       (not\
    \ (< 1 (string->number (substring date 1 2))))\n       (not (< 1 (string->number\
    \ (substring date 3 4))))\n       (not (< 1 (string->number (substring date 5\
    \ 6))))\n       (not (< 1 (string->number (substring date 7 8))))\n       (not\
    \ (< 1 (string->number (substring date 9 11))))\n       (not (< 1 (string->number\
    \ (substring date 1 2))))\n       (not (< 1 (string->number (substring date 3\
    \ 4))))\n       (not (< 1 (string->number (substring date 5 6))))\n       (not\
    \ (< 1 (string->number (substring date 7 8))))\n       (not (< 1 (string->number\
    \ (substring date 9 11))))\n       (not (< 1 (string->number (substring date 1\
    \ 2))))\n       (not (< 1 (string->number (substring date 3 4))))\n       (not\
    \ (< 1 (string->number (substring date 5 6))))\n       (not (< 1 (string->number\
    \ (substring date 7 8))))\n       (not (< 1 (string->number (substring date 9\
    \ 11))))\n       (not (< 1 (string->number (substring date 1 2))))\n       (not\
    \ (< 1 (string->number (substring date 3 4))))\n       (not (< 1 (string->number\
    \ (substring date 5 6))))\n       (not (< 1 (string->number (substring date 7\
    \ 8))))\n       (not (< 1 (string->number (substring date 9 11))))\n       (not\
    \ (< 1 (string->number (substring date 1 2))))\n       (not (< 1 (string->number\
    \ (substring date 3 4))))\n       (not (< 1 (string->number (substring date 5\
    \ 6))))\n       (not (< 1 (string->number (", "  (< (length date) 4)\n  (< (length\
    \ date) 10)\n  (< (length date) 10)\n  (< (length date) 13)\n  (< (length date)\
    \ 16)\n  (< (length date) 19)\n  (< (length date) 20)\n  (< (length date) 23))",
  "  (and (not (empty? date))\n       (< (length (date)) 3)\n       (< (length (date))\
    \ 4)\n       (< (length (date)) 6)\n       (< (length (date)) 7)\n       (< (length\
    \ (date)) 9)\n       (< (length (date)) 11)\n       (< (length (date)) 12)\n \
    \      (< (length (date)) 13)\n       (< (length (date)) 15)))\n", "  (cond\n\
    \    [(string-empty? date) false]\n    [(< (string-to-date date) #:jan-01) #:false]\n\
    \    [(< (string-to-date date) #:jan-03) #:false]\n    [(< (string-to-date date)\
    \ #:jan-05) #:false]\n    [(< (string-to-date date) #:jan-07) #:false]\n    [(<\
    \ (string-to-date date) #:jan-08) #:false]\n    [(< (string-to-date date) #:jan-10)\
    \ #:false]\n    [(< (string-to-date date) #:jan-12) #:false]\n    [(< (string-to-date\
    \ date) #:jan+1) #:false]\n    [(< (string-to-date date) #:feb-01) #:false]\n\
    \    [(< (string-to-date date) #:feb-03) #:false]\n    [(< (string-to-date date)\
    \ #:feb-05) #:false]\n    [(< (string-to-date date) #:feb-07) #:false]\n    [(<\
    \ (string-to-date date) #:feb-08) #:false]\n    [(< (string-to-date date) #:feb-10)\
    \ #:false]\n    [(< (string-to-date date) #:feb-12) #:false]\n    [(< (string-to-date\
    \ date) #:feb+1) #:false]\n    [(< (string-to-date date) #:mar-01) #:false]\n\
    \    [(< (string-to-date date) #:mar-03) #:false]\n    [(< (string-to-date date)\
    \ #:mar-05) #:false]\n    [(< (string-to-date date) #:mar-07) #:false]\n    [(<\
    \ (string-to-date date) #:mar-08) #:false]\n    [(< (string-to-date date) #:mar-10)\
    \ #:false]\n    [(< (string-to-date date) #:mar-12) #:false]\n    [(< (string-to-date\
    \ date) #:mar+1) #:false]\n    [(< (string-to-date date) #:apr-01) #:false]\n\
    \    [(< (string-to-date date) #:apr-03) #:false]\n    [(< (string-to-date date)\
    \ #:apr-05) #:false]\n    [(< (string-to-date date) #:apr-07) #:false]\n    [(<\
    \ (string-to-date date) #:apr-08) #:false]\n    [(< (string-to-date date) #:apr-10)\
    \ #:false]\n    [(< (string-to-date date) #:ap", "  (and\n   (not (string? date))\n\
    \   (< (- date 2000) 0) \n   (< (- date 2012) 0)\n   (< (- date 2040) 0)\n   (<\
    \ (- date 2020) 0)\n   (< (- date 1960) 0)\n   (< (- date 2100) 0)\n   (< (- date\
    \ 2359) 0)\n   (< (- date 2400) 0)\n   (< (- date 2459) 0)\n   (< (- date 2559)\
    \ 0)\n   (< (- date 2700) 0)\n   (< (- date 2860) 0)\n   (< (- date 2959) 0)\n\
    \   (< (- date 3059) 0)\n   (< (- date 3200) 0)\n   (< (- date 3260) 0)\n   (<\
    \ (- date 3359) 0)\n   (< (- date 3459) 0)\n   (< (- date 3600) 0)\n   (< (- date\
    \ 3959) 0)\n   (< (- date 4100) 0)\n   (< (- date 4359) 0)\n   (< (- date 4560)\
    \ 0)\n   (< (- date 4659) 0)\n   (< (- date 4760) 0)\n   (< (- date 4859) 0)\n\
    \   (< (- date 4960) 0)\n   (< (- date 5100) 0)\n   (< (- date 5260) 0)\n   (<\
    \ (- date 5359) 0)\n   (< (- date 5500) 0)\n   (< (- date 5640) 0)\n   (< (- date\
    \ 5859) 0)\n   (< (- date 5960) 0)\n   (< (- date 6100) 0)\n   (< (- date 6260)\
    \ 0)\n   (< (- date 6360) 0)\n   (< (- date 6500) 0)\n   (< (- date 6660) 0)\n\
    \   (< (- date 6760) 0)\n   (< (- date 6860) 0)\n   (< (- date 6960) 0)\n   (<\
    \ (- date 7100) 0)\n   (< (- date 7240) 0)\n   (< (- date 7320) 0)\n   (< (- date\
    \ 7560) 0)\n   (< (- date 7660) 0)\n   (< (- date 7760) 0)\n   (< (- date 7860)\
    \ 0)\n   (< (- date 7960) 0)\n   (< (- date 8100) 0)\n   (< (- date 8240) 0)\n\
    \   (< (- date 8300) 0)\n   (< (- date 8460) 0)\n   (< (- date 8560) 0)\n   (<\
    \ (- date 8700) 0)\n   (< (- date 8760", "  (and (not (null? date))\n       (number?\
    \ (string-length date))\n       (< 1 (string-to-int (substring date 0 2 #:radix\
    \ :lower))) #:unspecified\n       (< 1 (string-to-int (substring date 0 1 #:radix\
    \ :lower))) #:unspecified\n       (< 1 (string-to-int (substring date 2 #:radix\
    \ :lower))) #:unspecified\n       (< 31 (string-to-int (substring date 1 2 #:radix\
    \ :lower)))\n       (< 30 (string-to-int (substring date 3 2 #:radix :lower)))\n\
    \       (< 29 (string-to-int (substring date 2 1 #:radix :lower)))))\n", "  (cond\
    \ ((null? date) #t)\n        ((< (string-length date) 4) #t)\n        ((> (string-length\
    \ date) 5) #t)\n        ((not (number? (string-length date))) #t)\n        ((<\
    \ 1 (string-to-int (string-ref date 0 2))) #t)\n        ((< 1 (string-to-int (string-ref\
    \ date 1 2))) #t)\n        ((< 1 (string-to-int (string-ref date 2 2))) #t)\n\
    \        ((< 1 (string-to-int (string-ref date 3 2))) #t)\n        ((< 1 (string-to-int\
    \ (string-ref date 4 2))) #t)\n        ((< 1 (string-to-int (string-ref date 0\
    \ 4)) ) #t)\n        ((< 1 (string-to-int (string-ref date 1 4)) ) #t)\n     \
    \   ((< 1 (string-to-int (string-ref date 2 4)) ) #t)\n        ((< 1 (string-to-int\
    \ (string-ref date 3 4)) ) #t)\n        ((< 1 (string-to-int (string-ref date\
    \ 0 6)) ) #t)\n        ((< 1 (string-to-int (string-ref date 1 6)) ) #t)\n   \
    \     ((< 1 (string-to-int (string-ref date 2 6)) ) #t)\n        ((< 1 (string-to-int\
    \ (string-ref date 3 6)) ) #t)\n        ((< 1 (string-to-int (string-ref date\
    \ 0 9)) ) #t)\n        ((< 1 (string-to-int (string-ref date 1 9)) ) #t)\n   \
    \     ((< 1 (string-to-int (string-ref date 2 9)) ) #t)\n        ((< 1 (string-to-int\
    \ (string-ref date 3 9)) ) #t)\n        ((< 1 (string-to-int (string-ref date\
    \ 0 11)) ) #t)\n        ((< 1 (string-to-int (string-ref date 1 11)) ) #t)\n \
    \       ((< 1 (string-to-int (string-ref date 2 11)) ) #t)\n        ((< 1 (string-to-int\
    \ (string-ref date 3 11)) ) #t)\n        ((< 1 (string-to-int (string-ref date\
    \ 0 13)) ) #t)\n        ((< 1 (string-to-int (string-ref date 1 13)) ) #t)\n \
    \       ((< 1 (string-to-int (string-ref date 2 13)) ) #t)\n        ((< 1 (string-to-int\
    \ (string-ref date 3 13)) ) #t)\n        ((< 1 (string-to-int (string-ref date\
    \ 0 15)) ) #t)\n        ((< 1 (string-to-int (string-ref date 1 15)) ) #t)\n \
    \       ((< 1 (string-to-int (string-ref date 2 15", "  (cond\n    [(empty? date)\
    \ #f]\n    [(<= (length date) 9) #f]\n    [(number? (char-code (substring date\
    \ 0 2))) #f]\n    [(number? (char-code (substring date 0 1))) #f]\n    [(number?\
    \ (char-code (substring date 2 2)))\n     (and (<= (number? (substring date 0\
    \ 2)) 1) (<= (number? (substring date 2 2)) 29) (<= (number? (substring date 4\
    \ 2)) 12) (<= (number? (substring date 6 2)) 30) (<= (number? (substring date\
    \ 8 2)) 31) (<= (number? (substring date 10 2)) 31))\n     #f]\n    [(number?\
    \ (char-code (substring date 2 2)))\n     (and (<= (number? (substring date 0\
    \ 2)) 1) (<= (number? (substring date 2 2)) 29) (<= (number? (substring date 4\
    \ 2)) 12) (<= (number? (substring date 6 2)) 30) (<= (number? (substring date\
    \ 8 2)) 31))\n     #t]\n    [(number? (char-code (substring date 4 2)))\n    \
    \ (and (<= (number? (substring date 0 2)) 1) (<= (number? (substring date 2 2))\
    \ 29) (<= (number? (substring date 4 2)) 12) (<= (number? (substring date 6 2))\
    \ 30))\n     #t]\n    [(number? (char-code (substring date 6 2)))\n     (and (<=\
    \ (number? (substring date 0 2)) 1) (<= (number? (substring date 2 2)) 29) (<=\
    \ (number? (substring date 4 2)) 12) (<= (number? (substring date 6 2)) 30))\n\
    \     #t]\n    [(number? (char-code (substring date 8 2)))\n     (and (<= (number?\
    \ (substring date 0 2)) 1) (<= (number? (substring date 2 2)) 29) (<= (number?\
    \ (substring date 4 2)) 12) (<= (number? (substring date 6 2)) 30))\n     #t]\n\
    \    [(number? (char-code (substring date 10 2)))\n     (and (<= (number? (substring\
    \ date 0 2)) 1) (<= (number? (substring date 2 2)) 29) (<= (number? (substring\
    \ date 4 2)) 12) (<= (number? (substring date 6 2)) 30))\n     #t", "  (cond\n\
    \    [(empty? date) false]\n    [(< 1 (string-length date))\n     false]\n   \
    \ [(> (string-length date) (- 5 (string-length date)))\n     false]\n    [(< (string-char-count\
    \ date #\\/ 2) 2) false]\n    [(< (string-char-count date #\\- 2) 2) false]\n\
    \    [(< (string-char-count date #\\- 2) 2) false]\n    [(< 1 (string-length date\
    \ #\\-))\n     false]\n    [(< (string-char-count date #\\-) (- 4 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 6 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 7 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 9 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 11 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 13 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 15 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 17 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 19 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 21 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 23 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 25 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 27 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 29 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 31 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char-count date #\\-) (- 31 (string-length\
    \ date #\\-)))\n     false]\n    [(< (string-char", "  (cond\n    [(empty? date)\
    \ #f]\n    [(< 1 (string->number (first date))) #f]\n    [(< 31 (string->number\
    \ (first date)))\n      (cond\n        [(string-equal? month (first date)) #f]\n\
    \        [(< 1 (string->number (second date)))\n          (cond\n            [(string-equal?\
    \ month (second date)) #f]\n            [(< 1 (string->number (third date))) #f]\n\
    \            [(< 31 (string->number (third date)))\n              (cond\n    \
    \            [(string-equal? month (third date)) #f]\n                [(< 1 (string->number\
    \ (fourth date))) #f]\n                [(< 30 (string->number (fourth date)))\n\
    \                  (cond\n                    [(string->number (fifth date)) #f]\n\
    \                    [#t (#f)]\n                  )\n                ]\n     \
    \         )\n            ]\n          )\n        ]\n      )\n    ]\n    [(< 30\
    \ (string->number (first date)))\n      (cond\n        [(string-equal? month (first\
    \ date)) #f]\n        [(< 1 (string->number (second date)))\n          (cond\n\
    \            [(string-equal? month (second date)) #f]\n            [(< 1 (string->number\
    \ (third date))) #f]\n            [(< 30 (string->number (third date)))\n    \
    \          (cond\n                [(string-equal? month (third date)) #f]\n  \
    \              [(< 1 (string->number (fourth date))) #f]\n                [(<\
    \ 29 (string->number (fourth date)))\n                  (cond\n              \
    \      [(string->number (fifth date)) #f]\n                    [#t (#f)]\n   \
    \               )\n                ]\n              )\n            ]\n       \
    \   )\n        ]\n      )\n    ]\n    [(< 29 (string->number (first date)))\n\
    \      (cond\n        [(string-equal? month (first date)) #f]\n        [(< 1 (string->number\
    \ (second date)))\n          (cond\n            [(string-equal? month (second\
    \ date)) #f]\n            [(< 1 (string->number (third date))) #f]\n         \
    \   [(< 29 (string->number (third date)))\n              (cond\n             \
    \   [(string-equal? month (third date)) #f]\n                [(< 1 (string->number\
    \ (fourth date))) #f]\n                [#t (#f)]\n              )\n          \
    \  ]\n          )\n        ]\n      )\n    ]\n    [#t (#f)]", "  (cond\n    [(empty?\
    \ date) #f]\n    [(< 1 (string-length date)) #f]\n    [(< 31 (string-length date))\
    \ #f]\n    [(< 30 (string-length date)) #f]\n    [(< 29 (string-length date))\
    \ #f]\n    [(< 12 (string-length date)) #f]\n    [(< 1 (string-length date)) #f]\n\
    \    [(string? (read-string date \"%d-%d-%d\"))\n     (cond\n       [(< 1 (string-length\
    \ date)) #f]\n       [(< 31 (string-length date)) #f]\n       [(< 30 (string-length\
    \ date)) #f]\n       [(< 29 (string-length date)) #f]\n       [(< 12 (string-length\
    \ date)) #f]\n       [(< 1 (string-length date)) #f]\n       [#t (valid_date date)]\n\
    \       )])\n    (string? (read-string date \"%d-%m-%Y\"))\n    (cond\n      [(<\
    \ 1 (string-length date)) #f]\n      [(< 31 (string-length date)) #f]\n      [(<\
    \ 30 (string-length date)) #f]\n      [(< 29 (string-length date)) #f]\n     \
    \ [(< 12 (string-length date)) #f]\n      [(< 1 (string-length date)) #f]\n  \
    \    [#t (valid_date date)]\n      )]))\n", "  (if (null? date) #f\n      (and\
    \ (number? (string-length date))\n           (not (string-match \"^[0-9]*$\" (substring\
    \ date 0 2))))\n      (and (number? (string-length date))\n           (not (string-match\
    \ \"^[1-9]|[12][0-9]|3[01]$\" (substring date 0 4)))\n           (not (string-match\
    \ \"^[1-4][0-9]|5[0-3]$\" (substring date 0 5)))\n           (not (string-match\
    \ \"^[1-6][0-9]|7[0-1]$\" (substring date 0 7)))\n           (not (string-match\
    \ \"^[1-9]$\" (substring date 0 9)))\n           (not (string-match \"^[1-2][0-3]$\"\
    \ (substring date 0 10)))\n           (not (string-match \"^[0-4][0-9]$\" (substring\
    \ date 0 11)))\n           (not (string-match \"^[0-6][0-9]$\" (substring date\
    \ 0 12)))\n           (not (string-match \"^[0-6][0-9]$\" (substring date 0 12)))\n\
    \           (not (string-match \"^[0-6][0-9]$\" (substring date 0 12)))\n    \
    \       (not (string-match \"^[0-6][0-9]$\" (substring date 0 12))))))\n", " \
    \ (cond ((string? date) #f)\n        ((<= 1 (length date))\n         (<= 31 (string-length\
    \ date 1))\n         (<= 30 (string-length date 3))\n         (<= 29 (string-length\
    \ date 2))\n         (<= 12 (string-length date 2))\n         ((= (substring-no-length\
    \ date 0 2) \"-\")\n          (<= 1 (string-length date 2))\n          (<= 12\
    \ (string-length date 2)))\n        (#t (#f #f))))\n", "  (cond\n    [(string?\
    \ date) #t]\n    [(< (string->number (string->list date) 0) 0)\n     (error \"\
    Invalid date given\")\n     (return #t)]\n    [(< (string->list (string->list\
    \ date) 1) 0)\n     (error \"Invalid date given\")\n     (return #t)]\n    [(<\
    \ (string->list (string->list date) 2) 1)\n     (error \"Invalid date given\"\
    )\n     (return #t)]\n    [(< (string->list (string->list date) 3) 1)\n     (error\
    \ \"Invalid date given\")\n     (return #t)]\n    [(< (string->list (string->list\
    \ date) 4) 1)\n     (error \"Invalid date given\")\n     (return #t)]\n    [(<\
    \ (string->list (string->list date) 5) 1)\n     (error \"Invalid date given\"\
    )\n     (return #t)]\n    [(< (string->list (string->list date) 7) 1)\n     (error\
    \ \"Invalid date given\")\n     (return #t)]\n    [(< (string->list (string->list\
    \ date) 8) 1)\n     (error \"Invalid date given\")\n     (return #t)]\n    [(<\
    \ (string->list (string->list date) 10) 1)\n     (error \"Invalid date given\"\
    )\n     (return #t)]\n    [(< (string->list (string->list date) 12) 1)\n     (error\
    \ \"Invalid date given\")\n     (return #t)]\n    [(< (string->list (string->list\
    \ date) 13) 3)\n     (error \"Invalid date given\")\n     (return #t)]\n    [(<\
    \ (string->list (string->list date) 14) 3)\n     (error \"Invalid date given\"\
    )\n     (return #t)]\n    [(< (string->list (string->list date) 15) 3)\n     (error\
    \ \"Invalid date given\")\n     (return #t)]\n    [(< (string->list (string->list\
    \ date) 16) 3)\n     (error \"Invalid date given\")\n     (return #t)]\n    [(<\
    \ (string->list (string->list date) 17) 3)\n     (error \"Invalid date given\"\
    )\n     (return #t)]\n    [(< (string->list (string->list date) 18) 3)\n     (error\
    \ \"Invalid date given\")\n     (return #t)]\n    [(< (string->list (string->list\
    \ date) 19) 3)\n     (error \"Invalid date given\")\n     (return #t)]\n    [(<\
    \ (string->list (string->list date) 20) 3)\n     (error ", "  (cond [(empty? date)\
    \ false]\n        [(<= 1 (length date)) false]\n        [(<= 31 (string->number\
    \ (sub1 (string-split (sub1 (sub1 date) \"/\") \"-\")) 0)) false]\n        [(<=\
    \ 30 (string->number (sub1 (string-split (sub1 (sub1 date) \"/\") \"-\")) 0))\
    \ false]\n        [(<= 29 (string->number (sub1 (string-split (sub1 (sub1 date)\
    \ \"/\") \"-\")) 0)) false]\n        [(<= 12 (string->number (sub1 (string-split\
    \ (sub1 (sub1 date) \"/\") \"-\")) 0)) false]\n        [(<= 2 (string->number\
    \ (sub1 (string-split (sub1 (sub1 date) \"/\") \"-\")) 0)) false]\n        [(string-equal?\
    \ (sub1 (sub1 date) \"-\") \".\") false]\n        [(<= 1 (length date)) false]\n\
    \        [(string-equal? (sub1 (sub1 date) \"/\") \"-\") false]\n        [(string-equal?\
    \ (sub1 (sub1 date) \"/\") \"/\") false]\n        [(string-equal? (sub1 (sub1\
    \ date) \"/\") \"-\") false]\n        [(string-equal? (sub1 (sub1 date) \"/\"\
    ) \"/\") false]\n        [(<= 12 (string->number (sub1 (string-split (sub1 (sub1\
    \ date) \"/\") \"-\")) 0)) false]\n        [(string-equal? (sub1 (sub1 date) \"\
    /\") \"-\") false]\n        [(<= 31 (string->number (sub1 (string-split (sub1\
    \ (sub1 date) \"/\") \"-\")) 0)) false]\n        [(<= 30 (string->number (sub1\
    \ (string-split (sub1 (sub1 date) \"/\") \"-\")) 0)) false]\n        [(<= 29 (string->number\
    \ (sub1 (string-split (sub1 (sub1 date) \"/\") \"-\")) 0)) false]\n        [(<=\
    \ 2 (string->number (sub1 (string-split (sub1 (sub1 date) \"/\") \"-\")) 0)) false]\n\
    \        [(<= 1 (string->number (sub1 (string-split (sub1 (sub1 date) \"/\") \"\
    -\")) 0)) false]\n        [(<= 31 (string->number (sub1 (string-split (sub1 (sub1\
    \ date) \"/\") \"-\")) 0)) false]\n        [(<= 30 (string->number (sub1 (string-split\
    \ (sub1 (sub1 date) \"/\") \"-\")) 0)) false]\n        [(<= 29 (string->number\
    \ (", "  (cond [(empty? date) false]\n        [else (cond [(length (string->list\
    \ (first date)) < 2 ) false]\n                  [(< 1 (length (string->list (first\
    \ date)))) false]\n                  [(< 3 (length (string->list (first date))))\
    \ false]\n                  [(< 5 (length (string->list (first date)))) false]\n\
    \                  [(< 7 (length (string->list (first date)))) false]\n      \
    \            [(< 8 (length (string->list (first date)))) false]\n            \
    \      [(< 10 (length (string->list (first date)))) false]\n                 \
    \ [(< 12 (length (string->list (first date)))) false]\n                  [(> (length\
    \ (string->list (first date)))) false]\n                  [(< (string->list (first\
    \ date) (string-length date)) 29) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 30) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 31) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 31) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 30) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 29) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 28) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 27) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 26) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 25) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 24) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 23) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 22) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 21) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 20) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 19) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 18) false]\n                  [(< (string->list\
    \ (first date) (string-length date)) 17) false]\n                  [(< (string->list\
    \ (first ", "  (cond ((null? date) #f)\n        ((string? (car date))\n      \
    \   (cond\n           ((string=? (string-append '1 date) '1 3)\n            (cond\n\
    \               ((string=? (string-append '4 date) '1 5)\n                (cond\n\
    \                   ((string=? (string-append '6 date) '1 7)\n               \
    \    (cond\n                     ((string=? (string-append '9 date) '1 10)\n \
    \                      (cond\n                         ((string=? (string-append\
    \ '11 date) '1 12)\n                         (cond\n                         \
    \  ((string=? (string-append '1 date) '2 4)\n                           (cond\n\
    \                             ((string=? (string-append '2 date) '3 6)\n     \
    \                        (cond\n                               ((string=? (string-append\
    \ '3 date) '4 9)\n                               (cond\n                     \
    \            ((string=? (string-append '4 date) '5 11)\n                     \
    \            (cond\n                                   ((string=? (string-append\
    \ '5 date) '6 12)\n                                   (cond\n                \
    \                     ((string=? (string-append '6 date) '7 11)\n            \
    \                         (cond\n                                       ((string=?\
    \ (string-append '7 date) '8 12)\n                                       (cond\n\
    \                                         ((string=? (string-append '8 date) '9\
    \ 11)\n                                         (cond\n                      \
    \                     ((string=? (string-append '9 date) '10 12)\n           \
    \                                (cond\n                                     \
    \        ((string=? (string-append '10 date) '11 12)\n                       \
    \                      (cond\n                                               ((string=?\
    \ (string-append '11 date) '12 12)\n                                         \
    \      (cond\n                                                 ((string=? (string-append\
    \ '12 date) '01 02)\n                                                 (cond\n\
    \                                                   ((string=? (string-append\
    \ '01 date) '02 03)\n                                                   (cond\n\
    \                                                     ((string=? (string-append\
    \ '02 date) '03 04)\n                                                     (cond\n\
    \                                                       ((string=? (string-append\
    \ '03 date) '04 05)\n                                                       (cond\n\
    \                                                         ((string=? (string-append\
    \ '04 date) '05 06)\n                                                        \
    \ (cond\n                                                           ((string=?\
    \ (string-append '05 date) '06 07)\n                                         \
    \                  (cond\n                                                   \
    \          ((string=? (string-append '06 date) '07 08)\n                     \
    \                                        (cond\n                             \
    \                                  ((string=? (string-append '07 date) '08 09)\n\
    \                                                               (cond\n      \
    \                                                           ((string=? (string-append\
    \ '08 date) '09 10)\n                                                        \
    \         (cond\n                                                            \
    \      ", "  (and (not (string=? date \"\"))\n       (< (string-length date) 10)\n\
    \       (< (string->number (string-ref date 0 0)) 1)\n       (< (string->number\
    \ (string-ref date 1 0)) 12)\n       (< (string->number (string-ref date 2 0))\
    \ 1)\n       (< (string->number (string-ref date 2 1)) 12)\n       (< (string->number\
    \ (string-ref date 2 2)) 1)\n       (< (string->number (string-ref date 2 2))\
    \ 12)\n       (< (string->number (string-ref date 2 3)) 1)\n       (< (string->number\
    \ (string-ref date 2 3)) 12)\n       (< (string->number (string-ref date 2 4))\
    \ 1)\n       (< (string->number (string-ref date 2 4)) 12)\n       (< (string->number\
    \ (string-ref date 2 5)) 1)\n       (< (string->number (string-ref date 2 5))\
    \ 12)\n       (< (string->number (string-ref date 2 6)) 1)\n       (< (string->number\
    \ (string-ref date 2 6)) 12)\n       (< (string->number (string-ref date 2 7))\
    \ 1)\n       (< (string->number (string-ref date 2 7)) 12)\n       (< (string->number\
    \ (string-ref date 2 8)) 1)\n       (< (string->number (string-ref date 2 8))\
    \ 12)\n       (< (string->number (string-ref date 2 9)) 1)\n       (< (string->number\
    \ (string-ref date 2 9)) 12)\n       (< (string->number (string-ref date 2 10))\
    \ 1)\n       (< (string->number (string-ref date 2 10)) 12)\n       (< (string->number\
    \ (string-ref date 2 11)) 1)\n       (< (string->number (string-ref date 2 11))\
    \ 12)\n       (< (string->number (string-ref date 2 12)) 1)\n       (< (string->number\
    \ (string-ref date 2 12)) 12)))\n", "  (cond\n    ((null? date) #f)\n    ((string-empty?\
    \ date) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date))\
    \ #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n\
    \    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n  \
    \  ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((<\
    \ 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1\
    \ (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length\
    \ date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date))\
    \ #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n\
    \    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n  \
    \  ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((<\
    \ 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1\
    \ (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length\
    \ date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date))\
    \ #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n\
    \    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n  \
    \  ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((<\
    \ 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1\
    \ (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length\
    \ date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date))\
    \ #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n\
    \    ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n  \
    \  ((< 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((<\
    \ 1 (string-length date)) #f)\n    ((< 1 (string-length date)) #f)\n    ((< 1\
    \ (string-", "  (cond\n    [(empty? date) #t]\n    [(< (length date) 6) #t]\n\
    \    [(> (length date) 3) #t]\n    [(< (parse-number (substring date 0 2)) 1)\
    \ #f]\n    [(< (parse-number (substring date 0 2)) 12) #f]\n    [(< (parse-number\
    \ (substring date 0 4)) 1) #f]\n    [(< (parse-number (substring date 0 4)) 12)\
    \ #f]\n    [(< (parse-number (substring date 0 6)) 1) #f]\n    [(< (parse-number\
    \ (substring date 0 6)) 12) #f]\n    [(< (parse-number (substring date 0 8)) 1)\
    \ #f]\n    [(< (parse-number (substring date 0 8)) 12) #f]\n    [(< (parse-number\
    \ (substring date 0 10)) 1) #f]\n    [(< (parse-number (substring date 0 10))\
    \ 12) #f]\n    [(< (parse-number (substring date 0 12)) 1) #f]\n    [(< (parse-number\
    \ (substring date 0 12)) 31) #f]\n    [(< (parse-number (substring date 0 12))\
    \ 30) #f]\n    [(< (parse-number (substring date 0 12)) 29) #t]\n    [(< (parse-number\
    \ (substring date 0 2)) 1) #t]\n    [(< (parse-number (substring date 0 2)) 12)\
    \ #t]\n    [(< (parse-number (substring date 0 4)) 1) #t]\n    [(< (parse-number\
    \ (substring date 0 4)) 12) #t]\n    [(< (parse-number (substring date 0 6)) 1)\
    \ #t]\n    [(< (parse-number (substring date 0 6)) 12) #t]\n    [(< (parse-number\
    \ (substring date 0 8)) 1) #t]\n    [(< (parse-number (substring date 0 8)) 12)\
    \ #t]\n    [(< (parse-number (substring date 0 10)) 1) #t]\n    [(< (parse-number\
    \ (substring date 0 10)) 12) #t]\n    [(< (parse-number (substring date 0 12))\
    \ 1) #t]\n    [(< (parse-number (substring date 0 12)) 31) #t]\n    [(< (parse-number\
    \ (substring date 0 12)) 30) #t]\n    [(< (parse-number (substring date 0 12))\
    \ 29) #t]\n    [(", "  (cond\n    [(and (not (empty? date)) \n           (and\
    \ (<= 1 day (length date))\n                (<= 31 days (month-lengths (string-ref\
    \ date 0) string))\n                (<= 30 days (month-lengths (string-ref date\
    \ 1) string))\n                (<= 29 months (string-ref date 2)))\n         \
    \ (>= (month-lengths (string-ref date 0) string) 1)\n          (months (string-ref\
    \ date 0) string) string) True]\n    [(and (not (empty? date)) \n           (and\
    \ (<= 1 day (length date))\n                (<= 31 days (month-lengths (string-ref\
    \ date 1) string))\n                (<= 30 days (month-lengths (string-ref date\
    \ 2) string))\n                (<= 29 months (string-ref date 1)))\n         \
    \ (>= (month-lengths (string-ref date 1) string) 1)\n          (months (string-ref\
    \ date 1) string) string) True]\n    [(and (not (empty? date))\n           (and\
    \ (<= 1 day (length date))\n                (<= 31 days (month-lengths (string-ref\
    \ date 2) string))\n                (<= 30 days (month-lengths (string-ref date\
    \ 3) string))\n                (<= 29 months (string-ref date 2)))\n         \
    \ (>= (month-lengths (string-ref date 2) string) 1)\n          (months (string-ref\
    \ date 2) string) string) True]\n    [(and (not (empty? date))\n           (and\
    \ (<= 1 day (length date))\n                (<= 31 days (month-lengths (string-ref\
    \ date 3) string))\n                (<= 30 days (month-lengths (string-ref date\
    \ 4) string))\n                (<= 29 months (string-ref date 3)))\n         \
    \ (>= (month-lengths (string-ref date 3) string) 1)\n          (months (string-ref\
    \ date 3) string) string) True]\n    [(and (not (empty? date))\n           (and\
    \ (<= 1 day (length date))\n                (<= 31 days (month-lengths (string-ref\
    \ date 4) string))\n                (<= 30 days (month-lengths (string-ref date\
    \ 5) string))\n                (<= 29 months (string-ref date 4)))\n         \
    \ (>= (month-lengths (string-ref date 4) string) 1)\n          (months (string-ref\
    \ date 4) string) string) True]\n    [(and (not (empty? date))\n           (and\
    \ (<= 1 day (length date))\n                (<= 31 days (month-lengths (string-ref\
    \ date 5) string))\n                (<= 30 days (month-", "  (and (not (empty?\
    \ date))\n       (< 1 (string-length date))\n       (< 31 (substring date 0 1))\n\
    \       (< 30 (substring date 0 2))\n       (< 29 (substring date 0 3))\n    \
    \   (<= 12 (substring date 0 4))\n       (< (substring date 2 2) (substring date\
    \ 0 2))\n       (< (substring date 4 2) (substring date 0 2))\n       (<= 2 (substring\
    \ date 0 1))\n       (<= 12 (substring date 0 3))\n       (<= 11 (substring date\
    \ 0 3))\n       (<= 9 (substring date 0 3))\n       (<= 6 (substring date 0 3))\n\
    \       (<= 3 (substring date 0 2))\n       (<= 12 (substring date 0 4))\n   \
    \    (<= 10 (substring date 0 4))\n       (<= 8 (substring date 0 4))\n      \
    \ (<= 5 (substring date 0 4))\n       (<= 2 (substring date 0 4))\n       (<=\
    \ 1 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring\
    \ date 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring date\
    \ 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n\
    \       (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n    \
    \   (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n       (<=\
    \ 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring\
    \ date 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring date\
    \ 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n\
    \       (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n    \
    \   (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n       (<=\
    \ 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring\
    \ date 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring date\
    \ 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n\
    \       (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n    \
    \   (<= 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n       (<=\
    \ 0 (substring date 0 4))\n       (<= 0 (substring date 0 4))\n       (<= 0 (substring ",
  "  (cond \n   ((empty? date) #t)\n   ((< 1 (length date))\n    (if (< (char (last\
    \ date) (string-ref date 0))) #f\n      (valid_date (rest date))\n      (valid_date\
    \ (rest date)))\n   ((< (char (first date) (string-ref date 0))) #f\n   ((< 31\
    \ (char (string-ref date 1) 1))\n   ((< 30 (char (string-ref date 1 0) 2))\n \
    \  ((< 29 (char (string-ref date 1 0) 3))\n   ((char (string-ref date 1 0) 2)\
    \ #f)\n   ((char (string-ref date 1 0) 3) #f)\n   ((char (string-ref date 1 0)\
    \ 4) #f)\n   ((char (string-ref date 1 0) 5) #f)\n   ((char (string-ref date 1\
    \ 0) 6) #f)\n   ((char (string-ref date 1 0) 7) #f)\n   ((char (string-ref date\
    \ 1 0) 8) #f)\n   ((char (string-ref date 1 0) 9) #f)\n   ((char (string-ref date\
    \ 1 0) 11) #f)\n   ((char (string-ref date 1 0) 12) #t)\n   ((char (string-ref\
    \ date 1 0) 0) #f)\n   ((char (string-ref date 1 0) 1) #t)\n   ((char (string-ref\
    \ date 1 0) 2) #t)\n   ((char (string-ref date 1 0) 3) #t)\n   ((char (string-ref\
    \ date 1 0) 4) #t)\n   ((char (string-ref date 1 0) 5) #t)\n   ((char (string-ref\
    \ date 1 0) 6) #t)\n   ((char (string-ref date 1 0) 7) #t)\n   ((char (string-ref\
    \ date 1 0) 8) #t)\n   ((char (string-ref date 1 0) 9) #t)\n   ((char (string-ref\
    \ date 1 0) 11) #t)\n   ((char (string-ref date 1 0) 12) #t)\n   ((char (string-ref\
    \ date 1 0) 0) #t)\n   ((char (string-ref date 1 0) 1) #t)\n   ((char (string-ref\
    \ date 1 0) 2) #t)\n   ((char (string-ref date 1 0) 3) #t)\n   ((char (string-ref\
    \ date 1 0) 4) #t)\n   ((char (string-ref date 1 0) 5) #t)\n   ((char (string-ref\
    \ date 1 0) 6) #t)\n   ((char (string-ref date 1 0) 7) #t)\n   ((char (string-ref\
    \ date 1 0) 8) #t)\n   ((char (string-ref date 1 0) 9) #t)\n   ((char (string-ref\
    \ date 1 0) 11) #t)\n   ((char (string-ref date 1 ", "  (cond ((not (empty? date))\n\
    \         (<= 31 \n             (date->month date) \n             (date->day date)))\n\
    \        ((not (<= 31 \n                   (date->month date) \n             \
    \      (date->day date)))\n         (<= 30 \n             (date->month date) \n\
    \             (date->day date)))\n        ((not (<= 29 \n                   (date->month\
    \ date) \n                   (date->day date)))\n         (<= 12 \n          \
    \   (date->month date) \n             (date->day date))\n         ((< 1 \n   \
    \           (date->month date) \n              (date->day date))\n         ((<\
    \ 1 \n              (date->month date) \n              (date->day date))\n   \
    \      ((< 1 \n              (date->month date) \n              (date->day date))\n\
    \         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((< 1 \n              (date->month date) \n              (date->day\
    \ date))\n         ((", "  (cond\n    [(string? date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date) (string-length\
    \ date) (string-length date) (string-length date) (string-length date", "  (cond\
    \ [(empty? date) #t]\n        [(= 1 (length date)) #t]\n        [(and (>= 1 (length\
    \ date))\n               (<= 31 (string->number date))\n               (<= 30\
    \ (string->number date))\n               (<= 29 (string->number date))\n     \
    \          (not (string->number date)) #t)\n         #t]\n        [(and (>= 1\
    \ (length date))\n               (<= 12 (string->number date))\n             \
    \  (not (string->number date)) #t)\n         #t]\n        [(and (>= 2 (length\
    \ date))\n               (<= 31 (string->number date))\n               (<= 30\
    \ (string->number date))\n               (<= 29 (string->number date)) #t)\n \
    \        #t]\n        [else #f]))\n", "  (match date\n    (_ '()) false\n    ((list\
    \ day month year) (and (<= 1 day) (<= 31 month) (<= 12 month) (<= 31 year) (<=\
    \ 29 year)))\n    ((list day month year) (and (<= 30 day) (<= 30 month) (<= 12\
    \ month) (<= 31 year) (<= 29 year)))\n    ((list day month year) (and (<= 29 day)\
    \ (<= 12 month) (<= 12 month) (<= 31 year) (<= 29 year)))\n    ((list day month\
    \ year) (and (<= 30 day) (<= 30 month) (<= 12 month) (<= 12 month) (<= 31 year)\
    \ (<= 29 year)))\n    ((list day month year) (and (<= 29 day) (<= 12 month) (<=\
    \ 12 month) (<= 12 month) (<= 31 year) (<= 29 year)))\n    ((list day month year)\
    \ (and (<= 30 day) (<= 30 month) (<= 12 month) (<= 12 month) (<= 12 month) (<=\
    \ 31 year) (<= 29 year)))\n    ((list day month year) (and (<= 29 day) (<= 12\
    \ month) (<= 12 month) (<= 12 month) (<= 12 month) (<= 31 year) (<= 29 year)))\n\
    \    ((list day month year) (and (<= 29 day) (<= 12 month) (<= 12 month) (<= 12\
    \ month) (<= 12 month) (<= 12 month) (<= 31 year) (<= 29 year)))\n    ((list day\
    \ month year) (and (<= 29 day) (<= 12 month) (<= 12 month) (<= 12 month) (<= 12\
    \ month) (<= 12 month) (<= 12 month) (<= 31 year) (<= 29 year)))\n    ((list day\
    \ month year) (and (<= 29 day) (<= 12 month) (<= 12 month) (<= 12 month) (<= 12\
    \ month) (<= 12 month) (<= 12 month) (<= 12 month) (<= 31 year) (<= 29 year)))))\n",
  "  (cond\n    [(empty? date) #f]\n    [(<= 0 (string-length date)) #f]\n    [(string-match\
    \ (regexp-opt \"^[0-2]?[0-9]$\" 'g) date) #t]\n    [(<= 0 #xA (parse-date date))\
    \ #f]\n    [(<= 0 #xF (parse-date date)) #f]\n    [(<= 0 #xE (parse-date date))\
    \ #f]\n    [(<= 0 #xD (parse-date date)) #f]\n    [(<= 0 (parse-date date \"MM-dd-yyyy\"\
    ))\n     (and (<= 0 #xA (parse-date date)) (<= 0 #xF (parse-date date)))]\n  \
    \  [(<= 0 (parse-date date \"MM-dd-yyyy\"))\n     (and (<= 0 #xE (parse-date date))\
    \ (<= 0 #xD (parse-date date)))]\n    [(<= 0 (parse-date date \"MM-dd-yyyy\"))\n\
    \     (and (<= 0 #xF (parse-date date)) (<= 0 #xE (parse-date date)))]\n    [(<=\
    \ 0 (parse-date date \"MM-dd-yyyy\"))\n     (and (<= 0 #xF (parse-date date))\
    \ (<= 0 #xD (parse-date date)))]\n    [(<= 0 (parse-date date \"MM-dd-yyyy\"))\n\
    \     (and (<= 0 #xE (parse-date date)) (<= 0 #xF (parse-date date)))]\n    [(<=\
    \ 0 (parse-date date \"MM-dd-yyyy\"))\n     (and (<= 0 #xE (parse-date date))\
    \ (<= 0 #xD (parse-date date)))]\n    [(<= 0 (parse-date date \"MM-dd-yyyy\"))\n\
    \     (and (<= 0 #xD (parse-date date)) (<= 0 #xE (parse-date date)))]\n    [(<=\
    \ 0 (parse-date date \"MM-dd-yyyy\"))\n     (and (<= 0 #xD (parse-date date))\
    \ (<= 0 #xF (parse-date date)))]\n    [(<= 0 (parse-date date \"MM-dd-yyyy\"))\n\
    \     (and (<= 0 #xD (parse-date date)) (<= 0 #xE (parse-date date)))]\n    [(<=\
    \ 0 (parse-date date \"", "  (cond\n    ((null? date) #t)\n    ((string-empty?\
    \ date) #f)\n    ((< (string->number-at-pos (string-prefix-length date) '0') 1)\
    \ #f)\n    ((< (string->number-at-pos (string-prefix-length date) '1') 31) #f)\n\
    \    ((< (string->number-at-pos (string-prefix-length date) '2') 29) #f)\n   \
    \ ((< (string->number-at-pos (string-prefix-length date) '3') 31) #f)\n    ((<\
    \ (string->number-at-pos (string-prefix-length date) '4') 30) #f)\n    ((< (string->number-at-pos\
    \ (string-prefix-length date) '5') 31) #f)\n    ((< (string->number-at-pos (string-prefix-length\
    \ date) '6') 30) #f)\n    ((< (string->number-at-pos (string-prefix-length date)\
    \ '7') 31) #f)\n    ((< (string->number-at-pos (string-prefix-length date) '8')\
    \ 31) #f)\n    ((< (string->number-at-pos (string-prefix-length date) '9') 30)\
    \ #f)\n    ((< (string->number-at-pos (string-prefix-length date) '10') 31) #f)\n\
    \    ((< (string->number-at-pos (string-prefix-length date) '11') 30) #f)\n  \
    \  ((< (string->number-at-pos (string-prefix-length date) '12') 31) #f)\n    ((<\
    \ (string->number-at-pos (string-prefix-length date) '01') 12) #f)\n    ((< (string->number-at-pos\
    \ (string-prefix-length date) '03') 12) #f)\n    ((< (string->number-at-pos (string-prefix-length\
    \ date) '05') 12) #f)\n    ((< (string->number-at-pos (string-prefix-length date)\
    \ '07') 12) #f)\n    ((< (string->number-at-pos (string-prefix-length date) '08')\
    \ 12) #f)\n    ((< (string->number-at-pos (string-prefix-length date) '10') 12)\
    \ #f)\n    ((< (string->number-at-pos (string-prefix-length date) '12') 12) #f)\n\
    \    ((< (string->number-at-pos (string-prefix-length date) '04') 12) #f)\n  \
    \  ((< (string->number-at-pos (string-prefix-length date) '06') 12) #f)\n    ((<\
    \ (string->number-at-pos (string-", "  (cond\n    ((null? date) #t)\n    ((string-length\
    \ date) < 1 #f)\n    ((string-length date) > 31 #f)\n    ((< (string-length date)\
    \ 2) #f)\n    ((< (string-length date) 3) #f)\n    ((< (string-length date) 29)\
    \ #f)\n    ((< date \"12\") #f)\n    ((< date \"01\") #f)\n    ((< date \"30\"\
    ) #f)\n    ((< date \"31\") #f)\n    ((< date \"01\") #f)\n    ((< date \"03\"\
    ) #f)\n    ((< date \"05\") #f)\n    ((< date \"07\") #f)\n    ((< date \"08\"\
    ) #f)\n    ((< date \"10\") #f)\n    ((< date \"12\") #f)\n    ((< date \"01\"\
    ) #f)\n    ((< date \"04\") #f)\n    ((< date \"06\") #f)\n    ((< date \"09\"\
    ) #f)\n    ((< date \"11\") #f)\n    ((< date \"01\") #f)\n    ((< date \"02\"\
    ) #f)\n    ((< date \"04\") #f)\n    ((< date \"06\") #f)\n    ((< date \"08\"\
    ) #f)\n    ((< date \"09\") #f)\n    ((< date \"11\") #f)\n    ((< date \"12\"\
    ) #f)\n    ((< date \"01\") #f)\n    ((< date \"03\") #f)\n    ((< date \"05\"\
    ) #f)\n    ((< date \"07\") #f)\n    ((< date \"08\") #f)\n    ((< date \"10\"\
    ) #f)\n    ((< date \"12\") #f)\n    ((< date \"01\") #f)\n    ((< date \"04\"\
    ) #f)\n    ((< date \"06\") #f)\n    ((< date \"09\") #f)\n    ((< date \"11\"\
    ) #f)\n    ((< date \"12\") #f)\n    ((< date \"01\") #f)\n    ((< date \"03\"\
    ) #f)\n    ((< date \"05\") #f)\n    ((< date \"07\") #f)\n    ((< date \"08\"\
    ) #f)\n    ((< date \"10\") #f)\n    ((< date \"12\") #f)\n    ((< date \"01\"\
    ) #f)\n    ((< date \"04\") #f)\n    ((< date \"06\") #f)\n    ((< date \"09\"\
    ) #f)\n    ((< date \"11\") #f)\n    ((< date \"12\") #f)\n    ((< date \"", " \
    \ (cond ((empty? date) false)\n        ((> (days date) 1) false)\n        ((<\
    \ (days date) 31) false)\n        ((> (days date) 30) false)\n        ((< (days\
    \ date) 29) false)\n        ((< month (date) 1) false)\n        ((> month (date)\
    \ 12) false)\n        (else true)))\n</code>\n<|/ a |>\n<| a dscore=1 tags=racket,scheme\
    \ |>\nA function that validates any date:\n<code>", "  (cond ((empty? date) #f)\n\
    \        ((< 1 (string-length date))\n         (if (< 1 (string-length date))\n\
    \             #t\n             (if (< 1 (string-length date))\n              \
    \   #t\n                 (if (< 1 (string-length date))\n                    \
    \ #t\n                     (if (< 1 (string-length date))\n                  \
    \       #t\n                         (if (< 1 (string-length date))\n        \
    \                     #t\n                             (if (< 1 (string-length\
    \ date))\n                                 #t\n                              \
    \   (if (< 1 (string-length date))\n                                     #t\n\
    \                                     (if (< 1 (string-length date))\n       \
    \                                  #t\n                                      \
    \   (if (< 1 (string-length date))\n                                         \
    \    #t\n                                             (if (< 1 (string-length\
    \ date))\n                                                 #t\n              \
    \                                   (if (< 1 (string-length date))\n         \
    \                                            #t\n                            \
    \                         (if (< 1 (string-length date))\n                   \
    \                                      #t\n                                  \
    \                       (if (< 1 (string-length date))\n                     \
    \                                        #t\n                                \
    \                             (if (< 1 (string-length date))\n               \
    \                                                  #t\n                      \
    \                                           (if (< 1 (string-length date))\n \
    \                                                                    #f))))))))))))))))\n\
    \        ((< 1 (string-length date))\n         (if (< 1 (string-length date))\n\
    \             #t\n             (if (< 1 (string-length date))\n              \
    \   #t\n                 (if (< 1 (string-length date))\n                    \
    \ #t\n                     (if (< 1 (string-length date))\n                  \
    \       #t\n                         (if (< 1 (string-length date))\n        \
    \                     #t\n                             (if (< 1 (string-length\
    \ date))\n                                 #t\n                              \
    \   (if (< 1 (string-length date))\n                                     #t\n\
    \                                     (if (< 1 (string-length date))\n       \
    \                                  #t\n                                      \
    \   (if (< 1 (string-length date))\n                                         \
    \    #t\n                                             (if (< 1 (string-length\
    \ date))\n                                                 #t\n              \
    \                                   (if (< 1 (string-length date))\n         \
    \                                            #t\n                            \
    \                         (if (< 1 (string-length date))\n                   \
    \                                      #t\n                                  \
    \                       (if (< 1 (string-length date))\n                     \
    \                                        #t\n                                \
    \                             (if (< 1 (string-length date))\n               \
    \                                                  #t\n                      \
    \                                           (if (< 1 (string-length date))\n \
    \                                                                    #f))))))))))))\n\
    \        ((< 1 (string-length date))\n         (if (< 1 (string-length date))\n\
    \             #t\n             (if (< 1 (string-length date))\n              \
    \   #t\n                 (if (< 1 (string-length date))\n                    \
    \ #t\n                     (if (< 1 (string-length date))\n                  \
    \       #t\n                         (", "  (cond ((not (empty? date)) (and (and\
    \ (not (< 1 (string-length date)))\n                                (and (not\
    \ (< 3 (string-length date)))\n                                      (and (not\
    \ (< 5 (string-length date)))\n                                          (and\
    \ (not (< 7 (string-length date)))\n                                         \
    \     (and (not (< 8 (string-length date)))\n                                \
    \                  (and (not (< 10 (string-length date)))\n                  \
    \                                    (and (not (< 12 (string-length date))))\n\
    \                                                              (and (not (< 4\
    \ (string-length date))))\n                                                  \
    \            (and (not (< 6 (string-length date))))\n                        \
    \                                      (and (not (< 9 (string-length date))))\n\
    \                                                              (and (not (< 11\
    \ (string-length date))))\n                                                  \
    \            (and (not (< 2 (string-length date))))))))))))))\n", "  (and (not\
    \ (empty? date))\n       (not (< (- (string-length date) 3) 1))\n       (not (<\
    \ (- (string-length date) 10) 1))\n       (not (< (- (string-length date) 7) 1))\n\
    \       (not (< (- (string-length date) 4) 1))\n       (not (< (- (string-length\
    \ date) 6) 1))\n       (not (< (- (string-length date) 5) 1))\n       (not (<\
    \ (- (string-length date) 3) 2))\n       (not (< (- (string-length date) 2) 1))\n\
    \       (not (< (- (string-length date) 1) 2))\n       (not (< (- (string-length\
    \ date) 4) 2))\n       (not (< (- (string-length date) 6) 2))\n       (not (<\
    \ (- (string-length date) 5) 2))\n       (not (< (- (string-length date) 3) 3))\n\
    \       (not (< (- (string-length date) 2) 3))\n       (not (< (- (string-length\
    \ date) 1) 3))\n       (not (< (- (string-length date) 4) 3))\n       (not (<\
    \ (- (string-length date) 6) 3))\n       (not (< (- (string-length date) 5) 3))\n\
    \       (not (< (- (string-length date) 3) 4))\n       (not (< (- (string-length\
    \ date) 2) 4))\n       (not (< (- (string-length date) 1) 4))\n       (not (<\
    \ (- (string-length date) 4) 4))\n       (not (< (- (string-length date) 6) 4))\n\
    \       (not (< (- (string-length date) 5) 4))\n       (not (< (- (string-length\
    \ date) 3) 5))\n       (not (< (- (string-length date) 2) 5))\n       (not (<\
    \ (- (string-length date) 1) 5))\n       (not (< (- (string-length date) 4) 5))\n\
    \       (not (< (- (string-length date) 6) 5))\n       (not (< (- (string-length\
    \ date) 5) 5))\n       (not (< (- (string-length date) 3) 6))\n       (not (<\
    \ (- (string-length date) 2) 6))\n       (not (< (- (string-length date) 1) 6))\n\
    \       (not (< (- (string-length date) 4) 6))\n       (not (< (- (string-length\
    \ date) 6) 6))\n       (not (< (- (string-length date) 5) 6))))\n", "  (cond\n\
    \    ((string-empty? date) #t)\n    ((month-1 (string-month date))\n     (month-3\
    \ (string-month date))\n     (month-5 (string-month date))\n     (month-7 (string-month\
    \ date))\n     (month-8 (string-month date))\n     (month-10 (string-month date))\n\
    \     (month-12 (string-month date))\n     (month-1 (string-month date))\n   \
    \  (month-3 (string-month date))\n     (month-5 (string-month date))\n     (month-7\
    \ (string-month date))\n     (month-8 (string-month date))\n     (month-10 (string-month\
    \ date))\n     (month-12 (string-month date))\n     (month-1 (string-month date))\n\
    \     (month-3 (string-month date))\n     (month-5 (string-month date))\n    \
    \ (month-7 (string-month date))\n     (month-8 (string-month date))\n     (month-10\
    \ (string-month date))\n     (month-12 (string-month date))\n     (month-1 (string-month\
    \ date))\n     (month-3 (string-month date))\n     (month-5 (string-month date))\n\
    \     (month-7 (string-month date))\n     (month-8 (string-month date))\n    \
    \ (month-10 (string-month date))\n     (month-12 (string-month date))\n     (month-1\
    \ (string-month date))\n     (month-3 (string-month date))\n     (month-5 (string-month\
    \ date))\n     (month-7 (string-month date))\n     (month-8 (string-month date))\n\
    \     (month-10 (string-month date))\n     (month-12 (string-month date))\n  \
    \   (month-1 (string-month date))\n     (month-3 (string-month date))\n     (month-5\
    \ (string-month date))\n     (month-7 (string-month date))\n     (month-8 (string-month\
    \ date))\n     (month-10 (string-month date))\n     (month-12 (string-month date))\n\
    \     (month-1 (string-month date))\n     (month-3 (string-month date))\n    \
    \ (month-5 (string-month date))\n     (month-7 (string-month date))\n     (month-8\
    \ (string-month date))\n     (month-10 (string-month date))\n     (month-12 (string-month\
    \ date))\n     (month-1 (string-month date))\n     (month-3 (string-month date))\n\
    \     (month-5 (string-month date))\n     (month-7 (string-month date))\n    \
    \ (month-8 (string-month date))\n     (month-10 (string-month date))\n     (month-12\
    \ (string-month ", "  (cond\n    [(string-empty date) #f]\n    [(< (length date)\
    \ 5) #f]\n    [(< (string-length (substring date 0 2)) 2) #f]\n    [(< (string-length\
    \ (substring date 0 2)) 1) #f]\n    [(< (string-length (substring date 0 2)) 3)\
    \ #f]\n    [(< (string-length (substring date 0 2)) 4) #f]\n    [(< (string-length\
    \ (substring date 0 2)) 7) #f]\n    [(< (string-length (substring date 0 2)) 8)\
    \ #f]\n    [(< (string-length (substring date 0 2)) 10) #f]\n    [(< (string-length\
    \ (substring date 0 2)) 12) #f]\n    [(> (length date) 5) #f]\n    [(< (string-length\
    \ (substring date 3 2)) 2) #f]\n    [(< (string-length (substring date 3 2)) 1)\
    \ #f]\n    [(< (string-length (substring date 3 2)) 3) #f]\n    [(< (string-length\
    \ (substring date 3 2)) 4) #f]\n    [(< (string-length (substring date 3 2)) 7)\
    \ #f]\n    [(< (string-length (substring date 3 2)) 8) #f]\n    [(< (string-length\
    \ (substring date 3 2)) 10) #f]\n    [(< (string-length (substring date 3 2))\
    \ 12) #f]\n    [(< (string-length (substring date 4 2)) 2) #f]\n    [(< (string-length\
    \ (substring date 4 2)) 1) #f]\n    [(< (string-length (substring date 4 2)) 3)\
    \ #f]\n    [(< (string-length (substring date 4 2)) 4) #f]\n    [(< (string-length\
    \ (substring date 4 2)) 7) #f]\n    [(< (string-length (substring date 4 2)) 8)\
    \ #f]\n    [(< (string-length (substring date 4 2)) 10) #f]\n    [(< (string-length\
    \ (substring date 4 2)) 12) #f]\n    [(> (length date) 7) #f]\n    [(< (string-length\
    \ (substring date 6 2)) 2) #f]\n    [(< (string-length (substring date 6 2)) 1)\
    \ #f]\n    [(< (string-length (substring date 6 2)) 3) #f]\n    [(< (string-length\
    \ (substring date 6 2)) 4) #f]\n    [(< (string-length (substring date 6 2)) 7)\
    \ #f]\n    [(< (", "  (and (empty? date) \n       (or (< (string-length date)\
    \ 4) \n           (< (string-length date) 9) \n           (< (string-length date)\
    \ 15) \n           (= (string-length date) 10)) \n       (not (or (< (string-length\
    \ date) 1) \n                 (< (string-length date) 3) \n                 (<\
    \ (string-length date) 5) \n                 (< (string-length date) 7) \n   \
    \              (< (string-length date) 8) \n                 (< (string-length\
    \ date) 10) \n                 (< (string-length date) 12)) \n       (not (or\
    \ (< (string-length date) 4) \n                 (< (string-length date) 6) \n\
    \                 (< (string-length date) 9) \n                 (< (string-length\
    \ date) 11)) \n       (not (< (string-length date) 2) \n             (< (string-length\
    \ date) 4) \n             (< (string-length date) 6) \n             (< (string-length\
    \ date) 8) \n             (< (string-length date) 10) \n             (< (string-length\
    \ date) 12))))", "  (and (not (empty? date))\n       (not (< (length date) (*\
    \ 3 4 6))) \n       (not (< (length date) (* 3 4 6))) \n       (not (< (length\
    \ date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (<\
    \ (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n      \
    \ (not (< (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n\
    \       (not (< (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4\
    \ 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (< (length date)\
    \ (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (< (length\
    \ date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (<\
    \ (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n      \
    \ (not (< (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n\
    \       (not (< (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4\
    \ 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (< (length date)\
    \ (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (< (length\
    \ date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (<\
    \ (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n      \
    \ (not (< (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n\
    \       (not (< (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 4\
    \ 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (< (length date)\
    \ (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (< (length\
    \ date) (* 3 4 6)))\n       (not (< (length date) (* 3 4 6)))\n       (not (<\
    \ (length date) (* 3 4 6)))\n       (not (< (length date) (* 3 ", "  (define (valid-date\
    \ str month day\n                   (month 1) (day 1) (year 0))\n    (cond ((=\
    \ day 32) false)\n          ((= month 12) true)\n          ((< month 2) false)\n\
    \          ((< day 29) false)\n          ((< day 30) false)\n          ((< day\
    \ 31) false)\n          ((< year 1900) false)\n          ((< year 2000 (- year\
    \ 1))) false)\n    (if (or (equal? (length str) 0)\n            (char=? (substring\
    \ str 0 1) #\\/) false)\n    (let ((m (substring str 0 (char-code (first month)))))\n\
    \      (if (char=? (substring m 0 1) #\\-)\n          (let ((m (substring m 1\
    \ (char-code (first m)))))\n            (valid-date (substring str 1 (- char-code\
    \ (first m))) month day (+ year 1) (+ month 1)))))\n    (let ((d (substring str\
    \ 1 (char-code (first day)))))\n      (if (char=? (substring d 0 1) #\\-)\n  \
    \        (let ((d (substring d 1 (char-code (first d)))))\n            (valid-date\
    \ (substring str 1 (- char-code (first d)) (+ day 1) (+ month 1) (+ year 1)))))\n\
    \    (let ((y (substring str 2 (char-code (first year)))))\n      (if (char=?\
    \ (substring y 0 1) #\\-)\n          (let ((y (substring y 1 (char-code (first\
    \ y))))\n                ((y 0) (year 0))\n                ((y 1) (- year 1))\n\
    \                ((y 2) year))))))\n  (valid-date date (substring date 1 (char-code\
    \ (first date))) (substring date 2 (char-code (first date))) (substring date 3\
    \ (char-code (first date))))\n  true)\n</code>\n<|/ a |>\n<| a |>\nThe simplest\
    \ way is:\n\nRead each character from the input string and save its value in a\
    \ temp variable.\nCheck if the character is a valid date character or not\n\n\
    If it is then move forward else quit.\nIf it is a valid date character then check\
    \ if it is valid\nIf it is valid then print that it is valid else print it is\
    \ not valid\nIf it isn't valid then again move forward else quit.\n\nelse print\
    \ invalid date character\n\n<code>", "  (cond ((null? date) #f)\n        ((< (length\
    \ (string=? date \"\")) 0) #f)\n        ((< 1 (string-length (string-ref date\
    \ 0))) #f)\n        ((< 1 (string-length (string-ref date 2))) #f)\n        ((<\
    \ 1 (string-length (string-ref date 4))) #f)\n        ((< 1 (string-length (string-ref\
    \ date 6))) #f)\n        ((< 1 (string-length (string-ref date 8))) #f)\n    \
    \    ((< 1 (string-length (string-ref date 10))) #f)\n        ((< 1 (string-length\
    \ (string-ref date 12))) #f)\n        ((< 1 (string-length (string-ref date 14)))\
    \ #f)\n        ((< 1 (string-length (string-ref date 16))) #f)\n        ((< 1\
    \ (string-length (string-ref date 18))) #f)\n        ((< 1 (string-length (string-ref\
    \ date 20))) #f)\n        ((< 1 (string-length (string-ref date 22))) #f)\n  \
    \      ((< 1 (string-length (string-ref date 24))) #f)\n        ((< 1 (string-length\
    \ (string-ref date 26))) #f)\n        ((< 1 (string-length (string-ref date 28)))\
    \ #f)\n        ((< 1 (string-length (string-ref date 30))) #f)\n        ((< 1\
    \ (string-length (string-ref date 32))) #f)\n        ((< 1 (string-length (string-ref\
    \ date 34))) #f)\n        ((< 1 (string-length (string-ref date 36))) #f)\n  \
    \      ((< 1 (string-length (string-ref date 38))) #f)\n        ((< 1 (string-length\
    \ (string-ref date 40))) #f)\n        ((< 1 (string-length (string-ref date 42)))\
    \ #f)\n        ((< 1 (string-length (string-ref date 44))) #f)\n        ((< 1\
    \ (string-length (string-ref date 46))) #f)\n        ((< 1 (string-length (string-ref\
    \ date 48))) #f)\n        ((< 1 (string-length (string-ref date 50))) #f)\n  \
    \      ((< 1 (string-length (string-ref date 52))) #f)\n        ((< 1 (string-length\
    \ (string-ref date 54))) #f)\n        ((< 1 (string-length (string-ref date 56)))\
    \ #f)\n        ((< 1 (string-length (string-ref date 58))) #f)\n        ((< 1\
    \ (string-length (string-ref date 60))) #f)\n        ((< 1 (string-length (string-ref\
    \ date 62))) #f)\n        ((< 1 (string-length (string-ref date 64))) #f)\n  \
    \      ", "  (cond\n    [(empty? date) #t]\n    [(< (length (substring date 1\
    \ 2)) 2) #f]\n    [(< (length (substring date 3 2)) 2) #f]\n    [(< (length (substring\
    \ date 4 2)) 2) #f]\n    [(< (length (substring date 5 2)) 2) #f]\n    [(< (length\
    \ (substring date 7 2)) 2) #f]\n    [(< (length (substring date 8 2)) 2) #f]\n\
    \    [(< (length (substring date 10 2)) 2) #f]\n    [(< (length (substring date\
    \ 12 2)) 2) #f]\n    [(< (length (substring date 1 2)) 2) #f]\n    [(< (length\
    \ (substring date 3 2)) 2) #f]\n    [(< (length (substring date 5 2)) 2) #f]\n\
    \    [(< (length (substring date 7 2)) 2) #f]\n    [(< (length (substring date\
    \ 8 2)) 2) #f]\n    [(< (length (substring date 10 2)) 2) #f]\n    [(< (length\
    \ (substring date 12 2)) 2) #f]\n    [(< (length (substring date 1 2)) 2) #f]\n\
    \    [(< (length (substring date 3 2)) 2) #f]\n    [(< (length (substring date\
    \ 5 2)) 2) #f]\n    [(< (length (substring date 7 2)) 2) #f]\n    [(< (length\
    \ (substring date 8 2)) 2) #f]\n    [(< (length (substring date 10 2)) 2) #f]\n\
    \    [(< (length (substring date 12 2)) 2) #f]\n    [(< (length (substring date\
    \ 1 2)) 2) #f]\n    [(< (length (substring date 3 2)) 2) #f]\n    [(< (length\
    \ (substring date 5 2)) 2) #f]\n    [(< (length (substring date 7 2)) 2) #f]\n\
    \    [(< (length (substring date 8 2)) 2) #f]\n    [(< (length (substring date\
    \ 10 2)) 2) #f]\n    [(< (length (substring date 12 2)) 2) #f]\n    [(< (length\
    \ (substring date 1 2)) 2) #f]\n    [(< (length (substring date 3 2)) 2) #f]\n\
    \    [(< (length (substring date 5 2)) 2) #f]\n    [(< (length (substring date\
    \ 7 2)) 2) #f]\n    [(< (length (", "  (cond\n    [(empty? date) #t]\n    [(<\
    \ (length (car date)) 1) #f]\n    [(< (length (car date)) (* 2 (length (cdr date)))\
    \ #f]\n    [(< (length (car date)) (* 2 (length (cdr date))) #f]\n    [(< (length\
    \ (car date)) (* 4 (length (cdr date))) #f]\n    [(< (length (car date)) (* 4\
    \ (length (cdr date))) #f]\n    [(< 12 (length (cdr date))) #f]\n    [(< 1 (length\
    \ (car date))) #f]\n    [(< 1 (length (cdr date))) #f]\n    [(< 31 (length (cdr\
    \ date)) #t]\n    [(< 30 (length (car date)) #t]\n    [(< 29 (length (cdr date))\
    \ #t]\n    [(< 12 (length (car date)) #t]\n    [(< 1 (length (cdr date)) #t]\n\
    \    [(< 1 (length (car date)) #t]\n    [(< 31 (length (car date)) #t]\n    [(<\
    \ 30 (length (cdr date)) #t]\n    [(< 29 (length (car date)) #t]\n    [(< 12 (length\
    \ (cdr date)) #t]\n    [(< 1 (length (car date)) #t]\n    [(< 1 (length (cdr date))\
    \ #t]\n    [(< 31 (length (car date)) #t]\n    [(< 30 (length (cdr date)) #t]\n\
    \    [(< 29 (length (car date)) #t]\n    [(< 12 (length (cdr date)) #t]\n    [(<\
    \ 1 (length (car date)) #t]\n    [(< 1 (length (cdr date)) #t]\n    [(< 31 (length\
    \ (car date)) #t]\n    [(< 30 (length (cdr date)) #t]\n    [(< 29 (length (car\
    \ date)) #t]\n    [(< 12 (length (cdr date)) #t]\n    [(< 1 (length (car date))\
    \ #t]\n    [(< 1 (length (cdr date)) #t]\n    [", "  (cond [(empty? date) #t]\n\
    \        [(< (days-in-month (month-value date)) 1) #t]\n        [(< (days-in-month\
    \ (month-value date)) 31) #f]\n        [(< (days-in-month (month-value date))\
    \ 30) #f]\n        [(< (days-in-month (month-value date)) 29) #f]\n        [(<\
    \ (month-value date) 1) #t]\n        [(< (month-value date) 12) #t]\n        [(<\
    \ (days-in-year (year-value date)) 1) #t]\n        [(< (days-in-year (year-value\
    \ date)) 30) #f]\n        [(< (days-in-year (year-value date)) 31) #f]\n     \
    \   [(< (days-in-year (year-value date)) 29) #f]\n        [(month-value (number->string\
    \ (month-value date)) (string->number (string-ref date #\\-))) #t]\n        [(days-in-month\
    \ (number->string (month-value date)) (string->number (string-ref date #\\-))\
    \ (string->number (string-ref date #\\-)) (string->number (string-ref date #\\\
    -))) #t]\n        [(days-in-year (number->string (month-value date)) (string->number\
    \ (string-ref date #\\-)) (string->number (string-ref date #\\-)) (string->number\
    \ (string-ref date #\\-))) #t]\n        [(> (year-value date) 1920) #t]\n    \
    \    [(> (year-value date) 2020) #f]\n        [(> (year-value date) 2040) #f]\n\
    \        [(> (year-value date) 2006) #t]\n        [(> (year-value date) 2008)\
    \ #f]\n        [(> (year-value date) 2012) #t]\n        [(> (year-value date)\
    \ 2016) #f]\n        [(> (year-value date) 2019) #f]\n        [(> (year-value\
    \ date) 2023) #f]\n        [(> (year-value date) 2035) #f]\n        [(> (year-value\
    \ date) 2040) #f]\n        [else #f]))\n", "  (cond\n    ((string? date) \n  \
    \   (and (not (empty? date))\n          (< (string-length date) 7)\n         \
    \ (< (string-length (string-ref date 1) 1) 1)\n          (< (string-length (string-ref\
    \ date 3) 1) 1)\n          (< (string-length (string-ref date 5) 1) 1)\n     \
    \     (< (string-length (string-ref date 7) 1) 1)\n          (< (string-length\
    \ (string-ref date 8) 1) 1)\n          (< (string-length (string-ref date 10)\
    \ 1) 1)\n          (< (string-length (string-ref date 12) 1) 1)))\n    ((number?\
    \ date)\n     (and (not (< date 0))\n          (< date 31))\n    ((string? (string-ref\
    \ date 1))\n     (and (not (< 1 (string-length (string-ref date 1))))\n      \
    \    (< 1 (string-length (string-ref date 1)))))\n    ((string? (string-ref date\
    \ 3))\n     (and (not (< 1 (string-length (string-ref date 3))))\n          (<\
    \ 1 (string-length (string-ref date 3)))))\n    ((string? (string-ref date 5))\n\
    \     (and (not (< 1 (string-length (string-ref date 5))))\n          (< 1 (string-length\
    \ (string-ref date 5)))))\n    ((string? (string-ref date 7))\n     (and (not\
    \ (< 1 (string-length (string-ref date 7))))\n          (< 1 (string-length (string-ref\
    \ date 7))))\n    ((string? (string-ref date 8))\n     (and (not (< 1 (string-length\
    \ (string-ref date 8))))\n          (< 1 (string-length (string-ref date 8))))\n\
    \    ((string? (string-ref date 10))\n     (and (not (< 1 (string-length (string-ref\
    \ date 10))))\n          (< 1 (string-length (string-ref date 10))))\n    ((string?\
    \ (string-ref date 12))\n     (and (not (< 1 (string-length (string-ref date 12))))\n\
    \          (< 1 (string-length (string-ref date 12))))\n    (else false)))\n",
  "  (cond\n    ((null? date) #t)\n    ((< (length (string->list date)) 5) #t)\n \
    \   ((< (length date) 5) #t)\n    ((< (string->integer (sub1 (string->list date))\
    \ 1) 1) #t)\n    ((< (string->integer (sub1 (string->list date)) 3) 3) #t)\n \
    \   ((< (string->integer (sub1 (string->list date)) 5) 5) #t)\n    ((< (string->integer\
    \ (sub1 (string->list date)) 7) 7) #t)\n    ((< (string->integer (sub1 (string->list\
    \ date)) 8) 8) #t)\n    ((< (string->integer (sub1 (string->list date)) 12) 12)\
    \ #t)\n    ((< (string->integer (sub1 (string->list date)) 13) 13) #t)\n    ((<\
    \ (string->integer (sub1 (string->list date)) 14) 14) #t)\n    ((< (string->integer\
    \ (sub1 (string->list date)) 15) 15) #t)\n    ((< (string->integer (sub1 (string->list\
    \ date)) 16) 16) #t)\n    ((< (string->integer (sub1 (string->list date)) 17)\
    \ 17) #t)\n    ((< (string->integer (sub1 (string->list date)) 18) 18) #t)\n \
    \   ((< (string->integer (sub1 (string->list date)) 19) 19) #t)\n    ((< (string->integer\
    \ (sub1 (string->list date)) 20) 20) #t)\n    ((< (string->integer (sub1 (string->list\
    \ date)) 21) 21) #t)\n    ((< (string->integer (sub1 (string->list date)) 22)\
    \ 22) #t)\n    ((< (string->integer (sub1 (string->list date)) 23) 23) #t)\n \
    \   ((< (string->integer (sub1 (string->list date)) 24) 24) #t)\n    ((< (string->integer\
    \ (sub1 (string->list date)) 25) 25) #t)\n    ((< (string->integer (sub1 (string->list\
    \ date)) 26) 26) #t)\n    ((< (string->integer (sub1 (string->list date)) 27)\
    \ 27) #t)\n    ((< (string->integer (sub1 (string->list date)) 28) 28) #t)\n \
    \   ((< (string->integer (sub1 (string->list date)) 29) 29) #t)\n    ((< (string->integer\
    \ (sub1 (string->list date)) 30) 30) #t)\n    ((< (string->integer (sub1 (string->list\
    \ date)) 31) 31) #t)\n    ((< (string->integer (sub1 (string", "  (let ([days\
    \ (string->number (substring date 0 2))]\n        [months (string->list (substring\
    \ date 2 4))]\n        [year (string->number (substring date 4 4)))])\n    (and\
    \ (< days 31) (< months 1-12) (< year 1900)\n        (= (length date) 6)\n   \
    \     (= (string-append months \"-\" (string-append days \"-\" (string->number\
    \ year)))\n            (string->string date)))))\n", "  (cond ((null? date) #t)\n\
    \        ((< 1 (string-length date))\n         (cond\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-31]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[3-6]\") #f)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-3]\") #f)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-2]\") #f)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[0-1]\") #f)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[0-4]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[0-6]\") #f)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[0-2]\") #f)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[0-3]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-9]\") #f)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[0-3]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-2]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[0-2]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-9]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-9]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-2]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-2]\") #t)\n           ((string-match\
    \ (string-append  (\"-?d\" date) (\"-?d\" date)) \"[1-2]\") #t)\n           ((string-",
  "  (cond\n    [(not (string? date)) False]\n    [(or (not (< 1 (string-length date)))\n\
    \          (not (< 31 (string-length date)))\n          (not (< 30 (string-length\
    \ date)))\n          (not (< 29 (string-length date)))\n          (not (string-length\
    \ date (string-ref date 0 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 1 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 2 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 3 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 4 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 5 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 6 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 7 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 8 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 9 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 10 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 11 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 12 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 13 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 14 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 15 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 16 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 17 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 18 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 19 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 20 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 21 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 22 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 23 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 24 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 25 (string-length date))))\n          (not (string-length\
    \ date (string-ref date 26 (string-length date))))\n", "  (cond\n    ((empty?\
    \ date) #t)\n    ((< (length (split date \"-\")) (length 2)) #f)\n    ((< (char\
    \ (second (split date \"-\")) 0) #\\0) #f)\n    ((< (char (second (split date\
    \ \"-\")) 1) #\\1) #f)\n    ((< (char (second (split date \"-\")) 2) #\\2) #f)\n\
    \    ((< (char (second (split date \"-\")) 3) #\\3) #f)\n    ((< (char (second\
    \ (split date \"-\")) 4) #\\4) #f)\n    ((< (char (second (split date \"-\"))\
    \ 5) #\\5) #f)\n    ((< (char (second (split date \"-\")) 6) #\\6) #f)\n    ((<\
    \ (char (second (split date \"-\")) 7) #\\7) #f)\n    ((< (char (second (split\
    \ date \"-\")) 8) #\\8) #f)\n    ((< (char (second (split date \"-\")) 9) #\\\
    9) #f)\n    ((< (char (second (split date \"-\")) 10) #\\10) #f)\n    ((< (char\
    \ (second (split date \"-\")) 11) #\\11) #f)\n    ((< (char (second (split date\
    \ \"-\")) 12) #\\12) #f)\n    ((= (length (split date \"-\")) (length 3)) #t)\n\
    \    ((< (char (first date) 0) #\\0) #t)\n    ((< (char (first date) 1) #\\1)\
    \ #t)\n    ((< (char (first date) 2) #\\2) #t)\n    ((< (char (first date) 3)\
    \ #\\3) #t)\n    ((< (char (first date) 4) #\\4) #t)\n    ((< (char (first date)\
    \ 5) #\\5) #t)\n    ((< (char (first date) 6) #\\6) #t)\n    ((< (char (first\
    \ date) 7) #\\7) #t)\n    ((< (char (first date) 8) #\\8) #t)\n    ((< (char (first\
    \ date) 9) #\\9) #t)\n    ((< (char (first date) 10) #\\10) #t)\n    ((< (char\
    \ (first date) 11) #\\11) #t)\n    ((< (char (first date) 12) #\\12) #t)\n   \
    \ ((= (length (first date)) 9) #t)\n    ((= (length (second date)) 2) #t)\n  \
    \  ((= (length (third date)) 4) #t)\n    ((= (length (fourth date)) 4) #t)\n \
    \   ((= (length (fifth date)) 5) #t)\n", "  (and (not (string? date)) (<= 0 date)\
    \ (<= 31 date) (<= 29 date) (<= 12 date) (<= 30 date) (<= 31 date) (string? (substring\
    \ date 0 2)) (<= 12 date) (string? (substring date 1 2)) (<= 12 date) (<= 28 date)\
    \ (<= 31 date) (string? (substring date 3 4)) (string? (substring date 4 4)) (string?\
    \ (substring date 4 4) (substring date 0 2)) (<= 12 date) (<= 30 date) (<= 31\
    \ date) (string? (substring date 6 2)) (<= 12 date) (<= 30 date) (<= 31 date)\
    \ (string? (substring date 7 2)) (<= 12 date) (<= 30 date) (<= 31 date) (string?\
    \ (substring date 8 2)) (<= 12 date) (<= 30 date) (<= 31 date) (string? (substring\
    \ date 9 2)) (<= 12 date) (<= 30 date) (<= 31 date) (string? (substring date 10\
    \ 2)) (<= 12 date) (<= 30 date) (<= 31 date) (string? (substring date 11 2)) (<=\
    \ 12 date) (<= 30 date) (<= 31 date) (string? (substring date 12 2))))\n", " \
    \ (if (string-empty? date)\n      #f\n      (cond\n        ((month (string->list\
    \ date))\n         (cond\n           ((string-equal? (month (string->list date))\
    \ 1)\n            (cond\n               ((string-equal? (month (string->list date))\
    \ 3)\n                (cond\n                   ((string-equal? (month (string->list\
    \ date)) 5)\n                    (cond\n                       ((string-equal?\
    \ (month (string->list date)) 7)\n                        (cond\n            \
    \               ((string-equal? (month (string->list date)) 8)\n             \
    \               (cond\n                               ((string-equal? (month (string->list\
    \ date)) 10)\n                                (cond\n                        \
    \           ((string-equal? (month (string->list date)) 12)\n                \
    \                    (cond\n                                      ((string-equal?\
    \ (year (string->list date)) 2000)\n                                      (cond\n\
    \                                        ((string-equal? (year (string->list date))\
    \ 2008)\n                                        #t\n                        \
    \                #f)\n                                       (else\n         \
    \                               #t))\n                                   (else\n\
    \                                    #f))))\n                               (else\n\
    \                                #f))))\n                           (else\n  \
    \                          #f))))\n                       (else\n            \
    \           #f))))\n                   (else\n                   #f)))))\n", " \
    \ (and (not (string? date))\n       (< 1 (length date))\n       (< 31 (number->string\
    \ (days-in-month->int date 1)))\n       (< 30 (number->string (days-in-month->int\
    \ date 3)))\n       (< 29 (number->string (days-in-month->int date 2)))\n    \
    \   (and (>= 1 (number->string (month->int date 1))) (<= 12 (number->string (month->int\
    \ date 1))))\n       (and (>= 4 (number->string (month->int date 4))) (<= 12 (number->string\
    \ (month->int date 4))))\n       (and (>= 6 (number->string (month->int date 6)))\
    \ (<= 12 (number->string (month->int date 6))))\n       (and (>= 3 (number->string\
    \ (month->int date 3))) (<= 12 (number->string (month->int date 3))))\n      \
    \ (and (>= 2 (number->string (month->int date 2))) (<= 12 (number->string (month->int\
    \ date 2))))))\n", "  (cond\n    [(string? date) (or (<= (length (date-month (date->string\
    \ date)) 3) 1)\n                        (<= (length (date-month (date->string\
    \ date)) 5) 1)\n                        (<= (length (date-month (date->string\
    \ date)) 7) 1)\n                        (<= (length (date-month (date->string\
    \ date)) 8) 1)\n                        (<= (length (date-month (date->string\
    \ date)) 10) 1)\n                        (<= (length (date-month (date->string\
    \ date)) 12) 1)\n                        (<= (length (date-day (date->string date))\
    \ 1) 1)\n                        (<= (length (date-day (date->string date)) 31)\
    \ 1)\n                        (<= (length (date-day (date->string date)) 30) 1)\n\
    \                        (<= (length (date-day (date->string date)) 29) 1)\n \
    \                       (<= (length (date-year (date->string date)) 4) 1)\n  \
    \                      (<= (length (date-year (date->string date)) 2000) 1)\n\
    \                        (<= (length (date-year (date->string date)) 2040) 1)))]\n\
    \    [else false]))\n", "  (cond\n    ((null? date) #f)\n    ((< (length (string->list\
    \ date)) 4) #f)\n    ((> (length (string->list date)) 4) #f)\n    ((< (length\
    \ date) 2) #f)\n    ((> (length date) 2) #f)\n    ((< (length date) 3) #f)\n \
    \   ((> (length date) 3) #f)\n    ((< 1 (string->list (substring date 0 1))) #f)\n\
    \    ((< 1 (string->list (substring date 0 2))) #f)\n    ((< 1 (string->list (substring\
    \ date 0 3))) #f)\n    ((< 1 (string->list (substring date 0 4))) #f)\n    ((<\
    \ 1 (string->list (substring date 0 5))) #f)\n    ((< 1 (string->list (substring\
    \ date 0 6))) #f)\n    ((< 1 (string->list (substring date 0 7))) #f)\n    ((<\
    \ 1 (string->list (substring date 0 8))) #f)\n    ((< 1 (string->list (substring\
    \ date 0 9))) #f)\n    ((< 1 (string->list (substring date 0 10)))\n     ((< 1\
    \ (string->list (substring date 0 11)))\n      (#f)\n      (#f)\n      (#f)\n\
    \      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n    \
    \  (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n\
    \      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n    \
    \  (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n\
    \      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n    \
    \  (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n\
    \      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n    \
    \  (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n\
    \      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n    \
    \  (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n      (#f)\n\
    \      (#f)\n      (#f)\n      (#f)\n      (#", "  (and (not (empty? date))\n\
    \       (not (< (length date) 0))\n       (not (< ((string-length (string-ref\
    \ date 0 0)) 1) 0))\n       (not (< ((string-length (string-ref date 2 2)) 1)\
    \ 0))\n       (not (< ((string-length (string-ref date 3 2)) 1) 0))\n       (not\
    \ (< ((string-length (string-ref date 5 2)) 1) 0))\n       (not (< ((string-length\
    \ (string-ref date 7 2)) 1) 0))\n       (not (< ((string-length (string-ref date\
    \ 8 2)) 1) 0))\n       (not (< ((string-length (string-ref date 10 2)) 1) 0))\n\
    \       (not (< ((string-length (string-ref date 12 2)) 1) 0))\n       (not (<\
    \ ((string-length (string-ref date 1 2)) 1) 0))\n       (not (< ((string-length\
    \ (string-ref date 4 2)) 1) 0))\n       (not (< ((string-length (string-ref date\
    \ 6 2)) 1) 0))\n       (not (< ((string-length (string-ref date 9 2)) 1) 0))\n\
    \       (not (< ((string-length (string-ref date 11 2)) 1) 0))\n       (not (<\
    \ ((string-length (string-ref date 13 2)) 1) 0))\n       (not (< ((string-length\
    \ (string-ref date 15 2)) 1) 0))\n       (not (< ((string-length (string-ref date\
    \ 17 2)) 1) 0))\n       (not (< ((string-length (string-ref date 19 2)) 1) 0))\n\
    \       (not (< ((string-length (string-ref date 21 2)) 1) 0))\n       (not (<\
    \ ((string-length (string-ref date 23 2)) 1) 0))\n       (not (< ((string-length\
    \ (string-ref date 1 3)) 1) 0))\n       (not (< ((string-length (string-ref date\
    \ 3 3)) 1) 0))\n       (not (< ((string-length (string-ref date 5 3)) 1) 0))\n\
    \       (not (< ((string-length (string-ref date 7 3)) 1) 0))\n       (not (<\
    \ ((string-length (string-ref date 8 3)) 1) 0))\n       (not (< ((string-length\
    \ (string-ref date 10 3)) 1) 0))\n       (not (< ((string-length (string-ref date\
    \ 12 3)) 1) 0))\n       (not (< ((string-length (string-ref date 1 5)) 1) 0))\n\
    \       (not (< ((string-length (string-ref date 3 5)) 1) 0))\n       (not (<\
    \ ((string-length (string-ref date 5 5)) 1) 0))\n       (not ", "  (cond\n   \
    \ [(null? date) #t]\n    [(empty? date) #f]\n    [(<= (length date) 7)\n     (cond\n\
    \       [(= (substring (date 0 2) (+ 0 2)) '01-31) #t]\n       [(= (substring\
    \ (date 0 2) (+ 0 2)) '04-30) #t]\n       [(= (substring (date 0 2) (+ 0 2)) '06-29)\
    \ #t]\n       [(= (substring (date 0 2) (+ 0 2)) '02-29) #t]\n       [(= (substring\
    \ (date 0 2) (+ 0 2)) '04-29) #t]\n       [(= (substring (date 0 2) (+ 0 2)) '06-28)\
    \ #t]\n       [(= (substring (date 0 2) (+ 0 2)) '02-28) #t]\n       [(= (substring\
    \ (date 0 2) (+ 0 2)) '04-28) #t]\n       [(= (substring (date 0 2) (+ 0 2)) '06-27)\
    \ #t]\n       [(= (substring (date 0 2) (+ 0 2)) '02-27) #t]\n       [(= (substring\
    \ (date 0 2) (+ 0 2)) '04-27) #t]\n       [(= (substring (date 0 2) (+ 0 2)) '06-26)\
    \ #t]\n       [(= (substring (date 0 2) (+ 0 2)) '02-26) #t]\n       [(= (substring\
    \ (date 0 2) (+ 0 2)) '04-26) #t]\n       [(= (substring (date 0 2) (+ 0 2)) '06-25)\
    \ #t]\n       [(= (substring (date 0 2) (+ 0 2)) '02-25) #t]\n       [(= (substring\
    \ (date 0 2) (+ 0 2)) '04-25) #t]\n       [(= (substring (date 0 2) (+ 0 2)) '06-24)\
    \ #t]\n       [(= (substring (date 0 2) (+ 0 2)) '02-24) #t]\n       [(= (substring\
    \ (date 0 2) (+ 0 2)) '04-24) #t]\n       [(= (substring (date 0 2) (+ 0 2)) '06-23)\
    \ #t]\n       [(= (substring (date 0 2) (+ 0 2)) '02-23", "  (and (not (string?\
    \ date))\n       (< (string->number date) 31L)\n       (< (string->number date)\
    \ 29L)\n       (< (string->number date) 30L)\n       (< (string->number date)\
    \ 31L)\n       (= (string->string date) '(number->string #x000a-#x0fff))\n   \
    \    (= (string->string date) '(number->string #x0100-#x018f))\n       (= (string->string\
    \ date) '(number->string #x0190-#x021f))\n       (= (string->string date) '(number->string\
    \ #x0221-#x024f))\n       (= (string->string date) '(number->string #x0250-#x027f))\n\
    \       (= (string->string date) '(number->string #x0290-#x02af))\n       (= (string->string\
    \ date) '(number->string #x02b1-#x02cf))\n       (= (string->string date) '(number->string\
    \ #x02d0-#x02ff))\n       (= (string->string date) '(number->string #x03a0-#x03ff))))\n",
  "  (cond\n    [(empty? date) #t]\n    [(or (number? (length date)) (string-length?\
    \ date)) #t]\n    [(< (string->number (first date) 16) (string-length? (first\
    \ date)))\n     (< (string->number (first date) 15) (string-length? (first date)))]\n\
    \    [(< (string->number (first date) 15) (string->number (second date) 16))\n\
    \     (< (string->number (first date) 15) (string->number (second date) 15))\n\
    \     (< (string->number (first date) 15) (string->number (second date) 14))\n\
    \     (< (string->number (first date) 14) (string->number (second date) 13))\n\
    \     (< (string->number (first date) 13) (string->number (second date) 12))\n\
    \     (< (string->number (first date) 12) (string->number (second date) 11))\n\
    \     (< (string->number (first date) 11) (string->number (second date) 10))\n\
    \     (< (string->number (first date) 10) (string->number (second date) 9))\n\
    \     (< (string->number (first date) 9) (string->number (second date) 8))\n \
    \    (< (string->number (first date) 8) (string->number (second date) 7))\n  \
    \   (< (string->number (first date) 7) (string->number (second date) 6))\n   \
    \  (< (string->number (first date) 6) (string->number (second date) 5))\n    \
    \ (< (string->number (first date) 5) (string->number (second date) 4))\n     (<\
    \ (string->number (first date) 4) (string->number (second date) 3))\n     (< (string->number\
    \ (first date) 3) (string->number (second date) 2))\n     (< (string->number (first\
    \ date) 2) (string->number (second date) 1))\n     (< (string->number (first date)\
    \ 1) (number? (second date)))\n     (< (string->number (first date) 1) (number?\
    \ (second date)))\n     (< (string->number (first date) 1) (number? (second date)))]\n\
    \    [(< (string->number (first date) 1) (number? (second date)))\n     (< (string->number\
    \ (first date) 1) (number? (second date)))]\n    [(< (string->number (first date)\
    \ 1) (number? (second date)))\n     (< (string->number (first date) 1) (number?\
    \ (second date)))]\n    [(< (string->number (first date) 1) (number? (second date)))\n\
    \     (< (string->number (first date) 1) (number? (second date)))]\n    [(", " \
    \ (let ((month (substring date 0 2)))\n    (cond\n      [(month>= '01) \n    \
    \  (cond\n        ((string? (substring date 2 4))) (substring date 4 3)\n    \
    \    ((string? (substring date 2 6))) (substring date 6 2)\n        (else false)\n\
    \        )\n      (month>= '03) \n      (cond\n        ((string? (substring date\
    \ 2 4)) (substring date 4 1))\n        (else false)\n        )\n      (month>=\
    \ '05) \n      (cond\n        ((string? (substring date 2 4))) (substring date\
    \ 4 2)\n        ((string? (substring date 2 6))) (substring date 6 2)\n      \
    \  (else false)\n        )\n      (month>= '07) \n      (cond\n        ((string?\
    \ (substring date 2 4))) (substring date 4 2)\n        ((string? (substring date\
    \ 2 6))) (substring date 6 2)\n        (else false)\n        )\n      (month>=\
    \ '08) \n      (cond\n        ((string? (substring date 2 4))) (substring date\
    \ 4 2)\n        ((string? (substring date 2 6))) (substring date 6 2)\n      \
    \  (else false)\n        )\n      (month>= '10) \n      (cond\n        ((string?\
    \ (substring date 2 4))) (substring date 4 2)\n        ((string? (substring date\
    \ 2 6))) (substring date 6 2)\n        (else false)\n        )\n      (month>=\
    \ '12) \n      (cond\n        ((string? (substring date 2 4)) (substring date\
    \ 4 1))\n        (else false)\n        )\n      (month>= '04) \n      (cond\n\
    \        ((string? (substring date 2 4)) (substring date 4 1))\n        (else\
    \ false)\n        )\n      (month>= '06) \n      (cond\n        ((string? (substring\
    \ date 2 4)) (substring date 4 1))\n        (else false)\n        )\n      (month>=\
    \ '09) \n      (cond\n        ((string? (substring date 2 4)) (substring date\
    \ 4 1))\n        (else false)\n        )\n      (month>= '11) \n      (cond\n\
    \        ((string? (substring date 2 4)) (substring date 4 1))\n        (else\
    \ false)\n        )\n      (else false)\n        )\n      (else false)\n     \
    \ )\n    )\n  )\n", "  (cond\n    [(null? date) #t]\n    [(empty? date) #f]\n\
    \    [(< 1 (string-length date)) #f]\n    [(< 31 (string-length date))\n     (and\
    \ (< 1 (string-length date #\\\\-)\n              (string-length date #\\-))\n\
    \          (< 30 (string-length date #\\\\-))\n          (< 29 (string-length\
    \ date #\\\\-)))]\n    [(< 3 (string-length date #\\\\-)\n        (< 12 (string-length\
    \ date #\\\\-)))\n     (and (< 1 (string-length date #\\\\-)\n              (string-length\
    \ date #\\-))\n          (< 4 (string-length date #\\\\-))\n          (< 6 (string-length\
    \ date #\\\\-))\n          (< 9 (string-length date #\\\\-))\n          (< 11\
    \ (string-length date #\\\\-))\n          (< 12 (string-length date #\\\\-)))]\n\
    \    [(< 4 (string-length date #\\\\-)\n        (< 6 (string-length date #\\\\\
    -))\n        (< 9 (string-length date #\\\\-))\n        (< 11 (string-length date\
    \ #\\\\-)))\n     (and (< 1 (string-length date #\\\\-)\n              (string-length\
    \ date #\\-))\n          (< 6 (string-length date #\\\\-))\n          (< 9 (string-length\
    \ date #\\\\-))\n          (< 11 (string-length date #\\\\-)))]\n    [(< 6 (string-length\
    \ date #\\\\-)\n        (< 9 (string-length date #\\\\-))\n        (< 11 (string-length\
    \ date #\\\\-)))\n     (and (< 1 (string-length date #\\\\-)\n              (string-length\
    \ date #\\-))\n          (< 9 (string-length date #\\\\-))\n          (< 11 (string-length\
    \ date #\\\\-)))]\n    [(< 9 (string-length date #\\\\-)\n        (< 11 (string-length\
    \ date #\\\\-)))\n     (and (< 1 (string-length date #\\\\-)\n              (string-length\
    \ date #\\-))\n          (< 11 (string-length date #\\\\-)))]\n    [(< 11 (string-length\
    \ date #\\\\-))\n     (and (< 1 (string-length date #\\\\-)\n              (string-length\
    \ date #\\-))\n          (< 12 (string-length date #\\\\-)))]\n    [else #t]))\n",
  "  (cond\n    ((= date '') #t)\n    ((= (re-seq #\"(\\d\\d)-(\\d\\d)-(\\d\\d\\d\\\
    d)\" date #t false) #f) #t)\n    ((< 1 (number->string date)) #f)\n    ((< 3 (number->string\
    \ date)) #f)\n    ((< 5 (number->string date)) #f)\n    ((< 7 (number->string\
    \ date)) #f)\n    ((< 9 (number->string date)) #f)\n    ((< 11 (number->string\
    \ date)) #f)\n    ((< 12 (number->string date)) #f)\n    ((< 2 (number->string\
    \ date)) #f)\n    ((< 4 (number->string date)) #f)\n    ((< 6 (number->string\
    \ date)) #f)\n    ((< 9 (number->string date)) #f)\n    ((< 11 (number->string\
    \ date)) #f)\n    ((< 12 (number->string date)) #f)\n    ((< 2 (number->string\
    \ date)) #f)\n    ((< 4 (number->string date)) #f)\n    ((< 6 (number->string\
    \ date)) #f)\n    ((< 9 (number->string date)) #f)\n    ((< 11 (number->string\
    \ date)) #f)\n    ((< 12 (number->string date)) #f)\n    ((< 2 (number->string\
    \ date)) #f)\n    ((< 4 (number->string date)) #f)\n    ((< 6 (number->string\
    \ date)) #f)\n    ((< 9 (number->string date)) #f)\n    ((< 11 (number->string\
    \ date)) #f)\n    ((< 12 (number->string date)) #f)\n    ((< 2 (number->string\
    \ date)) #f)\n    ((< 4 (number->string date)) #f)\n    ((< 6 (number->string\
    \ date)) #f)\n    ((< 9 (number->string date)) #f)\n    ((< 11 (number->string\
    \ date)) #f)\n    ((< 12 (number->string date)) #f)\n    ((< 2 (number->string\
    \ date)) #f)\n    ((< 4 (number->string date)) #f)\n    ((< 6 (number->string\
    \ date)) #f)\n    ((< 9 (number->string date)) #f)\n    ((< 11 (number->string\
    \ date)) #f)\n    ((< 12 (number->string date)) #f)\n    ((< 2 (number->string\
    \ date)) #f)\n    ((< 4 (number->string date)) #f)\n    ((< 6 (number->string\
    \ date)) #f)\n    ((< 9 (", "  (cond\n    [(string-length date) t]\n    [(< (string-length\
    \ date) 2) t]\n    [(< (string-length date) 6) t]\n    [(< (string-length date)\
    \ 7) t]\n    [(< (string-length date) 8) t]\n    [(< (string-length date) 9) t]\n\
    \    [(< (string-length date) 11) t]\n    [(< (string-length date) 12) t]\n  \
    \  [(< (string-length date) 13) t]\n    [(< (string-length date) 14) t]\n    [(<\
    \ (string-length date) 15) t]\n    [(< (string-length date) 16) t]\n    [(< (string-length\
    \ date) 17) t]\n    [(< (string-length date) 18) t]\n    [(< (string-length date)\
    \ 19) t]\n    [(< (string-length date) 20) t]\n    [(< (string-length date) 21)\
    \ t]\n    [(< (string-length date) 22) t]\n    [(< (string-length date) 23) t]\n\
    \    [(< (string-length date) 24) t]\n    [(< (string-length date) 25) t]\n  \
    \  [(< (string-length date) 26) t]\n    [(< (string-length date) 27) t]\n    [(<\
    \ (string-length date) 28) t]\n    [(< (string-length date) 29) t]\n    [(< (string-length\
    \ date) 30) t]\n    [(< (string-length date) 31) t]\n    [(> (< (string-length\
    \ date) 1) 0) t]\n    [(> (< (string-length date) 3) 0) t]\n    [(> (< (string-length\
    \ date) 5) 0) t]\n    [(> (< (string-length date) 7) 0) t]\n    [(> (< (string-length\
    \ date) 8) 0) t]\n    [(> (< (string-length date) 10) 0) t]\n    [(> (< (string-length\
    \ date) 12) 0) t]\n    [(< (< (string-length date) 13) 1) t]\n    [(< (< (string-length\
    \ date) 13) 2) t]\n    [(< (< (string-length date) 13) 3) t]\n    [(< (< (string-length\
    \ date) 13) 4) t]\n    [(< (< (string-length date) 13) 5) t]\n    [(< (< (string-length\
    \ date) 13) 6) t]\n    [(< (< (string-length date) 13) 7) t]\n    [(", "  \n \
    \ (let ([days (string-length date)]\n        [months (string-length date \"-\"\
    )])\n    ;; Day Rule: Days cannot be less than 1 or greater than 31\n    (cond\n\
    \        ((< 1 days) false)\n        ((< 31 days) false)\n        ((< 31 months)\
    \ false)\n        ((< 30 days) false)\n        ((< 29 months) false)\n       \
    \ ((< 2 months) false))\n    ;; Month Rule: Months cannot be less than 1 or higher\
    \ than 12\n    (cond\n        ((< 1 months) false)\n        ((< 12 months) false)\n\
    \        (else true))))\n", "  (cond \n    [(and (not (empty? date))\n       \
    \    (not (< 1 (length date)))\n           (not (> 31 (length date)))\n      \
    \     (not (< 1 (length date)))\n           (not (> 30 (length date)))\n     \
    \      (not (< 1 (length date)))\n           (not (> 29 (length date)))\n    \
    \       (not (< (length date) 2)))\n    ;; The date is not valid.\n    false]\n\
    \    [(and (not (empty? date))\n           (not (< 1 (length date)))\n       \
    \    (not (> 31 (length date)))\n           (not (< 1 (length date)))\n      \
    \     (not (> 30 (length date)))\n           (not (< 1 (length date)))\n     \
    \      (not (> 29 (length date)))\n           (not (< (length date) 2)))\n   \
    \ ;; The date string is empty.\n    true]\n    [(and (not (empty? date))\n   \
    \        (not (< 1 (length date)))\n           (not (> 31 (length date)))\n  \
    \         (not (< 1 (length date)))\n           (not (> 30 (length date)))\n \
    \          (not (< 1 (length date)))\n           (not (> 29 (length date)))\n\
    \           (not (< (length date) 2)))\n    ;; The date string has too many days.\n\
    \    (and (not (empty? date))\n         (not (< (length date) 2)))\n    ;; The\
    \ date has too few days.\n    false]\n    [(and (not (empty? date))\n        \
    \   (not (< (length date) 2)))\n    ;; The date has too many months.\n    (and\
    \ (not (empty? date))\n         (not (< (length date) 2)))\n    ;; The date has\
    \ too few months.\n    false]\n    [(and (not (empty? date))\n           (not\
    \ (< (length date) 2)))\n    ;; The date has incorrect format.\n    false]\n \
    \   [else\n    ;; The date is valid.\n    (and (substring (first date) 0 2)\n\
    \         (substring (first date) 1 2)\n         (substring (first date) 3 4)\n\
    \         (< 1 (string-length date))\n         (> 31 (string-length date))\n \
    \        (< 1 (string-length date))\n         (> 30 (string-length date))\n  \
    \       (< 1 (string-length date))\n         (> 29 (string-length date))\n   \
    \      (< (string-length date) 2))]))\n", "  (let ((date_split (tokenize date)))\n\
    \    (if (empty? date_split)\n        False\n        (and (<= 3 (length date_split))\
    \ (<= 31 (length (first date_split))) (<= 29 (length (second date_split)))\n \
    \           (= (length (first date_split)) (length (second date_split)) (length\
    \ (first date_split))) (>= 1 (length (first date_split)))\n            (= (length\
    \ (first date_split)) 12 (length (first date_split))) (>= 1 (length (first date_split)))\n\
    \            (= (length (second date_split)) 12 (length (second date_split)))\
    \ (>= 1 (length (second date_split)))\n            (= (length (second date_split))\
    \ 3 (length (second date_split))) (>= 1 (length (second date_split)))\n      \
    \      (= (length (third date_split)) 4 (length (third date_split))) (>= 1 (length\
    \ (third date_split)))\n            (= (length (third date_split)) 6 (length (third\
    \ date_split))) (>= 1 (length (third date_split)))\n            (= (length (third\
    \ date_split)) 9 (length (third date_split))) (>= 1 (length (third date_split)))\n\
    \            (= (length (third date_split)) 11 (length (third date_split))) (>=\
    \ 1 (length (third date_split)))\n            (= (length (third date_split)) 12\
    \ (length (third date_split))) (>= 1 (length (third date_split)))\n          \
    \  (= (length (fourth date_split)) 4 (length (fourth date_split))) (>= 1 (length\
    \ (fourth date_split)))\n            (= (length (fourth date_split)) 6 (length\
    \ (fourth date_split))) (>= 1 (length (fourth date_split)))\n            (= (length\
    \ (fourth date_split)) 9 (length (fourth date_split))) (>= 1 (length (fourth date_split)))\n\
    \            (= (length (fourth date_split)) 11 (length (fourth date_split)))\
    \ (>= 1 (length (fourth date_split)))\n            (= (length (fourth date_split))\
    \ 12 (length (fourth date_split))) (>= 1 (length (fourth date_split)))\n     \
    \       (= (length (fifth date_split)) 2 (length (fifth date_split))) (>= 1 (length\
    \ (fifth date_split)))\n            (= (length (fifth date_split)) 4 (length (fifth\
    \ date_split))) (>= 1 (length (fifth date_split)))\n            (= (length", " \
    \ (and (not (string? date))\n       (not (<= 1 (length date)))\n       (not (<=\
    \ 31 (length date))))\n      (not (or (<= 1 (string-ref date 0 2 #\\- ))\n   \
    \            (<= 31 (string-ref date 0 2 #\\- ))\n               (<= 30 (string-ref\
    \ date 0 2 #\\- ))\n               (<= 29 (string-ref date 0 2 #\\- ))\n     \
    \          (<= 12 (string-ref date 0 2 #\\- ))))\n      (not (or (<= 1 (string-ref\
    \ date 0 2 #\\- ))\n               (<= 31 (string-ref date 0 2 #\\- ))\n     \
    \          (<= 30 (string-ref date 0 2 #\\- ))\n               (<= 29 (string-ref\
    \ date 0 2 #\\- ))\n               (<= 12 (string-ref date 0 2 #\\- ))))\n   \
    \   (not (or (<= 1 (string-ref date 0 2 #\\- ))\n               (<= 30 (string-ref\
    \ date 0 2 #\\- ))\n               (<= 29 (string-ref date 0 2 #\\- ))\n     \
    \          (<= 12 (string-ref date 0 2 #\\- ))))\n      (not (string-match (format\
    \ #\\mm-dd-yyyy \"~2\") date)))\n", "  (if (and (not (empty? (string-split date\
    \ '-')))\n          (and (not (< 1 (string-length date)))\n               (not\
    \ (> 31 \n                         (string-length (string-split date '-'))))\n\
    \               (not (< 1 (string-length (string-split date '-'))))\n        \
    \       (not (> 30 (string-length (string-split date '-'))))\n               (not\
    \ (< 1 (string-length (string-split date '-'))))\n               (not (> 29 (string-length\
    \ (string-split date '-'))))\n               (not (< 1 (string-length (string-split\
    \ date '-'))))\n               (not (< 1 (string-length (string-split date '-'))))\n\
    \               (not (> 12 (string-length (string-split date '-')))\n        \
    \       (not (< 1 (string-length (string-split date '-'))))\n               (not\
    \ (> 1 (string-length (string-split date '-'))))))\n      (let ([mm-dd-yyyy-string-length\n\
    \             (string-length (string-split date '-'))])\n        (and (not (<\
    \ 1 (string-length (string-split date '-')))\n               (not (> 31 mm-dd-yyyy-string-length))\n\
    \               (not (< 1 (string-length (string-split date '-'))))\n        \
    \       (not (> 30 (string-length (string-split date '-'))))\n               (not\
    \ (< 1 (string-length (string-split date '-'))))\n               (not (> 29 (string-length\
    \ (string-split date '-'))))\n               (not (< 1 (string-length (string-split\
    \ date '-'))))\n               (not (< 1 (string-length (string-split date '-'))))\n\
    \               (not (> 12 (string-length (string-split date '-')))\n        \
    \       (not (< 1 (string-length (string-split date '-'))))\n               (not\
    \ (> 1 (string-length (string-split date '-'))))))))\n", "  (cond\n    [(empty?\
    \ date) #f]\n    [(< 1 (string->number (substring date 0 2)))\n     (cond\n  \
    \     [(< 1 (string->number (substring date 0 1)))\n        #f]\n       [(< 1\
    \ (string->number (substring date 0 0)))\n        #f]\n       [(< 1 (string->number\
    \ (substring date 0 0)))\n        #f]\n       [(< 1 (string->number (substring\
    \ date 0 0)))\n        #f]\n       [(< 1 (string->number (substring date 0 0)))\n\
    \        #f]\n       [(< 1 (string->number (substring date 0 0)))\n        #f]\n\
    \       [(< 1 (string->number (substring date 0 0)))\n        #f]\n       [(<\
    \ 1 (string->number (substring date 0 0)))\n        #f]\n       [(< 1 (string->number\
    \ (substring date 0 0)))\n        #f]\n       [(< 1 (string->number (substring\
    \ date 0 0)))\n        #f]\n       [(< 1 (string->number (substring date 0 0)))\n\
    \        #f]\n       [(< 1 (string->number (substring date 0 0)))\n        #f]\n\
    \       [(< 1 (string->number (substring date 0 0)))\n        #f]\n       [(<\
    \ 1 (string->number (substring date 0 0)))\n        #f]\n       [(< 1 (string->number\
    \ (substring date 0 0)))\n        #f]\n       [(< 1 (string->number (substring\
    \ date 0 0)))\n        #f]\n       [(< 1 (string->number (substring date 0 0)))\n\
    \        #f]\n       [(< 1 (string->number (substring date 0 0)))\n        #f]\n\
    \       [(< 1 (string->number (substring date 0 0)))\n        #f]\n       [(<\
    \ 1 (string->number (substring date 0 0)))\n        #f]\n       [(< 1 (string->number\
    \ (substring date 0 0)))\n        #f]\n       [(< 1 (string->number (substring\
    \ date 0 0)))\n        #f]\n       [(< 1 (string->number (substring date 0 0)))\n\
    \        #f]\n       [(< 1 (string->number (substring date 0 0)))\n        #f]\n\
    \       [(< 1 (string->number (substring date 0 0)))\n        #f]\n       [(<\
    \ 1 (string->number (substring date 0 0)))\n        #f]\n       [(< 1 (string->number\
    \ (substring date 0 0)))\n        #f]", "  (cond\n    ((null? (string-split date\
    \ #\"-\") '()) #t)\n    ((< (string-length (string-split date #\"-\")) 2) #f)\n\
    \    ((< (string-length (string-split date #\"-\")) 3) #f)\n    ((> (string-length\
    \ (string-split date #\"-\")) 4) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 5) #f)\n    ((< (string-length (string-split date #\"-\")) 7) #f)\n\
    \    ((> (string-length (string-split date #\"-\")) 8) #f)\n    ((< (string-length\
    \ (string-split date #\"-\")) 9) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 11) #f)\n    ((< (string-length (string-split date #\"-\")) 13) #f)\n\
    \    ((> (string-length (string-split date #\"-\")) 14) #f)\n    ((< (string-length\
    \ (string-split date #\"-\")) 16) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 17) #f)\n    ((< (string-length (string-split date #\"-\")) 18) #f)\n\
    \    ((> (string-length (string-split date #\"-\")) 19) #f)\n    ((< (string-length\
    \ (string-split date #\"-\")) 21) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 22) #f)\n    ((< (string-length (string-split date #\"-\")) 23) #f)\n\
    \    ((> (string-length (string-split date #\"-\")) 24) #f)\n    ((< (string-length\
    \ (string-split date #\"-\")) 25) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 26) #f)\n    ((< (string-length (string-split date #\"-\")) 27) #f)\n\
    \    ((> (string-length (string-split date #\"-\")) 28) #f)\n    ((< (string-length\
    \ (string-split date #\"-\")) 29) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 30) #f)\n    ((< (string-length (string-split date #\"-\")) 31) #f)\n\
    \    ((> (string-length (string-split date #\"-\")) 32) #f)\n    ((< (string-length\
    \ (string-split date #\"-\")) 33) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 34) #f)\n    ((< (string-length (string-split date #\"-\")) 35) #f)\n\
    \    ((> (string-length (string-split date #\"-\")) 36) #f)\n    ((< (string-length\
    \ (string-split date #\"-\")) 37) #f)\n    ((> (string-length (string-split date\
    \ #\"-\")) 38) #f)\n    ((< (string-length (string-split date #\"-\")) 39) #f)",
  "  \n  (if (empty? date)\n      false\n      (\n        (and (integer? (string-length\
    \ date)) (string-equal? (substring date 0 1) '-'))\n        (< (string-length\
    \ date) 2)\n        (and (= (string-length date) (+ 3 (string-length date))) (=\
    \ (string-length date) (+ (string-length date) (length (substring date (+ 2 1)\
    \ (string-length date))))))\n        (\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 3 12)))\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 6 30)))\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 9 29)))\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 12 (string-length date))))\n          (= (string-length\
    \ date) (+ (string->number (substring date 0 2)) (* 30 (string-length date))))\n\
    \          (= (string-length date) (+ (string->number (substring date 0 2)) (*\
    \ 31 (string-length date))))\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 30 (string-length date))))\n          (= (string-length\
    \ date) (+ (string->number (substring date 0 2)) (* 29 (string-length date))))\n\
    \          (= (string-length date) (+ (string->number (substring date 0 2)) (*\
    \ 31 (string-length date))))\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 28 (string-length date))))\n          (= (string-length\
    \ date) (+ (string->number (substring date 0 2)) (* 31 (string-length date))))\n\
    \          (= (string-length date) (+ (string->number (substring date 0 2)) (*\
    \ 30 (string-length date))))\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 31 (string-length date))))\n          (= (string-length\
    \ date) (+ (string->number (substring date 0 2)) (* 31 (string-length date))))\n\
    \          (= (string-length date) (+ (string->number (substring date 0 2)) (*\
    \ 30 (string-length date))))\n          (= (string-length date) (+ (string->number\
    \ (substring date 0 2)) (* 31 (string-length date))))\n          (= (string-length\
    \ date) (+ (string->number (substring date 0 2)) (* ", "  (cond ((empty? date)\
    \ #f)\n        ((< 1 (string-length (substring date 0 1)))) #f)\n        ((< 1\
    \ (string-length (substring date 0 3)))) #f)\n        ((< 1 (string-length (substring\
    \ date 0 5)))) #f)\n        ((< 1 (string-length (substring date 0 7)))) #f)\n\
    \        ((< 1 (string-length (substring date 0 8)))) #f)\n        ((< 1 (string-length\
    \ (substring date 0 10)))) #f)\n        ((< 1 (string-length (substring date 0\
    \ 12)))) #f)\n        ((< 1 (string-length (substring date 0 13)))) #f)\n    \
    \    ((< 1 (string-length (substring date 0 14)))) #f)\n        ((< 1 (string-length\
    \ (substring date 0 15)))) #f)\n        ((< 1 (string-length (substring date 0\
    \ 16)))) #f)\n        ((< 1 (string-length (substring date 0 17)))) #f)\n    \
    \    ((< 1 (string-length (substring date 0 18)))) #f)\n        ((< 1 (string-length\
    \ (substring date 0 19)))) #f)\n        ((< 1 (string-length (substring date 0\
    \ 20)))) #f)\n        ((< 1 (string-length (substring date 0 21)))) #f)\n    \
    \    ((< 1 (string-length (substring date 0 22)))) #f)\n        ((< 1 (string-length\
    \ (substring date 0 23)))) #f)\n        ((< 1 (string-length (substring date 0\
    \ 24)))) #f)\n        ((< 1 (string-length (substring date 0 25)))) #f)\n    \
    \    ((< 1 (string-length (substring date 0 26)))) #f)\n        ((< 1 (string-length\
    \ (substring date 0 27)))) #f)\n        ((< 1 (string-length (substring date 0\
    \ 28)))) #f)\n        ((< 1 (string-length (substring date 0 29)))) #f)\n    \
    \    ((< 1 (string-length (substring date 0 30)))) #f)\n        ((< 1 (string-length\
    \ (substring date 0 31)))) #f)\n        ((< 1 (string-length (substring date 0\
    \ 32)))) #f)\n        ((< 1 (string-length (substring date 0 33)))) #f)\n    \
    \    ((< 1 (string-length (substring date 0 34)))) #f)\n        ((< 1 (string-length\
    \ (substring date 0 35)))) #f)\n        ((< 1 (string-length (substring date 0\
    \ 36)))) #f)\n        ((< 1 (string-length (sub", "  (if (empty? date)\n     \
    \ false\n      (let ((month (sub1 (string-match \"(^|[^0-9])([1-9])\" date)))\n\
    \            (day (string-match \"([0-9]{1,2})\" date))\n            (year (sub1\
    \ (string-match \"(^|[^0-9])([0-9]{4})\" date))))\n        (and (< (length (string->list\
    \ date)) 3)\n             (= (string->list date) '(\"01\" \"03\" \"05\" \"07\"\
    \ \"08\" \"10\" \"12\"))\n             (= (string->list month) '(\"01\" \"03\"\
    \ \"05\" \"07\" \"08\" \"10\" \"12\" \"04\" \"06\" \"09\" \"11\"))\n         \
    \    (= (string->list year) '(\"2000\" \"2004\" \"2008\" \"2012\" \"2020\"))\n\
    \             (= (string->list (make-string-builder (string-length (string->list\
    \ month)) :initial-element month) :initial-element month)\n             (= (string->list\
    \ (make-string-builder (string-length (string->list day)) :initial-element day)\
    \ :initial-element day)\n             (= (string->list (make-string-builder (string-length\
    \ (string->list year)) :initial-element year) :initial-element year))))))", " \
    \ (let* ([m (substring (date 1 2) 0)\n         (d (substring (date 3 4) 2)\n \
    \        (y (substring (date 5 7) 4)))\n    (and (not (empty? date))\n       \
    \  (< 1 m 12)\n         (< 31 d months)\n         (< 30 d months)\n         (<\
    \ 29 d months)\n         (< 1 y 4)\n         (= (parse-integer m \"MM\") m)\n\
    \         (= (parse-integer d \"DD\") d)\n         (= (parse-integer y \"YYYY\"\
    ) y))))\n", "  (cond\n    ((null? date) #f)\n    ((not (eq? (length (string->list\
    \ date)) 6)) #f)\n    ((not (< (length date) (length #(\"01\" \"03\" \"05\" \"\
    07\" \"08\" \"10\" \"12\"))) #f)\n    ((not (< (length date) (length #(\"04\"\
    \ \"06\" \"09\" \"11\"))) #f)\n    ((not (< (length date) (length #(\"02\")))\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 1)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 3)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 5)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 7)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 8)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 9)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 10)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 11)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 12)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 1)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 3)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 5)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 7)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 8)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 9)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 10)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring date 0 2)) #\\1) 11)\
    \ #f)\n    ((not (eq? (char->integer (string-ref (substring ", "  (cond\n    [(empty?\
    \ date) #f]\n    [(< 1 (string->number (first date)))   #f]\n    [(< 31 (string->number\
    \ (first date)))   #f]\n    [(< 30 (string->number (first date)))   #f]\n    [(<\
    \ 29 (string->number (first date)))   #f]\n    [else  (months-and-days-valid-check\
    \ (string->number (first date))\n                           (string->number ((first\
    \ date) . (string-length date) . (substring date (string-length date) 1))\n  \
    \                         (string->number ((first date) . (string-length date)\
    \ . (substring date (string-length date) 2)\n                           (string->number\
    \ ((first date) . (string-length date) . (substring date (string-length date)\
    \ 3) ))))]\n    [else  (months-and-days-valid-check (string->number ((first date)\
    \ . (string-length date) . (substring date (string-length date) 1))\n        \
    \                   (string->number ((first date) . (string-length date) . (substring\
    \ date (string-length date) 2)\n                           (string->number ((first\
    \ date) . (string-length date) . (substring date (string-length date) 3) ))))\n\
    \             (months-and-days-valid-check (string->number ((first date) . (string-length\
    \ date) . (substring date (string-length date) 1))\n                         \
    \  (string->number ((first date) . (string-length date) . (substring date (string-length\
    \ date) 2)\n                           (string->number ((first date) . (string-length\
    \ date) . (substring date (string-length date) 3) ))))]\n    [else  (months-and-days-valid-check\
    \ (string->number ((first date) . (string-length date) . (substring date (string-length\
    \ date) 1))\n                           (string->number ((first date) . (string-length\
    \ date) . (substring date (string-length date) 2)\n                          \
    \ (string->number ((first date) . (string-length date) . (substring date (string-length\
    \ date) 3) ))))\n             (months-and-days-valid-check (string->number ((first\
    \ date) . (string-length date) . (substring date (string-length date) 1))\n  \
    \                         (string->number ((first date) . (string-length date)\
    \ . (substring date (string-length date) 2)\n                           (string->number\
    \ ((first date) . (string-length date) . (substring date (string-length date)\
    \ 3) ))))\n             (months-and-", "  (cond\n    [(string? date) (if (and\
    \ (string? date) (number? date) (not (< 1 (string-length date))))\n          \
    \              (and (number? (string-to-number date)) (string-length (string-to-number\
    \ date)) (> (string-to-number date) (+ (* 31 ((string-to-number date)) (string-to-number\
    \ '('))) (> (string-to-number date) (+ (* 30 ((string-to-number date)) (string-to-number\
    \ '('))))\n                        (and (number? (string-to-number date)) (string-length\
    \ (string-to-number date)) (> (string-to-number date) (+ (* 29 ((string-to-number\
    \ date)) (string-to-number '('))))\n                        (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (> (string-to-number date) (+\
    \ (* 12 ((string-to-number date)) (string-to-number '('))))\n                \
    \        (string? date) (if (and (number? (string-to-number date)) (string-length\
    \ (string-to-number date)) (= (string-to-number date) (+ (* 12 ((string-to-number\
    \ date)) (string-to-number '('))))\n                                        (string?\
    \ date) (if (and (number? (string-to-number date)) (string-length (string-to-number\
    \ date)) (= (string-to-number date) (+ (* 12 ((string-to-number date)) (string-to-number\
    \ '('))))\n                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (string-to-number\
    \ date)) (string-length (string-to-number date)) (string? (string-to-number date))\n\
    \                                                   (and (number? (", "  (or (empty?\
    \ date)\n      (< (length (string->list (first date))) 6)\n      (< (length (string->list\
    \ (first date))) 9)\n      (< (length (string->list (first date))) 12)\n     \
    \ (< (length (string->list (first date))) 15)\n      (< (length (string->list\
    \ (first date))) 16)\n      (> (length (string->list (first date))) 20)\n    \
    \  (< (length (string->list (first date))) 26)\n      (> (length (string->list\
    \ (first date))) 29)\n      (> (string->list (first date)) '(0|1|2|3|4|5|6|7|8|9|10|11|12)-([0]|[1]|[2]|[3]|[4]|[5]|[6]|[7]|[8]|[9]|[10]|[11]|[12])-(0)|(1)|(2)|(3)|(4)|(5)|(6)|(7)|(8)|(9)|(10)|(11)|(12)')))\n",
  "  (and (not (empty? date))\n       (not (< (length (string-match \"^\\\\d{2}-\\\
    \\d{2}-\\\\d{4}$\" (string date))) 1))\n       (not (< (length (string-match \"\
    ^[1|3|5|7|8|10|12]$\" (string date))) 31))\n       (not (< (length (string-match\
    \ \"^[4,6,9,11]$\" (string date))) 30))\n       (not (< (length (string-match\
    \ \"^[2]$\" (string date))) 29))\n       (not (< (length (string-match \"^[1-12]$\"\
    \ (string date))) 12))))\n", "  (and (not (null? date))\n       (not (null? (string-length\
    \ date))) \n       (< (string-length date) 10) \n       (> (string-length date)\
    \ 4) \n       (< (string-length date) 2) \n       (> (string-length date) 7) (if\
    \ (char= (first date) \"-\")\n                                  (let ((year (+\
    \ (substring (second date) 1 2) (* -1 4)))\n                                 \
    \        (month (substring (first date) 1 2) (* -1 12)))\n                   \
    \               (and (<= 0 month (length #(\"01\" \"03\" \"05\" \"07\" \"08\"\
    \ \"10\" \"12\"))) \n                                       (<= 0 year (length\
    \ #(\"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\" \"26\")))\n             \
    \                     (and (<= 0 month (length #(\"04\" \"06\" \"09\" \"11\")))\
    \ \n                                       (<= 0 year (length #(\"20\" \"21\"\
    \ \"22\" \"23\" \"24\" \"25\")))\n                                  (and (<= 0\
    \ month (length #(\"02\" \"05\" \"08\" \"11\"))) \n                          \
    \             (<= 0 year (length #(\"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"\
    25\")))))))\n", "  (cond\n    [(and (not (empty? date))\n           (string= date\
    \ \"\"))\n     (false)]\n    [(<= 1 (string-length date))\n     (false)]\n   \
    \ [(string? (substring date 0 2))\n     (and (<= 1 (string-length date))\n   \
    \       (string? (substring date 0 1)))]\n    [(string? (substring date 0 2))\n\
    \     (and (<= 1 (string-length date))\n          (string? (substring date 0 2)))]\n\
    \    [(string? (substring date 0 3))\n     (and (<= 2 (string-length date))\n\
    \          (string? (substring date 0 1)))]\n    [(string? (substring date 0 4))\n\
    \     (and (<= 2 (string-length date))\n          (string? (substring date 0 2)))]\n\
    \    [(and (<= 2 (string-length date))\n          (string? (substring date 0 3)))\n\
    \     (and (<= 2 (string-length date))\n          (string? (substring date 0 4)))]\n\
    \    [(and (<= 3 (string-length date))\n          (string? (substring date 0 1)))\n\
    \     (and (<= 3 (string-length date))\n          (string? (substring date 0 2)))]\n\
    \    [(and (<= 3 (string-length date))\n          (string? (substring date 0 2)))\n\
    \     (and (<= 3 (string-length date))\n          (string? (substring date 0 3)))]\n\
    \    [(and (<= 3 (string-length date))\n          (string? (substring date 0 3)))\n\
    \     (and (<= 3 (string-length date))\n          (string? (substring date 0 4)))]\n\
    \    [(and (<= 4 (string-length date))\n          (string? (substring date 0 2)))\n\
    \     (and (<= 4 (string-length date))\n          (string? (substring date 0 3)))]\n\
    \    [(and (<= 4 (string-length date))\n          (string? (substring date 0 3)))\n\
    \     (and (<= 4 (string-length date))\n          (string? (substring date 0 4)))]\n\
    \    [(and (<= 5 (string-length date))\n          (string? (substring date 0 3)))\n\
    \     (and (<= 5 (string-length date))\n          (string? (substring date 0 4)))]\n\
    \    [(and (<= 5 (string-length date))\n          (string? (substring date 0 4)))\n\
    \     (and (<= 5 (string-length date))\n          (string? (substring date 0 5)))]\n\
    \    [(and (<= 6 (string-length date))\n          (string? (substring date 0 4)))\n\
    \     (and (<= 6 (string-length date))\n          (string? (substring date 0 5)))]\n\
    \    [(and (<= ", "  (cond\n    [(empty? date) #f]\n    [(< 1 (string->number\
    \ (substring date 0 1)))\n     (cond\n       [(< 1 (string->number (substring\
    \ date 1 2)))\n        (cond\n         [(< 1 (string->number (substring date 2\
    \ 3)))\n          (cond\n           [(< 1 (string->number (substring date 3 4)))\n\
    \            (cond\n             [(< 1 (string->number (substring date 4 5)))\n\
    \              (cond\n               [(< 1 (string->number (substring date 5 6)))\n\
    \                (cond\n                 [(< 1 (string->number (substring date\
    \ 6 7)))\n                  (cond\n                   [(< 1 (string->number (substring\
    \ date 7 8)))\n                    (cond\n                     [(< 1 (string->number\
    \ (substring date 8 9)))\n                      (cond\n                      \
    \ [(< 1 (string->number (substring date 9 10)))\n                        (cond\n\
    \                         [(< 1 (string->number (substring date 10 11)))\n   \
    \                       (cond\n                           [(< 1 (string->number\
    \ (substring date 11 12)))\n                            (cond\n              \
    \               [(< 1 (string->number (substring date 12 13)))\n             \
    \                 (cond\n                               [(< 1 (string->number\
    \ (substring date 13 14)))\n                                (cond\n          \
    \                       [(< 1 (string->number (substring date 14 15)))\n     \
    \                             (cond\n                                   [(< 1\
    \ (string->number (substring date 15 16)))\n                                 \
    \   (cond\n                                     [(< 1 (string->number (substring\
    \ date 16 17)))\n                                      (cond\n               \
    \                        [(< 1 (string->number (substring date 17 18)))\n    \
    \                                    (cond\n                                 \
    \        [(< 1 (string->number (substring date 18 19)))\n                    \
    \                      (cond\n                                           [(< 1\
    \ (string->number (substring date 19 20)))\n                                 \
    \             (cond\n                                               [(< 1 (string->number\
    \ (substring date 20 21)))\n                                                (cond\n\
    \                                                [(< 1 (string->number (substring\
    \ date 21 22)))\n                                                  (cond\n   \
    \                                                [(< 1 (string->number (substring\
    \ date 22 23)))\n                                                    (cond\n \
    \                                                    [(< 1 (string->number (substring\
    \ date 23 24)))\n                                                      (cond\n\
    \                                                       [(< 1 (string->number\
    \ (substring date 24 25)))\n                                                 \
    \       (cond\n                                                        [(< 1 (string->number\
    \ (substring date 25 26)))\n                                                 \
    \         (cond\n                                                           [(<\
    \ 1 (string->number (substring date 26 27)))\n                               \
    \                             (cond\n                                        \
    \                    [(< 1 (string->number (substring date 27 28)))\n        \
    \                                                      (cond\n               \
    \                                                 [(< 1 (string", "  (and (not\
    \ (empty? date))\n       (< (days-of-month (date 'month))(1) 31)\n       (< (days-of-month\
    \ (date 'month))(1) 30)\n       (< (days-of-month (date 'month))(2) 29)\n    \
    \   (= (days-of-year (date 'year))(365) (days-of-year (date 'year))))\n  (and\
    \ (not (< 1 (months-of-year (date 'year)))\n       (< 1 (months-of-year (date\
    \ 'year)))\n       (< 1 (months-of-year (date 'year)))\n       (= (months-of-year\
    \ (date 'year))(12) (months-of-year (date 'year))))\n  (and (not (< 1 (days-of-month\
    \ (date 'month))(12)))\n       (< (days-of-month (date 'month))(12) (days-of-month\
    \ (date 'month))))\n  (= (days-of-year (date 'year)) (days-of-year (date 'year))))\n",
  "  (cond\n    [(empty? date) false]\n    [(< 1 (string->number (substring date 0\
    \ 1))) false]\n    [(< 1 (string->number (substring date 0 2))) false]\n    [(<\
    \ 1 (string->number (substring date 0 3))) false]\n    [(< 1 (string->number (substring\
    \ date 0 4))) false]\n    [(< 1 (string->number (substring date 0 5))) false]\n\
    \    [(< 1 (string->number (substring date 0 6))) false]\n    [(< 1 (string->number\
    \ (substring date 0 7))) false]\n    [(< 1 (string->number (substring date 0 8)))\
    \ false]\n    [(< 1 (string->number (substring date 0 9))) false]\n    [(< 1 (string->number\
    \ (substring date 0 10)) false]\n    [(< 1 (string->number (substring date 0 11))\
    \ false]\n    [(< 1 (string->number (substring date 0 12))) false]\n    [(< 1\
    \ (string->number (substring date 0 13)) false]\n    [(< 1 (string->number (substring\
    \ date 0 14)) false]\n    [(< 1 (string->number (substring date 0 15)) false]\n\
    \    [(< 1 (string->number (substring date 0 16)) false]\n    [(< 1 (string->number\
    \ (substring date 0 17)) false]\n    [(< 1 (string->number (substring date 0 18))\
    \ false]\n    [(< 1 (string->number (substring date 0 19)) false]\n    [(< 1 (string->number\
    \ (substring date 0 20)) false]\n    [(< 1 (string->number (substring date 0 21))\
    \ false]\n    [(< 1 (string->number (substring date 0 22)) false]\n    [(< 1 (string->number\
    \ (substring date 0 23)) false]\n    [(< 1 (string->number (substring date 0 24))\
    \ false]\n    [(< 1 (string->number (substring date 0 25)) false]\n    [(< 1 (string->number\
    \ (substring date 0 26)) false]\n    [(< 1 (string->number (substring date 0 27))\
    \ false]\n    [(< 1 (string->number (substring date 0 28)) false]\n    [(< 1 (string->number\
    \ (substring date 0 29)) false]\n    [(< 1 (string->number (substring date 0 30))\
    \ false]\n    [(< 1 (string->number (substring date 0 31)) false]\n    [(< ",
  "  (cond [(empty? date) #f]\n        [(= 1 (length date)) #t]\n        [(<= (- 1\
    \ (string-length date)) 30) #f]\n        [(<= (- 1 (string-length date)) 31) #f]\n\
    \        [(<= (- 1 (string-length date)) 30) #f]\n        [(<= (- 1 (string-length\
    \ date)) 29) #t]\n        [(string-match #rx\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \ (substring date 1 3)) (= (+ (* 2 (char->integer (first date)) (char->integer\
    \ (rest date)))) (= (+ (* 4 (char->integer (first date)) (char->integer (rest\
    \ date)))) (= (+ (* 6 (char->integer (first date)) (char->integer (rest date))))\
    \ (= (+ (* 9 (char->integer (first date)) (char->integer (rest date)))) (= (+\
    \ (* 11 (char->integer (first date)) (char->integer (rest date)))) (= (+ (* 12\
    \ (char->integer (first date)) (char->integer (rest date))))) #t]\n        [else\
    \ #f]))\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 tags=racket,date |>\nI love\
    \ this question, and it's very similar to my problem of finding a leap year for\
    \ my teacher (not that I'm answering it, but I'm posting it anyway).  I'm going\
    \ to take a different approach using my teacher's code.  I will assume he knows\
    \ what he is doing (I hope he doesn't ask me questions about the use of lists\
    \ haha, this doesn't seem like the most \"functional\" way to do this in the \"\
    real\" world, and that's why I love Scheme.)\nSo I'll start with this.  I have\
    \ a function for finding the first day of a month:\n<code>\n#lang racket\n", " \
    \ (cond\n    [(and (not (empty? date)) (< 1 (length (string->list (date))))\n\
    \          (< 1 (length (string->list (date)))) \n          (< 1 (length (string->list\
    \ (date)))) \n          (< 1 (length (string->list (date))))\n          (and (not\
    \ (equal? (string-ref date 0) '-))\n              (equal? (string-ref date 1)\
    \ '-))\n          (and (not (equal? (string-ref date 0) '-))\n              (equal?\
    \ (string-ref date 2) '-))\n          (equal? (string-ref date 3) '-')\n     \
    \     (and (not (equal? (string-ref date 0) '-))\n              (equal? (string-ref\
    \ date 4) '-))\n          (and (not (equal? (string-ref date 0) '-))\n       \
    \       (equal? (string-ref date 5) '-))\n          (and (not (equal? (string-ref\
    \ date 0) '-))\n              (equal? (string-ref date 6) (current-month)))\n\
    \          (and (not (equal? (string-ref date 0) '-))\n              (equal? (string-ref\
    \ date 7) (current-month)))\n          (and (not (equal? (string-ref date 0) '-))\n\
    \              (equal? (string-ref date 8) (current-month)))\n          (and (not\
    \ (equal? (string-ref date 0) '-))\n              (equal? (string-ref date 9)\
    \ (current-month)))\n          (and (not (equal? (string-ref date 0) '-))\n  \
    \            (equal? (string-ref date 10) (current-month)))\n          (and (not\
    \ (equal? (string-ref date 0) '-))\n              (equal? (string-ref date 11)\
    \ (current-month)))\n          (and (not (equal? (string-ref date 0) '-))\n  \
    \            (equal? (string-ref date 12) (current-month)))\n          (and (not\
    \ (equal? (string-ref date 0) '-))\n              (equal? (string-ref date 13)\
    \ (current-month)))\n          (and (not (equal? (string-ref date 0) '-))\n  \
    \            (equal? (string-ref date 14) (current-month)))\n          (and (not\
    \ (equal? (string-ref date 0) '-))\n              (equal? (string-ref date 15)\
    \ (current-month)))\n          (and (not (equal? (string-ref date 0) '-))\n  \
    \            (equal? (string-ref date 16) (current-month)))\n          (and (not\
    \ (equal? (string-ref date 0) '-", "  (and (not (empty? date))\n       (> (length\
    \ date) 4)\n       (< (length date) 10)\n       (< (length date) 29)\n       (<\
    \ 12 (substring (date 0 1) \"-\")\n           (substring (date 1 2) \"-\")\n \
    \          (substring (date 3 4))\n          )\n       (substring (date 0 2) \"\
    -\")\n       (substring (date 1 2) \"-\")\n       (substring (date 3 4)))\n  )\n",
  "  (not (empty? (string-split date '-')))\n  (< (length (string-split date '-')\
    \ 3) 2)\n  (< (length (string-split date '-') 4) 2)\n  (< (length (string-split\
    \ date '-') 6) 2)\n  (not (< (length (string-split date '-') 3) 2)\n       (length\
    \ (string-split date '-') 4))\n  (not (< (length (string-split date '-') 6) 2)\n\
    \       (length (string-split date '-') 6))\n  (not (< (length (string-split date\
    \ '-') 3) 2)\n       (length (string-split date '-') 6))\n  (not (< (length (string-split\
    \ date '-') 4) 2)\n       (length (string-split date '-') 9))\n  (not (< (length\
    \ (string-split date '-') 9) 2)\n       (length (string-split date '-') 11))\n\
    \  (not (< (length (string-split date '-') 11) 2)\n       (length (string-split\
    \ date '-') 29))\n  (< (length (string-split date '-') 12) 2)\n  (= (string-split\
    \ date '-' 3) \"11\")\n  (= (string-split date '-' 6) \"04\")\n  (= (string-split\
    \ date '-' 9) \"06\")\n  (= (string-split date '-' 12) \"02\"))\n", "  (and (not\
    \ (empty? date)) \n       (and (number? date) (not (< (length date) 4)) \n   \
    \            (not (< (length date) 5)) \n               (not (< (length date)\
    \ 6)) \n               (not (< (length date) 7)) \n               (not (< (length\
    \ date) 8)) \n               (not (< (length date) 9)) \n               (not (<\
    \ (length date) 11))\n               (not (< (length date) 12))\n            \
    \   (not (< (length date) 13))\n               (not (< (length date) 14))\n  \
    \             (not (< (length date) 15))\n               (not (< (length date)\
    \ 16))\n               (not (< (length date) 17))\n               (not (< (length\
    \ date) 18))\n               (not (< (length date) 19))\n               (not (<\
    \ (length date) 20))\n               (not (< (length date) 21))\n            \
    \   (not (< (length date) 22))\n               (not (< (length date) 23))\n  \
    \             (not (< (length date) 24))\n               (not (< (length date)\
    \ 25))\n               (not (< (length date) 26))\n               (not (< (length\
    \ date) 27))\n               (not (< (length date) 28))\n               (not (<\
    \ (length date) 29))\n               (not (< (length date) 30))\n            \
    \   (not (< (length date) 31)))\n       (and (number? (substring (date 0 1) 0\
    \ 1))\n               (not (< (length (substring (date 0 1) 0 1)) 1)) \n     \
    \          (not (< (length (substring (date 0 1) 0 1)) 3)) \n               (not\
    \ (< (length (substring (date 0 1) 0 1)) 5)) \n               (not (< (length\
    \ (substring (date 0 1) 0 1)) 7)) \n               (not (< (length (substring\
    \ (date 0 1) 0 1)) 8)) \n               (not (< (length (substring (date 0 1)\
    \ 0 1)) 9)) \n               (not (< (length (substring (date 0 1) 0 1)) 11))\n\
    \               (not (< (length (substring (date 0 1) 0 1)) 12)))\n       (and\
    \ (number? (substring (date 0 2) 0 2))\n               (not (< (length (substring\
    \ (date 0 2) 0 2)) 1)) \n               (not (< (length (substring (date 0 2)\
    \ 0 2)) 4)) \n               (not (< (length (substring (date ", "  (cond\n  \
    \  [(empty? date) #f]\n    [(number? (string-length date))\n     #f]\n    [(<\
    \ 1 (string-length date))\n     #f]\n    [(< 31 (string-length date))\n     #f]\n\
    \    [(< 30 (string-length date))\n     #f]\n    [(< 29 (string-length date))\n\
    \     #f]\n    [(< (string-length date) (string->number date))\n     #f]\n   \
    \ [(< (string->number date) (* 12 30))\n     #f]\n    [(< (string->number date)\
    \ (* 12 31))\n     #f]\n    [(< (string->number date) (* 12 29))\n     #f]\n \
    \   [(> (string->number date) (* 12 30))\n     #f]\n    [(> (string->number date)\
    \ (* 12 31))\n     #f]\n    [(> (string->number date) (* 12 29))\n     #f]\n \
    \   [else #t]))\n", "  (cond [(empty? date) false]\n        [(< 1 (string-length\
    \ date))\n         (false)]\n        [(< 31 (string-length date))\n         (false)]\n\
    \        [(< 30 (string-length date))\n         (false)]\n        [(< 29 (string-length\
    \ date))\n         (false)]\n        [(< 12 (string-length date))\n         (false)]\n\
    \        [(string? (substring (date 0 2) '-' 1 (- (string-length date) 2))) false]\n\
    \        [(string? (substring (date 0 2) '-' 3 (- (string-length date) 2)))\n\
    \         (false)]\n        [(string? (substring (date 0 2) '-' 5 (- (string-length\
    \ date) 2)))\n         (false)]\n        [(string? (substring (date 0 2) '-' 7\
    \ (- (string-length date) 2)))\n         (false)]\n        [(string? (substring\
    \ (date 0 2) '-' 8 (- (string-length date) 2)))\n         (false)]\n        [(string?\
    \ (substring (date 0 2) '-' 10 (- (string-length date) 2)))\n         (false)]\n\
    \        [(string? (substring (date 0 2) '-' 12 (- (string-length date) 2)))\n\
    \         (false)]\n        [else (true)]\n  )\n)\n", "  (let ([months (list\n\
    \               (cond\n                 ((< 0 (length date))\n               \
    \    (error \"Invalid Date\"))\n                 ((< 1 (length date))\n      \
    \             (error \"Invalid Date\"))\n                 ((< 2 (length date))\n\
    \                   (error \"Invalid Date\"))\n                 ((< 3 (length\
    \ date))\n                   (error \"Invalid Date\"))\n                 ((< 4\
    \ (length date))\n                   (error \"Invalid Date\"))\n             \
    \    ((< 5 (length date))\n                   (error \"Invalid Date\"))\n    \
    \             ((< 7 (length date))\n                   (error \"Invalid Date\"\
    ))\n                 ((< 8 (length date))\n                   (error \"Invalid\
    \ Date\"))\n                 ((< 10 (length date))\n                   (error\
    \ \"Invalid Date\"))\n                 ((< 12 (length date))\n               \
    \    (error \"Invalid Date\"))\n                 ((< 13 (length date))\n     \
    \              (error \"Invalid Date\"))\n                 ((< 14 (length date))\n\
    \                   (error \"Invalid Date\"))\n                 ((< 15 (length\
    \ date))\n                   (error \"Invalid Date\"))\n                 ((< 16\
    \ (length date))\n                   (error \"Invalid Date\"))\n             \
    \    ((< 17 (length date))\n                   (error \"Invalid Date\"))\n   \
    \              ((< 18 (length date))\n                   (error \"Invalid Date\"\
    ))\n                 ((< 19 (length date))\n                   (error \"Invalid\
    \ Date\"))\n                 ((< 20 (length date))\n                   (error\
    \ \"Invalid Date\"))\n                 ((< 21 (length date))\n               \
    \    (error \"Invalid Date\"))\n                 ((< 22 (length date))\n     \
    \              (error \"Invalid Date\"))\n                 ((< 23 (length date))\n\
    \                   (error \"Invalid Date\"))\n                 ((< 24 (length\
    \ date))\n                   (error \"Invalid Date\"))\n                 ((< 25\
    \ (length date))\n                   (error \"Invalid Date\"))\n             \
    \    ((< 26 (length date))\n                   (error \"Invalid Date\"))\n   \
    \              ((< 27 (length date))\n                   (error \"Invalid Date\"\
    ))\n                 ((< 28 (length date))\n                   (error \"Invalid\
    \ Date\"))\n                 ((< 29 (length date))\n                   (error\
    \ \"Invalid Date\"))\n                 ((< 30 (length date))\n               \
    \    (error \"Invalid Date\"))\n                 ((< 31 (length date))\n     \
    \              (error \"Invalid Date\"))))\n          year (string->number (substring\
    \ (date 0 2) ", "  (or (not (empty? (date-from-string-full date)))\n      (< (<\
    \ (length (date-from-string-full date)) 2) 1)\n      (< (< (length (date-from-string-full\
    \ date)) 2) 3)\n      (< (< (length (date-from-string-full date)) 2) 5)\n    \
    \  (< (< (length (date-from-string-full date)) 2) 7)\n      (< (< (length (date-from-string-full\
    \ date)) 2) 8)\n      (< (< (length (date-from-string-full date)) 2) 10)\n   \
    \   (< (< (length (date-from-string-full date)) 2) 12)\n      (< (< (length (date-from-string-full\
    \ date)) 2) 2)\n      (< (< (length (date-from-string-full date)) 2) 4)\n    \
    \  (< (< (length (date-from-string-full date)) 2) 6)\n      (< (< (length (date-from-string-full\
    \ date)) 2) 9)\n      (< (< (length (date-from-string-full date)) 2) 11)\n   \
    \   (< (< (length (date-from-string-full date)) 2) 29)\n      (< (< (length (date-from-string-full\
    \ date)) 2) 30)\n      (< (< (length (date-from-string-full date)) 2) 31)))\n",
  "  (< (length date) 6)\n  (< (substring (date 0 2) 1 2) 0) ; month must be in range\
    \ [1,12]\n  (< (substring (date 0 2) 0 2) 0) ; date must be in range [1,31]\n\
    \  (< (substring (date 0 2) 3 2) 0) ; year must be in range [1,10000]\n  (or (<\
    \ 1 (substring (date 1 2) 0 2)) ; month in range [1,12]\n      (< 1 (substring\
    \ (date 1 2) 3 2)) ; date in range [1,31]\n      (< 1 (substring (date 1 2) 6\
    \ 2))) ; year in range [1,10000]\n      ", "  (cond\n    [(not (empty? date))\
    \ (< (length date) 8)]\n    [(< (length date) 4) True]\n    [(< (length date)\
    \ 6) True]\n    [(< (length date) 2) True]\n    [(< (length date) 8) True]\n \
    \   [(< (length date) 10) True]\n    [(< (length date) 12) True]\n    [(< (length\
    \ date) 14) True]\n    [(< (length date) 16) True]\n    [(< (length date) 18)\
    \ True]\n    [(< (length date) 20) True]\n    [(< (length date) 22) True]\n  \
    \  [(< (length date) 24) True]\n    [(< (length date) 26) True]\n    [(< (length\
    \ date) 28) True]\n    [(< (length date) 30) True]\n    [(< (length date) 32)\
    \ True]\n    [(< (length date) 34) True]\n    [(< (length date) 36) True]\n  \
    \  [(< (length date) 38) True]\n    [(< (length date) 40) True]\n    [(< (length\
    \ date) 42) True]\n    [(< (length date) 44) True]\n    [(< (length date) 46)\
    \ True]\n    [(< (length date) 48) True]\n    [(< (length date) 50) True]\n  \
    \  [(< (length date) 52) True]\n    [(< (length date) 54) True]\n    [(< (length\
    \ date) 56) True]\n    [(< (length date) 58) True]\n    [(< (length date) 60)\
    \ True]\n    [(< (length date) 62) True]\n    [(< (length date) 64) True]\n  \
    \  [(< (length date) 66) True]\n    [(< (length date) 68) True]\n    [(< (length\
    \ date) 70) True]\n    [(< (length date) 72) True]\n    [(< (length date) 74)\
    \ True]\n    [(< (length date) 76) True]\n    [(< (length date) 78) True]\n  \
    \  [(< (length date) 80) True]\n    [(< (length date) 82) True]\n    [(< (length\
    \ date) 84) True]\n    [(< (length date) 86) True]\n    [(< (length date) 88)\
    \ True]\n    [(< (length date) 90) True]\n    [(< (length ", "  (cond\n    [(empty?\
    \ date) #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\")) 1)\
    \ #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\") 2) 2) #f]\n\
    \    [(< 1 (length (string-split (symbol->string date) \"-\") 3) 2) #f]\n    [(<\
    \ 1 (length (string-split (symbol->string date) \"-\") 3) 2) #f]\n    [(< 1 (length\
    \ (string-split (symbol->string date) \"-\") 3) 2) #f]\n    [(< 1 (length (string-split\
    \ (symbol->string date) \"-\") 4) 2) #f]\n    [(< 1 (length (string-split (symbol->string\
    \ date) \"-\") 6) 2) #f]\n    [(< 1 (length (string-split (symbol->string date)\
    \ \"-\") 9) 2) #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\"\
    ) 11) 2) #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\") 13)\
    \ 2) #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\") 14) 2)\
    \ #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\") 15) 2) #f]\n\
    \    [(< 1 (length (string-split (symbol->string date) \"-\") 16) 2) #f]\n   \
    \ [(< 1 (length (string-split (symbol->string date) \"-\") 18) 2) #f]\n    [(<\
    \ 1 (length (string-split (symbol->string date) \"-\") 21) 2) #f]\n    [(< 1 (length\
    \ (string-split (symbol->string date) \"-\") 22) 2) #f]\n    [(< 1 (length (string-split\
    \ (symbol->string date) \"-\") 23) 2) #f]\n    [(< 1 (length (string-split (symbol->string\
    \ date) \"-\") 24) 2) #f]\n    [(< 1 (length (string-split (symbol->string date)\
    \ \"-\") 25) 2) #f]\n    [(< 1 (length (string-split (symbol->string date) \"\
    -\") 26) 2) #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\")\
    \ 27) 2) #f]\n    [(< 1 (length (string-split (symbol->string date) \"-\") 28)\
    \ 2) #f]\n    [(", "  (cond\n    [(empty? date) #false]\n    [(< 1 (string->number\
    \ (substring date 0 2)))\n     (if (< 1 (string->number (substring date 0 2)))\n\
    \         #false\n         (if (< 1 (string->number (substring date 0 2)))\n \
    \            #false\n             (if (< 1 (string->number (substring date 0 2)))\n\
    \                 #false\n                 (if (< 1 (string->number (substring\
    \ date 0 2)))\n                     #false\n                     (if (< 1 (string->number\
    \ (substring date 0 2)))\n                         #false\n                  \
    \       (if (< 1 (string->number (substring date 0 2)))\n                    \
    \         #false\n                             (if (< 1 (string->number (substring\
    \ date 0 2)))\n                                 #false\n                     \
    \            #true)))]))\n    [(< 1 (string->number (substring date 0 2)))\n \
    \    (if (< 1 (string->number (substring date 0 2)))\n         #false\n      \
    \   (if (< 1 (string->number (substring date 0 2)))\n             #false\n   \
    \          (if (< 1 (string->number (substring date 0 2)))\n                 #false\n\
    \                 (if (< 1 (string->number (substring date 0 2)))\n          \
    \           #false\n                     (if (< 1 (string->number (substring date\
    \ 0 2)))\n                         #false\n                         (if (< 1 (string->number\
    \ (substring date 0 2)))\n                             #false\n              \
    \               (if (< 1 (string->number (substring date 0 2)))\n            \
    \                     #false\n                                 #true)))]))\n \
    \   [(< 1 (string->number (substring date 0 2)))\n     (if (< 1 (string->number\
    \ (substring date 0 2)))\n         #false\n         (if (< 1 (string->number (substring\
    \ date 0 2)))\n             #false\n             (if (< 1 (string->number (substring\
    \ date 0 2)))\n                 #false\n                 (if (< 1 (string->number\
    \ (substring date 0 2)))\n                     #false\n                     (if\
    \ (< 1 (string->number (substring date 0 2)))\n                         #false\n\
    \                         (if (< 1 (string->number (substring date 0 2)))\n  \
    \                           #false\n                             (if (< 1 (string->number\
    \ (substring date 0 2)))\n                                 #false\n          \
    \                       #true)))]))\n    [(< 1 (string->number (substring date\
    \ 0 2)))\n     (if (< 1 (string->number (substring date 0 2)))\n         #false\n\
    \         (if (< 1 (string->number (substring date 0 2)))\n             #false\n\
    \             (if (< 1 (string->number (substring date 0 2)))\n              \
    \   #false\n                 (if (< 1 (string->number (substring date 0 2)))\n\
    \                     #false", "  (if (empty? date)\n      #t\n      (and (>=\
    \ (string-length date) 10)\n           (>= (string-length date) 9)\n         \
    \  (>= (string-length date) 6)\n           (not (string-match \"^[0-9]+\\-[0-9]+\\\
    -[0-9]+$\" (substring date 0 3))\n                 (not (string-match \"^[0-9]+\\\
    -[0-9]+\\-[0-9]+$\" (substring date 0 2))\n                      (not (string-match\
    \ \"^[0-9]+\\-[0-9]+\\-[0-9]+$\" (substring date 0 1))\n                     \
    \       (not (string-match \"^[0-9]+\\-[0-9]+\\-[0-9]+$\" (substring date 0 0))\n\
    \                                (> (parse-integer date) 0)\n                \
    \                (< (parse-integer date) 31))\n                      (not (string-match\
    \ \"^[0-9]+\\-[0-9]+\\-[0-9]+$\" (substring date 1 2))\n                     \
    \       (not (string-match \"^[0-9]+\\-[0-9]+\\-[0-9]+$\" (substring date 1 1))\n\
    \                                (not (string-match \"^[0-9]+\\-[0-9]+\\-[0-9]+$\"\
    \ (substring date 1 0))\n                                (> (parse-integer date)\
    \ 0)\n                                (< (parse-integer date) 30))\n         \
    \             (not (string-match \"^[0-9]+\\-[0-9]+\\-[0-9]+$\" (substring date\
    \ 2 2))\n                            (not (string-match \"^[0-9]+\\-[0-9]+\\-[0-9]+$\"\
    \ (substring date 2 1))\n                                (not (string-match \"\
    ^[0-9]+\\-[0-9]+\\-[0-9]+$\" (substring date 2 0))\n                         \
    \       (> (parse-integer date) 0)\n                                (< (parse-integer\
    \ date) 29))\n                      (not (string-match \"^[0-9]+\\-[0-9]+\\-[0-9]+$\"\
    \ (substring date 3 2))\n                            (not (string-match \"^[0-9]+\\\
    -[0-9]+\\-[0-9]+$\" (substring date 3 1))\n                                (not\
    \ (string-match \"^[0-9]+\\-[0-9]+\\-[0-9]+$\" (substring date 3 0))\n       \
    \                         (> (parse-integer date) 0)\n                       \
    \         (< (parse-integer date) 12)))))))\n", "  (= (length date) 7)\n  (not\
    \ (< 1 (string->number date)))\n  (not (< 1 (string->number (nth (split date \"\
    -\") 1)))\n  (not (< 1 (string->number (nth (split date \"-\") 2)))\n  (not (<\
    \ 1 (string->number (nth (split date \"-\") 3)))\n  (not (< 1 (string->number\
    \ (nth (split date \"-\") 4)))\n  (not (< 1 (string->number (nth (split date \"\
    -\") 5)))\n  (not (< 1 (string->number (nth (split date \"-\") 6)))\n  (not (<\
    \ 1 (string->number (nth (split date \"-\") 7)))\n  (not (< 1 (string->number\
    \ (nth (split date \"-\") 8)))\n  (not (< 1 (string->number (nth (split date \"\
    -\") 9)))\n  (not (< 1 (string->number (nth (split date \"-\") 10)))\n  (not (<\
    \ 1 (string->number (nth (split date \"-\") 11)))\n  (not (< 1 (string->number\
    \ (nth (split date \"-\") 12))))\n  (not (< 1 (string->number (nth (split date\
    \ \"-\") 13)))\n  (not (< 1 (string->number (nth (split date \"-\") 14)))\n  (not\
    \ (< 1 (string->number (nth (split date \"-\") 15)))\n  (not (< 1 (string->number\
    \ (nth (split date \"-\") 16)))\n  (not (< 1 (string->number (nth (split date\
    \ \"-\") 17)))\n  (not (< 1 (string->number (nth (split date \"-\") 18)))\n  (not\
    \ (< 1 (string->number (nth (split date \"-\") 19)))\n  (not (< 1 (string->number\
    \ (nth (split date \"-\") 20)))\n  (not (< 1 (string->number (nth (split date\
    \ \"-\") 21)))\n  (not (< 1 (string->number (nth (split date \"-\") 22)))\n  (not\
    \ (< 1 (string->number (nth (split date \"-\") 23)))\n  (not (< 1 (string->number\
    \ (nth (split date \"-\") 24)))\n  (not (< 1 (string->number (nth (split date\
    \ \"-\") 25)))\n  (not (< 1 (string->number (nth (split date \"-\") 26)))\n  (not\
    \ (< 1 (string->number (nth (split date \"-\") 27)))\n  (not (< 1 (string->number\
    \ (nth (", "  (cond\n    ((empty? date) true)\n    ((< 1 (string-length date))\n\
    \     (valid_date (substring date 0 (string-length date)-1)))\n    ((< 1 (string-length\
    \ date))\n     (valid_date (substring date 1 (string-length date)-1)))\n    ((<\
    \ 1 (string-length date))\n     (valid_date (substring date 2 (string-length date)-1)))\n\
    \    ((< 1 (string-length date))\n     (valid_date (substring date 3 (string-length\
    \ date)-1)))\n    ((< 1 (string-length date))\n     (valid_date (substring date\
    \ 4 (string-length date)-1)))\n    ((< 1 (string-length date))\n     (valid_date\
    \ (substring date 5 (string-length date)-1)))\n    ((< 1 (string-length date))\n\
    \     (valid_date (substring date 6 (string-length date)-1)))\n    ((< 1 (string-length\
    \ date))\n     (valid_date (substring date 7 (string-length date)-1)))\n    ((<\
    \ 1 (string-length date))\n     (valid_date (substring date 8 (string-length date)-1)))\n\
    \    ((< 1 (string-length date))\n     (valid_date (substring date 9 (string-length\
    \ date)-1)))\n    ((< 1 (string-length date))\n     (valid_date (substring date\
    \ 10 (string-length date)-1)))\n    ((< 1 (string-length date))\n     (valid_date\
    \ (substring date 11 (string-length date)-1)))\n    ((< 1 (string-length date))\n\
    \     (valid_date (substring date 12 (string-length date)-1)))\n    ((< 1 (string-length\
    \ date))\n     (valid_date (substring date 13 (string-length date)-1)))\n    ((<\
    \ 1 (string-length date))\n     (valid_date (substring date 14 (string-length\
    \ date)-1)))\n    ((< 1 (string-length date))\n     (valid_date (substring date\
    \ 15 (string-length date)-1)))\n    ((< 1 (string-length date))\n     (valid_date\
    \ (substring date 16 (string-length date)-1)))\n    ((< 1 (string-length date))\n\
    \     (valid_date (substring date 17 (string-length date)-1)))\n    ((< 1 (string-length\
    \ date))\n     (valid_date (substring date 18 (string-length date)-1)))\n    ((<\
    \ 1 (string-length date))\n     (valid_date (substring date 19 (string-length\
    \ date)-1)))\n    ((< 1 (string-length date))\n     (valid_date (substring date\
    \ 20 (string-length date)-1)))\n    ((< 1 (string-length date))\n     (valid_date\
    \ (substring date 21 (string-length date)-1)))\n", "  (cond\n    [(empty? date)\
    \ #t]\n    [(< 1 (string-length date)) #f]\n    [(< 1 (string-length date) 2)\
    \ #f]\n    [(< 1 (string-length date) 2) #f]\n    [(string-match \"^[01][0-9]-[0-3][0-9]-[0-9][0-9]{4}$\"\
    \ (substring date 0 4)) #t]\n    [(string-match \"^[01][0-9]-[0-3][0-9]-[0-9][0-9]{2}$\"\
    \ (substring date 0 2)) #t]\n    [(string-match \"^[01][0-9]-[0-3][0-9]$\" (substring\
    \ date 0 2)) #t]\n    [(string-match \"^[01][0-9]$\" (substring date 0 1)) #t]\n\
    \    [else #f]))\n", "  (and (not (string? date))\n       (and (or (< 1 (string-length\
    \ date))\n                (< 1 (length (string-split date \"/\"))))\n        \
    \   (and (< 1 (length (string-split date \"-\"))))\n           (< (string->number\
    \ (string-split date \"-\")) 12)\n           (and (< (string->number (string-split\
    \ date \"-\")) 29))\n           (and (< (string->number (string-split date \"\
    -\")) 31))\n           (and (and (< 1 (string->number (string-split date \"-\"\
    )) 12))\n                (and (< 1 (string->number (string-split date \"-\"))\
    \ 12))))\n  (and (not (string? date))\n       (and (or (< 1 (string-length date))\n\
    \                (< 1 (length (string-split date \"/\"))))\n           (and (<\
    \ 1 (length (string-split date \"-\"))))\n           (< (string->number (string-split\
    \ date \"-\")) 12)\n           (and (< (string->number (string-split date \"-\"\
    )) 29))\n           (and (< (string->number (string-split date \"-\")) 31))\n\
    \           (and (and (< 1 (string->number (string-split date \"-\")) 12))\n \
    \               (and (< 1 (string->number (string-split date \"-\")) 12))))\n\
    \  (and (not (string? date))\n       (and (or (< 1 (string-length date))\n   \
    \             (< 1 (length (string-split date \"/\"))))\n           (and (< 1\
    \ (length (string-split date \"-\"))))\n           (< (string->number (string-split\
    \ date \"-\")) 12)\n           (and (< (string->number (string-split date \"-\"\
    )) 29))\n           (and (< (string->number (string-split date \"-\")) 31))\n\
    \           (and (and (< 1 (string->number (string-split date \"-\")) 12))\n \
    \               (and (< 1 (string->number (string-split date \"-\")) 12))))\n\
    \  (and (not (string? date))\n       (and (or (< 1 (string-length date))\n   \
    \             (< 1 (length (string-split date \"/\"))))\n           (and (< 1\
    \ (length (string-split date \"-\"))))\n           (< (string->number (string-split\
    \ date \"-\")) 12)\n           (and (< (string->number (string-split date \"-\"\
    )) 29))\n           (and (< (string->number (string-split date \"-\")) 31))\n\
    \           (and (and (< 1 (string->number (string-split date \"-\")) 12))\n \
    \               (and (< 1 (string->number (string-split date \"-\")) 12))))\n\
    \  (and (not (string? date))\n       (and (or (< 1 (string-length date))\n   \
    \             (< 1 (length (string-split date \"/\"))))\n           (and (< 1\
    \ (length (", "  (cond ((empty? date) false)\n        ((< (length (substring date\
    \ 1 2)) 1) false)\n        ((< (length (substring date 3 2)) 1) false)\n     \
    \   ((< (length (substring date 5 2)) 1) false)\n        ((< (length (substring\
    \ date 7 2)) 1) false)\n        ((< (length (substring date 8 2)) 1) false)\n\
    \        ((< (length (substring date 10 2)) 1) false)\n        ((< (length (substring\
    \ date 12 2)) 1) false)\n        ((< (length (substring date 1 2)) 1) false)\n\
    \        ((< (length (substring date 4 2)) 1) false)\n        ((< (length (substring\
    \ date 6 2)) 1) false)\n        ((< (length (substring date 9 2)) 1) false)\n\
    \        ((< (length (substring date 11 2)) 1) false)\n        ((< (length (substring\
    \ date 12 2)) 1) false)\n        ((< (length (substring date 1 2)) 1) false)\n\
    \        ((< (length (substring date 3 2)) 1) false)\n        ((< (length (substring\
    \ date 5 2)) 1) false)\n        ((< (length (substring date 7 2)) 1) false)\n\
    \        ((< (length (substring date 8 2)) 1) false)\n        ((< (length (substring\
    \ date 10 2)) 1) false)\n        ((< (length (substring date 12 2)) 1) false)\n\
    \        ((< (length (substring date 1 2)) 1) false)\n        ((< (length (substring\
    \ date 4 2)) 1) false)\n        ((< (length (substring date 6 2)) 1) false)\n\
    \        ((< (length (substring date 9 2)) 1) false)\n        ((< (length (substring\
    \ date 11 2)) 1) false)\n        ((< (length (substring date 12 2)) 1) false)\n\
    \        ((< (length (substring date 1 2)) 1) false)\n        ((< (length (substring\
    \ date 3 2)) 1) false)\n        ((< (length (substring date 5 2)) 1) false)\n\
    \        ((< (length (substring date 7 2)) 1) false)\n        ((< (length (substring\
    \ date 8 2)) 1) false)\n        ((< (length (substring date 10 2)) 1) false)\n\
    \        ((< (length (substring date 12 2)) 1) false)\n        ((< (length (sub",
  "  (cond\n    [(string-length date)   True]\n    [(< (string-length date) 3) False]\n\
    \    [(< (string->integer date) 31) False]\n    [(< (string->integer date) 30)\
    \ False]\n    [(< (string->integer date) 29) False]\n    [(< (string->integer\
    \ date) 31) False]\n    [(string->integer date) False]\n    [(<= (string->integer\
    \ date \"01\") 12) False]\n    [(<= (string->integer date \"03\") 12) False]\n\
    \    [(<= (string->integer date \"05\") 12) False]\n    [(<= (string->integer\
    \ date \"07\") 12) False]\n    [(<= (string->integer date \"08\") 12) False]\n\
    \    [(<= (string->integer date \"10\") 12) False]\n    [(<= (string->integer\
    \ date \"12\") 12) True]\n    [(<= (string->integer date \"02\") 12) False]\n\
    \    [(<= (string->integer date \"04\") 12) False]\n    [(<= (string->integer\
    \ date \"06\") 12) False]\n    [(<= (string->integer date \"09\") 12) False]\n\
    \    [(<= (string->integer date \"11\") 12) False]\n    [(<= (string->integer\
    \ date \"12\") 12) True]\n    [else False]\n    )\n)\n", "  (cond\n    ((null?\
    \ (cadr date)) #t)\n    ((< (length (cadr date)) 3) #f)\n    ((> (- 1 (cadr date))\
    \ 1) #f)\n    ((> (- (cadr date) 1) 31) #f)\n    ((> (- (cadr date) 31) 30) #f)\n\
    \    ((> (- (cadr date) 30) 29) #f)\n    ((> (- (cadr date) 29) 12) #f)\n    ((>\
    \ (- (cadr date) 12) 1) #f)\n    ((< month (cadr date) 1) #f)\n    ((< month (cadr\
    \ date) 3) #f)\n    ((< month (cadr date) 5) #f)\n    ((< month (cadr date) 7)\
    \ #f)\n    ((< month (cadr date) 8) #f)\n    ((< month (cadr date) 10) #f)\n \
    \   ((< month (cadr date) 12) #f)\n    ((= day (cadr date)) #t)\n    ((= day (cadr\
    \ date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n   \
    \ ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date))\
    \ #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day\
    \ (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n\
    \    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr\
    \ date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n   \
    \ ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date))\
    \ #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day\
    \ (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n\
    \    ((= day (cadr date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr\
    \ date)) #t)\n    ((= day (cadr date)) #t)\n    ((= day (cadr date)) ", "  (letrec\
    \ ([helper (fn [m d y] \n                    (cond\n                      [(<\
    \ 1 m) (return 'False)]\n                      [(< m 12) (return 'False)]\n  \
    \                    [(< d 1) (return 'False)]\n                      [(< y 19)\
    \ (return 'False)]\n                      [(< m (modulo m 13)) (return 'False)]\n\
    \                      [(< d (modulo d 31)) \n                      (cond\n  \
    \                      [(< d (modulo d 30)) (return 'False)]\n               \
    \         [(< y (modulo y 10)) (return 'False)]\n                        [(< m\
    \ (modulo m 11)) (return 'False)]\n                        [(< y (modulo y 9))\
    \ (return 'False)]\n                        [(< m (modulo m 10)) (return 'False)]\n\
    \                        [(< y (modulo y 8)) (return 'False)]\n              \
    \          [(< m (modulo m 9)) (return 'False)]\n                        [(< y\
    \ (modulo y 7)) (return 'False)]\n                        [(< m (modulo m 8))\
    \ (return 'False)]\n                        [(< y (modulo y 6)) (return 'False)]\n\
    \                        [(< m (modulo m 7)) (return 'False)]\n              \
    \          [(< y (modulo y 5)) (return 'False)]\n                        [(< m\
    \ (modulo m 6)) (return 'False)]\n                        [(< y (modulo y 4))\
    \ (return 'False)]\n                        [(< m (modulo m 5)) (return 'False)]\n\
    \                        [(< y (modulo y 3)) (return 'False)]\n              \
    \          [(< m (modulo m 4)) (return 'False)]\n                        [(< y\
    \ (modulo y 2)) (return 'False)]\n                        [else (return 'True)]\n\
    \                      )])])\n    (helper (string->number date 'mdy))))\n", " \
    \ (if (empty? date) false \n      (< (string.length date) 3) \n      (< (string.length\
    \ date) 10) \n      (> (string-length date) 1) \n      (< (string.length (substring\
    \ date 1 2)) 3) \n      (< (string.length (substring date 2 2)) 3) \n      (<\
    \ (string.length (substring date 3 2)) 3) \n      (< (string.length (substring\
    \ date 4 2)) 3) \n      (< (string.length (substring date 5 2)) 3) \n      (<\
    \ (string.length (substring date 6 2)) 3) \n      (< (string.length (substring\
    \ date 7 2)) 3) \n      (< (string.length (substring date 8 2)) 3) \n      (<\
    \ (string.length (substring date 9 2)) 3) \n      (< (string.length (substring\
    \ date 10 2)) 3) \n      (< (string.length (substring date 11 2)) 3) \n      (<\
    \ (string.length (substring date 12 2)) 3) \n      (< (string.length (substring\
    \ date 1 2)) 2) \n      (< (string.length (substring date 2 2)) 2) \n      (<\
    \ (string.length (substring date 3 2)) 2) \n      (< (string.length (substring\
    \ date 4 2)) 2) \n      (< (string.length (substring date 5 2)) 2) \n      (<\
    \ (string.length (substring date 6 2)) 2) \n      (< (string.length (substring\
    \ date 7 2)) 2) \n      (< (string.length (substring date 8 2)) 2) \n      (<\
    \ (string.length (substring date 9 2)) 2) \n      (< (string.length (substring\
    \ date 10 2)) 2) \n      (< (string.length (substring date 11 2)) 2) \n      (<\
    \ (string.length (substring date 12 2)) 2) \n      (< (string.length (substring\
    \ date 1 2)) 1) \n      (< (string.length (substring date 2 2)) 1) \n      (<\
    \ (string.length (substring date 3 2)) 1) \n      (< (string.length (substring\
    \ date 4 2)) 1) \n      (< (string.length (substring date 5 2)) 1) \n      (<\
    \ (string.length (substring date 6 2)) 1) \n      (< (string.length (substring\
    \ date 7 2)) 1) \n      (< (string.length (substring date 8 2)) 1) \n      (<\
    \ (string.length (substring date 9 2)) 1) \n      (< (string.length (substring\
    \ date 10 2)) 1) \n      (< (string.length (substring date 11 2)) 1) \n      (<\
    \ (string.length (substring date 12 2)) 1) \n      (> (> (substring date 1 2)\
    \ 1) 1) ", "  (and (not (empty? date)) \n       (> (days-of-month (string->number\
    \ (first date)) 1) \n           (days-of-month (string->number (second date))\
    \ (- 31 0)))\n       (> (days-of-month (string->number (third date)) 1) \n   \
    \        (days-of-month (string->number (fourth date)) (- 30 0)))\n       (> (days-of-month\
    \ (string->number (fifth date)) 1) \n           (days-of-month (string->number\
    \ (sixth date)) (- 29 0)))\n       (<= (string->number (first date) '(-))\n  \
    \         (string->number (second date) '(-))\n           (string->number (third\
    \ date) '(-))\n           (string->number (fourth date) '(-))\n           (string->number\
    \ (fifth date) '(-))\n           (string->number (sixth date) '(-))))\n", "  (if\
    \ (string? date) (cond ((< (length (date)) 8) (error \"Date string length must\
    \ be 8 characters\"))\n                               ((or (>= (length (date))\
    \ 7) (>= (length (date)) 8) (< 1 (length (date)) 11) (< 1 (length (date)) 12)\
    \ (< 1 (length (date)) 13) (< 1 (length (date)) 14) (< 1 (length (date)) 15) (<\
    \ 1 (length (date)) 16) (< 1 (length (date)) 17) (< 1 (length (date)) 18) (< 1\
    \ (length (date)) 19) (< 1 (length (date)) 20) (< 1 (length (date)) 21) (< 1 (length\
    \ (date)) 22) (< 1 (length (date)) 23) (< 1 (length (date)) 24) (< 1 (length (date))\
    \ 25) (< 1 (length (date)) 26) (< 1 (length (date)) 27) (< 1 (length (date)) 28)\
    \ (< 1 (length (date)) 29) (< 1 (length (date)) 30) (< 1 (length (date)) 31) (<\
    \ 1 (length (date)) 32) (< 1 (length (date)) 33) (< 1 (length (date)) 34) (< 1\
    \ (length (date)) 35) (< 1 (length (date)) 36) (< 1 (length (date)) 37) (< 1 (length\
    \ (date)) 38) (< 1 (length (date)) 39) (< 1 (length (date)) 40) (< 1 (length (date))\
    \ 41) (< 1 (length (date)) 42) (< 1 (length (date)) 43) (< 1 (length (date)) 44)\
    \ (< 1 (length (date)) 45) (< 1 (length (date)) 46) (< 1 (length (date)) 47) (<\
    \ 1 (length (date)) 48) (< 1 (length (date)) 49) (< 1 (length (date)) 50) (< 1\
    \ (length (date)) 51) (< 1 (length (date)) 52) (< 1 (length (date)) 53) (< 1 (length\
    \ (date)) 54) (< 1 (length (date)) 55) (< 1 (length (date)) 56) (< 1 (length (date))\
    \ 57) (< 1 (length (date)) 58) (< 1 (length (date)) 59) (< 1 (length (date)) 60)\
    \ (< 1 (length (date)) 61) (< 1 (length (date)) 62) (< 1 (length (date)) 63) (<\
    \ 1 (length (date)) 64) (< 1 (length (date)) 65) (< 1 (length (date)) 66) (< 1\
    \ (length (date)) 67) (< 1 (length (date)) "]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_71_triangle_area
language: python
results:
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzmbhv0p9.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpzmbhv0p9.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzmbhv0p9.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzmbhv0p9.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppa1uee1f.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmppa1uee1f.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmppa1uee1f.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmppa1uee1f.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnbjed3v1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpnbjed3v1.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpnbjed3v1.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpnbjed3v1.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7xb3068q.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp7xb3068q.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp7xb3068q.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp7xb3068q.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw878brge.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpw878brge.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpw878brge.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpw878brge.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprjajk3xa.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmprjajk3xa.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmprjajk3xa.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmprjajk3xa.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdjj4fwra.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpdjj4fwra.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpdjj4fwra.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpdjj4fwra.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    s = (a + b\
    \ + c) / 2\n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    if area ==\
    \ 0:\n        return -1\n    return round(area, 2)\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqaiqboxp.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqaiqboxp.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqaiqboxp.py\", line\
    \ 20, in check\n    assert candidate(1, 2, 10) == -1\n  File \"/tmp/tmpqaiqboxp.py\"\
    , line 16, in triangle_area\n    return round(area, 2)\nTypeError: type complex\
    \ doesn't define __round__ method\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxwmrz7a9.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxwmrz7a9.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxwmrz7a9.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxwmrz7a9.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgdmlx3qq.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgdmlx3qq.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgdmlx3qq.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgdmlx3qq.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_qkukfet.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp_qkukfet.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp_qkukfet.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp_qkukfet.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxxo7rtpk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxxo7rtpk.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxxo7rtpk.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxxo7rtpk.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqtqnaq50.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqtqnaq50.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqtqnaq50.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqtqnaq50.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp744qrqr1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp744qrqr1.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp744qrqr1.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp744qrqr1.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiqs3f53b.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpiqs3f53b.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpiqs3f53b.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpiqs3f53b.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqlzplq7z.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqlzplq7z.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqlzplq7z.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqlzplq7z.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8exa787y.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp8exa787y.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp8exa787y.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp8exa787y.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgz3z_p67.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpgz3z_p67.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgz3z_p67.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgz3z_p67.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfqpp8f58.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpfqpp8f58.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpfqpp8f58.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpfqpp8f58.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf14i0ufk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpf14i0ufk.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpf14i0ufk.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpf14i0ufk.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfdv25a9o.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpfdv25a9o.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpfdv25a9o.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpfdv25a9o.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptw2m1ue0.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmptw2m1ue0.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmptw2m1ue0.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmptw2m1ue0.py\"\
    , line 15, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpglrqfkkf.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpglrqfkkf.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpglrqfkkf.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpglrqfkkf.py\"\
    , line 15, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpom38z6kl.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpom38z6kl.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpom38z6kl.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpom38z6kl.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphfga4rln.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmphfga4rln.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmphfga4rln.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmphfga4rln.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxsbfpng2.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxsbfpng2.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxsbfpng2.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxsbfpng2.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyw1qh9bu.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpyw1qh9bu.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpyw1qh9bu.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpyw1qh9bu.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0m5oyggf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp0m5oyggf.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp0m5oyggf.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp0m5oyggf.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq34whukz.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpq34whukz.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpq34whukz.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpq34whukz.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyzbzfqfc.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpyzbzfqfc.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpyzbzfqfc.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpyzbzfqfc.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpssu14gld.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpssu14gld.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpssu14gld.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpssu14gld.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr1q6k80o.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpr1q6k80o.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpr1q6k80o.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpr1q6k80o.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3srp5jww.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp3srp5jww.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp3srp5jww.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp3srp5jww.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqfjz0t9f.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqfjz0t9f.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqfjz0t9f.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqfjz0t9f.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptx4t6cy4.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmptx4t6cy4.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmptx4t6cy4.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmptx4t6cy4.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3kkehy3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpe3kkehy3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpe3kkehy3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpe3kkehy3.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area =\
    \ (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n  \
    \  else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx57qs4r7.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpx57qs4r7.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpx57qs4r7.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpx57qs4r7.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprsn1t9n9.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmprsn1t9n9.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmprsn1t9n9.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmprsn1t9n9.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxait_9zu.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxait_9zu.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxait_9zu.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxait_9zu.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyuvwr1au.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpyuvwr1au.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpyuvwr1au.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpyuvwr1au.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv6jaojl_.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpv6jaojl_.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpv6jaojl_.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpv6jaojl_.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfzf3usmc.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpfzf3usmc.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpfzf3usmc.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpfzf3usmc.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9g92cgor.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp9g92cgor.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9g92cgor.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp9g92cgor.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjm7t7r91.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjm7t7r91.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpjm7t7r91.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpjm7t7r91.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaktswl91.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpaktswl91.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpaktswl91.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpaktswl91.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhahai8e.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpnhahai8e.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpnhahai8e.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpnhahai8e.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqw9jxp21.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqw9jxp21.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqw9jxp21.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqw9jxp21.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkpn5uzy5.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpkpn5uzy5.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpkpn5uzy5.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpkpn5uzy5.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeoeidfau.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpeoeidfau.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpeoeidfau.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpeoeidfau.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpketxp7av.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpketxp7av.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpketxp7av.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpketxp7av.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4hcbm1tk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4hcbm1tk.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp4hcbm1tk.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp4hcbm1tk.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps86ao3ka.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmps86ao3ka.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmps86ao3ka.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmps86ao3ka.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt28lhzim.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpt28lhzim.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpt28lhzim.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpt28lhzim.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd_12brgx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpd_12brgx.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpd_12brgx.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpd_12brgx.py\"\
    , line 15, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp26srhfyl.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp26srhfyl.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp26srhfyl.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp26srhfyl.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd5m_175p.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpd5m_175p.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpd5m_175p.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpd5m_175p.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp41q_0s67.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp41q_0s67.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp41q_0s67.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp41q_0s67.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptz94fyze.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmptz94fyze.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmptz94fyze.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmptz94fyze.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjh23b_0_.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjh23b_0_.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpjh23b_0_.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpjh23b_0_.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphw1gcv24.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmphw1gcv24.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmphw1gcv24.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmphw1gcv24.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps04oqvr3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmps04oqvr3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmps04oqvr3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmps04oqvr3.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphp_bciw4.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmphp_bciw4.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmphp_bciw4.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmphp_bciw4.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1k4kkbr3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp1k4kkbr3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp1k4kkbr3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp1k4kkbr3.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if (a + b\
    \ > c) and (a + c > b) and (b + c > a):\n        p = (a + b + c) / 2\n       \
    \ return round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpau5n_zym.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpau5n_zym.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpau5n_zym.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpau5n_zym.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxbfnj16e.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxbfnj16e.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxbfnj16e.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxbfnj16e.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqh73vvoh.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqh73vvoh.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqh73vvoh.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqh73vvoh.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp71y7olvt.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp71y7olvt.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp71y7olvt.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp71y7olvt.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyjes21j3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpyjes21j3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpyjes21j3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpyjes21j3.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpki60o0ws.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpki60o0ws.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpki60o0ws.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpki60o0ws.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpagmuuo6z.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpagmuuo6z.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpagmuuo6z.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpagmuuo6z.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8x1pwf23.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp8x1pwf23.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp8x1pwf23.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp8x1pwf23.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgtpfgaxa.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgtpfgaxa.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgtpfgaxa.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgtpfgaxa.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9nkgim3q.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9nkgim3q.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9nkgim3q.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8hq3p5qx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp8hq3p5qx.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp8hq3p5qx.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp8hq3p5qx.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpone8yn7e.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpone8yn7e.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpone8yn7e.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpone8yn7e.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1bty2s2t.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp1bty2s2t.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp1bty2s2t.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp1bty2s2t.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz69xrpte.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpz69xrpte.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpz69xrpte.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpz69xrpte.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpny_d53j4.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpny_d53j4.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpny_d53j4.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpny_d53j4.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8cn62bdy.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp8cn62bdy.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp8cn62bdy.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp8cn62bdy.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgvrr4yuo.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgvrr4yuo.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgvrr4yuo.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgvrr4yuo.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp046w4oeu.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp046w4oeu.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp046w4oeu.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp046w4oeu.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn7ffvnnt.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpn7ffvnnt.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpn7ffvnnt.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpn7ffvnnt.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd4veza4e.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpd4veza4e.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpd4veza4e.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpd4veza4e.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp58f3xi1x.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp58f3xi1x.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp58f3xi1x.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp58f3xi1x.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ldgil_t.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp_ldgil_t.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp_ldgil_t.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp_ldgil_t.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppma0s3hi.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmppma0s3hi.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmppma0s3hi.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmppma0s3hi.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy9qpqojs.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpy9qpqojs.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpy9qpqojs.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdwxo6lqo.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpdwxo6lqo.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpdwxo6lqo.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpdwxo6lqo.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_pcrc7v.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpj_pcrc7v.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpj_pcrc7v.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpj_pcrc7v.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw6ezx60u.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpw6ezx60u.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpw6ezx60u.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpw6ezx60u.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu4n7w842.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu4n7w842.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpu4n7w842.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpu4n7w842.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        return round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n \
    \   else:\n        return -1\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1,\
    \ 2, 10))\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n   \
    \ assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n  \
    \  assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n  \
    \  assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnd9yfrsx.py\", line\
    \ 19, in <module>\n    print(triangle_area(3, 4, 5))\n  File \"/tmp/tmpnd9yfrsx.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfzo9b8r1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpfzo9b8r1.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpfzo9b8r1.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpfzo9b8r1.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn85bjcgi.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpn85bjcgi.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpn85bjcgi.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpn85bjcgi.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuoflb5o8.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpuoflb5o8.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpuoflb5o8.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpuoflb5o8.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2szpkym.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph2szpkym.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmph2szpkym.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmph2szpkym.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp56077hkg.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp56077hkg.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp56077hkg.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp56077hkg.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    s = (a + b\
    \ + c) / 2\n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    return round(area,\
    \ 2) if area > 0 else -1\n\n\ndef check(candidate):\n    assert candidate(3, 4,\
    \ 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8,\
    \ 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2,\
    \ 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6,\
    \ 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2,\
    \ 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgjl1ld38.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpgjl1ld38.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgjl1ld38.py\", line\
    \ 19, in check\n    assert candidate(1, 2, 10) == -1\n  File \"/tmp/tmpgjl1ld38.py\"\
    , line 14, in triangle_area\n    return round(area, 2) if area > 0 else -1\nTypeError:\
    \ '>' not supported between instances of 'complex' and 'int'\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return\
    \ round(sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4o49s9ky.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4o49s9ky.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp4o49s9ky.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp4o49s9ky.py\"\
    , line 14, in triangle_area\n    return round(sqrt(s * (s - a) * (s - b) * (s\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxugpnp50.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxugpnp50.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxugpnp50.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxugpnp50.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqza8co3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxqza8co3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxqza8co3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxqza8co3.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        s = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(s, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp30mna73k.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp30mna73k.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp30mna73k.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp30mna73k.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxo74jt0n.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpxo74jt0n.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxo74jt0n.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxo74jt0n.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptjasm5rj.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptjasm5rj.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmptjasm5rj.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbusjq7ov.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpbusjq7ov.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpbusjq7ov.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpbusjq7ov.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area =\
    \ (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n  \
    \  else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpczusw848.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpczusw848.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpczusw848.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpczusw848.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ngk9iye.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp5ngk9iye.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp5ngk9iye.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp5ngk9iye.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjd4k1rj4.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjd4k1rj4.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpjd4k1rj4.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpjd4k1rj4.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy_252px3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpy_252px3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpy_252px3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpy_252px3.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx0i1hund.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpx0i1hund.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpx0i1hund.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpx0i1hund.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgdkyii7j.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgdkyii7j.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgdkyii7j.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgdkyii7j.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if (a + b\
    \ > c) and (a + c > b) and (b + c > a):\n        p = (a + b + c) / 2\n       \
    \ return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n   \
    \     return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n\
    \    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n\
    \    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n\
    \    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\
    \    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\
    \ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgtvkf3d8.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgtvkf3d8.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgtvkf3d8.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgtvkf3d8.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7y_hvrrj.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp7y_hvrrj.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp7y_hvrrj.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp7y_hvrrj.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk392nfeo.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpk392nfeo.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpk392nfeo.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpk392nfeo.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9jxa1tpn.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp9jxa1tpn.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9jxa1tpn.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp9jxa1tpn.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiyt7qx5c.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpiyt7qx5c.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpiyt7qx5c.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpiyt7qx5c.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf18ttoqx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpf18ttoqx.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpf18ttoqx.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpf18ttoqx.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjxqk9imi.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjxqk9imi.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpjxqk9imi.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpjxqk9imi.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdn_zdxuj.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpdn_zdxuj.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpdn_zdxuj.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpdn_zdxuj.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwba86xac.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpwba86xac.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpwba86xac.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpwba86xac.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxtthee6v.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpxtthee6v.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpxtthee6v.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpxtthee6v.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    s = (a + b\
    \ + c) / 2\n    if s - a > 0 and s - b > 0 and s - c > 0:\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp78whrse8.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp78whrse8.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp78whrse8.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp78whrse8.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        return round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqr7k6hv3.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpqr7k6hv3.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqr7k6hv3.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqr7k6hv3.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_lqhlp3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4_lqhlp3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp4_lqhlp3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp4_lqhlp3.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyz6fq827.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpyz6fq827.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpyz6fq827.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpyz6fq827.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqkrvfu7l.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqkrvfu7l.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqkrvfu7l.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqkrvfu7l.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjra7qxdf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjra7qxdf.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpjra7qxdf.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpjra7qxdf.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbkgzgmag.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpbkgzgmag.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpbkgzgmag.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpbkgzgmag.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwj23qv33.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpwj23qv33.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpwj23qv33.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpwj23qv33.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area =\
    \ (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n  \
    \  else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjwaj7jtq.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpjwaj7jtq.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpjwaj7jtq.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpjwaj7jtq.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpknhpmnyq.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpknhpmnyq.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpknhpmnyq.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpknhpmnyq.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbm37mirq.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpbm37mirq.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpbm37mirq.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpbm37mirq.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4hfxuwws.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4hfxuwws.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp4hfxuwws.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp4hfxuwws.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprouorthd.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmprouorthd.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmprouorthd.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmprouorthd.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq9slm65u.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpq9slm65u.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpq9slm65u.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpq9slm65u.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx272j1e7.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpx272j1e7.py\", line 27,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpx272j1e7.py\", line\
    \ 16, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4jgsxnki.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4jgsxnki.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp4jgsxnki.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp4jgsxnki.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsi521t44.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpsi521t44.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpsi521t44.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpsi521t44.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5je_5dbx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp5je_5dbx.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp5je_5dbx.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp5je_5dbx.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    p = (a + b\
    \ + c) / 2\n    if a + b > c and a + c > b and b + c > a:\n        return round(sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp50r3jz2z.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp50r3jz2z.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp50r3jz2z.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp50r3jz2z.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4u9xshvh.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp4u9xshvh.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp4u9xshvh.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprgb7zxbp.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmprgb7zxbp.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmprgb7zxbp.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmprgb7zxbp.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplnevvt7d.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmplnevvt7d.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplnevvt7d.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplnevvt7d.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnulnwj0v.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpnulnwj0v.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpnulnwj0v.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpnulnwj0v.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz298c_vc.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpz298c_vc.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpz298c_vc.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpz298c_vc.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgnfbpn5i.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgnfbpn5i.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgnfbpn5i.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgnfbpn5i.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqgzobzch.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqgzobzch.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqgzobzch.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqgzobzch.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplscub460.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmplscub460.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplscub460.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplscub460.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqtvzbv8s.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqtvzbv8s.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqtvzbv8s.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqtvzbv8s.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdjfpi6fe.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpdjfpi6fe.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpdjfpi6fe.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpdjfpi6fe.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpajnws_2o.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpajnws_2o.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpajnws_2o.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpajnws_2o.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqi1npq1h.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqi1npq1h.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqi1npq1h.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqi1npq1h.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoms9om_x.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpoms9om_x.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpoms9om_x.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpoms9om_x.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg0ftzyon.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpg0ftzyon.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpg0ftzyon.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpg0ftzyon.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpernojq7f.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpernojq7f.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpernojq7f.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpernojq7f.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2shv5jlh.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp2shv5jlh.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp2shv5jlh.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp2shv5jlh.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqu6j34xr.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqu6j34xr.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqu6j34xr.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqu6j34xr.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvoj3_hxt.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpvoj3_hxt.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvoj3_hxt.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpvoj3_hxt.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwv7hbxv0.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpwv7hbxv0.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpwv7hbxv0.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpwv7hbxv0.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ewzoabt.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp0ewzoabt.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp0ewzoabt.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp0ewzoabt.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5d3nke6w.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp5d3nke6w.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp5d3nke6w.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp5d3nke6w.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5kkejjys.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp5kkejjys.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp5kkejjys.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp5kkejjys.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzcn4zm4d.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpzcn4zm4d.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzcn4zm4d.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzcn4zm4d.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfq7wm7kj.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpfq7wm7kj.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpfq7wm7kj.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpfq7wm7kj.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2ydr29nz.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp2ydr29nz.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp2ydr29nz.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp2ydr29nz.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdgapp54q.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpdgapp54q.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpdgapp54q.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpdgapp54q.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqv2kiwv4.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqv2kiwv4.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqv2kiwv4.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqv2kiwv4.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1t7u_gn.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpf1t7u_gn.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpf1t7u_gn.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpf1t7u_gn.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp12d6_e04.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp12d6_e04.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp12d6_e04.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp12d6_e04.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkhr_zw13.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpkhr_zw13.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpkhr_zw13.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpkhr_zw13.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8gf1rdlq.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp8gf1rdlq.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp8gf1rdlq.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp8gf1rdlq.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp98ixh6zn.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp98ixh6zn.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp98ixh6zn.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp98ixh6zn.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqbdqy563.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqbdqy563.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqbdqy563.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpqbdqy563.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm9mhltq3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpm9mhltq3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpm9mhltq3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpm9mhltq3.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1esn3tx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpf1esn3tx.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpf1esn3tx.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpf1esn3tx.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwhjotlue.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpwhjotlue.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpwhjotlue.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpwhjotlue.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    # Your code\
    \ here\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n \
    \   else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph0chm1_0.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph0chm1_0.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmph0chm1_0.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmph0chm1_0.py\"\
    , line 15, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk36swwbr.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpk36swwbr.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpk36swwbr.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpk36swwbr.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwwruqnx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpuwwruqnx.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpuwwruqnx.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpuwwruqnx.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz30u664e.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpz30u664e.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpz30u664e.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpz30u664e.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcanfttxz.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpcanfttxz.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpcanfttxz.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpcanfttxz.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgtihu6ip.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgtihu6ip.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpgtihu6ip.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpgtihu6ip.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppv3_1zct.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmppv3_1zct.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmppv3_1zct.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmppv3_1zct.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0g_keoh5.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp0g_keoh5.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp0g_keoh5.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp0g_keoh5.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphawb9o20.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmphawb9o20.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmphawb9o20.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmphawb9o20.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area =\
    \ (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n  \
    \  else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsun0_k51.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpsun0_k51.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpsun0_k51.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpsun0_k51.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        s = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(s, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe43e49qh.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpe43e49qh.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpe43e49qh.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpe43e49qh.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpie5c44vw.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpie5c44vw.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpie5c44vw.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpie5c44vw.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpumd9guwn.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpumd9guwn.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpumd9guwn.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpumd9guwn.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzf2_zznu.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpzf2_zznu.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzf2_zznu.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzf2_zznu.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfynb0tg3.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpfynb0tg3.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpfynb0tg3.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpfynb0tg3.py\"\
    , line 14, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    s = (a + b\
    \ + c) / 2\n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    return round(area,\
    \ 2) if area > 0 else -1\n\n\ndef check(candidate):\n    assert candidate(3, 4,\
    \ 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8,\
    \ 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2,\
    \ 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6,\
    \ 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2,\
    \ 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1fk3urs_.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp1fk3urs_.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp1fk3urs_.py\", line\
    \ 19, in check\n    assert candidate(1, 2, 10) == -1\n  File \"/tmp/tmp1fk3urs_.py\"\
    , line 14, in triangle_area\n    return round(area, 2) if area > 0 else -1\nTypeError:\
    \ '>' not supported between instances of 'complex' and 'int'\n"
  exit_code: -1
  status: Exception
- program: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
    \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
    \ rounded to 2 decimal points if the three sides form a valid triangle. \n   \
    \ Otherwise return -1\n    Three sides make a valid triangle when the sum of any\
    \ two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3,\
    \ 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    \"\"\"\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return\
    \ -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert\
    \ candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert\
    \ candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert\
    \ candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert\
    \ candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy_vf9_aw.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpy_vf9_aw.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpy_vf9_aw.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpy_vf9_aw.py\"\
    , line 14, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  exit_code: -1
  status: Exception

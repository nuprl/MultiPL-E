language: python
name: HumanEval_45_triangle_area
results:
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747618
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747618
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747618
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747618
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''

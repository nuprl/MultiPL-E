name: HumanEval_19_sort_numbers
language: python
results:
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl2bv7dzi.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpl2bv7dzi.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpl2bv7dzi.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpl2bv7dzi.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpl2bv7dzi.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3sm9zw5m.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3sm9zw5m.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3sm9zw5m.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp3sm9zw5m.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmp3sm9zw5m.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpycstj7tz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpycstj7tz.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpycstj7tz.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpycstj7tz.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmpycstj7tz.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: number_to_digit[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1y83k7s3.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp1y83k7s3.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1y83k7s3.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp1y83k7s3.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: number_to_digit[x])\n\
    \  File \"/tmp/tmp1y83k7s3.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: number_to_digit[x])\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprhoegk_4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmprhoegk_4.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprhoegk_4.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmprhoegk_4.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmprhoegk_4.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjsernq6v.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjsernq6v.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjsernq6v.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjsernq6v.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpjsernq6v.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6rk5038b.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp6rk5038b.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6rk5038b.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp6rk5038b.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp6rk5038b.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj9uwas2k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpj9uwas2k.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpj9uwas2k.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpj9uwas2k.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmpj9uwas2k.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqr0vft_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpxqr0vft_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxqr0vft_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxqr0vft_.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpxqr0vft_.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8yzz8_44.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8yzz8_44.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8yzz8_44.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8yzz8_44.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmp8yzz8_44.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w0f2c5j.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w0f2c5j.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3w0f2c5j.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp3w0f2c5j.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmp3w0f2c5j.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_number(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2swxeg6q.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2swxeg6q.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2swxeg6q.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2swxeg6q.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_number(x)))\n\
    \  File \"/tmp/tmp2swxeg6q.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_number(x)))\nNameError: name 'word_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp8e4ddta.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpp8e4ddta.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpp8e4ddta.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpp8e4ddta.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmpp8e4ddta.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpae5djcpd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpae5djcpd.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpae5djcpd.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpae5djcpd.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpae5djcpd.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsv8fp9dx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsv8fp9dx.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpsv8fp9dx.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: int(NUMBERS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeg1wqbcj.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpeg1wqbcj.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpeg1wqbcj.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpeg1wqbcj.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: int(NUMBERS[x])))\n  File \"/tmp/tmpeg1wqbcj.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda x: int(NUMBERS[x])))\n\
    NameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr3x8yseu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpr3x8yseu.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpr3x8yseu.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpr3x8yseu.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpr3x8yseu.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp01d95jw6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp01d95jw6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp01d95jw6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp01d95jw6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp01d95jw6.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_lbiww6m.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_lbiww6m.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_lbiww6m.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_lbiww6m.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmp_lbiww6m.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzqeodp6_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpzqeodp6_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzqeodp6_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpzqeodp6_.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpzqeodp6_.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_digit(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyy2y0cx2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpyy2y0cx2.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpyy2y0cx2.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpyy2y0cx2.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpyy2y0cx2.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1vthhjo_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp1vthhjo_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1vthhjo_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp1vthhjo_.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp1vthhjo_.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_vmkp9a5.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_vmkp9a5.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_vmkp9a5.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_vmkp9a5.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp_vmkp9a5.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgi0qlfr7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpgi0qlfr7.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgi0qlfr7.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgi0qlfr7.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpgi0qlfr7.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8qciis83.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp8qciis83.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8qciis83.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8qciis83.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmp8qciis83.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7d_lf_xd.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp7d_lf_xd.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7d_lf_xd.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7d_lf_xd.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmp7d_lf_xd.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ku0tzph.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp1ku0tzph.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1ku0tzph.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp1ku0tzph.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmp1ku0tzph.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7_nqhvgr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp7_nqhvgr.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7_nqhvgr.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6d2qk1_m.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6d2qk1_m.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6d2qk1_m.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp6d2qk1_m.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmp6d2qk1_m.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp40y6eqq8.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp40y6eqq8.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp40y6eqq8.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp40y6eqq8.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp40y6eqq8.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgl7rad_u.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpgl7rad_u.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgl7rad_u.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgl7rad_u.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpgl7rad_u.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: int(NUMBERS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1llvx0y7.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp1llvx0y7.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1llvx0y7.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp1llvx0y7.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: int(NUMBERS[x])))\n  File \"/tmp/tmp1llvx0y7.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda x: int(NUMBERS[x])))\n\
    NameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptp45vtf4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptp45vtf4.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptp45vtf4.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptp45vtf4.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmptp45vtf4.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx1er5emh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpx1er5emh.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpx1er5emh.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpx1er5emh.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmpx1er5emh.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7l_6cnq_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp7l_6cnq_.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7l_6cnq_.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7l_6cnq_.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS[x]))\n  File \"/tmp/tmp7l_6cnq_.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMBERS[x]))\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5xb74b81.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5xb74b81.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5xb74b81.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5xb74b81.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp5xb74b81.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4quuzu_e.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp4quuzu_e.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4quuzu_e.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4quuzu_e.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp4quuzu_e.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiog0mxg4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpiog0mxg4.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpiog0mxg4.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpiog0mxg4.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmpiog0mxg4.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5pz1ww8k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5pz1ww8k.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5pz1ww8k.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5pz1ww8k.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit(x)))\n\
    \  File \"/tmp/tmp5pz1ww8k.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit(x)))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjb243x8f.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjb243x8f.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjb243x8f.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjb243x8f.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpjb243x8f.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [NUMBERS[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprvgqmyub.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprvgqmyub.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprvgqmyub.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmprvgqmyub.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[number]) for number in numbers]\n\
    \  File \"/tmp/tmprvgqmyub.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[number])\
    \ for number in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy1cco8nk.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy1cco8nk.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpy1cco8nk.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpy1cco8nk.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmpy1cco8nk.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxjs9fig5.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpxjs9fig5.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxjs9fig5.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxjs9fig5.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpxjs9fig5.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [num_to_int(n) for n in numbers]\n    numbers.sort()\n    numbers\
    \ = [int_to_num(n) for n in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzpnqqp6u.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzpnqqp6u.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzpnqqp6u.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpzpnqqp6u.py\"\
    , line 9, in sort_numbers\n    numbers = [num_to_int(n) for n in numbers]\n  File\
    \ \"/tmp/tmpzpnqqp6u.py\", line 9, in <listcomp>\n    numbers = [num_to_int(n)\
    \ for n in numbers]\nNameError: name 'num_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqb8d_h8g.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqb8d_h8g.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqb8d_h8g.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqb8d_h8g.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/tmp/tmpqb8d_h8g.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit[x]))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1e2rlxql.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp1e2rlxql.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1e2rlxql.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp1e2rlxql.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp1e2rlxql.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp17zf1u8c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp17zf1u8c.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp17zf1u8c.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp17zf1u8c.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmp17zf1u8c.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubzh3u1t.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpubzh3u1t.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpubzh3u1t.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpubzh3u1t.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpubzh3u1t.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqp13oqd4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpqp13oqd4.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqp13oqd4.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqp13oqd4.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmpqp13oqd4.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_number(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxii3wh1e.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpxii3wh1e.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxii3wh1e.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxii3wh1e.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_number(x)))\n\
    \  File \"/tmp/tmpxii3wh1e.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_number(x)))\nNameError: name 'word_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3inzhjqo.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp3inzhjqo.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3inzhjqo.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp3inzhjqo.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmp3inzhjqo.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps6wgln_k.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmps6wgln_k.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmps6wgln_k.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmps6wgln_k.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmps6wgln_k.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyxke1owi.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpyxke1owi.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpyxke1owi.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpyxke1owi.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmpyxke1owi.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbn0bad6d.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpbn0bad6d.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbn0bad6d.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbn0bad6d.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpbn0bad6d.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiqydff1p.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpiqydff1p.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpiqydff1p.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpiqydff1p.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpiqydff1p.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_int[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphnslu2ex.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphnslu2ex.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmphnslu2ex.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmphnslu2ex.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_int[number]) for number\
    \ in numbers]\n  File \"/tmp/tmphnslu2ex.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_int[number]) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppqbzs8m2.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppqbzs8m2.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppqbzs8m2.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppqbzs8m2.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmppqbzs8m2.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp637vruq5.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp637vruq5.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp637vruq5.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp637vruq5.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmp637vruq5.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: number_to_digit(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu18u8k2r.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpu18u8k2r.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpu18u8k2r.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpu18u8k2r.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: number_to_digit(x))\n\
    \  File \"/tmp/tmpu18u8k2r.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: number_to_digit(x))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(WORDS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgxrw6u7j.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpgxrw6u7j.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgxrw6u7j.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgxrw6u7j.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(WORDS[x]))\n  File\
    \ \"/tmp/tmpgxrw6u7j.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ int(WORDS[x]))\nNameError: name 'WORDS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpefv72f0s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpefv72f0s.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpefv72f0s.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpefv72f0s.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpefv72f0s.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptsayjuq6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptsayjuq6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptsayjuq6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptsayjuq6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmptsayjuq6.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvutnn83o.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvutnn83o.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvutnn83o.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpvutnn83o.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpvutnn83o.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpansv5o24.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpansv5o24.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpansv5o24.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpansv5o24.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmpansv5o24.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[i] for\
    \ i in num_list]\n    num_list.sort()\n    num_list = [str(i) for i in num_list]\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgaf9_9q2.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpgaf9_9q2.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgaf9_9q2.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8al52n17.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8al52n17.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8al52n17.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8al52n17.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmp8al52n17.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [NUMBERS[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpds775i3a.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpds775i3a.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpds775i3a.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpds775i3a.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[number]) for number in numbers]\n\
    \  File \"/tmp/tmpds775i3a.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[number])\
    \ for number in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [num for num in num_list]\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcvfmoskr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpcvfmoskr.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpcvfmoskr.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpcvfmoskr.py\"\
    , line 13, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg2ncoigy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpg2ncoigy.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpg2ncoigy.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpg2ncoigy.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpg2ncoigy.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [num_dict[num] for\
    \ num in numbers]\n    numbers.sort()\n    numbers = [str(num) for num in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyd1ydjjh.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyd1ydjjh.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpyd1ydjjh.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: number_to_digit[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzwu0lxch.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpzwu0lxch.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzwu0lxch.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpzwu0lxch.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: number_to_digit[x])\n\
    \  File \"/tmp/tmpzwu0lxch.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: number_to_digit[x])\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_digit(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcen2n3be.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpcen2n3be.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpcen2n3be.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpcen2n3be.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpcen2n3be.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(WORDS_TO_NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvfs29qwe.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpvfs29qwe.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvfs29qwe.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpvfs29qwe.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(WORDS_TO_NUMBERS[x]))\n\
    \  File \"/tmp/tmpvfs29qwe.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(WORDS_TO_NUMBERS[x]))\nNameError: name 'WORDS_TO_NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppc6q7304.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppc6q7304.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppc6q7304.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppc6q7304.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmppc6q7304.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf9bt3imn.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpf9bt3imn.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf9bt3imn.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf9bt3imn.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmpf9bt3imn.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppoaldsr0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppoaldsr0.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppoaldsr0.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppoaldsr0.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmppoaldsr0.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppol5duyg.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppol5duyg.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppol5duyg.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppol5duyg.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmppol5duyg.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_digit(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpli7k0cdp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpli7k0cdp.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpli7k0cdp.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpli7k0cdp.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_digit(number) for number in\
    \ numbers]\n  File \"/tmp/tmpli7k0cdp.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_digit(number) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num_to_int[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_num[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt1brry9f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpt1brry9f.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpt1brry9f.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpt1brry9f.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num_to_int[num]) for num in numbers]\n\
    \  File \"/tmp/tmpt1brry9f.py\", line 9, in <listcomp>\n    numbers = [int(num_to_int[num])\
    \ for num in numbers]\nNameError: name 'num_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc40tk8j9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc40tk8j9.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpc40tk8j9.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpc40tk8j9.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpc40tk8j9.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ynwyouv.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5ynwyouv.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5ynwyouv.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5ynwyouv.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp5ynwyouv.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0p6_2ld3.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0p6_2ld3.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0p6_2ld3.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0p6_2ld3.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp0p6_2ld3.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw6u3r7_y.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw6u3r7_y.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw6u3r7_y.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw6u3r7_y.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/tmp/tmpw6u3r7_y.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit[x]))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [convert_to_int(num) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [convert_to_str(num) for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp00zr2jfk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp00zr2jfk.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp00zr2jfk.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp00zr2jfk.py\"\
    , line 9, in sort_numbers\n    numbers = [convert_to_int(num) for num in numbers]\n\
    \  File \"/tmp/tmp00zr2jfk.py\", line 9, in <listcomp>\n    numbers = [convert_to_int(num)\
    \ for num in numbers]\nNameError: name 'convert_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6vlth05.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmph6vlth05.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmph6vlth05.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7iicyo2m.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7iicyo2m.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7iicyo2m.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7iicyo2m.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp7iicyo2m.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxtlr4z2e.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpxtlr4z2e.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxtlr4z2e.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxtlr4z2e.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/tmp/tmpxtlr4z2e.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit[x]))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpor95mzu2.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpor95mzu2.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpor95mzu2.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [key for key, value\
    \ in num_dict.items() if value in num_list]\n    return ' '.join(num_list)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfl6dtom1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfl6dtom1.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfl6dtom1.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfl6dtom1.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpfl6dtom1.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf5xr3gy6.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf5xr3gy6.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf5xr3gy6.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf5xr3gy6.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpf5xr3gy6.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpag6d0l3s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpag6d0l3s.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpag6d0l3s.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpag6d0l3s.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/tmp/tmpag6d0l3s.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit[x]))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqmr8y1zb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqmr8y1zb.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqmr8y1zb.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpqmr8y1zb.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpqmr8y1zb.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit(number)) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp43udgpw8.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp43udgpw8.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp43udgpw8.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp43udgpw8.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmp43udgpw8.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp68pgoruu.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp68pgoruu.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp68pgoruu.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp68pgoruu.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp68pgoruu.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpah0kism7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpah0kism7.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpah0kism7.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpah0kism7.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmpah0kism7.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphx_6922u.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmphx_6922u.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmphx_6922u.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmphx_6922u.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmphx_6922u.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBER_WORDS[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [NUMBER_WORDS[str(number)] for number in numbers]\n    return '\
    \ '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpivlex5w8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpivlex5w8.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpivlex5w8.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpivlex5w8.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBER_WORDS[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpivlex5w8.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(NUMBER_WORDS[number]) for number in numbers]\nNameError: name 'NUMBER_WORDS'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpagysp4v9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpagysp4v9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpagysp4v9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpagysp4v9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmpagysp4v9.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpepi1_clx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpepi1_clx.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpepi1_clx.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpepi1_clx.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmpepi1_clx.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2digit[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [digit2num[str(num)] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf0str2ts.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf0str2ts.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf0str2ts.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf0str2ts.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmpf0str2ts.py\", line 9, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkrdh2cw1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkrdh2cw1.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpkrdh2cw1.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpkrdh2cw1.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpkrdh2cw1.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv9lbuokn.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpv9lbuokn.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpv9lbuokn.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpv9lbuokn.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpv9lbuokn.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvz2rlp00.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpvz2rlp00.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvz2rlp00.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpvz2rlp00.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpvz2rlp00.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc69pqwrq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpc69pqwrq.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpc69pqwrq.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpc69pqwrq.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpc69pqwrq.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number[str(number)] for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4p260pz7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4p260pz7.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4p260pz7.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4p260pz7.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp4p260pz7.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [num2int(number) for number in numbers]\n    numbers.sort()\n \
    \   numbers = [int2num(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp56hkv_tb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp56hkv_tb.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp56hkv_tb.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp56hkv_tb.py\"\
    , line 9, in sort_numbers\n    numbers = [num2int(number) for number in numbers]\n\
    \  File \"/tmp/tmp56hkv_tb.py\", line 9, in <listcomp>\n    numbers = [num2int(number)\
    \ for number in numbers]\nNameError: name 'num2int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number[str(number)] for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv5kc8sxu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpv5kc8sxu.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpv5kc8sxu.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpv5kc8sxu.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmpv5kc8sxu.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8xxxdjhl.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8xxxdjhl.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8xxxdjhl.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8xxxdjhl.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmp8xxxdjhl.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[n]) for n in numbers]\n    numbers.sort()\n    numbers\
    \ = [NUMBERS[n] for n in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp18gv2kop.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp18gv2kop.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp18gv2kop.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp18gv2kop.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[n]) for n in numbers]\n\
    \  File \"/tmp/tmp18gv2kop.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[n])\
    \ for n in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaxuw0nwd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpaxuw0nwd.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpaxuw0nwd.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpaxuw0nwd.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpaxuw0nwd.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmple0bjc31.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmple0bjc31.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmple0bjc31.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpafzrj7me.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpafzrj7me.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpafzrj7me.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpafzrj7me.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpafzrj7me.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_jnkvkg7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_jnkvkg7.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_jnkvkg7.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_jnkvkg7.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp_jnkvkg7.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmgk4v1_c.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmgk4v1_c.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmgk4v1_c.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmgk4v1_c.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpmgk4v1_c.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpik55ught.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpik55ught.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpik55ught.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpik55ught.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmpik55ught.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpownkje3c.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpownkje3c.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpownkje3c.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpownkje3c.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmpownkje3c.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4wgg2brp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp4wgg2brp.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4wgg2brp.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4wgg2brp.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp4wgg2brp.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(WORDS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpze2fta4c.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpze2fta4c.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpze2fta4c.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpze2fta4c.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(WORDS[x]))\n  File\
    \ \"/tmp/tmpze2fta4c.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ int(WORDS[x]))\nNameError: name 'WORDS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [NUMBERS[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfeutyh14.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfeutyh14.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfeutyh14.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpfeutyh14.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[number]) for number in numbers]\n\
    \  File \"/tmp/tmpfeutyh14.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[number])\
    \ for number in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphmip7t22.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmphmip7t22.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmphmip7t22.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmphmip7t22.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmphmip7t22.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjzq1irvl.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpjzq1irvl.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjzq1irvl.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjzq1irvl.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpjzq1irvl.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [NUMBERS[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjpiztyhc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjpiztyhc.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjpiztyhc.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjpiztyhc.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[number]) for number in numbers]\n\
    \  File \"/tmp/tmpjpiztyhc.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[number])\
    \ for number in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz08emu54.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpz08emu54.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpz08emu54.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpz08emu54.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpz08emu54.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0u127jt0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0u127jt0.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0u127jt0.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0u127jt0.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmp0u127jt0.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split(' ')\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [num for num in num_list]\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbhofyvdk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbhofyvdk.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbhofyvdk.py\", line\
    \ 17, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpbhofyvdk.py\"\
    , line 10, in sort_numbers\n    num_list = [num_dict[num] for num in num_list]\n\
    \  File \"/tmp/tmpbhofyvdk.py\", line 10, in <listcomp>\n    num_list = [num_dict[num]\
    \ for num in num_list]\nKeyError: ''\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl5quy6t4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpl5quy6t4.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpl5quy6t4.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpl5quy6t4.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpl5quy6t4.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(x))\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7eop1kym.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7eop1kym.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7eop1kym.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7eop1kym.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(x))\n  File \"/tmp/tmp7eop1kym.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda x: int(x))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkl78qinu.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpkl78qinu.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpkl78qinu.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpkl78qinu.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpkl78qinu.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3u79so2j.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp3u79so2j.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3u79so2j.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp3u79so2j.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp3u79so2j.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_numeral(number)) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [numeral_to_number(str(number)) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp32qh70c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpp32qh70c.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpp32qh70c.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpp32qh70c.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_numeral(number)) for number\
    \ in numbers]\n  File \"/tmp/tmpp32qh70c.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_numeral(number)) for number in numbers]\nNameError: name 'number_to_numeral'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: DIGITS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr9erepiz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpr9erepiz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpr9erepiz.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpr9erepiz.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: DIGITS[x])\n  File \"\
    /tmp/tmpr9erepiz.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x: DIGITS[x])\n\
    NameError: name 'DIGITS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9rcr1_i1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9rcr1_i1.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9rcr1_i1.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp9rcr1_i1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp9rcr1_i1.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=lambda x: numeral_to_int(x))\n    return '\
    \ '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4sfim83x.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp4sfim83x.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4sfim83x.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4sfim83x.py\"\
    , line 9, in sort_numbers\n    numbers = sorted(numbers, key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmp4sfim83x.py\", line 9, in <lambda>\n    numbers = sorted(numbers,\
    \ key=lambda x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5jgapnrf.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5jgapnrf.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5jgapnrf.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5jgapnrf.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp5jgapnrf.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp32qc34m_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp32qc34m_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp32qc34m_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp32qc34m_.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmp32qc34m_.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numbers_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpck4n3wc1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpck4n3wc1.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpck4n3wc1.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpck4n3wc1.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numbers_dict[x])\n \
    \ File \"/tmp/tmpck4n3wc1.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numbers_dict[x])\nNameError: name 'numbers_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(number_to_digit[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [digit_to_number[str(number)] for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppx2iawza.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppx2iawza.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppx2iawza.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppx2iawza.py\"\
    , line 9, in sort_numbers\n    numbers = [int(number_to_digit[number]) for number\
    \ in numbers]\n  File \"/tmp/tmppx2iawza.py\", line 9, in <listcomp>\n    numbers\
    \ = [int(number_to_digit[number]) for number in numbers]\nNameError: name 'number_to_digit'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [convert_number(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [convert_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp37zlcfs5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp37zlcfs5.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp37zlcfs5.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp37zlcfs5.py\"\
    , line 9, in sort_numbers\n    numbers = [convert_number(number) for number in\
    \ numbers]\n  File \"/tmp/tmp37zlcfs5.py\", line 9, in <listcomp>\n    numbers\
    \ = [convert_number(number) for number in numbers]\nNameError: name 'convert_number'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk8a40enw.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpk8a40enw.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpk8a40enw.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpk8a40enw.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num[x]))\n\
    \  File \"/tmp/tmpk8a40enw.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num[x]))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv_221cxi.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpv_221cxi.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpv_221cxi.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpv_221cxi.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpv_221cxi.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7w5ki4kn.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7w5ki4kn.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7w5ki4kn.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7w5ki4kn.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmp7w5ki4kn.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph9df8gy1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmph9df8gy1.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmph9df8gy1.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmph9df8gy1.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmph9df8gy1.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe76d85ru.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpe76d85ru.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpe76d85ru.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpe76d85ru.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpe76d85ru.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6t5opkyf.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6t5opkyf.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6t5opkyf.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp6t5opkyf.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmp6t5opkyf.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb7uhmi8o.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb7uhmi8o.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpb7uhmi8o.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpb7uhmi8o.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpb7uhmi8o.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeff030s4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpeff030s4.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpeff030s4.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpeff030s4.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpeff030s4.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn_s1ourr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpn_s1ourr.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn_s1ourr.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpn_s1ourr.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpn_s1ourr.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[num]\
    \ for num in num_list]\n    num_list.sort()\n    num_list = [str(num) for num\
    \ in num_list]\n    return ' '.join(num_list)\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_clgryrr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_clgryrr.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_clgryrr.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdlcv14ks.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdlcv14ks.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdlcv14ks.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpdlcv14ks.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpdlcv14ks.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: int(NUMBERS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmxuwrlfo.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpmxuwrlfo.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmxuwrlfo.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmxuwrlfo.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: int(NUMBERS[x])))\n  File \"/tmp/tmpmxuwrlfo.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda x: int(NUMBERS[x])))\n\
    NameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx2qvg1of.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpx2qvg1of.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpx2qvg1of.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpx2qvg1of.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpx2qvg1of.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = [num_dict[i] for i in numbers.split()]\n    num_list.sort()\n\
    \    return ' '.join([str(i) for i in num_list])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkdd18763.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpkdd18763.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpkdd18763.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb_hn6r9e.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpb_hn6r9e.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpb_hn6r9e.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpb_hn6r9e.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpb_hn6r9e.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsbzi8tj6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpsbzi8tj6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpsbzi8tj6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpsbzi8tj6.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpsbzi8tj6.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[num]) for num in numbers]\n    numbers.sort()\n  \
    \  numbers = [NUMBERS[num] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzqnwee3m.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzqnwee3m.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzqnwee3m.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpzqnwee3m.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[num]) for num in numbers]\n\
    \  File \"/tmp/tmpzqnwee3m.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[num])\
    \ for num in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    return ' '.join(sorted(numbers.split(), key=lambda x: nums[x]))\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(WORDS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph5rxmo7f.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmph5rxmo7f.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmph5rxmo7f.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmph5rxmo7f.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(WORDS[x]))\n  File\
    \ \"/tmp/tmph5rxmo7f.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ int(WORDS[x]))\nNameError: name 'WORDS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(n) for n in numbers]\n    numbers.sort()\n    numbers\
    \ = [int_to_number(n) for n in numbers]\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoks3dkn8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpoks3dkn8.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpoks3dkn8.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpoks3dkn8.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(n) for n in numbers]\n\
    \  File \"/tmp/tmpoks3dkn8.py\", line 9, in <listcomp>\n    numbers = [number_to_int(n)\
    \ for n in numbers]\nNameError: name 'number_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe4z653_a.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpe4z653_a.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpe4z653_a.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpe4z653_a.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit(x)))\n\
    \  File \"/tmp/tmpe4z653_a.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit(x)))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_int(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdxak597e.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpdxak597e.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdxak597e.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpdxak597e.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_int(x))\n\
    \  File \"/tmp/tmpdxak597e.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_int(x))\nNameError: name 'numeral_to_int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[number]) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [NUMBERS[number] for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c6vi5vx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2c6vi5vx.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2c6vi5vx.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2c6vi5vx.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[number]) for number in numbers]\n\
    \  File \"/tmp/tmp2c6vi5vx.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[number])\
    \ for number in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkdlzpt8i.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpkdlzpt8i.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpkdlzpt8i.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpkdlzpt8i.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpkdlzpt8i.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppv9yqbww.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppv9yqbww.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppv9yqbww.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppv9yqbww.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmppv9yqbww.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo26u63z0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpo26u63z0.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpo26u63z0.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpo26u63z0.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit(x)))\n\
    \  File \"/tmp/tmpo26u63z0.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit(x)))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: int(NUMBERS[x])))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp32z79l80.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp32z79l80.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp32z79l80.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp32z79l80.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: int(NUMBERS[x])))\n  File \"/tmp/tmp32z79l80.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda x: int(NUMBERS[x])))\n\
    NameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(NUMBERS[i]) for i in numbers]\n    numbers.sort()\n    numbers\
    \ = [NUMBERS[i] for i in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2k2wsolb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2k2wsolb.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2k2wsolb.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2k2wsolb.py\"\
    , line 9, in sort_numbers\n    numbers = [int(NUMBERS[i]) for i in numbers]\n\
    \  File \"/tmp/tmp2k2wsolb.py\", line 9, in <listcomp>\n    numbers = [int(NUMBERS[i])\
    \ for i in numbers]\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa44gltva.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpa44gltva.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpa44gltva.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpa44gltva.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpa44gltva.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpusjrd41g.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpusjrd41g.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpusjrd41g.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpusjrd41g.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpusjrd41g.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppct0xtpw.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppct0xtpw.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppct0xtpw.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppct0xtpw.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmppct0xtpw.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num2digit[num]) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [digit2num[str(num)] for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2izp665c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2izp665c.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2izp665c.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2izp665c.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num2digit[num]) for num in numbers]\n\
    \  File \"/tmp/tmp2izp665c.py\", line 9, in <listcomp>\n    numbers = [int(num2digit[num])\
    \ for num in numbers]\nNameError: name 'num2digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=lambda x: int(numbers_dict[x]))\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8pkie1ox.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp8pkie1ox.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8pkie1ox.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp8pkie1ox.py\"\
    , line 9, in sort_numbers\n    numbers = sorted(numbers, key=lambda x: int(numbers_dict[x]))\n\
    \  File \"/tmp/tmp8pkie1ox.py\", line 9, in <lambda>\n    numbers = sorted(numbers,\
    \ key=lambda x: int(numbers_dict[x]))\nNameError: name 'numbers_dict' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvf8w74pd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpvf8w74pd.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvf8w74pd.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpvf8w74pd.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/tmp/tmpvf8w74pd.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit[x]))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw_ocn6wc.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpw_ocn6wc.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpw_ocn6wc.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpw_ocn6wc.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpw_ocn6wc.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmuljq9mj.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmuljq9mj.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmuljq9mj.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmuljq9mj.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmpmuljq9mj.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: numeral_to_number(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0jtceqjh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0jtceqjh.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp0jtceqjh.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp0jtceqjh.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: numeral_to_number(x))\n\
    \  File \"/tmp/tmp0jtceqjh.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: numeral_to_number(x))\nNameError: name 'numeral_to_number' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(word_to_num(x)))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1mj58ebo.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp1mj58ebo.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1mj58ebo.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp1mj58ebo.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(word_to_num(x)))\n\
    \  File \"/tmp/tmp1mj58ebo.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(word_to_num(x)))\nNameError: name 'word_to_num' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7nkojiqc.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7nkojiqc.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp7nkojiqc.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp7nkojiqc.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp7nkojiqc.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm5b5gux9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpm5b5gux9.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpm5b5gux9.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpm5b5gux9.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMBERS[x])\n  File\
    \ \"/tmp/tmpm5b5gux9.py\", line 9, in <lambda>\n    numbers.sort(key=lambda x:\
    \ NUMBERS[x])\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ x: num_dict[x])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(number_to_digit[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwude6sl0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpwude6sl0.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpwude6sl0.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpwude6sl0.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(number_to_digit[x]))\n\
    \  File \"/tmp/tmpwude6sl0.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(number_to_digit[x]))\nNameError: name 'number_to_digit' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp24mpiahm.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp24mpiahm.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp24mpiahm.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp24mpiahm.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n \
    \ File \"/tmp/tmp24mpiahm.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: int(NUMBERS[x]))\nNameError: name 'NUMBERS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [num2int[num] for num in numbers]\n    numbers.sort()\n    numbers\
    \ = [int2num[num] for num in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5w6_ix6z.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5w6_ix6z.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5w6_ix6z.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5w6_ix6z.py\"\
    , line 9, in sort_numbers\n    numbers = [num2int[num] for num in numbers]\n \
    \ File \"/tmp/tmp5w6_ix6z.py\", line 9, in <listcomp>\n    numbers = [num2int[num]\
    \ for num in numbers]\nNameError: name 'num2int' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpva7_42eq.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpva7_42eq.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpva7_42eq.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpva7_42eq.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpva7_42eq.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  exit_code: -1
  status: Exception

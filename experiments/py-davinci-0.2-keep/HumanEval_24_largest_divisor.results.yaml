name: HumanEval_24_largest_divisor
language: python
results:
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return None\n\n\ndef check(candidate):\n    assert\
    \ candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10) ==\
    \ 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n\
    \    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpruv1yjvu.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpruv1yjvu.py\", line 18,\
    \ in test_check\n    check(largest_divisor)\n  File \"/tmp/tmpruv1yjvu.py\", line\
    \ 11, in check\n    assert candidate(3) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ None\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 1, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ None\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ None\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n    return 1\n\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n,\
    \ find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

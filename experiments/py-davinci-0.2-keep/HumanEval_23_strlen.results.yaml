language: python
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746954
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659746954
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''

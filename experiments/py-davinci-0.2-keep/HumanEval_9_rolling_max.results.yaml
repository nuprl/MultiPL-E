name: HumanEval_9_rolling_max
language: python
results:
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp93fx3vxs.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp93fx3vxs.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp93fx3vxs.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp93fx3vxs.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm_h0ciei.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm_h0ciei.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpm_h0ciei.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpm_h0ciei.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp4da8bs3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpp4da8bs3.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpp4da8bs3.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpp4da8bs3.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp04vhw75l.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp04vhw75l.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp04vhw75l.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp04vhw75l.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7unuxjsz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7unuxjsz.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7unuxjsz.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7unuxjsz.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for number in numbers:\n        if number > max_value:\n\
    \            max_value = number\n        result.append(max_value)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp21bm2uf0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp21bm2uf0.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp21bm2uf0.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp21bm2uf0.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for number in numbers:\n        if number > max_value:\n\
    \            max_value = number\n        result.append(max_value)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyu8lud9y.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyu8lud9y.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpyu8lud9y.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyu8lud9y.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_so_far_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_so_far_list.append(max_so_far)\n    return max_so_far_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt9esgrrw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpt9esgrrw.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpt9esgrrw.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpt9esgrrw.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for num in numbers:\n        max_so_far = max(max_so_far,\
    \ num)\n        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ymdlqu1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp9ymdlqu1.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp9ymdlqu1.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9ymdlqu1.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = 0\n    for number in numbers:\n        if number > max_so_far:\n\
    \            max_so_far = number\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7shc_h7z.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp7shc_h7z.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7shc_h7z.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7shc_h7z.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    current_max = numbers[0]\n    rolling_max.append(current_max)\n    for\
    \ i in range(1, len(numbers)):\n        if numbers[i] > current_max:\n       \
    \     current_max = numbers[i]\n        rolling_max.append(current_max)\n    return\
    \ rolling_max\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyhuj6csi.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpyhuj6csi.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpyhuj6csi.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyhuj6csi.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptppmtmhe.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptppmtmhe.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmptppmtmhe.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmptppmtmhe.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdcpmlwri.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpdcpmlwri.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpdcpmlwri.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpdcpmlwri.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for number in numbers:\n        if number > max_value:\n\
    \            max_value = number\n        result.append(max_value)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1acuo3dz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp1acuo3dz.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp1acuo3dz.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp1acuo3dz.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for number in numbers:\n        if number > max_value:\n\
    \            max_value = number\n        result.append(max_value)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8hwo0g8t.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8hwo0g8t.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp8hwo0g8t.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp8hwo0g8t.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8vn9kt5h.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp8vn9kt5h.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp8vn9kt5h.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp8vn9kt5h.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbi636yyw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbi636yyw.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpbi636yyw.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbi636yyw.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = -1\n    for number in numbers:\n        max_so_far = max(max_so_far,\
    \ number)\n        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1vny3vpn.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp1vny3vpn.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp1vny3vpn.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp1vny3vpn.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwgic2_jr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwgic2_jr.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwgic2_jr.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwgic2_jr.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt221r9ol.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpt221r9ol.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpt221r9ol.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpt221r9ol.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_rt0gezb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_rt0gezb.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_rt0gezb.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_rt0gezb.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnn1fzyv2.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnn1fzyv2.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnn1fzyv2.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnn1fzyv2.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        max_so_far = max(max_so_far,\
    \ n)\n        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmz30ub89.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmz30ub89.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpmz30ub89.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmz30ub89.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for n in numbers[1:]:\n        max_so_far\
    \ = max(max_so_far, n)\n        result.append(max_so_far)\n    return result\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzomyo95w.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzomyo95w.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzomyo95w.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzomyo95w.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    maximum = numbers[0]\n    for number in numbers:\n        if number > maximum:\n\
    \            maximum = number\n        result.append(maximum)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa_z0qz2w.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpa_z0qz2w.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpa_z0qz2w.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpa_z0qz2w.py\"\
    , line 10, in rolling_max\n    maximum = numbers[0]\nIndexError: list index out\
    \ of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpapmzo05e.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpapmzo05e.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpapmzo05e.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpapmzo05e.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn9mpme4u.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpn9mpme4u.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpn9mpme4u.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpn9mpme4u.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        if n > max_so_far:\n\
    \            max_so_far = n\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5pbfapv9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5pbfapv9.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp5pbfapv9.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5pbfapv9.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyorhhv8m.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyorhhv8m.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpyorhhv8m.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyorhhv8m.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0sjsiprk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp0sjsiprk.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp0sjsiprk.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp0sjsiprk.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for number in numbers[1:]:\n  \
    \      if number > max_so_far:\n            max_so_far = number\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo12wmich.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpo12wmich.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpo12wmich.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpo12wmich.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptkkyge38.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptkkyge38.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmptkkyge38.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmptkkyge38.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4j_vq5bq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4j_vq5bq.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4j_vq5bq.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4j_vq5bq.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeto2vk4j.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpeto2vk4j.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpeto2vk4j.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpeto2vk4j.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpln4m_cbk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpln4m_cbk.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpln4m_cbk.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpln4m_cbk.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        if n > max_so_far:\n\
    \            max_so_far = n\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe12jqx3s.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpe12jqx3s.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpe12jqx3s.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpe12jqx3s.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpainlpwzb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpainlpwzb.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpainlpwzb.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpainlpwzb.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr4zrg5mf.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr4zrg5mf.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpr4zrg5mf.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpr4zrg5mf.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmrw2sm6w.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpmrw2sm6w.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpmrw2sm6w.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmrw2sm6w.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    maximum = numbers[0]\n\
    \    result = [maximum]\n    for i in range(1, len(numbers)):\n        if numbers[i]\
    \ > maximum:\n            maximum = numbers[i]\n        result.append(maximum)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzk0voub3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzk0voub3.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzk0voub3.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzk0voub3.py\"\
    , line 9, in rolling_max\n    maximum = numbers[0]\nIndexError: list index out\
    \ of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        if n > max_so_far:\n\
    \            max_so_far = n\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwzepovzh.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwzepovzh.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwzepovzh.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwzepovzh.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2kqc7zne.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2kqc7zne.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2kqc7zne.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2kqc7zne.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpefvgv0lz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpefvgv0lz.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpefvgv0lz.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpefvgv0lz.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4maosb9r.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4maosb9r.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4maosb9r.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4maosb9r.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqoyy3bz0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqoyy3bz0.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqoyy3bz0.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqoyy3bz0.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqcimqfj5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqcimqfj5.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqcimqfj5.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqcimqfj5.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5yxy6d88.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5yxy6d88.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp5yxy6d88.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5yxy6d88.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max_list\
    \ = []\n    max_so_far = numbers[0]\n    rolling_max_list.append(max_so_far)\n\
    \    for i in range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n \
    \           max_so_far = numbers[i]\n        rolling_max_list.append(max_so_far)\n\
    \    return rolling_max_list\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpruigojbs.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpruigojbs.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpruigojbs.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpruigojbs.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl9l5xib4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl9l5xib4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl9l5xib4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl9l5xib4.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprk28gu9a.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprk28gu9a.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmprk28gu9a.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmprk28gu9a.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo95s2xk1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpo95s2xk1.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpo95s2xk1.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpo95s2xk1.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8niedakz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8niedakz.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp8niedakz.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp8niedakz.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_so_far_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_so_far_list.append(max_so_far)\n    return max_so_far_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoqndd3et.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpoqndd3et.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpoqndd3et.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpoqndd3et.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for number in numbers:\n        if number > max_value:\n\
    \            max_value = number\n        result.append(max_value)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppdex2l0f.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppdex2l0f.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmppdex2l0f.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmppdex2l0f.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptyc_l8vz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptyc_l8vz.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmptyc_l8vz.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmptyc_l8vz.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9qti5kmv.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp9qti5kmv.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp9qti5kmv.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9qti5kmv.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqz90aggs.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqz90aggs.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqz90aggs.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqz90aggs.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppbycuv1z.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppbycuv1z.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmppbycuv1z.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmppbycuv1z.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for num in numbers:\n        max_so_far = max(max_so_far,\
    \ num)\n        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufz9lafh.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpufz9lafh.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpufz9lafh.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpufz9lafh.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n       \
    \ if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuhku3279.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpuhku3279.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpuhku3279.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpuhku3279.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3j6e_2l2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3j6e_2l2.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3j6e_2l2.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3j6e_2l2.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4qm1xy1j.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4qm1xy1j.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4qm1xy1j.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4qm1xy1j.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6cxv6goi.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6cxv6goi.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6cxv6goi.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6cxv6goi.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsnzfhl8y.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsnzfhl8y.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpsnzfhl8y.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpsnzfhl8y.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplws68kg_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplws68kg_.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplws68kg_.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplws68kg_.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp590cq9_h.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp590cq9_h.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp590cq9_h.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp590cq9_h.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = [numbers[0]]\n\
    \    for i in range(1, len(numbers)):\n        result.append(max(result[i-1],\
    \ numbers[i]))\n    return result\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl1yq5a2s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpl1yq5a2s.py\", line 21,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl1yq5a2s.py\", line\
    \ 15, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl1yq5a2s.py\"\
    , line 9, in rolling_max\n    result = [numbers[0]]\nIndexError: list index out\
    \ of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if not numbers:\n\
    \        return []\n    max_so_far = numbers[0]\n    result = [max_so_far]\n \
    \   for i in range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n  \
    \          max_so_far = numbers[i]\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt0alf4qa.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpt0alf4qa.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpt0alf4qa.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpt0alf4qa.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph0tbqyj7.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmph0tbqyj7.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmph0tbqyj7.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmph0tbqyj7.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for num in numbers[1:]:\n       \
    \ max_so_far = max(max_so_far, num)\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa7y4v7j0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa7y4v7j0.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpa7y4v7j0.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpa7y4v7j0.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    max_so_far = numbers[0]\n    for number in numbers:\n        if number\
    \ > max_so_far:\n            max_so_far = number\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxq82h37i.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpxq82h37i.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpxq82h37i.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxq82h37i.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsgjw26w7.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsgjw26w7.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpsgjw26w7.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpsgjw26w7.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    return [max(numbers[:i+1])\
    \ for i in range(len(numbers))]\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for n in numbers[1:]:\n        if\
    \ n > max_so_far:\n            max_so_far = n\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphxsfaqlk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphxsfaqlk.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphxsfaqlk.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphxsfaqlk.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    rolling_max = [max_so_far]\n    for number in numbers[1:]:\n\
    \        max_so_far = max(max_so_far, number)\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn89te03b.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpn89te03b.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpn89te03b.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpn89te03b.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp74tk6ys9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp74tk6ys9.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp74tk6ys9.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp74tk6ys9.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        max_so_far\
    \ = max(max_so_far, numbers[i])\n        max_list.append(max_so_far)\n    return\
    \ max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc48zx3mk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc48zx3mk.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc48zx3mk.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc48zx3mk.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp164bulwd.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp164bulwd.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp164bulwd.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp164bulwd.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxh7shcqd.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpxh7shcqd.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpxh7shcqd.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpxh7shcqd.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzi65y85i.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzi65y85i.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzi65y85i.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzi65y85i.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        if n > max_so_far:\n\
    \            max_so_far = n\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvd_v512u.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvd_v512u.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpvd_v512u.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpvd_v512u.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4erxu5i7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4erxu5i7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4erxu5i7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4erxu5i7.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for n in numbers:\n        if n > max_value:\n\
    \            max_value = n\n        result.append(max_value)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4klmg6qx.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4klmg6qx.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4klmg6qx.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4klmg6qx.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for number in numbers:\n        if number > max_value:\n\
    \            max_value = number\n        result.append(max_value)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0izvx79n.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp0izvx79n.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp0izvx79n.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp0izvx79n.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_zzugay9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_zzugay9.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_zzugay9.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_zzugay9.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc1o_r3l6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpc1o_r3l6.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc1o_r3l6.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc1o_r3l6.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_so_far_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_so_far_list.append(max_so_far)\n    return max_so_far_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ybdwtyh.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp0ybdwtyh.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp0ybdwtyh.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp0ybdwtyh.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_8y0zl1d.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_8y0zl1d.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_8y0zl1d.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_8y0zl1d.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkj4n00y4.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpkj4n00y4.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpkj4n00y4.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpkj4n00y4.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_element = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_element:\n            max_element = numbers[i]\n        result.append(max_element)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp42c37g9b.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp42c37g9b.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp42c37g9b.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp42c37g9b.py\"\
    , line 10, in rolling_max\n    max_element = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjsx0ufor.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpjsx0ufor.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjsx0ufor.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjsx0ufor.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2akoz8s3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2akoz8s3.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2akoz8s3.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2akoz8s3.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4a51mghz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4a51mghz.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4a51mghz.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4a51mghz.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        current_max\
    \ = max(current_max, number)\n        result.append(current_max)\n    return result\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtbbozi3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphtbbozi3.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphtbbozi3.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphtbbozi3.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqtp634b_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqtp634b_.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqtp634b_.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqtp634b_.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpotn8j6yn.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpotn8j6yn.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpotn8j6yn.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpotn8j6yn.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmkkh921o.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpmkkh921o.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpmkkh921o.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmkkh921o.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for n in numbers[1:]:\n        if\
    \ n > max_so_far:\n            max_so_far = n\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprv021wbo.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprv021wbo.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmprv021wbo.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmprv021wbo.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjfwcc0qm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpjfwcc0qm.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjfwcc0qm.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjfwcc0qm.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7w59_pz5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp7w59_pz5.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7w59_pz5.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7w59_pz5.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqm2g8l1t.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqm2g8l1t.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqm2g8l1t.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqm2g8l1t.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2kmuokre.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2kmuokre.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2kmuokre.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2kmuokre.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_number = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_number:\n            max_number = number\n        result.append(max_number)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpilkn3xet.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpilkn3xet.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpilkn3xet.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpilkn3xet.py\"\
    , line 10, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmr7k75pd.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpmr7k75pd.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpmr7k75pd.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpmr7k75pd.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > current_max:\n            current_max = numbers[i]\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtl3itlj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphtl3itlj.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphtl3itlj.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphtl3itlj.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv0r6fket.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpv0r6fket.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpv0r6fket.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpv0r6fket.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_pdgq7du.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp_pdgq7du.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_pdgq7du.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_pdgq7du.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > current_max:\n            current_max = numbers[i]\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdsl_oeqm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpdsl_oeqm.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpdsl_oeqm.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpdsl_oeqm.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        max_so_far = max(max_so_far,\
    \ n)\n        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2bgte0h_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2bgte0h_.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2bgte0h_.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2bgte0h_.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for num in numbers[1:]:\n       \
    \ max_so_far = max(max_so_far, num)\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptakgrakh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptakgrakh.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmptakgrakh.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmptakgrakh.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        max_so_far = max(max_so_far,\
    \ n)\n        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwzoeksvr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpwzoeksvr.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwzoeksvr.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwzoeksvr.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnevsqq0p.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpnevsqq0p.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnevsqq0p.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnevsqq0p.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgyqjjbo8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpgyqjjbo8.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpgyqjjbo8.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpgyqjjbo8.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfbeyd2v8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfbeyd2v8.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpfbeyd2v8.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpfbeyd2v8.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for number in numbers:\n        max_value = max(max_value,\
    \ number)\n        result.append(max_value)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpotpc8lk5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpotpc8lk5.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpotpc8lk5.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpotpc8lk5.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwritjw52.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwritjw52.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwritjw52.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwritjw52.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiwq4e2qw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpiwq4e2qw.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpiwq4e2qw.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpiwq4e2qw.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnm8ys74u.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnm8ys74u.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnm8ys74u.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnm8ys74u.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for number in numbers[1:]:\n  \
    \      if number > max_so_far:\n            max_so_far = number\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl8wf44d4.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpl8wf44d4.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl8wf44d4.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl8wf44d4.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_numbers =\
    \ []\n    max_number = numbers[0]\n    for number in numbers:\n        if number\
    \ > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjqlmex9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbjqlmex9.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpbjqlmex9.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbjqlmex9.py\"\
    , line 10, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphhb5cio9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphhb5cio9.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphhb5cio9.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphhb5cio9.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > current_max:\n            current_max = numbers[i]\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphdnmg6l0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphdnmg6l0.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphdnmg6l0.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphdnmg6l0.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp314zjnsv.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp314zjnsv.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp314zjnsv.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp314zjnsv.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkob1mr_x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkob1mr_x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpkob1mr_x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpkob1mr_x.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr1tlkvqq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpr1tlkvqq.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpr1tlkvqq.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpr1tlkvqq.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwvxdtbav.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwvxdtbav.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwvxdtbav.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwvxdtbav.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0wy96c7.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpu0wy96c7.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpu0wy96c7.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpu0wy96c7.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_so_far_list = [max_so_far]\n    for number in numbers[1:]:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        max_so_far_list.append(max_so_far)\n\
    \    return max_so_far_list\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp37gblkje.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp37gblkje.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp37gblkje.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp37gblkje.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5jcyw8y1.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5jcyw8y1.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp5jcyw8y1.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5jcyw8y1.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2w55aeni.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2w55aeni.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2w55aeni.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2w55aeni.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_elements\
    \ = []\n    max_element = numbers[0]\n    for number in numbers:\n        if number\
    \ > max_element:\n            max_element = number\n        max_elements.append(max_element)\n\
    \    return max_elements\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkb53cffj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpkb53cffj.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpkb53cffj.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpkb53cffj.py\"\
    , line 10, in rolling_max\n    max_element = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp422xq4nq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp422xq4nq.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp422xq4nq.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp422xq4nq.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7qu4x1ba.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp7qu4x1ba.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7qu4x1ba.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7qu4x1ba.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkskotzcy.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpkskotzcy.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpkskotzcy.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpkskotzcy.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfp8b81wq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfp8b81wq.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpfp8b81wq.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpfp8b81wq.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if not numbers:\n\
    \        return []\n    max_so_far = numbers[0]\n    result = [max_so_far]\n \
    \   for i in range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n  \
    \          max_so_far = numbers[i]\n        result.append(max_so_far)\n    return\
    \ result\n\ndef check(candidate):\n    assert candidate([]) == []\n    assert\
    \ candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\
    \ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpql11d55y.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpql11d55y.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpql11d55y.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpql11d55y.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_list = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprbp5qf2f.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmprbp5qf2f.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmprbp5qf2f.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmprbp5qf2f.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgk_xqkox.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpgk_xqkox.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpgk_xqkox.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpgk_xqkox.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_element = numbers[0]\n    for element in numbers:\n        if element\
    \ > max_element:\n            max_element = element\n        result.append(max_element)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp46qgc74c.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp46qgc74c.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp46qgc74c.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp46qgc74c.py\"\
    , line 10, in rolling_max\n    max_element = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfk78f2i0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpfk78f2i0.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpfk78f2i0.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpfk78f2i0.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyoyy65qk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyoyy65qk.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpyoyy65qk.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyoyy65qk.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjlk_x_lm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpjlk_x_lm.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjlk_x_lm.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjlk_x_lm.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for n in numbers[1:]:\n        max_so_far\
    \ = max(max_so_far, n)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvkkl3zle.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpvkkl3zle.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpvkkl3zle.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpvkkl3zle.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppoynshzm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmppoynshzm.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmppoynshzm.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmppoynshzm.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for n in numbers[1:]:\n       \
    \ if n > max_so_far:\n            max_so_far = n\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4snza5lu.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4snza5lu.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4snza5lu.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4snza5lu.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = 0\n    for number in numbers:\n        max_so_far = max(max_so_far,\
    \ number)\n        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    rolling_max = [max_so_far]\n    for num in numbers[1:]:\n  \
    \      if num > max_so_far:\n            max_so_far = num\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3gakz450.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3gakz450.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3gakz450.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3gakz450.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw4346l1p.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw4346l1p.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpw4346l1p.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpw4346l1p.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmporrqdi5t.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmporrqdi5t.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmporrqdi5t.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmporrqdi5t.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_so_far_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        max_so_far_list.append(max_so_far)\n\
    \    return max_so_far_list\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps66hcs0i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmps66hcs0i.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmps66hcs0i.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmps66hcs0i.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgn53y0w6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpgn53y0w6.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpgn53y0w6.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpgn53y0w6.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    if not numbers:\n\
    \        return []\n    result = [numbers[0]]\n    for i in range(1, len(numbers)):\n\
    \        result.append(max(result[i-1], numbers[i]))\n    return result\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > current_max:\n            current_max = numbers[i]\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjcddov9.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpbjcddov9.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpbjcddov9.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbjcddov9.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzfyxarid.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzfyxarid.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzfyxarid.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzfyxarid.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw2pyi6c3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpw2pyi6c3.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpw2pyi6c3.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpw2pyi6c3.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpri4egzt6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpri4egzt6.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpri4egzt6.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpri4egzt6.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = -1\n    for n in numbers:\n        if n > max_so_far:\n    \
    \        max_so_far = n\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    max_so_far = numbers[0]\n    for number in numbers:\n        if number\
    \ > max_so_far:\n            max_so_far = number\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp34rk_po3.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp34rk_po3.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp34rk_po3.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp34rk_po3.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsh4g36pw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpsh4g36pw.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpsh4g36pw.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpsh4g36pw.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    max_so_far = numbers[0]\n    for number in numbers:\n        if number\
    \ > max_so_far:\n            max_so_far = number\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ufsqsmw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4ufsqsmw.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4ufsqsmw.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4ufsqsmw.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnyc75cu4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnyc75cu4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnyc75cu4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnyc75cu4.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpryi477y5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpryi477y5.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpryi477y5.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpryi477y5.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > current_max:\n            current_max = numbers[i]\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn_uh6wfq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpn_uh6wfq.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpn_uh6wfq.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpn_uh6wfq.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4k82519m.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4k82519m.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4k82519m.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4k82519m.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqybc6c8w.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqybc6c8w.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqybc6c8w.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqybc6c8w.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdhmhu8lp.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpdhmhu8lp.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpdhmhu8lp.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpdhmhu8lp.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for number in numbers[1:]:\n  \
    \      if number > max_so_far:\n            max_so_far = number\n        max_list.append(max_so_far)\n\
    \    return max_list\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptdbjpj4o.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptdbjpj4o.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmptdbjpj4o.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmptdbjpj4o.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2qpxb8v_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2qpxb8v_.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2qpxb8v_.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2qpxb8v_.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp62v9tkqp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp62v9tkqp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp62v9tkqp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp62v9tkqp.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwen_j37n.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpwen_j37n.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpwen_j37n.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpwen_j37n.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > current_max:\n            current_max = numbers[i]\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptzj41kv9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptzj41kv9.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmptzj41kv9.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmptzj41kv9.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        result.append(max_so_far)\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \  return result\n\ndef check(candidate):\n    assert candidate([]) == []\n  \
    \  assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3,\
    \ 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3,\
    \ 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt3hpy_57.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpt3hpy_57.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpt3hpy_57.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpt3hpy_57.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3gv8s1d5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp3gv8s1d5.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3gv8s1d5.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3gv8s1d5.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_mscaj0h.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp_mscaj0h.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_mscaj0h.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_mscaj0h.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    max_value = numbers[0]\n    for number in numbers:\n        if number\
    \ > max_value:\n            max_value = number\n        rolling_max.append(max_value)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp799vpbvi.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp799vpbvi.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp799vpbvi.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp799vpbvi.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        if number >\
    \ max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyf13j7r8.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyf13j7r8.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpyf13j7r8.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyf13j7r8.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq5w4oi3z.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpq5w4oi3z.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpq5w4oi3z.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpq5w4oi3z.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl6w0b0re.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpl6w0b0re.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl6w0b0re.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl6w0b0re.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo_aufd7p.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpo_aufd7p.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpo_aufd7p.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpo_aufd7p.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpexh0eafn.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpexh0eafn.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpexh0eafn.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpexh0eafn.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    max_list = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuw6ligyd.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpuw6ligyd.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpuw6ligyd.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpuw6ligyd.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7gnfdkrm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp7gnfdkrm.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp7gnfdkrm.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp7gnfdkrm.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    rolling_max = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      rolling_max.append(max_so_far)\n    return rolling_max\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5e3gd_6h.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5e3gd_6h.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp5e3gd_6h.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5e3gd_6h.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpztdcf0bu.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpztdcf0bu.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpztdcf0bu.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpztdcf0bu.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_so_far:\n            max_so_far = numbers[i]\n        result.append(max_so_far)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp10fpvrl4.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp10fpvrl4.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp10fpvrl4.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp10fpvrl4.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for number in numbers[1:]:\n    \
    \    if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1na_ix1d.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp1na_ix1d.py\", line 25,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp1na_ix1d.py\", line\
    \ 19, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp1na_ix1d.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    current_max = numbers[0]\n    for number in numbers:\n        if number >\
    \ current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvmep6ako.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpvmep6ako.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpvmep6ako.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpvmep6ako.py\"\
    , line 10, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgtk1hwve.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpgtk1hwve.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpgtk1hwve.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpgtk1hwve.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for n in numbers:\n        max_so_far = max(max_so_far,\
    \ n)\n        result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa9ht37tu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa9ht37tu.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpa9ht37tu.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpa9ht37tu.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_value = numbers[0]\n    for i in range(len(numbers)):\n        if numbers[i]\
    \ > max_value:\n            max_value = numbers[i]\n        result.append(max_value)\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5s0u_9na.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5s0u_9na.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp5s0u_9na.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp5s0u_9na.py\"\
    , line 10, in rolling_max\n    max_value = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    rolling_max =\
    \ []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n       \
    \ if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2gbqm23a.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2gbqm23a.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2gbqm23a.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2gbqm23a.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    for i in range(len(numbers)):\n        result.append(max(numbers[:i+1]))\n\
    \    return result\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = -1\n    for n in numbers:\n        if n > max_so_far:\n    \
    \        max_so_far = n\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for n in numbers[1:]:\n        max_so_far\
    \ = max(max_so_far, n)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo8v0fna0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpo8v0fna0.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpo8v0fna0.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpo8v0fna0.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    result = []\n\
    \    max_so_far = numbers[0]\n    for number in numbers:\n        max_so_far =\
    \ max(max_so_far, number)\n        result.append(max_so_far)\n    return result\n\
    \ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedog7va1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpedog7va1.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpedog7va1.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpedog7va1.py\"\
    , line 10, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n\
    \    \"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\n    max_so_far =\
    \ numbers[0]\n    result = [max_so_far]\n    for i in range(1, len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe5j60h1i.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpe5j60h1i.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpe5j60h1i.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpe5j60h1i.py\"\
    , line 9, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  exit_code: -1
  status: Exception

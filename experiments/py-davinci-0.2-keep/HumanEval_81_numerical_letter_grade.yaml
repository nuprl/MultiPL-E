name: HumanEval_81_numerical_letter_grade
language: python
prompt: "from typing import List\n\ndef numerical_letter_grade(grades: List[float])\
  \ -> List[str]:\n    \"\"\"It is the last week of the semester and the teacher has\
  \ to give the grades\n    to students. The teacher has been making her own algorithm\
  \ for grading.\n    The only problem is, she has lost the code she used for grading.\n\
  \    She has given you a list of GPAs for some students and you have to write \n\
  \    a function that can output a list of letter grades using the following table:\n\
  \             GPA       |    Letter grade\n              4.0                A+\n\
  \            > 3.7                A \n            > 3.3                A- \n   \
  \         > 3.0                B+\n            > 2.7                B \n       \
  \     > 2.3                B-\n            > 2.0                C+\n           \
  \ > 1.7                C\n            > 1.3                C-\n            > 1.0\
  \                D+ \n            > 0.7                D \n            > 0.0   \
  \             D-\n              0.0                E\n    \n\n    Example:\n   \
  \ grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n    \"\
  \"\"\n"
tests: "def check(candidate):\n    assert candidate([4.0, 3, 1.7, 2, 3.5]) == ['A+',\
  \ 'B', 'C-', 'C', 'A-']\n    assert candidate([1.2]) == ['D+']\n    assert candidate([0.5])\
  \ == ['D-']\n    assert candidate([0.0]) == ['E']\n    assert candidate([1.0, 0.3,\
  \ 1.5, 2.8, 3.3]) == ['D', 'D-', 'C-', 'B', 'B+']\n    assert candidate([0.0, 0.7])\
  \ == ['E', 'D-']\n\ndef test_check():\n    check(numerical_letter_grade)\n\ntest_check()\n"
completions: ["    # Your code here\n    pass\n", "    # Write your code here\n  \
    \  pass\n\n", "    # your code here\n    pass\n", "    # your code here\n    pass\n\
    \n", "    return [\n        'A+' if gpa == 4.0 else\n        'A' if gpa > 3.7\
    \ else\n        'A-' if gpa > 3.3 else\n        'B+' if gpa > 3.0 else\n     \
    \   'B' if gpa > 2.7 else\n        'B-' if gpa > 2.3 else\n        'C+' if gpa\
    \ > 2.0 else\n        'C' if gpa > 1.7 else\n        'C-' if gpa > 1.3 else\n\
    \        'D+' if gpa > 1.0 else\n        'D' if gpa > 0.7 else\n        'D-' if\
    \ gpa > 0.0 else\n        'E'\n        for gpa in grades\n    ]", "    # Your\
    \ code here\n    pass\n", "    # your code here\n    pass\n\n", "    # your code\
    \ here\n    pass\n\n", "    # Write your code here\n    pass\n\n", "    # Write\
    \ your code here\n    pass\n\n", "    # Write your code here\n    pass\n", " \
    \   # Write your code here\n    pass\n\n", "    # write your code here\n    pass\n",
  "    # write your code here\n    pass\n", "    grades_list = []\n    for grade in\
    \ grades:\n        if grade >= 4.0:\n            grades_list.append('A+')\n  \
    \      elif grade >= 3.7:\n            grades_list.append('A')\n        elif grade\
    \ >= 3.3:\n            grades_list.append('A-')\n        elif grade >= 3.0:\n\
    \            grades_list.append('B+')\n        elif grade >= 2.7:\n          \
    \  grades_list.append('B')\n        elif grade >= 2.3:\n            grades_list.append('B-')\n\
    \        elif grade >= 2.0:\n            grades_list.append('C+')\n        elif\
    \ grade >= 1.7:\n            grades_list.append('C')\n        elif grade >= 1.3:\n\
    \            grades_list.append('C-')\n        elif grade >= 1.0:\n          \
    \  grades_list.append('D+')\n        elif grade >= 0.7:\n            grades_list.append('D')\n\
    \        elif grade >= 0.0:\n            grades_list.append('D-')\n        else:\n\
    \            grades_list.append('E')\n    return grades_list\n\nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    # Write your code here\n    pass\n\n", "    # Write\
    \ your code here\n    pass\n\n", "    pass\n", "    # Write your code here\n \
    \   pass\n", "    # Your code here\n    pass\n\n", "    # Write your code here\n\
    \    pass\n", "    # your code here\n    return []\n", "    # Write your code\
    \ here\n    pass\n\n", "    # Write your code here\n    pass\n", "    # Write\
    \ your code here\n    pass\n\n", "    # your code here\n    return [''] * len(grades)\n\
    \n", "    # Your code here\n    pass\n", "    # your code here\n    pass\n\n",
  "    # Your code here\n    pass\n", "    # Your code here\n    return []\n\n", " \
    \   # your code here\n    pass\n", "    # Your code here\n    pass\n\n", "   \
    \ # Write your code here\n    pass\n", "    # Write your code here\n    pass\n",
  "    # Your code here\n    pass\n", "    # your code here\n    pass\n", "    pass\n",
  "    pass\n", "    letter_grades = []\n    for grade in grades:\n        if grade\
    \ >= 4.0:\n            letter_grades.append('A+')\n        elif grade >= 3.7:\n\
    \            letter_grades.append('A')\n        elif grade >= 3.3:\n         \
    \   letter_grades.append('A-')\n        elif grade >= 3.0:\n            letter_grades.append('B+')\n\
    \        elif grade >= 2.7:\n            letter_grades.append('B')\n        elif\
    \ grade >= 2.3:\n            letter_grades.append('B-')\n        elif grade >=\
    \ 2.0:\n            letter_grades.append('C+')\n        elif grade >= 1.7:\n \
    \           letter_grades.append('C')\n        elif grade >= 1.3:\n          \
    \  letter_grades.append('C-')\n        elif grade >= 1.0:\n            letter_grades.append('D+')\n\
    \        elif grade >= 0.7:\n            letter_grades.append('D')\n        elif\
    \ grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n     \
    \       letter_grades.append('E')\n    return letter_grades\n\nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    # Write your code here\n    pass\n", "    letter_grades\
    \ = []\n    for grade in grades:\n        if grade == 4.0:\n            letter_grades.append('A+')\n\
    \        elif grade > 3.7:\n            letter_grades.append('A')\n        elif\
    \ grade > 3.3:\n            letter_grades.append('A-')\n        elif grade > 3.0:\n\
    \            letter_grades.append('B+')\n        elif grade > 2.7:\n         \
    \   letter_grades.append('B')\n        elif grade > 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade > 2.0:\n            letter_grades.append('C+')\n        elif\
    \ grade > 1.7:\n            letter_grades.append('C')\n        elif grade > 1.3:\n\
    \            letter_grades.append('C-')\n        elif grade > 1.0:\n         \
    \   letter_grades.append('D+')\n        elif grade > 0.7:\n            letter_grades.append('D')\n\
    \        elif grade > 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    return letter_grades\n\nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", '    pass', "    # Write your code here\n    pass\n\n",
  "    # Write your code here\n    pass\n", "    # Your code here\n    pass\n", " \
    \   # Write your code here\n    pass\n", "    # Write your code here\n    pass\n\
    \n", "    # Write your code here\n    pass\n", "    # YOUR CODE HERE\n    pass\n",
  "    # your code here\n    pass\n\n", "    # your code here\n    return ['']*len(grades)\n",
  "    # Write your code here\n    pass\n", "    # Write your code here\n    pass\n",
  "    # your code here\n    pass\n\n", "    # your code here\n    pass\n\n", "  \
    \  # Your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  "    # your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n", '    pass', "    pass\n", "    # Write\
    \ your code here\n    pass\n", "    # your code here\n    pass\n\n", "    # Your\
    \ code here\n    pass\n\n", "    # Write your code here\n    pass\n", "    # your\
    \ code here\n    pass\n\n", "    # Write your code here\n    pass\n", "    # Write\
    \ your code here\n    pass\n", "    # your code here\n    pass\n\n", "    # Write\
    \ your code here\n    pass\n\n", "    # Write your code here\n    pass\n", " \
    \   # Write your code here\n    pass\n", "    # YOUR CODE HERE\n    pass\n\n",
  "    # your code here\n    pass\n\n", "    # YOUR CODE HERE\n    pass\n", "    #\
    \ Write your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    letter_grades = []\n    for grade in grades:\n\
    \        if grade >= 4.0:\n            letter_grades.append('A+')\n        elif\
    \ grade >= 3.7:\n            letter_grades.append('A')\n        elif grade >=\
    \ 3.3:\n            letter_grades.append('A-')\n        elif grade >= 3.0:\n \
    \           letter_grades.append('B+')\n        elif grade >= 2.7:\n         \
    \   letter_grades.append('B')\n        elif grade >= 2.3:\n            letter_grades.append('B-')\n\
    \        elif grade >= 2.0:\n            letter_grades.append('C+')\n        elif\
    \ grade >= 1.7:\n            letter_grades.append('C')\n        elif grade >=\
    \ 1.3:\n            letter_grades.append('C-')\n        elif grade >= 1.0:\n \
    \           letter_grades.append('D+')\n        elif grade >= 0.7:\n         \
    \   letter_grades.append('D')\n        elif grade >= 0.0:\n            letter_grades.append('D-')\n\
    \        else:\n            letter_grades.append('E')\n    return letter_grades\n",
  "    # Write your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n", "    # Write your code here\n    return\
    \ []\n\n", "    # Write your code here\n    pass\n", "    # Write your code here\n\
    \    pass\n", "    # Write your code here\n    pass\n", "    # Write your code\
    \ here\n    pass\n", "    # write your code here\n    pass\n", "    grades_list\
    \ = []\n    for i in grades:\n        if i >= 4.0:\n            grades_list.append('A+')\n\
    \        elif i >= 3.7:\n            grades_list.append('A')\n        elif i >=\
    \ 3.3:\n            grades_list.append('A-')\n        elif i >= 3.0:\n       \
    \     grades_list.append('B+')\n        elif i >= 2.7:\n            grades_list.append('B')\n\
    \        elif i >= 2.3:\n            grades_list.append('B-')\n        elif i\
    \ >= 2.0:\n            grades_list.append('C+')\n        elif i >= 1.7:\n    \
    \        grades_list.append('C')\n        elif i >= 1.3:\n            grades_list.append('C-')\n\
    \        elif i >= 1.0:\n            grades_list.append('D+')\n        elif i\
    \ >= 0.7:\n            grades_list.append('D')\n        elif i >= 0.0:\n     \
    \       grades_list.append('D-')\n        else:\n            grades_list.append('E')\n\
    \    return grades_list\n\nprint(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))",
  "    # Your code here\n    pass\n", "    # Your code here\n    pass\n", "    # Write\
    \ your code here\n    pass\n\n", "    pass\n", "    # your code here\n    pass\n\
    \n", "    # your code here\n    pass\n", "    # your code here\n    pass\n", " \
    \   # Write your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  '    pass', "    # Write your code here\n    pass\n", "    # Write your code here\n\
    \    pass\n", "    # your code here\n    pass\n\n", "    pass\n", "    # Write\
    \ your code here\n    pass\n", "    # your code here\n    pass\n\n", "    # Write\
    \ your code here\n    pass\n", "    # Your code here\n    pass\n", "    # Write\
    \ your code here\n    pass\n", "    # your code here\n    return []\n", "    #\
    \ your code here\n    pass\n\n", "    # Write your code here\n    pass\n", " \
    \   grades_list = []\n    for grade in grades:\n        if grade == 4.0:\n   \
    \         grades_list.append('A+')\n        elif grade > 3.7:\n            grades_list.append('A')\n\
    \        elif grade > 3.3:\n            grades_list.append('A-')\n        elif\
    \ grade > 3.0:\n            grades_list.append('B+')\n        elif grade > 2.7:\n\
    \            grades_list.append('B')\n        elif grade > 2.3:\n            grades_list.append('B-')\n\
    \        elif grade > 2.0:\n            grades_list.append('C+')\n        elif\
    \ grade > 1.7:\n            grades_list.append('C')\n        elif grade > 1.3:\n\
    \            grades_list.append('C-')\n        elif grade > 1.0:\n           \
    \ grades_list.append('D+')\n        elif grade > 0.7:\n            grades_list.append('D')\n\
    \        elif grade > 0.0:\n            grades_list.append('D-')\n        elif\
    \ grade == 0.0:\n            grades_list.append('E')\n    return grades_list\n\
    \nprint(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))", "    # Write your code\
    \ here\n    pass\n", "    grades_list = []\n    for grade in grades:\n       \
    \ if grade >= 4.0:\n            grades_list.append('A+')\n        elif grade >=\
    \ 3.7:\n            grades_list.append('A')\n        elif grade >= 3.3:\n    \
    \        grades_list.append('A-')\n        elif grade >= 3.0:\n            grades_list.append('B+')\n\
    \        elif grade >= 2.7:\n            grades_list.append('B')\n        elif\
    \ grade >= 2.3:\n            grades_list.append('B-')\n        elif grade >= 2.0:\n\
    \            grades_list.append('C+')\n        elif grade >= 1.7:\n          \
    \  grades_list.append('C')\n        elif grade >= 1.3:\n            grades_list.append('C-')\n\
    \        elif grade >= 1.0:\n            grades_list.append('D+')\n        elif\
    \ grade >= 0.7:\n            grades_list.append('D')\n        elif grade >= 0.0:\n\
    \            grades_list.append('D-')\n        else:\n            grades_list.append('E')\n\
    \    return grades_list\n\nprint(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))",
  "    # Your code here\n    pass\n", "    # your code here\n    pass\n\n", "    #\
    \ Write your code here\n    pass\n\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n", "    # Write your code here\n    pass\n\
    \n", "    # Write your code here\n    pass\n", "    # your code here\n    return\
    \ []\n\n", "    # your code here\n    pass\n", "    # Your code here\n    pass\n",
  "    # Write your code here\n    pass\n", "    # Write your code here\n    pass\n\
    \n", "    # Write your code here\n    pass\n\n", "    return [\n        'A+' if\
    \ gpa == 4.0 else\n        'A' if gpa > 3.7 else\n        'A-' if gpa > 3.3 else\n\
    \        'B+' if gpa > 3.0 else\n        'B' if gpa > 2.7 else\n        'B-' if\
    \ gpa > 2.3 else\n        'C+' if gpa > 2.0 else\n        'C' if gpa > 1.7 else\n\
    \        'C-' if gpa > 1.3 else\n        'D+' if gpa > 1.0 else\n        'D' if\
    \ gpa > 0.7 else\n        'D-' if gpa > 0.0 else\n        'E'\n        for gpa\
    \ in grades\n    ]\n", "    letter_grades = []\n    for grade in grades:\n   \
    \     if grade >= 4.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 3.7:\n            letter_grades.append('A')\n        elif grade >= 3.3:\n\
    \            letter_grades.append('A-')\n        elif grade >= 3.0:\n        \
    \    letter_grades.append('B+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 2.0:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    return letter_grades\n\nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    # Write your code here\n    pass\n", "    grades_letter\
    \ = []\n    for grade in grades:\n        if grade == 4.0:\n            grades_letter.append('A+')\n\
    \        elif grade >= 3.7:\n            grades_letter.append('A')\n        elif\
    \ grade >= 3.3:\n            grades_letter.append('A-')\n        elif grade >=\
    \ 3.0:\n            grades_letter.append('B+')\n        elif grade >= 2.7:\n \
    \           grades_letter.append('B')\n        elif grade >= 2.3:\n          \
    \  grades_letter.append('B-')\n        elif grade >= 2.0:\n            grades_letter.append('C+')\n\
    \        elif grade >= 1.7:\n            grades_letter.append('C')\n        elif\
    \ grade >= 1.3:\n            grades_letter.append('C-')\n        elif grade >=\
    \ 1.0:\n            grades_letter.append('D+')\n        elif grade >= 0.7:\n \
    \           grades_letter.append('D')\n        elif grade >= 0.0:\n          \
    \  grades_letter.append('D-')\n        else:\n            grades_letter.append('E')\n\
    \    return grades_letter\n\nprint(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))",
  "    # Write your code here\n    pass\n", "    # Write your code here\n    pass\n",
  "    # Your code here\n    pass\n", "    # Write your code here\n    pass\n\n",
  "    # your code here\n    pass\n", "    # Write your code here\n    pass\n", " \
    \   # Write your code here\n    pass\n", "    # your code here\n    pass\n", " \
    \   # Write your code here\n    return []\n", "    # YOUR CODE HERE\n    return\
    \ []\n", "    # your code here\n    pass\n\n", "    # Your code here\n    pass\n\
    \n", "    # Write your code here\n    pass\n\n", "    # Your code here\n    pass\n",
  "    letter_grade = []\n    for grade in grades:\n        if grade == 4.0:\n   \
    \         letter_grade.append('A+')\n        elif grade > 3.7:\n            letter_grade.append('A')\n\
    \        elif grade > 3.3:\n            letter_grade.append('A-')\n        elif\
    \ grade > 3.0:\n            letter_grade.append('B+')\n        elif grade > 2.7:\n\
    \            letter_grade.append('B')\n        elif grade > 2.3:\n           \
    \ letter_grade.append('B-')\n        elif grade > 2.0:\n            letter_grade.append('C+')\n\
    \        elif grade > 1.7:\n            letter_grade.append('C')\n        elif\
    \ grade > 1.3:\n            letter_grade.append('C-')\n        elif grade > 1.0:\n\
    \            letter_grade.append('D+')\n        elif grade > 0.7:\n          \
    \  letter_grade.append('D')\n        elif grade > 0.0:\n            letter_grade.append('D-')\n\
    \        else:\n            letter_grade.append('E')\n    return letter_grade\n\
    \nprint(numerical_letter_grade([4.0, 3, 1.7, 2, 3.5]))", "    pass\n", "    pass\n",
  "    # your code here\n    pass\n", "    letter_grade = []\n    for grade in grades:\n\
    \        if grade == 4.0:\n            letter_grade.append('A+')\n        elif\
    \ grade > 3.7:\n            letter_grade.append('A')\n        elif grade > 3.3:\n\
    \            letter_grade.append('A-')\n        elif grade > 3.0:\n          \
    \  letter_grade.append('B+')\n        elif grade > 2.7:\n            letter_grade.append('B')\n\
    \        elif grade > 2.3:\n            letter_grade.append('B-')\n        elif\
    \ grade > 2.0:\n            letter_grade.append('C+')\n        elif grade > 1.7:\n\
    \            letter_grade.append('C')\n        elif grade > 1.3:\n           \
    \ letter_grade.append('C-')\n        elif grade > 1.0:\n            letter_grade.append('D+')\n\
    \        elif grade > 0.7:\n            letter_grade.append('D')\n        elif\
    \ grade > 0.0:\n            letter_grade.append('D-')\n        else:\n       \
    \     letter_grade.append('E')\n    return letter_grade\n\nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    # Write your code here\n    pass\n\n", "    # Write\
    \ your code here\n    pass\n", "    # your code here\n    pass\n", "    # Write\
    \ your code here\n    # Hint: You can use a for loop to iterate over the list\
    \ of GPAs\n    # Hint: You can use an if statement to check if the GPA is greater\
    \ than a certain number\n    # Hint: You can use an else statement to check if\
    \ the GPA is less than a certain number\n    # Hint: You can use an elif statement\
    \ to check if the GPA is greater than a certain number\n    # Hint: You can use\
    \ an elif statement to check if the GPA is less than a certain number\n    # Hint:\
    \ You can use an elif statement to check if the GPA is greater than a certain\
    \ number\n    # Hint: You can use an elif statement to check if the GPA is less\
    \ than a certain number\n    # Hint: You can use an elif statement to check if\
    \ the GPA is greater than a certain number\n    # Hint: You can use an elif statement\
    \ to check if the GPA is less than a certain number\n    # Hint: You can use an\
    \ elif statement to check if the GPA is greater than a certain number\n    # Hint:\
    \ You can use an elif statement to check if the GPA is less than a certain number\n\
    \    # Hint: You can use an elif statement to check if the GPA is greater than\
    \ a certain number\n    # Hint: You can use an elif statement to check if the\
    \ GPA is less than a certain number\n    # Hint: You can use an elif statement\
    \ to check if the GPA is greater than a certain number\n    # Hint: You can use\
    \ an elif statement to check if the GPA is less than a certain number\n    # Hint:\
    \ You can use an elif statement to check if the GPA is greater than a certain\
    \ number\n    # Hint: You can use an elif statement to check if the GPA is less\
    \ than a certain number\n    # Hint: You can use an elif statement to check if\
    \ the GPA is greater than a certain number\n    # Hint: You can use an elif statement\
    \ to check if the GPA is less than a certain number\n    # Hint: You can use an\
    \ elif statement to check if the GPA is greater than a certain number\n    # Hint:\
    \ You can use an elif statement to check if the GPA is less than a certain number\n\
    \    # Hint:", "    # Your code here\n    return []\n", "    # Write your code\
    \ here\n    # Hint: You can use a for loop to iterate through the list of GPAs\n\
    \    # and use if-else statements to compare the GPAs with the table above\n \
    \   # to get the letter grades.\n    pass\n\n", "    pass\n", "    # Write your\
    \ code here\n    pass\n", "    # Write your code here\n    pass\n", "    # Your\
    \ code here\n    pass\n", "    # Write your code here\n    grades_letter = []\n\
    \    for grade in grades:\n        if grade >= 4.0:\n            grades_letter.append('A+')\n\
    \        elif grade >= 3.7:\n            grades_letter.append('A')\n        elif\
    \ grade >= 3.3:\n            grades_letter.append('A-')\n        elif grade >=\
    \ 3.0:\n            grades_letter.append('B+')\n        elif grade >= 2.7:\n \
    \           grades_letter.append('B')\n        elif grade >= 2.3:\n          \
    \  grades_letter.append('B-')\n        elif grade >= 2.0:\n            grades_letter.append('C+')\n\
    \        elif grade >= 1.7:\n            grades_letter.append('C')\n        elif\
    \ grade >= 1.3:\n            grades_letter.append('C-')\n        elif grade >=\
    \ 1.0:\n            grades_letter.append('D+')\n        elif grade >= 0.7:\n \
    \           grades_letter.append('D')\n        elif grade >= 0.0:\n          \
    \  grades_letter.append('D-')\n        else:\n            grades_letter.append('E')\n\
    \    return grades_letter\n", "    # Write your code here\n    pass\n", "    #\
    \ Write your code here\n    pass\n", "    # write your code here\n    pass\n",
  "    # your code here\n    pass\n\n\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n", "    # Write your code here\n    pass\n\
    \n", "    # Write your code here\n    pass\n\n", "    pass\n", "    # Write your\
    \ code here\n    pass\n", "    # Create a dictionary of GPA and letter grade\n\
    \    grade_dict = {4.0: 'A+', 3.7: 'A', 3.3: 'A-', 3.0: 'B+', 2.7: 'B', 2.3: 'B-',\
    \ 2.0: 'C+', 1.7: 'C', 1.3: 'C-', 1.0: 'D+', 0.7: 'D', 0.0: 'D-', -1.0: 'E'}\n\
    \    # Create a list of letter grades\n    letter_grades = []\n    # Iterate through\
    \ the list of GPAs\n    for grade in grades:\n        # Iterate through the dictionary\n\
    \        for key in grade_dict:\n            # If the GPA is greater than or equal\
    \ to the key, append the value to the list of letter grades\n            if grade\
    \ >= key:\n                letter_grades.append(grade_dict[key])\n           \
    \     break\n    return letter_grades", "    # Your code here\n    pass\n\n",
  "    # your code here\n    pass\n", "    # Write your code here\n    pass\n", " \
    \   # Write your code here\n    pass\n", "    # Write your code here\n    pass\n",
  "    # Write your code here\n    pass\n", "    grades_list = []\n    for grade in\
    \ grades:\n        if grade >= 4.0:\n            grades_list.append('A+')\n  \
    \      elif grade >= 3.7:\n            grades_list.append('A')\n        elif grade\
    \ >= 3.3:\n            grades_list.append('A-')\n        elif grade >= 3.0:\n\
    \            grades_list.append('B+')\n        elif grade >= 2.7:\n          \
    \  grades_list.append('B')\n        elif grade >= 2.3:\n            grades_list.append('B-')\n\
    \        elif grade >= 2.0:\n            grades_list.append('C+')\n        elif\
    \ grade >= 1.7:\n            grades_list.append('C')\n        elif grade >= 1.3:\n\
    \            grades_list.append('C-')\n        elif grade >= 1.0:\n          \
    \  grades_list.append('D+')\n        elif grade >= 0.7:\n            grades_list.append('D')\n\
    \        elif grade >= 0.0:\n            grades_list.append('D-')\n        else:\n\
    \            grades_list.append('E')\n    return grades_list\n\nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    # Write your code here\n    pass\n", "    # YOUR CODE\
    \ HERE\n    raise NotImplementedError()\n", "    # your code here\n    pass\n",
  "    # Write your code here\n    pass\n", "    pass\n", "    # Write your code here\n\
    \    pass\n\n", "    # Write your code here\n    pass\n", "    # Write your code\
    \ here\n    pass\n", "    letter_grades = []\n    for grade in grades:\n     \
    \   if grade >= 4.0:\n            letter_grades.append('A+')\n        elif grade\
    \ >= 3.7:\n            letter_grades.append('A')\n        elif grade >= 3.3:\n\
    \            letter_grades.append('A-')\n        elif grade >= 3.0:\n        \
    \    letter_grades.append('B+')\n        elif grade >= 2.7:\n            letter_grades.append('B')\n\
    \        elif grade >= 2.3:\n            letter_grades.append('B-')\n        elif\
    \ grade >= 2.0:\n            letter_grades.append('C+')\n        elif grade >=\
    \ 1.7:\n            letter_grades.append('C')\n        elif grade >= 1.3:\n  \
    \          letter_grades.append('C-')\n        elif grade >= 1.0:\n          \
    \  letter_grades.append('D+')\n        elif grade >= 0.7:\n            letter_grades.append('D')\n\
    \        elif grade >= 0.0:\n            letter_grades.append('D-')\n        else:\n\
    \            letter_grades.append('E')\n    return letter_grades\n\nprint(numerical_letter_grade([4.0,\
    \ 3, 1.7, 2, 3.5]))", "    # Write your code here\n    pass\n", "    # Write your\
    \ code here\n    pass\n\n", "    # Write your code here\n    pass\n", "    # Write\
    \ your code here\n    pass\n", "    # Write your code here\n    pass\n", "   \
    \ # Write your code here\n    pass\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

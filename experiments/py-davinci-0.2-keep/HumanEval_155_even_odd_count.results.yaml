name: HumanEval_155_even_odd_count
language: python
results:
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9rrk139.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp_9rrk139.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8sgy5c2o.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp8sgy5c2o.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyrg35q95.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpyrg35q95.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphuvhqrv5.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmphuvhqrv5.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6pjs4wak.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp6pjs4wak.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7i8crf8i.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp7i8crf8i.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp48wbcisc.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp48wbcisc.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjuokkv9k.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpjuokkv9k.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsql93p2k.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsql93p2k.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwn_7cd0p.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpwn_7cd0p.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n   \
    \         even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \nprint(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp04bk6xhw.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp04bk6xhw.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7mbtte6p.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp7mbtte6p.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj_zmifjn.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpj_zmifjn.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpapxsx9tk.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpapxsx9tk.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptm3g417a.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmptm3g417a.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even, odd =\
    \ 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpirrqby85.py\", line\
    \ 18, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpirrqby85.py\"\
    , line 12, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even, odd =\
    \ 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9xm1azd2.py\", line\
    \ 18, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp9xm1azd2.py\"\
    , line 12, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsy_aq300.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsy_aq300.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwg3lim8m.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpwg3lim8m.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpygqtapav.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpygqtapav.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7fpxy5iw.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp7fpxy5iw.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpizs7wisr.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpizs7wisr.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpptgotzdl.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpptgotzdl.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp72xxfquv.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp72xxfquv.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    if num < 0:\n        num = -num\n    while num > 0:\n       \
    \ if num % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n\
    \        num = num // 10\n    return (even, odd)\n\ndef check(candidate):\n  \
    \  assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc0f2ci6o.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpc0f2ci6o.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpc0f2ci6o.py\", line\
    \ 30, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplu_6b9of.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmplu_6b9of.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm7kmubo2.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpm7kmubo2.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg05_og9v.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpg05_og9v.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc71_m20q.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpc71_m20q.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsp4l6r39.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsp4l6r39.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv3awdn0p.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpv3awdn0p.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsxlhi5n_.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsxlhi5n_.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even, odd =\
    \ 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n        \
    \    even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\
    print(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps61sl3rn.py\", line\
    \ 18, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmps61sl3rn.py\"\
    , line 12, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpac7zg9i7.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpac7zg9i7.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb611lj5z.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpb611lj5z.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjx38farg.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpjx38farg.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpttwn22.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpvpttwn22.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx4dfiq7k.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpx4dfiq7k.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprsceflp_.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmprsceflp_.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa_sx5o3u.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpa_sx5o3u.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe1faxa5x.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpe1faxa5x.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkwlr33n1.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpkwlr33n1.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1kctd55.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpf1kctd55.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw3p_dk70.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpw3p_dk70.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_mejrjpm.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp_mejrjpm.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_mejrjpm.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp_mejrjpm.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0d1i77fi.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp0d1i77fi.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0dypaju3.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp0dypaju3.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    while num != 0:\n        if num % 2 == 0:\n      \
    \      even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbq12q2kv.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpbq12q2kv.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf61jsiy4.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpf61jsiy4.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpquzz0750.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpquzz0750.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6uwxev2a.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp6uwxev2a.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph_w13fi1.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmph_w13fi1.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n   \
    \         even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \nprint(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr23et15t.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpr23et15t.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzhs6vf3n.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpzhs6vf3n.py\", line 29,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpzhs6vf3n.py\", line\
    \ 20, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpzhs6vf3n.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp50qv7gjv.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp50qv7gjv.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmjt22zz4.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpmjt22zz4.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmjt22zz4.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpmjt22zz4.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpehyvl_h1.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpehyvl_h1.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even, odd =\
    \ 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6t8kk5xd.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp6t8kk5xd.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6t8kk5xd.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp6t8kk5xd.py\"\
    , line 12, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgcq7zi5i.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpgcq7zi5i.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpga309es9.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpga309es9.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiaj1vt_x.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpiaj1vt_x.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn193q3ro.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpn193q3ro.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi40c2je5.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpi40c2je5.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwmr4i2f0.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpwmr4i2f0.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6r4a7ur8.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp6r4a7ur8.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbm7ci269.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpbm7ci269.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnrmqc1d8.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpnrmqc1d8.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjit1wa8g.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpjit1wa8g.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    num = abs(num)\n    while num > 0:\n        if num\
    \ % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n        num = num // 10\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: "(1, 1)\n(1, 2)\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4lgdfy83.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp4lgdfy83.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4lgdfy83.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd6vo_ih3.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpd6vo_ih3.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp20ej942t.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp20ej942t.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbigdjcbz.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpbigdjcbz.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwaggfjhs.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpwaggfjhs.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2nxjq10p.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp2nxjq10p.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplxmoaskj.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmplxmoaskj.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpadmiqupq.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpadmiqupq.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprfpmfrwi.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmprfpmfrwi.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgf1d7c4_.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpgf1d7c4_.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpovegq7fv.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpovegq7fv.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvf0oco_n.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpvf0oco_n.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw3v500x2.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpw3v500x2.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpff9o7g3x.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpff9o7g3x.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp35ai4wm6.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp35ai4wm6.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6x12tw1n.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp6x12tw1n.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzmtr1s4g.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpzmtr1s4g.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgo9ck0aa.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpgo9ck0aa.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwl9q7hnn.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpwl9q7hnn.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppf_k_zyl.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmppf_k_zyl.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfaa5zq0a.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpfaa5zq0a.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even, odd =\
    \ 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n        \
    \    even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\
    print(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpws812hoa.py\", line\
    \ 18, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpws812hoa.py\"\
    , line 12, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbznc6w7v.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpbznc6w7v.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkvownwlv.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpkvownwlv.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4e2kg0uo.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp4e2kg0uo.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkvlv7f5m.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpkvlv7f5m.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl4yar2y_.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpl4yar2y_.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_vypgt3u.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp_vypgt3u.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even, odd =\
    \ 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj4395laz.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj4395laz.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpj4395laz.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpj4395laz.py\"\
    , line 12, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr217uv88.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpr217uv88.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzukvo2ym.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpzukvo2ym.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnw5l48oz.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpnw5l48oz.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphtzda82h.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmphtzda82h.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjous1kxr.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpjous1kxr.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfr_t4wes.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpfr_t4wes.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n   \
    \         even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \nprint(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp83itujf8.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp83itujf8.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp03t5djtd.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp03t5djtd.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_0280oo.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp5_0280oo.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd7k07rst.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpd7k07rst.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5jer327l.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp5jer327l.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpso36fsbv.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpso36fsbv.py\", line 29,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpso36fsbv.py\", line\
    \ 20, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpso36fsbv.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl4dyn4yn.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpl4dyn4yn.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsj8fj74b.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsj8fj74b.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8pxrnrat.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp8pxrnrat.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmputrmuvy5.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmputrmuvy5.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_clglrh.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp4_clglrh.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    if num < 0:\n        num = -num\n    while num:\n\
    \        if num % 2 == 0:\n            even_count += 1\n        else:\n      \
    \      odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\n\
    print(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: "(1, 1)\n(1, 2)\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwjzlsgtb.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpwjzlsgtb.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwjzlsgtb.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo4fww5ep.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpo4fww5ep.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_5_u964o.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp_5_u964o.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjrng7rrv.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpjrng7rrv.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjrng7rrv.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpjrng7rrv.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnv3phpch.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpnv3phpch.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1neie6ng.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp1neie6ng.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprei0_byg.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmprei0_byg.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdwm2idh4.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpdwm2idh4.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_a_8_huc.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp_a_8_huc.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7_vm974r.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp7_vm974r.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp7_vm974r.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp7_vm974r.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps21uc480.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmps21uc480.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxo1rufr_.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpxo1rufr_.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqolyw97o.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpqolyw97o.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpttyv4vfc.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpttyv4vfc.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqjulc29s.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpqjulc29s.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb32dgr4f.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpb32dgr4f.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdttp0vxl.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpdttp0vxl.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8nc2342d.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp8nc2342d.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even, odd =\
    \ 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n        \
    \    even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\
    print(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps311e77y.py\", line\
    \ 18, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmps311e77y.py\"\
    , line 12, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8wf9g669.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp8wf9g669.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp095tnyys.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp095tnyys.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpthzehbag.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpthzehbag.py\", line 29,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpthzehbag.py\", line\
    \ 20, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpthzehbag.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2t41d93f.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp2t41d93f.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwmt_7ya4.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpwmt_7ya4.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprs0dzl73.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmprs0dzl73.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8moz2izo.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp8moz2izo.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8moz2izo.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp8moz2izo.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj24ye6iz.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpj24ye6iz.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp15_g__mw.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp15_g__mw.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp51_3t5jl.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp51_3t5jl.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    if num < 0:\n        num = -num\n    while num > 0:\n\
    \        if num % 2 == 0:\n            even_count += 1\n        else:\n      \
    \      odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\
    \nprint(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  stdout: "(1, 1)\n(1, 2)\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm753sox3.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpm753sox3.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpm753sox3.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxfob4ckf.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpxfob4ckf.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbhe9p0m4.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpbhe9p0m4.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr83yscbs.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpr83yscbs.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr73cac4c.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpr73cac4c.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxw1mgzh8.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpxw1mgzh8.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsntdjwpw.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsntdjwpw.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgv8t_8bl.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpgv8t_8bl.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe04s2r06.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpe04s2r06.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphydjn724.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmphydjn724.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0vuxxpr7.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp0vuxxpr7.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4nepocc6.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp4nepocc6.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphj1v1yxk.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmphj1v1yxk.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw88l2nmd.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpw88l2nmd.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiogkp37c.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpiogkp37c.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvsfb7jjo.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpvsfb7jjo.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgzysmj1x.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpgzysmj1x.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp902vvu5t.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp902vvu5t.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp44yz1mzl.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp44yz1mzl.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpauku6b__.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpauku6b__.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_t_hspz0.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp_t_hspz0.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjenewmj.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpbjenewmj.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    num = abs(num)\n    while num > 0:\n        digit\
    \ = num % 10\n        if digit % 2 == 0:\n            even_count += 1\n      \
    \  else:\n            odd_count += 1\n        num = num // 10\n    return even_count,\
    \ odd_count\n\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n  \
    \  assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n   \
    \ assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0o3vxu4f.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp0o3vxu4f.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp0o3vxu4f.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7wz3gkgp.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp7wz3gkgp.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_igl9hts.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp_igl9hts.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5kgsxha2.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp5kgsxha2.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5hypjzkm.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp5hypjzkm.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyb0aa5um.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpyb0aa5um.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc_28ha31.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpc_28ha31.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp12l8zxei.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp12l8zxei.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppm8x2dn6.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmppm8x2dn6.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxrnkt5gb.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpxrnkt5gb.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprhaqu08m.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmprhaqu08m.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpazizq4ht.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpazizq4ht.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcaybqqd_.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpcaybqqd_.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpcaybqqd_.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpcaybqqd_.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpga2d87qa.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpga2d87qa.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps6jk8zey.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmps6jk8zey.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsui43jn1.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsui43jn1.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphm_7ol13.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmphm_7ol13.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv76zymmw.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpv76zymmw.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ip5k6i7.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp_ip5k6i7.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjehhfo8b.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpjehhfo8b.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj752oa5d.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpj752oa5d.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprby0p89f.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmprby0p89f.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvxs6lkvu.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpvxs6lkvu.py\", line 30,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvxs6lkvu.py\", line\
    \ 21, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpvxs6lkvu.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr3gad779.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpr3gad779.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuonyj72o.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpuonyj72o.py\", line 29,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpuonyj72o.py\", line\
    \ 20, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpuonyj72o.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp2ygf1gg.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpp2ygf1gg.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprlxwk9rw.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmprlxwk9rw.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pgyqpex.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp1pgyqpex.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1c9djoo7.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp1c9djoo7.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe2_1yvix.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpe2_1yvix.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ve8as4v.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp4ve8as4v.py\"\
    , line 13, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even_count =\
    \ 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvkjgl1z5.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpvkjgl1z5.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpstgrr0vz.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpstgrr0vz.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==>\
    \ (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    even = 0\n \
    \   odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo1d3r1_y.py\", line\
    \ 19, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpo1d3r1_y.py\"\
    , line 13, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception

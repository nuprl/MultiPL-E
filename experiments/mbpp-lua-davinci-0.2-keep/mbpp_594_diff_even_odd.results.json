{
  "name": "mbpp_594_diff_even_odd",
  "language": "lua",
  "prompt": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = nil, nil\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = nil, nil\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_num = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_num = v\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven_num = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd_num = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for _, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for _, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nprint(diff_even_odd({1,2,3,4,5,6,7,8,9}))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "1\n.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = nil, nil\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd\n    for _, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for _, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 == 1 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = nil, nil\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 == 1 then\n      odd = v\n      break\n    end\n  end\n  if even and odd then\n    return even - odd\n  else\n    return 0\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for _, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for _, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tlocal found_even, found_odd = false, false\n\tfor i, v in ipairs(list1) do\n\t\tif not found_even and v % 2 == 0 then\n\t\t\teven = v\n\t\t\tfound_even = true\n\t\telseif not found_odd and v % 2 == 1 then\n\t\t\todd = v\n\t\t\tfound_odd = true\n\t\tend\n\t\tif found_even and found_odd then\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = nil\n    local odd = nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            if even == nil then\n                even = v\n            end\n        else\n            if odd == nil then\n                odd = v\n            end\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = list1[1], list1[1]\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 == 1 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v%2 == 0 then\n\t\t\teven_num = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i,v in ipairs(list1) do\n\t\tif v%2 ~= 0 then\n\t\t\todd_num = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nprint(diff_even_odd({1,2,3,4,5,6,7,8,9,10}))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "1\n.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even_num = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd_num = list1[i]\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tlocal even_found = false\n\tlocal odd_found = false\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 and not even_found then\n\t\t\teven_num = v\n\t\t\teven_found = true\n\t\telseif v % 2 == 1 and not odd_found then\n\t\t\todd_num = v\n\t\t\todd_found = true\n\t\tend\n\t\tif even_found and odd_found then\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = nil\n    local odd = nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_num = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_num = v\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for _, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for _, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 == 1 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tlocal flag = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven_num = v\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\treturn nil\n\tend\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd_num = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return math.abs(even - odd)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_index = 1\n    local odd_index = 1\n    local even_num = 0\n    local odd_num = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_num = v\n            even_index = i\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_num = v\n            odd_index = i\n            break\n        end\n    end\n    if even_index < odd_index then\n        return even_num - odd_num\n    else\n        return odd_num - even_num\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84z4oyl4.lua:31: expected: 3, actual: -3\nstack traceback:\n\t/tmp/tmp84z4oyl4.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even_num = 0\n  local odd_num = 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even_num = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd_num = v\n      break\n    end\n  end\n  return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_num = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_num = v\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for _, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for _, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even_num = 0\n  local odd_num = 0\n  for i,v in ipairs(list1) do\n    if v % 2 == 0 then\n      even_num = v\n      break\n    end\n  end\n  for i,v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd_num = v\n      break\n    end\n  end\n  return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tlocal even_flag = false\n\tlocal odd_flag = false\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 and even_flag == false then\n\t\t\teven_num = list1[i]\n\t\t\teven_flag = true\n\t\telseif list1[i] % 2 ~= 0 and odd_flag == false then\n\t\t\todd_num = list1[i]\n\t\t\todd_flag = true\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  local diff = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  diff = even - odd\n  return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even_index = 1\n  local odd_index = 1\n  local even_number = 0\n  local odd_number = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even_number = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd_number = list1[i]\n      break\n    end\n  end\n  return even_number - odd_number\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    for i,v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_num = v\n            break\n        end\n    end\n    for i,v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_num = v\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 == 1 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for _, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for _, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return math.abs(even - odd)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = nil, nil\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tlocal flag = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\tif flag == 0 then\n\t\t\t\teven = v\n\t\t\t\tflag = 1\n\t\t\tend\n\t\telse\n\t\t\tif flag == 1 then\n\t\t\t\todd = v\n\t\t\t\tflag = 2\n\t\t\tend\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2zjtkd0b.lua:26: expected: 1, actual: -1\nstack traceback:\n\t/tmp/tmp2zjtkd0b.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_num = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_num = v\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven_num = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd_num = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tlocal first_even = 0\n\tlocal first_odd = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\tif even == 0 then\n\t\t\t\tfirst_even = v\n\t\t\tend\n\t\t\teven = even + 1\n\t\telse\n\t\t\tif odd == 0 then\n\t\t\t\tfirst_odd = v\n\t\t\tend\n\t\t\todd = odd + 1\n\t\tend\n\tend\n\treturn first_even - first_odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    local even_flag = false\n    local odd_flag = false\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 and even_flag == false then\n            even_num = list1[i]\n            even_flag = true\n        elseif list1[i] % 2 ~= 0 and odd_flag == false then\n            odd_num = list1[i]\n            odd_flag = true\n        end\n        if even_flag == true and odd_flag == true then\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    local flag = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            if flag == 0 then\n                even = list1[i]\n                flag = 1\n            end\n        else\n            if flag == 0 then\n                odd = list1[i]\n                flag = 1\n            end\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqwl3m0up.lua:25: expected: 3, actual: -1\nstack traceback:\n\t/tmp/tmpqwl3m0up.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tlocal flag = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 and flag == 0 then\n\t\t\teven_num = list1[i]\n\t\t\tflag = 1\n\t\telseif list1[i] % 2 ~= 0 and flag == 0 then\n\t\t\todd_num = list1[i]\n\t\t\tflag = 1\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiyg5y7jv.lua:21: expected: 3, actual: -1\nstack traceback:\n\t/tmp/tmpiyg5y7jv.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = nil, nil\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 == 1 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_number = 0\n    local odd_number = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_number = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_number = v\n            break\n        end\n    end\n    return even_number - odd_number\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v%2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i,v in ipairs(list1) do\n\t\tif v%2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = nil, nil\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 1 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tlocal even_flag = false\n\tlocal odd_flag = false\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 and even_flag == false then\n\t\t\teven_num = v\n\t\t\teven_flag = true\n\t\telseif v % 2 == 1 and odd_flag == false then\n\t\t\todd_num = v\n\t\t\todd_flag = true\n\t\tend\n\tend\n\treturn even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = nil, nil\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 == 1 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tlocal first = true\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\tif first then\n\t\t\t\teven = v\n\t\t\t\tfirst = false\n\t\t\tend\n\t\telse\n\t\t\tif first then\n\t\t\t\todd = v\n\t\t\t\tfirst = false\n\t\t\tend\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4pe_5zzw.lua:25: expected: 3, actual: -1\nstack traceback:\n\t/tmp/tmp4pe_5zzw.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for _, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for _, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    local diff = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    diff = even - odd\n    return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123506,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tlocal diff = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tdiff = even - odd\n\treturn diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123506,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = nil, nil\n\tfor _, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor _, v in ipairs(list1) do\n\t\tif v % 2 == 1 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123506,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 == 1 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123506,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even, odd = 0, 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    local flag = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            flag = 1\n            break\n        end\n    end\n    if flag == 0 then\n        return 0\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123506,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i, v in ipairs(list1) do\n    if v % 2 == 0 then\n      even = v\n      break\n    end\n  end\n  for i, v in ipairs(list1) do\n    if v % 2 ~= 0 then\n      odd = v\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even_num = 0\n    local odd_num = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even_num = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd_num = v\n            break\n        end\n    end\n    return even_num - odd_num\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for _, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for _, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even = 0\n  local odd = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd = list1[i]\n      break\n    end\n  end\n  return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i = 1, #list1 do\n        if list1[i] % 2 == 0 then\n            even = list1[i]\n            break\n        end\n    end\n    for i = 1, #list1 do\n        if list1[i] % 2 ~= 0 then\n            odd = list1[i]\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n  local even_number = 0\n  local odd_number = 0\n  for i = 1, #list1 do\n    if list1[i] % 2 == 0 then\n      even_number = list1[i]\n      break\n    end\n  end\n  for i = 1, #list1 do\n    if list1[i] % 2 ~= 0 then\n      odd_number = list1[i]\n      break\n    end\n  end\n  return even_number - odd_number\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123506,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = 0, 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even = 0\n    local odd = 0\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 ~= 0 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i,v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123505,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n\tlocal even, odd = 0, 0\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 == 0 then\n\t\t\teven = v\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i, v in ipairs(list1) do\n\t\tif v % 2 ~= 0 then\n\t\t\todd = v\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to find the difference of the first even and first odd number of a given list.\nlocal function diff_even_odd(list1)\n    local even, odd = nil, nil\n    for i, v in ipairs(list1) do\n        if v % 2 == 0 then\n            even = v\n            break\n        end\n    end\n    for i, v in ipairs(list1) do\n        if v % 2 == 1 then\n            odd = v\n            break\n        end\n    end\n    return even - odd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = diff_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 1)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509981,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
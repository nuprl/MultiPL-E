{
  "name": "mbpp_273_substract_elements",
  "language": "lua",
  "prompt": "-- Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.\nlocal function substract_elements(test_tup1, test_tup2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = substract_elements\n    lu.assertEquals(candidate({10, 4, 5}, {2, 5, 18}), {8, -1, -13})\n    lu.assertEquals(candidate({11, 2, 3}, {24, 45, 16}), {-13, -43, -13})\n    lu.assertEquals(candidate({7, 18, 9}, {10, 11, 12}), {-3, 7, -3})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal tup1 = {unpack(test_tup1)}\n\tlocal tup2 = {unpack(test_tup2)}\n\tlocal result = {}\n\tfor i = 1, #tup1 do\n\t\tresult[i] = tup1[i] - tup2[i]\n\tend\n\treturn result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal new_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tnew_tup[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        table.insert(result, test_tup1[i] - test_tup2[i])\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local tup = {}\n    for i = 1, #test_tup1 do\n        tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        table.insert(result, test_tup1[i] - test_tup2[i])\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local tup = {}\n    for i = 1, #test_tup1 do\n        tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result_tup = {}\n    for i = 1, #test_tup1 do\n        result_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local tup = {}\n    for i = 1, #test_tup1 do\n        tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return tup\nend",
    "    local tup1 = test_tup1\n    local tup2 = test_tup2\n    local tup3 = {}\n    for i = 1, #tup1 do\n        tup3[i] = tup1[i] - tup2[i]\n    end\n    return tup3\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "\tlocal new_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tnew_tup[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(test_tup1) do\n        result[i] = v - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal new_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tnew_tup[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn new_tup\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local tup = {}\n    for i = 1, #test_tup1 do\n        tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i=1,#test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "\tlocal result = {}\n\tfor i=1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal new_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tnew_tup[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local tup1 = test_tup1\n    local tup2 = test_tup2\n    local tup3 = {}\n    for i = 1, #tup1 do\n        tup3[i] = tup1[i] - tup2[i]\n    end\n    return tup3\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local new_tuple = {}\n    for i = 1, #test_tup1 do\n        new_tuple[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tuple\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local new_tup = {}\n  for i = 1, #test_tup1 do\n    new_tup[i] = test_tup1[i] - test_tup2[i]\n  end\n  return new_tup\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i=1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #test_tup1 do\n    result[i] = test_tup1[i] - test_tup2[i]\n  end\n  return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "\tlocal result = {}\n\tfor i = 1, #test_tup1 do\n\t\tresult[i] = test_tup1[i] - test_tup2[i]\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        result[i] = test_tup1[i] - test_tup2[i]\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        new_tup[i] = test_tup1[i] - test_tup2[i]\n    end\n    return new_tup\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup1 do\n        table.insert(new_tup, test_tup1[i] - test_tup2[i])\n    end\n    return new_tup\nend"
  ]
}
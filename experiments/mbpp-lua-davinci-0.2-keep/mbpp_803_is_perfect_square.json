{
  "name": "mbpp_803_is_perfect_square",
  "language": "lua",
  "prompt": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend",
    "    local x = math.floor(math.sqrt(n))\n    return x * x == n\nend",
    "  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend",
    "  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend",
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "    local s = math.sqrt(n)\n    return s * s == n\nend",
    "  local i = 1\n  while i * i < n do\n    i = i + 1\n  end\n  return i * i == n\nend",
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend",
    "\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend",
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "  local sqrt_n = math.sqrt(n)\n  local floor_sqrt_n = math.floor(sqrt_n)\n  return floor_sqrt_n * floor_sqrt_n == n\nend",
    "  if n < 0 then return false end\n  local s = math.floor(math.sqrt(n))\n  return s * s == n\nend",
    "    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend",
    "  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend",
    "  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend"
  ]
}
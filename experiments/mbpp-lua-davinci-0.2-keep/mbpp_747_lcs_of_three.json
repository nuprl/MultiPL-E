{
  "name": "mbpp_747_lcs_of_three",
  "language": "lua",
  "prompt": "-- Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\nlocal function lcs_of_three(X, Y, Z)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = lcs_of_three\n    lu.assertEquals(candidate('AGGT12', '12TXAYB', '12XBA'), 2)\n    lu.assertEquals(candidate('Reels', 'Reelsfor', 'ReelsforReels'), 5)\n    lu.assertEquals(candidate('abcd1e2', 'bc12ea', 'bd1ea'), 3)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        if i == 0 or j == 0 or k == 0 then\n          L[i][j][k] = 0\n        elseif X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z\n    local L = {}\n    for i = 0, m do\n        L[i] = {}\n        for j = 0, n do\n            L[i][j] = {}\n            for k = 0, o do\n                L[i][j][k] = 0\n            end\n        end\n    end\n    for i = 1, m do\n        for j = 1, n do\n            for k = 1, o do\n                if X[i] == Y[j] and Y[j] == Z[k] then\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1\n                else\n                    L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n                end\n            end\n        end\n    end\n    return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z\n    local L = {}\n    for i = 0, m do\n        L[i] = {}\n        for j = 0, n do\n            L[i][j] = {}\n            for k = 0, o do\n                if i == 0 or j == 0 or k == 0 then\n                    L[i][j][k] = 0\n                elseif X[i] == Y[j] and X[i] == Z[k] then\n                    L[i][j][k] = L[i - 1][j - 1][k - 1] + 1\n                else\n                    L[i][j][k] = max(L[i - 1][j][k], L[i][j - 1][k], L[i][j][k - 1])\n                end\n            end\n        end\n    end\n    return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        if i == 0 or j == 0 or k == 0 then\n          L[i][j][k] = 0\n        elseif X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  local index = L[m][n][o]\n  local lcs = {}\n  local i, j, k = m, n, o\n  while i > 0 and j > 0 and k > 0 do\n    if X[i] == Y[j] and X[i] == Z[k] then\n      lcs[index] = X[i]\n      i = i - 1\n      j = j - 1\n      k = k - 1\n      index = index - 1\n    elseif L[i-1][j][k] > L[i][j-1][k] and L[i-1][j][k] > L[i][j][k-1] then\n      i = i - 1\n    elseif L[i][j-1][k] > L[i-1][j][k] and L[i][j-1][k] > L[i][j][k-1] then\n      j = j - 1\n    else\n      k = k - 1\n    end\n  end\n  return lcs\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z\n    local L = {}\n    for i = 0, m do\n        L[i] = {}\n        for j = 0, n do\n            L[i][j] = {}\n            for k = 0, o do\n                L[i][j][k] = 0\n            end\n        end\n    end\n    for i = 1, m do\n        for j = 1, n do\n            for k = 1, o do\n                if X[i] == Y[j] and Y[j] == Z[k] then\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1\n                else\n                    L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n                end\n            end\n        end\n    end\n    return L[m][n][o]\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z\n    local L = {}\n    for i = 0, m do\n        L[i] = {}\n        for j = 0, n do\n            L[i][j] = {}\n            for k = 0, o do\n                L[i][j][k] = 0\n            end\n        end\n    end\n    for i = 1, m do\n        for j = 1, n do\n            for k = 1, o do\n                if X[i] == Y[j] and X[i] == Z[k] then\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1\n                else\n                    L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n                end\n            end\n        end\n    end\n    return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and Y[j] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and Y[j] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "  local m = #X\n  local n = #Y\n  local o = #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and X[i] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z\n    local L = {}\n    for i = 0, m do\n        L[i] = {}\n        for j = 0, n do\n            L[i][j] = {}\n            for k = 0, o do\n                L[i][j][k] = 0\n            end\n        end\n    end\n    for i = 1, m do\n        for j = 1, n do\n            for k = 1, o do\n                if X[i] == Y[j] and Y[j] == Z[k] then\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1\n                else\n                    L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n                end\n            end\n        end\n    end\n    return L[m][n][o]\nend",
    "  local m, n, o = #X, #Y, #Z\n  local L = {}\n  for i = 0, m do\n    L[i] = {}\n    for j = 0, n do\n      L[i][j] = {}\n      for k = 0, o do\n        L[i][j][k] = 0\n      end\n    end\n  end\n  for i = 1, m do\n    for j = 1, n do\n      for k = 1, o do\n        if X[i] == Y[j] and Y[j] == Z[k] then\n          L[i][j][k] = L[i-1][j-1][k-1] + 1\n        else\n          L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n        end\n      end\n    end\n  end\n  return L[m][n][o]\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z\n    local L = {}\n    for i = 0, m do\n        L[i] = {}\n        for j = 0, n do\n            L[i][j] = {}\n            for k = 0, o do\n                if i == 0 or j == 0 or k == 0 then\n                    L[i][j][k] = 0\n                elseif X[i] == Y[j] and X[i] == Z[k] then\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1\n                else\n                    L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n                end\n            end\n        end\n    end\n    return L[m][n][o]\nend",
    "    local m = #X\n    local n = #Y\n    local o = #Z\n    local L = {}\n    for i = 0, m do\n        L[i] = {}\n        for j = 0, n do\n            L[i][j] = {}\n            for k = 0, o do\n                L[i][j][k] = 0\n            end\n        end\n    end\n    for i = 1, m do\n        for j = 1, n do\n            for k = 1, o do\n                if X[i] == Y[j] and X[i] == Z[k] then\n                    L[i][j][k] = L[i-1][j-1][k-1] + 1\n                else\n                    L[i][j][k] = math.max(L[i-1][j][k], L[i][j-1][k], L[i][j][k-1])\n                end\n            end\n        end\n    end\n    return L[m][n][o]\nend"
  ]
}
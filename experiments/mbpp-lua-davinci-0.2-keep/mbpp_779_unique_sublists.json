{
  "name": "mbpp_779_unique_sublists",
  "language": "lua",
  "prompt": "-- Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.\nlocal function unique_sublists(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_779_unique_sublists.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique_sublists\n    lu.assertEquals(candidate({{1, 3}, {5, 7}, {1, 3}, {13, 15, 17}, {5, 7}, {9, 11}}), {[{1, 3}] = 2, [{5, 7}] = 2, [{13, 15, 17}] = 1, [{9, 11}] = 1})\n    lu.assertEquals(candidate({{'green', 'orange'}, {'black'}, {'green', 'orange'}, {'white'}}), {[{'green', 'orange'}] = 2, [{'black'}] = 1, [{'white'}] = 1})\n    lu.assertEquals(candidate({{1, 2}, {3, 4}, {4, 5}, {6, 7}}), {[{1, 2}] = 1, [{3, 4}] = 1, [{4, 5}] = 1, [{6, 7}] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        if type(v) == \"table\" then\n            local t = tuple(v)\n            if dict[t] then\n                dict[t] = dict[t] + 1\n            else\n                dict[t] = 1\n            end\n        end\n    end\n    return dict\nend",
    "\tlocal dict = {}\n\tfor i,v in ipairs(list1) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal t = tuple(v)\n\t\t\tif dict[t] then\n\t\t\t\tdict[t] = dict[t] + 1\n\t\t\telse\n\t\t\t\tdict[t] = 1\n\t\t\tend\n\t\tend\n\tend\n\treturn dict\nend",
    "\tlocal dict = {}\n\tfor i, v in ipairs(list1) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal t = tuple(v)\n\t\t\tif dict[t] then\n\t\t\t\tdict[t] = dict[t] + 1\n\t\t\telse\n\t\t\t\tdict[t] = 1\n\t\t\tend\n\t\tend\n\tend\n\treturn dict\nend",
    "    local dict = {}\n    for i, v in ipairs(list1) do\n        if type(v) == \"table\" then\n            local t = tuple(v)\n            if dict[t] then\n                dict[t] = dict[t] + 1\n            else\n                dict[t] = 1\n            end\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        local t = tuple(v)\n        if dict[t] then\n            dict[t] = dict[t] + 1\n        else\n            dict[t] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        local t = tuple(v)\n        dict[t] = (dict[t] or 0) + 1\n    end\n    return dict\nend",
    "  local dict = {}\n  for _, sublist in ipairs(list1) do\n    local t = tuple(sublist)\n    dict[t] = (dict[t] or 0) + 1\n  end\n  return dict\nend",
    "    local dict = {}\n    for _, sublist in ipairs(list1) do\n        local t = tuple(sublist)\n        dict[t] = (dict[t] or 0) + 1\n    end\n    return dict\nend",
    "    local dic = {}\n    for i,v in ipairs(list1) do\n        local t = tuple(v)\n        if dic[t] then\n            dic[t] = dic[t] + 1\n        else\n            dic[t] = 1\n        end\n    end\n    return dic\nend",
    "\tlocal dict = {}\n\tfor _, v in ipairs(list1) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal t = tuple(v)\n\t\t\tdict[t] = (dict[t] or 0) + 1\n\t\tend\n\tend\n\treturn dict\nend",
    "\tlocal dict = {}\n\tfor _, v in ipairs(list1) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal t = tuple(v)\n\t\t\tif dict[t] then\n\t\t\t\tdict[t] = dict[t] + 1\n\t\t\telse\n\t\t\t\tdict[t] = 1\n\t\t\tend\n\t\tend\n\tend\n\treturn dict\nend",
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        local t = tuple(v)\n        dict[t] = (dict[t] or 0) + 1\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        local t = tuple(v)\n        if dict[t] then\n            dict[t] = dict[t] + 1\n        else\n            dict[t] = 1\n        end\n    end\n    return dict\nend",
    "\tlocal dict = {}\n\tfor _, v in ipairs(list1) do\n\t\tlocal t = tuple(v)\n\t\tif dict[t] then\n\t\t\tdict[t] = dict[t] + 1\n\t\telse\n\t\t\tdict[t] = 1\n\t\tend\n\tend\n\treturn dict\nend",
    "\tlocal dict = {}\n\tfor _, v in ipairs(list1) do\n\t\tlocal t = tuple(v)\n\t\tif dict[t] then\n\t\t\tdict[t] = dict[t] + 1\n\t\telse\n\t\t\tdict[t] = 1\n\t\tend\n\tend\n\treturn dict\nend",
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        local t = tuple(v)\n        if dict[t] then\n            dict[t] = dict[t] + 1\n        else\n            dict[t] = 1\n        end\n    end\n    return dict\nend",
    "\tlocal dict = {}\n\tfor _, v in ipairs(list1) do\n\t\tlocal t = tuple(v)\n\t\tdict[t] = (dict[t] or 0) + 1\n\tend\n\treturn dict\nend",
    "    local dict = {}\n    for i, v in ipairs(list1) do\n        if type(v) == \"table\" then\n            local t = tuple(v)\n            if dict[t] then\n                dict[t] = dict[t] + 1\n            else\n                dict[t] = 1\n            end\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        if type(v) == \"table\" then\n            local t = tuple(v)\n            if dict[t] then\n                dict[t] = dict[t] + 1\n            else\n                dict[t] = 1\n            end\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(list1) do\n        local t = tuple(v)\n        if dict[t] then\n            dict[t] = dict[t] + 1\n        else\n            dict[t] = 1\n        end\n    end\n    return dict\nend"
  ]
}
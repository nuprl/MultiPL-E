{
  "name": "mbpp_615_average_tuple",
  "language": "lua",
  "prompt": "-- Write a function which takes a tuple of tuples and returns the average value for each tuple as a list.\nlocal function average_tuple(nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_615_average_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = average_tuple\n    lu.assertEquals(candidate({{10, 10, 10, 12}, {30, 45, 56, 45}, {81, 80, 39, 32}, {1, 2, 3, 4}}), {30.5, 34.25, 27.0, 23.25})\n    lu.assertEquals(candidate({{1, 1, -5}, {30, -15, 56}, {81, -60, -39}, {-10, 2, 3}}), {25.5, -18.0, 3.75})\n    lu.assertEquals(candidate({{100, 100, 100, 120}, {300, 450, 560, 450}, {810, 800, 390, 320}, {10, 20, 30, 40}}), {305.0, 342.5, 270.0, 232.5})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local result = {}\n    for _, tuple in ipairs(nums) do\n        local sum = 0\n        for _, num in ipairs(tuple) do\n            sum = sum + num\n        end\n        table.insert(result, sum / #tuple)\n    end\n    return result\nend",
    "  local result = {}\n  for _, tuple in ipairs(nums) do\n    local sum = 0\n    for _, num in ipairs(tuple) do\n      sum = sum + num\n    end\n    table.insert(result, sum / #tuple)\n  end\n  return result\nend",
    "    local result = {}\n    for _, tuple in ipairs(nums) do\n        local sum = 0\n        for _, num in ipairs(tuple) do\n            sum = sum + num\n        end\n        table.insert(result, sum / #tuple)\n    end\n    return result\nend",
    "  local result = {}\n  for _, tuple in ipairs(nums) do\n    local sum = 0\n    for _, num in ipairs(tuple) do\n      sum = sum + num\n    end\n    table.insert(result, sum / #tuple)\n  end\n  return result\nend",
    "    local result = {}\n    for _, tuple in ipairs(nums) do\n        local sum = 0\n        for _, num in ipairs(tuple) do\n            sum = sum + num\n        end\n        table.insert(result, sum / #tuple)\n    end\n    return result\nend",
    "    local result = {}\n    for _, tuple in ipairs(nums) do\n        local sum = 0\n        for _, num in ipairs(tuple) do\n            sum = sum + num\n        end\n        table.insert(result, sum / #tuple)\n    end\n    return result\nend",
    "  local result = {}\n  for _, tuple in ipairs(nums) do\n    local sum = 0\n    for _, num in ipairs(tuple) do\n      sum = sum + num\n    end\n    table.insert(result, sum / #tuple)\n  end\n  return result\nend",
    "    local sum = 0\n    local count = 0\n    for _, num in ipairs(nums) do\n        sum = sum + num\n        count = count + 1\n    end\n    return sum / count\nend",
    "  local result = {}\n  for _, tuple in ipairs(nums) do\n    local sum = 0\n    for _, num in ipairs(tuple) do\n      sum = sum + num\n    end\n    table.insert(result, sum / #tuple)\n  end\n  return result\nend",
    "    local result = {}\n    for _, tuple in ipairs(nums) do\n        local sum = 0\n        for _, num in ipairs(tuple) do\n            sum = sum + num\n        end\n        table.insert(result, sum / #tuple)\n    end\n    return result\nend",
    "  local result = {}\n  for i, v in ipairs(nums) do\n    local sum = 0\n    for j, w in ipairs(v) do\n      sum = sum + w\n    end\n    result[i] = sum / #v\n  end\n  return result\nend",
    "    local result = {}\n    for _,tuple in ipairs(nums) do\n        local sum = 0\n        for _,num in ipairs(tuple) do\n            sum = sum + num\n        end\n        table.insert(result, sum / #tuple)\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(nums) do\n        local sum = 0\n        for j, w in ipairs(v) do\n            sum = sum + w\n        end\n        result[i] = sum / #v\n    end\n    return result\nend",
    "  local result = {}\n  for i, v in ipairs(nums) do\n    local sum = 0\n    for j, w in ipairs(v) do\n      sum = sum + w\n    end\n    result[i] = sum / #v\n  end\n  return result\nend",
    "    local result = {}\n    for i, v in ipairs(nums) do\n        local sum = 0\n        for j, w in ipairs(v) do\n            sum = sum + w\n        end\n        result[i] = sum / #v\n    end\n    return result\nend",
    "    local result = {}\n    for i, tuple in ipairs(nums) do\n        local sum = 0\n        for j, num in ipairs(tuple) do\n            sum = sum + num\n        end\n        result[i] = sum / #tuple\n    end\n    return result\nend",
    "    local sum = 0\n    local count = 0\n    for _, num in ipairs(nums) do\n        sum = sum + num\n        count = count + 1\n    end\n    return sum / count\nend",
    "    local res = {}\n    for _, tuple in ipairs(nums) do\n        local sum = 0\n        for _, num in ipairs(tuple) do\n            sum = sum + num\n        end\n        table.insert(res, sum / #tuple)\n    end\n    return res\nend",
    "    local result = {}\n    for i, num in ipairs(nums) do\n        local sum = 0\n        for j, n in ipairs(num) do\n            sum = sum + n\n        end\n        result[i] = sum / #num\n    end\n    return result\nend",
    "  local result = {}\n  for i, v in ipairs(nums) do\n    local sum = 0\n    for j, w in ipairs(v) do\n      sum = sum + w\n    end\n    result[i] = sum / #v\n  end\n  return result\nend"
  ]
}
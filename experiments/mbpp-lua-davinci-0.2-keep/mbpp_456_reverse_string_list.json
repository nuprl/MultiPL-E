{
  "name": "mbpp_456_reverse_string_list",
  "language": "lua",
  "prompt": "-- Write a function to reverse each string in a given list of string values.\nlocal function reverse_string_list(stringlist)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_456_reverse_string_list.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = reverse_string_list\n    lu.assertEquals(candidate({'Red', 'Green', 'Blue', 'White', 'Black'}), {'deR', 'neerG', 'eulB', 'etihW', 'kcalB'})\n    lu.assertEquals(candidate({'john', 'amal', 'joel', 'george'}), {'nhoj', 'lama', 'leoj', 'egroeg'})\n    lu.assertEquals(candidate({'jack', 'john', 'mary'}), {'kcaj', 'nhoj', 'yram'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal result = {}\n\tfor i,v in ipairs(stringlist) do\n\t\tresult[i] = v:reverse()\n\tend\n\treturn result\nend",
    "    local reversed_list = {}\n    for i, v in ipairs(stringlist) do\n        reversed_list[i] = string.reverse(v)\n    end\n    return reversed_list\nend",
    "    local reversed_stringlist = {}\n    for i, v in ipairs(stringlist) do\n        reversed_stringlist[i] = string.reverse(v)\n    end\n    return reversed_stringlist\nend",
    "    local result = {}\n    for _, s in ipairs(stringlist) do\n        table.insert(result, string.reverse(s))\n    end\n    return result\nend",
    "    local new_stringlist = {}\n    for i,v in ipairs(stringlist) do\n        new_stringlist[i] = string.reverse(v)\n    end\n    return new_stringlist\nend",
    "    local reversed_list = {}\n    for _, string in ipairs(stringlist) do\n        table.insert(reversed_list, string.reverse(string))\n    end\n    return reversed_list\nend",
    "    local reversed = {}\n    for _, s in ipairs(stringlist) do\n        reversed[#reversed + 1] = s:reverse()\n    end\n    return reversed\nend",
    "  local reversed_list = {}\n  for _, str in ipairs(stringlist) do\n    table.insert(reversed_list, string.reverse(str))\n  end\n  return reversed_list\nend",
    "    local reversed_list = {}\n    for _, str in ipairs(stringlist) do\n        table.insert(reversed_list, string.reverse(str))\n    end\n    return reversed_list\nend",
    "    local new_list = {}\n    for _, v in ipairs(stringlist) do\n        table.insert(new_list, string.reverse(v))\n    end\n    return new_list\nend",
    "    local reversed_list = {}\n    for i, v in ipairs(stringlist) do\n        reversed_list[i] = string.reverse(v)\n    end\n    return reversed_list\nend",
    "    local reversed_list = {}\n    for i, v in ipairs(stringlist) do\n        reversed_list[i] = string.reverse(v)\n    end\n    return reversed_list\nend",
    "    local reversed_stringlist = {}\n    for i, v in ipairs(stringlist) do\n        reversed_stringlist[i] = string.reverse(v)\n    end\n    return reversed_stringlist\nend",
    "  local reversed_list = {}\n  for _, v in ipairs(stringlist) do\n    table.insert(reversed_list, string.reverse(v))\n  end\n  return reversed_list\nend",
    "  local reversed_list = {}\n  for i, v in ipairs(stringlist) do\n    reversed_list[i] = string.reverse(v)\n  end\n  return reversed_list\nend",
    "    local reversed_list = {}\n    for _, v in ipairs(stringlist) do\n        table.insert(reversed_list, string.reverse(v))\n    end\n    return reversed_list\nend",
    "    local result = {}\n    for _, str in ipairs(stringlist) do\n        table.insert(result, string.reverse(str))\n    end\n    return result\nend",
    "\tlocal reversed_list = {}\n\tfor i, v in ipairs(stringlist) do\n\t\treversed_list[i] = string.reverse(v)\n\tend\n\treturn reversed_list\nend",
    "    local reversed_list = {}\n    for _, str in ipairs(stringlist) do\n        table.insert(reversed_list, string.reverse(str))\n    end\n    return reversed_list\nend",
    "\tlocal new_stringlist = {}\n\tfor i, v in ipairs(stringlist) do\n\t\tnew_stringlist[i] = string.reverse(v)\n\tend\n\treturn new_stringlist\nend"
  ]
}
{
  "name": "mbpp_61_count_Substrings",
  "language": "lua",
  "prompt": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local c = 0\n    for i = 1, #s do\n        for j = i + 1, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                c = c + 1\n            end\n        end\n    end\n    return c\nend",
    "  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == (j - i + 1) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    local len = #s\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    local l = string.len(s)\n    for i = 1, l do\n        for j = i, l do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend"
  ]
}
{
  "name": "mbpp_69_is_sublist",
  "language": "lua",
  "prompt": "-- Write a function to check whether a list contains the given sublist or not.\nlocal function is_sublist(l, s)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_sublist\n    lu.assertEquals(candidate({2, 4, 3, 5, 7}, {3, 7}), false)\n    lu.assertEquals(candidate({2, 4, 3, 5, 7}, {4, 3}), true)\n    lu.assertEquals(candidate({2, 4, 3, 5, 7}, {1, 6}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = 1\n    local j = 1\n    while i <= #l and j <= #s do\n        if l[i] == s[j] then\n            i = i + 1\n            j = j + 1\n        else\n            i = i + 1\n            j = 1\n        end\n    end\n    return j > #s\nend",
    "  local i = 1\n  for _, v in ipairs(s) do\n    if l[i] ~= v then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
    "  local i = 1\n  for _, v in ipairs(s) do\n    if l[i] ~= v then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
    "\tif #s > #l then\n\t\treturn false\n\tend\n\tfor i = 1, #l - #s + 1 do\n\t\tlocal j = 1\n\t\twhile j <= #s and l[i + j - 1] == s[j] do\n\t\t\tj = j + 1\n\t\tend\n\t\tif j > #s then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "  local i = 1\n  for _, v in ipairs(s) do\n    if l[i] == v then\n      i = i + 1\n    else\n      i = 1\n    end\n  end\n  return i == #l + 1\nend",
    "    local i = 1\n    for _, v in ipairs(s) do\n        while l[i] ~= v do\n            i = i + 1\n            if i > #l then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "  local function _is_sublist(l, s, i)\n    if i > #l then return false end\n    if l[i] == s[1] then\n      local j = 2\n      while j <= #s do\n        if l[i + j - 1] ~= s[j] then break end\n        j = j + 1\n      end\n      if j > #s then return true end\n    end\n    return _is_sublist(l, s, i + 1)\n  end\n  return _is_sublist(l, s, 1)\nend",
    "  if #s > #l then\n    return false\n  end\n  for i = 1, #l - #s + 1 do\n    local j = 1\n    while j <= #s and l[i + j - 1] == s[j] do\n      j = j + 1\n    end\n    if j > #s then\n      return true\n    end\n  end\n  return false\nend",
    "    if #s == 0 then return true end\n    if #l == 0 then return false end\n    if l[1] == s[1] then\n        return is_sublist(l:sub(2), s:sub(2))\n    else\n        return is_sublist(l:sub(2), s)\n    end\nend",
    "    local i = 1\n    local j = 1\n    while i <= #l and j <= #s do\n        if l[i] == s[j] then\n            i = i + 1\n            j = j + 1\n        else\n            i = i + 1\n            j = 1\n        end\n    end\n    return j > #s\nend",
    "    local function is_sublist_at(l, s, i)\n        if #s == 0 then return true end\n        if #l < #s then return false end\n        if l[i] ~= s[1] then return false end\n        return is_sublist_at(l, s, i + 1)\n    end",
    "    local i = 1\n    for _, v in ipairs(s) do\n        if l[i] ~= v then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "    local i = 1\n    for _, v in ipairs(s) do\n        while l[i] ~= v do\n            i = i + 1\n            if i > #l then return false end\n        end\n    end\n    return true\nend",
    "  local i = 1\n  local j = 1\n  while i <= #l and j <= #s do\n    if l[i] == s[j] then\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n      j = 1\n    end\n  end\n  return j > #s\nend",
    "  local i = 1\n  for _, v in ipairs(s) do\n    if l[i] ~= v then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
    "    local i = 1\n    for _, v in ipairs(s) do\n        if l[i] ~= v then\n            return false\n        end\n        i = i + 1\n    end\n    return true\nend",
    "  local i = 1\n  for _, v in ipairs(s) do\n    if l[i] ~= v then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
    "    local i = 1\n    for _, v in ipairs(s) do\n        while l[i] ~= v do\n            i = i + 1\n            if i > #l then return false end\n        end\n    end\n    return true\nend",
    "    local i = 1\n    for _, v in ipairs(s) do\n        while l[i] ~= v do\n            i = i + 1\n            if i > #l then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "  local i = 1\n  local j = 1\n  while i <= #l and j <= #s do\n    if l[i] == s[j] then\n      i = i + 1\n      j = j + 1\n    else\n      i = i + 1\n      j = 1\n    end\n  end\n  return j > #s\nend"
  ]
}
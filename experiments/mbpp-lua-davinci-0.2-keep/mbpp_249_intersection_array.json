{
  "name": "mbpp_249_intersection_array",
  "language": "lua",
  "prompt": "-- Write a function to find the intersection of two arrays.\nlocal function intersection_array(array_nums1, array_nums2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = intersection_array\n    lu.assertEquals(candidate({1, 2, 3, 5, 7, 8, 9, 10}, {1, 2, 4, 8, 9}), {1, 2, 8, 9})\n    lu.assertEquals(candidate({1, 2, 3, 5, 7, 8, 9, 10}, {3, 5, 7, 9}), {3, 5, 7, 9})\n    lu.assertEquals(candidate({1, 2, 3, 5, 7, 8, 9, 10}, {10, 20, 30, 40}), {10})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        if table.indexof(array_nums2, v) then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num in ipairs(array_nums1) do\n        if array_nums2[num] then\n            result[num] = true\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local hash = {}\n    local result = {}\n    for i, v in ipairs(array_nums1) do\n        hash[v] = true\n    end\n    for i, v in ipairs(array_nums2) do\n        if hash[v] then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local array_result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_result, num1)\n            end\n        end\n    end\n    return array_result\nend",
    "    local array_nums = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(array_nums, v)\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "  local result = {}\n  for i = 1, #array_nums1 do\n    for j = 1, #array_nums2 do\n      if array_nums1[i] == array_nums2[j] then\n        table.insert(result, array_nums1[i])\n      end\n    end\n  end\n  return result\nend",
    "  local hash_nums1 = {}\n  local hash_nums2 = {}\n  local intersection = {}\n  for i, v in ipairs(array_nums1) do\n    hash_nums1[v] = true\n  end\n  for i, v in ipairs(array_nums2) do\n    hash_nums2[v] = true\n  end\n  for k, v in pairs(hash_nums1) do\n    if hash_nums2[k] then\n      table.insert(intersection, k)\n    end\n  end\n  return intersection\nend",
    "    local result = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local hash = {}\n    for _, num in ipairs(array_nums1) do\n        hash[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local array_result = {}\n    local map_nums1 = {}\n    for i, v in ipairs(array_nums1) do\n        map_nums1[v] = true\n    end\n    for i, v in ipairs(array_nums2) do\n        if map_nums1[v] then\n            table.insert(array_result, v)\n        end\n    end\n    return array_result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                result[#result + 1] = array_nums1[i]\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local set_nums1 = set.new(array_nums1)\n    local set_nums2 = set.new(array_nums2)\n    local set_intersection = set.intersection(set_nums1, set_nums2)\n    return set.totable(set_intersection)\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local intersection_array = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(intersection_array, v)\n            end\n        end\n    end\n    return intersection_array\nend",
    "    local intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(intersection, v)\n            end\n        end\n    end\n    return intersection\nend",
    "    local intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(intersection, num1)\n            end\n        end\n    end\n    return intersection\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                array_intersection[#array_intersection + 1] = v\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local set1 = {}\n    local set2 = {}\n    local result = {}\n    for i, v in ipairs(array_nums1) do\n        set1[v] = true\n    end\n    for i, v in ipairs(array_nums2) do\n        set2[v] = true\n    end\n    for k, v in pairs(set1) do\n        if set2[k] then\n            table.insert(result, k)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                array_nums[#array_nums + 1] = array_nums1[i]\n            end\n        end\n    end\n    return array_nums\nend",
    "    local array_nums = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_nums, array_nums1[i])\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local map = {}\n    local result = {}\n    for i, num in ipairs(array_nums1) do\n        map[num] = true\n    end\n    for i, num in ipairs(array_nums2) do\n        if map[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local hash = {}\n    local result = {}\n    for i, v in ipairs(array_nums1) do\n        hash[v] = i\n    end\n    for i, v in ipairs(array_nums2) do\n        if hash[v] then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local hash = {}\n    local result = {}\n    for i, v in ipairs(array_nums1) do\n        hash[v] = true\n    end\n    for i, v in ipairs(array_nums2) do\n        if hash[v] then\n            result[#result + 1] = v\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    local array_nums1_len = #array_nums1\n    local array_nums2_len = #array_nums2\n    if array_nums1_len == 0 or array_nums2_len == 0 then\n        return array_intersection\n    end\n    local array_nums1_index = 1\n    local array_nums2_index = 1\n    while array_nums1_index <= array_nums1_len and array_nums2_index <= array_nums2_len do\n        local num1 = array_nums1[array_nums1_index]\n        local num2 = array_nums2[array_nums2_index]\n        if num1 == num2 then\n            table.insert(array_intersection, num1)\n            array_nums1_index = array_nums1_index + 1\n            array_nums2_index = array_nums2_index + 1\n        elseif num1 < num2 then\n            array_nums1_index = array_nums1_index + 1\n        else\n            array_nums2_index = array_nums2_index + 1\n        end\n    end\n    return array_intersection\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local hash_nums1 = {}\n    local hash_nums2 = {}\n    local intersection_nums = {}",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "  local intersection = {}\n  for i = 1, #array_nums1 do\n    for j = 1, #array_nums2 do\n      if array_nums1[i] == array_nums2[j] then\n        table.insert(intersection, array_nums1[i])\n      end\n    end\n  end\n  return intersection\nend",
    "    local array_result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_result, num1)\n                break\n            end\n        end\n    end\n    return array_result\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        if table.contains(array_nums2, v) then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                array_intersection[#array_intersection + 1] = num1\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local hash_nums = {}\n    local result = {}\n    for _, v in ipairs(array_nums1) do\n        hash_nums[v] = true\n    end\n    for _, v in ipairs(array_nums2) do\n        if hash_nums[v] then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local hash = {}\n    for i, num in ipairs(array_nums1) do\n        hash[num] = true\n    end\n    for i, num in ipairs(array_nums2) do\n        if hash[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "\tlocal array_intersection = {}\n\tfor _, num1 in ipairs(array_nums1) do\n\t\tfor _, num2 in ipairs(array_nums2) do\n\t\t\tif num1 == num2 then\n\t\t\t\ttable.insert(array_intersection, num1)\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn array_intersection\nend",
    "    local result = {}\n    local nums1 = {}\n    local nums2 = {}\n    for _, v in ipairs(array_nums1) do\n        nums1[v] = true\n    end\n    for _, v in ipairs(array_nums2) do\n        nums2[v] = true\n    end\n    for k, _ in pairs(nums1) do\n        if nums2[k] then\n            table.insert(result, k)\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_nums = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_nums, array_nums1[i])\n            end\n        end\n    end\n    return array_nums\nend",
    "    local intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(intersection, num1)\n            end\n        end\n    end\n    return intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(result, v)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(result, v)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local intersection_array = {}\n    local hash_table = {}\n    for _, num in ipairs(array_nums1) do\n        hash_table[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash_table[num] then\n            table.insert(intersection_array, num)\n        end\n    end\n    return intersection_array\nend",
    "    local array_intersection = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_intersection = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_intersection, array_nums1[i])\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_nums = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_nums, num1)\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "  local array_nums = {}\n  for _, num1 in ipairs(array_nums1) do\n    for _, num2 in ipairs(array_nums2) do\n      if num1 == num2 then\n        table.insert(array_nums, num1)\n      end\n    end\n  end\n  return array_nums\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                array_intersection[#array_intersection + 1] = array_nums1[i]\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_intersection = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_result = {}\n    local map_nums1 = {}\n    for _, num in ipairs(array_nums1) do\n        map_nums1[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if map_nums1[num] then\n            table.insert(array_result, num)\n        end\n    end\n    return array_result\nend",
    "    local array_nums = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(array_nums, v)\n            end\n        end\n    end\n    return array_nums\nend",
    "    local array_result = {}\n    local map_nums1 = {}\n    for _, num in ipairs(array_nums1) do\n        map_nums1[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if map_nums1[num] then\n            table.insert(array_result, num)\n        end\n    end\n    return array_result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local intersection = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(intersection, array_nums1[i])\n            end\n        end\n    end\n    return intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        if table.indexof(array_nums2, v) then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        if table.indexof(array_nums2, v) then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "\tlocal array_intersection = {}\n\tfor i, num1 in ipairs(array_nums1) do\n\t\tfor j, num2 in ipairs(array_nums2) do\n\t\t\tif num1 == num2 then\n\t\t\t\ttable.insert(array_intersection, num1)\n\t\t\tend\n\t\tend\n\tend\n\treturn array_intersection\nend",
    "    local array_result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_result, num1)\n                break\n            end\n        end\n    end\n    return array_result\nend",
    "    local intersection = {}\n    for _, num in ipairs(array_nums1) do\n        if contains(array_nums2, num) then\n            table.insert(intersection, num)\n        end\n    end\n    return intersection\nend",
    "    local hash = {}\n    local result = {}\n    for i, v in ipairs(array_nums1) do\n        hash[v] = true\n    end\n    for i, v in ipairs(array_nums2) do\n        if hash[v] then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                array_nums[#array_nums + 1] = v\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local map = {}\n    for _, num in ipairs(array_nums1) do\n        map[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if map[num] then\n            result[#result + 1] = num\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v1 in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v1 == v2 then\n                table.insert(result, v1)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local hash = {}\n    for _, num in ipairs(array_nums1) do\n        hash[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local set = {}\n    local result = {}\n    for _, num in ipairs(array_nums1) do\n        set[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if set[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_nums, array_nums1[i])\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local map = {}\n    for i = 1, #array_nums1 do\n        map[array_nums1[i]] = true\n    end\n    for i = 1, #array_nums2 do\n        if map[array_nums2[i]] then\n            table.insert(result, array_nums2[i])\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                array_intersection[#array_intersection + 1] = array_nums1[i]\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local set1 = {}\n    local set2 = {}\n    local intersection = {}\n    for _, num in ipairs(array_nums1) do\n        set1[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        set2[num] = true\n    end\n    for num, _ in pairs(set1) do\n        if set2[num] then\n            table.insert(intersection, num)\n        end\n    end\n    return intersection\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_result, num1)\n                break\n            end\n        end\n    end\n    return array_result\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local set1 = {}\n    local set2 = {}\n    local result = {}\n    for i, v in ipairs(array_nums1) do\n        set1[v] = true\n    end\n    for i, v in ipairs(array_nums2) do\n        set2[v] = true\n    end\n    for k, v in pairs(set1) do\n        if set2[k] then\n            table.insert(result, k)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_intersection, array_nums1[i])\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local res = {}\n    for _, v in ipairs(array_nums1) do\n        if table.indexof(array_nums2, v) then\n            table.insert(res, v)\n        end\n    end\n    return res\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_nums, num1)\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local set1 = {}\n    local set2 = {}\n    local result = {}\n    for _, v in ipairs(array_nums1) do\n        set1[v] = true\n    end\n    for _, v in ipairs(array_nums2) do\n        set2[v] = true\n    end\n    for k, _ in pairs(set1) do\n        if set2[k] then\n            table.insert(result, k)\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(array_result, v)\n                break\n            end\n        end\n    end\n    return array_result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local set_nums1 = {}\n    for _, num in ipairs(array_nums1) do\n        set_nums1[num] = true\n    end",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local hash = {}\n    for _, v in ipairs(array_nums1) do\n        hash[v] = true\n    end\n    for _, v in ipairs(array_nums2) do\n        if hash[v] then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local set1 = Set(array_nums1)\n    local set2 = Set(array_nums2)\n    local intersection = set1:intersection(set2)\n    return intersection:to_array()\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local hash = {}\n    local result = {}\n    for i, v in ipairs(array_nums1) do\n        hash[v] = i\n    end\n    for i, v in ipairs(array_nums2) do\n        if hash[v] then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "  local result = {}\n  for _, num1 in ipairs(array_nums1) do\n    for _, num2 in ipairs(array_nums2) do\n      if num1 == num2 then\n        table.insert(result, num1)\n      end\n    end\n  end\n  return result\nend",
    "    local array_nums = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_nums, array_nums1[i])\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(result, v)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local intersection = {}\n    local hash = {}\n    for _, num in ipairs(array_nums1) do\n        hash[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash[num] then\n            table.insert(intersection, num)\n        end\n    end\n    return intersection\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(array_nums, v)\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "    local hash_nums1 = {}\n    local hash_nums2 = {}\n    local result = {}\n    for i, num in ipairs(array_nums1) do\n        hash_nums1[num] = true\n    end\n    for i, num in ipairs(array_nums2) do\n        hash_nums2[num] = true\n    end\n    for num, _ in pairs(hash_nums1) do\n        if hash_nums2[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        if contains(array_nums2, v) then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local array_result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_result, v)\n            end\n        end\n    end\n    return array_result\nend",
    "    local array_nums = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_nums, num1)\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    local map = {}\n    for _, num in ipairs(array_nums1) do\n        map[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if map[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for _, v in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(array_nums, v)\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    local hash = {}\n    for _, num in ipairs(array_nums1) do\n        hash[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(result, v)\n            end\n        end\n    end\n    return result\nend",
    "    local array_result = {}\n    local map = {}\n    for _, num in ipairs(array_nums1) do\n        map[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if map[num] then\n            array_result[#array_result + 1] = num\n            map[num] = nil\n        end\n    end\n    return array_result\nend",
    "    local set_nums1 = {}\n    local set_nums2 = {}\n    local intersection = {}\n    for _, num in ipairs(array_nums1) do\n        set_nums1[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        set_nums2[num] = true\n    end\n    for num, _ in pairs(set_nums1) do\n        if set_nums2[num] then\n            intersection[#intersection + 1] = num\n        end\n    end\n    return intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local intersection_array = {}\n    for i, num in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num == num2 then\n                intersection_array[#intersection_array + 1] = num\n            end\n        end\n    end\n    return intersection_array\nend",
    "    local result = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n                break\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num in ipairs(array_nums1) do\n        if table.indexof(array_nums2, num) then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "\tlocal result = {}\n\tfor i,v in ipairs(array_nums1) do\n\t\tfor j,k in ipairs(array_nums2) do\n\t\t\tif v == k then\n\t\t\t\ttable.insert(result, v)\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn result\nend",
    "    local array_nums = {}\n    for i, num1 in ipairs(array_nums1) do\n        for j, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_nums, num1)\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    for _, num in ipairs(array_nums1) do\n        if table.indexof(array_nums2, num) then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local hash_nums1 = {}\n    for _, num in ipairs(array_nums1) do\n        hash_nums1[num] = true\n    end\n    local hash_nums2 = {}\n    for _, num in ipairs(array_nums2) do\n        hash_nums2[num] = true\n    end",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(array_intersection, v)\n            end\n        end\n    end\n    return array_intersection\nend",
    "\tlocal array_nums = {}\n\tfor _, num1 in ipairs(array_nums1) do\n\t\tfor _, num2 in ipairs(array_nums2) do\n\t\t\tif num1 == num2 then\n\t\t\t\ttable.insert(array_nums, num1)\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn array_nums\nend",
    "    local intersection_array = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(intersection_array, num1)\n            end\n        end\n    end\n    return intersection_array\nend",
    "    local set = {}\n    local result = {}\n    for _, num in ipairs(array_nums1) do\n        set[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if set[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local hash = {}\n    for _, num in ipairs(array_nums1) do\n        hash[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash[num] then\n            table.insert(result, num)\n            hash[num] = nil\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_intersection, array_nums1[i])\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for i, v in ipairs(array_nums1) do\n        if array_nums2[v] then\n            array_nums[v] = true\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    local hash_table = {}\n    for _, num in ipairs(array_nums1) do\n        hash_table[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash_table[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num in ipairs(array_nums1) do\n        if table.indexof(array_nums2, num) then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for i, v in ipairs(array_nums1) do\n        for j, k in ipairs(array_nums2) do\n            if v == k then\n                table.insert(array_nums, v)\n            end\n        end\n    end\n    return array_nums\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local set = {}\n    local result = {}\n    for _, num in ipairs(array_nums1) do\n        set[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if set[num] then\n            table.insert(result, num)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    local hash = {}\n    for i, v in ipairs(array_nums1) do\n        hash[v] = true\n    end\n    for i, v in ipairs(array_nums2) do\n        if hash[v] then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local intersection = {}\n    local hash = {}\n    for _, num in ipairs(array_nums1) do\n        hash[num] = true\n    end\n    for _, num in ipairs(array_nums2) do\n        if hash[num] then\n            table.insert(intersection, num)\n        end\n    end\n    return intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local array_result = {}\n    for _, v in ipairs(array_nums1) do\n        for _, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(array_result, v)\n                break\n            end\n        end\n    end\n    return array_result\nend",
    "    local array_nums = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_nums, num1)\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "\tlocal result = {}\n\tfor _, num1 in ipairs(array_nums1) do\n\t\tfor _, num2 in ipairs(array_nums2) do\n\t\t\tif num1 == num2 then\n\t\t\t\ttable.insert(result, num1)\n\t\t\tend\n\t\tend\n\tend\n\treturn result\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local array_nums = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_nums, num1)\n                break\n            end\n        end\n    end\n    return array_nums\nend",
    "    local array_intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_intersection, num1)\n            end\n        end\n    end\n    return array_intersection\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local array_result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(array_result, num1)\n                break\n            end\n        end\n    end\n    return array_result\nend",
    "    local intersection_array = {}\n    for i, v in ipairs(array_nums1) do\n        for j, w in ipairs(array_nums2) do\n            if v == w then\n                table.insert(intersection_array, v)\n            end\n        end\n    end\n    return intersection_array\nend",
    "    local set_nums1 = set.new(array_nums1)\n    local set_nums2 = set.new(array_nums2)\n    local set_intersection = set.intersection(set_nums1, set_nums2)\n    return set.totable(set_intersection)\nend",
    "    local result = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(result, num1)\n            end\n        end\n    end\n    return result\nend",
    "    local intersection = {}\n    for _, num1 in ipairs(array_nums1) do\n        for _, num2 in ipairs(array_nums2) do\n            if num1 == num2 then\n                table.insert(intersection, num1)\n            end\n        end\n    end\n    return intersection\nend",
    "    local result = {}\n    for i, v in ipairs(array_nums1) do\n        for j, v2 in ipairs(array_nums2) do\n            if v == v2 then\n                table.insert(result, v)\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(result, array_nums1[i])\n            end\n        end\n    end\n    return result\nend",
    "    local array_intersection = {}\n    for i = 1, #array_nums1 do\n        for j = 1, #array_nums2 do\n            if array_nums1[i] == array_nums2[j] then\n                table.insert(array_intersection, array_nums1[i])\n            end\n        end\n    end\n    return array_intersection\nend"
  ]
}
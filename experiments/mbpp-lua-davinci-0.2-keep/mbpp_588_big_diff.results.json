{
  "name": "mbpp_588_big_diff",
  "language": "lua",
  "prompt": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_588_big_diff.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max, min = nums[1], nums[1]\n  for _, v in ipairs(nums) do\n    if v > max then max = v end\n    if v < min then min = v end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i=2,#nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then max = v end\n    if v < min then min = v end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i=2,#nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local max, min = nums[1], nums[1]\n    for i = 2, #nums do\n        if nums[i] > max then\n            max = nums[i]\n        elseif nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max, min = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then max = nums[i] end\n    if nums[i] < min then min = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i,v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local max = nums[1]\n    local min = nums[1]\n    for i = 1, #nums do\n        if nums[i] > max then\n            max = nums[i]\n        end\n        if nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max, min = nums[1], nums[1]\n  for _, n in ipairs(nums) do\n    if n > max then max = n end\n    if n < min then min = n end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for _, v in ipairs(nums) do\n    if v < min then min = v end\n    if v > max then max = v end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local max = nums[1]\n    local min = nums[1]\n    for i, v in ipairs(nums) do\n        if v > max then\n            max = v\n        elseif v < min then\n            min = v\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, num in ipairs(nums) do\n    if num > max then\n      max = num\n    end\n    if num < min then\n      min = num\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local min = nums[1]\n    local max = nums[1]\n    for i = 2, #nums do\n        if nums[i] < min then\n            min = nums[i]\n        end\n        if nums[i] > max then\n            max = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for _, n in ipairs(nums) do\n    if n < min then min = n end\n    if n > max then max = n end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max, min = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then max = nums[i] end\n    if nums[i] < min then min = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local min = nums[1]\n    local max = nums[1]\n    for i = 2, #nums do\n        if nums[i] < min then\n            min = nums[i]\n        end\n        if nums[i] > max then\n            max = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local max = nums[1]\n    local min = nums[1]\n    for i = 1, #nums do\n        if nums[i] > max then\n            max = nums[i]\n        end\n        if nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for _, num in ipairs(nums) do\n    if num < min then\n      min = num\n    end\n    if num > max then\n      max = num\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i=1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i,v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local min = nums[1]\n    local max = nums[1]\n    for i = 1, #nums do\n        if nums[i] < min then\n            min = nums[i]\n        end\n        if nums[i] > max then\n            max = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i=1,#nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i,v in ipairs(nums) do\n    if v < min then min = v end\n    if v > max then max = v end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = 0\n  local min = 0\n  for i,v in ipairs(nums) do\n    if i == 1 then\n      max = v\n      min = v\n    else\n      if v > max then\n        max = v\n      end\n      if v < min then\n        min = v\n      end\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local min = nums[1]\n    local max = nums[1]\n    for i = 2, #nums do\n        if nums[i] < min then\n            min = nums[i]\n        end\n        if nums[i] > max then\n            max = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i,v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local min = nums[1]\n    local max = nums[1]\n    for _, num in ipairs(nums) do\n        if num < min then\n            min = num\n        end\n        if num > max then\n            max = num\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    elseif v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local max = nums[1]\n    local min = nums[1]\n    for i = 2, #nums do\n        if nums[i] > max then\n            max = nums[i]\n        end\n        if nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local max = nums[1]\n    local min = nums[1]\n    for i = 1, #nums do\n        if nums[i] > max then\n            max = nums[i]\n        end\n        if nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min, max = nums[1], nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then min = nums[i] end\n    if nums[i] > max then max = nums[i] end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n    local max = nums[1]\n    local min = nums[1]\n    for i=1,#nums do\n        if nums[i] > max then\n            max = nums[i]\n        end\n        if nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i,v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123120,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 1, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to find the difference between largest and smallest value in a given list.\nlocal function big_diff(nums)\n  local max = nums[1]\n  local min = nums[1]\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max - min\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_diff\n    lu.assertEquals(candidate({1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({4, 5, 12}), 8)\n    lu.assertEquals(candidate({9, 2, 3}), 7)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509795,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_475_sort_counter",
  "language": "lua",
  "prompt": "-- Write a function to sort a dictionary by value.\nlocal function sort_counter(dict1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_475_sort_counter.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_counter\n    lu.assertEquals(candidate({['Math'] = 81, ['Physics'] = 83, ['Chemistry'] = 87}), {{'Chemistry', 87}, {'Physics', 83}, {'Math', 81}})\n    lu.assertEquals(candidate({['Math'] = 400, ['Physics'] = 300, ['Chemistry'] = 250}), {{'Math', 400}, {'Physics', 300}, {'Chemistry', 250}})\n    lu.assertEquals(candidate({['Math'] = 900, ['Physics'] = 1000, ['Chemistry'] = 1250}), {{'Chemistry', 1250}, {'Physics', 1000}, {'Math', 900}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[#dict2+1] = {k, v}\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[#dict2 + 1] = {k, v}\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        table.insert(dict2, {k, v})\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "\tlocal dict2 = {}\n\tfor k, v in pairs(dict1) do\n\t\tdict2[v] = k\n\tend\n\treturn dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend"
  ]
}
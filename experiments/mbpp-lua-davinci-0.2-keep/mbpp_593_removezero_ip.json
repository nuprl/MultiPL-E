{
  "name": "mbpp_593_removezero_ip",
  "language": "lua",
  "prompt": "-- Write a function to remove leading zeroes from an ip address.\nlocal function removezero_ip(ip)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_593_removezero_ip.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = removezero_ip\n    lu.assertEquals(candidate('216.08.094.196'), '216.8.94.196')\n    lu.assertEquals(candidate('12.01.024'), '12.1.24')\n    lu.assertEquals(candidate('216.08.094.0196'), '216.8.94.196')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal t = {}\n\tfor v in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, v)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = {}\n\tlocal i = 1\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\tif octet ~= \"0\" then\n\t\t\tret[i] = octet\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = string.gsub(ip, \"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n\treturn (tonumber(o1) or 0)..\".\"..(tonumber(o2) or 0)..\".\"..(tonumber(o3) or 0)..\".\"..(tonumber(o4) or 0)\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n\treturn (tonumber(o1) or 0)..\".\"..(tonumber(o2) or 0)..\".\"..(tonumber(o3) or 0)..\".\"..(tonumber(o4) or 0)\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "  local o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n  return string.format(\"%d.%d.%d.%d\", tonumber(o1), tonumber(o2), tonumber(o3), tonumber(o4))\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tlocal i = 1\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\tif octet ~= \"0\" then\n\t\t\tret[i] = octet\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal t = {}\n\tfor w in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(t, w)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n  return string.format(\"%d.%d.%d.%d\",o1,o2,o3,o4)\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\",tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = \"\"\n\tlocal octet = 0\n\tfor i = 1, #ip do\n\t\tlocal c = ip:sub(i, i)\n\t\tif c == \".\" then\n\t\t\toctet = octet + 1\n\t\t\tret = ret .. \".\"\n\t\telseif c ~= \"0\" or octet == 4 then\n\t\t\tret = ret .. c\n\t\tend\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\"):gsub(\"%.0*\", \".\")\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0+(%d)\", \"%1\")\n\treturn ret\nend",
    "  local ret = string.gsub(ip, \"^0*\", \"\")\n  if ret == \"\" then ret = \"0\" end\n  return ret\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "  local ret = {}\n  for octet in string.gmatch(ip, \"%d+\") do\n    table.insert(ret, tonumber(octet))\n  end\n  return table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tlocal c = 0\n\tfor i in string.gmatch(ip, \"%d+\") do\n\t\tif i == \"0\" then\n\t\t\tc = c + 1\n\t\telse\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = c + 1, 4 do\n\t\tret[#ret + 1] = string.match(ip, \"%d+\", c + 1)\n\t\tc = c + string.len(ret[#ret]) + 1\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\tlocal ip_parts_new = {}\n\tfor i, part in ipairs(ip_parts) do\n\t\tif part == \"0\" and #ip_parts_new == 0 then\n\t\t\ttable.insert(ip_parts_new, \"0\")\n\t\telseif part ~= \"0\" then\n\t\t\ttable.insert(ip_parts_new, part)\n\t\tend\n\tend\n\treturn table.concat(ip_parts_new, \".\")\nend",
    "  local ret = {}\n  for octet in ip:gmatch(\"%d+\") do\n    table.insert(ret, tonumber(octet))\n  end\n  return table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:match(\"^0*(%d+)%.0*(%d+)%.0*(%d+)%.0*(%d+)$\")\n  if ret then\n    return ret\n  else\n    return ip\n  end\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        return \"0\"\n    else\n        return ret\n    end\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = string.gsub(ip, \"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal a, b, c, d = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\ta = tonumber(a)\n\tb = tonumber(b)\n\tc = tonumber(c)\n\td = tonumber(d)\n\treturn string.format(\"%d.%d.%d.%d\", a, b, c, d)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n  return string.format(\"%d.%d.%d.%d\",o1,o2,o3,o4)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = \"\"\n\tlocal zero = false\n\tfor i = 1, #ip do\n\t\tlocal c = ip:sub(i,i)\n\t\tif c == \"0\" and not zero then\n\t\t\tzero = true\n\t\telse\n\t\t\tret = ret .. c\n\t\t\tzero = false\n\t\tend\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, octet)\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "  local ret = string.gsub(ip, \"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ipv4 = ip:match(\"^%d+%.%d+%.%d+%.%d+$\")\n\tif ipv4 then\n\t\tlocal o1,o2,o3,o4 = ip:match(\"^(%d+)%.(%d+)%.(%d+)%.(%d+)$\")\n\t\treturn (\"%d.%d.%d.%d\"):format(tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\n\telse\n\t\tlocal o1,o2,o3,o4,o5,o6,o7,o8 = ip:match(\"^(%x%x):(%x%x):(%x%x):(%x%x):(%x%x):(%x%x):(%x%x):(%x%x)$\")\n\t\treturn (\"%s:%s:%s:%s:%s:%s:%s:%s\"):format(o1,o2,o3,o4,o5,o6,o7,o8)\n\tend\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ip_table = {}\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(ip_table, octet)\n\tend\n\treturn table.concat(ip_table, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0+(%d)\", \"%1\")\n  if ret == ip then\n    return ip\n  else\n    return removezero_ip(ret)\n  end\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn string.format(\"%d.%d.%d.%d\", unpack(t))\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local octets = {ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")}\n  local newip = \"\"\n  for i,v in ipairs(octets) do\n    newip = newip .. (i > 1 and \".\" or \"\") .. tonumber(v)\n  end\n  return newip\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local ret = string.gsub(ip, \"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip\n\tlocal pos = string.find(ip, '%.')\n\tif pos then\n\t\tlocal ip1 = string.sub(ip, 1, pos - 1)\n\t\tlocal ip2 = string.sub(ip, pos + 1)\n\t\tif ip1 == '0' then\n\t\t\tip1 = ''\n\t\tend\n\t\tret = ip1 .. '.' .. removezero_ip(ip2)\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal retval = ip\n\tlocal first, second, third, fourth = string.match(ip, \"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\tif first == \"0\" then\n\t\tretval = second .. \".\" .. third .. \".\" .. fourth\n\telseif second == \"0\" then\n\t\tretval = first .. \".\" .. third .. \".\" .. fourth\n\telseif third == \"0\" then\n\t\tretval = first .. \".\" .. second .. \".\" .. fourth\n\telseif fourth == \"0\" then\n\t\tretval = first .. \".\" .. second .. \".\" .. third\n\tend\n\treturn retval\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif #ret == 0 then\n\t\treturn \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip\n\tif string.sub(ip, 1, 1) == \"0\" then\n\t\tret = string.sub(ip, 2)\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\"):gsub(\"%.0*\", \".\")\n  return ret ~= \"\" and ret or \"0\"\nend",
    "  local o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n  return string.format(\"%d.%d.%d.%d\",tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\treturn table.concat(ip_parts, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tlocal i = 1\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\tif octet ~= \"0\" then\n\t\t\tret[i] = octet\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = {}\n    local n = 0\n    for v in string.gmatch(ip, \"%d+\") do\n        n = n + 1\n        ret[n] = tonumber(v)\n    end\n    return string.format(\"%d.%d.%d.%d\", unpack(ret))\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\treturn table.concat(ip_parts, \".\")\nend",
    "  local o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n  return string.format(\"%d.%d.%d.%d\",o1,o2,o3,o4)\nend",
    "\tlocal a, b, c, d = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\ta = tonumber(a)\n\tb = tonumber(b)\n\tc = tonumber(c)\n\td = tonumber(d)\n\treturn string.format(\"%d.%d.%d.%d\", a, b, c, d)\nend",
    "\tlocal t = {}\n\tfor v in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, v)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local ret = string.gsub(ip, \"^0*\", \"\")\n  if ret == \"\" then\n    ret = 0\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local retval = ip:gsub(\"^0*\", \"\")\n  if retval == \"\" then\n    retval = \"0\"\n  end\n  return retval\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = {}\n  for octet in ip:gmatch(\"%d+\") do\n    table.insert(ret, tonumber(octet))\n  end\n  return table.concat(ret, \".\")\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\treturn table.concat(ip_parts, \".\")\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\treturn table.concat(ip_parts, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ip_table = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_table, octet)\n\tend\n\tlocal ip_table_len = #ip_table\n\tfor i = 1, ip_table_len do\n\t\tif ip_table[i] == \"0\" then\n\t\t\tip_table[i] = nil\n\t\telse\n\t\t\tbreak\n\t\tend\n\tend\n\treturn table.concat(ip_table, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = string.gsub(ip, \"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = 0\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        return \"0\"\n    end\n    return ret\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\tlocal ip_parts_new = {}\n\tfor i, part in ipairs(ip_parts) do\n\t\ttable.insert(ip_parts_new, part:match(\"^0*(%d+)\"))\n\tend\n\treturn table.concat(ip_parts_new, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", tonumber(o1), tonumber(o2), tonumber(o3), tonumber(o4))\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\"):gsub(\"%.0*\", \".\")\n\tif ret == \"\" then\n\t\treturn \"0.0.0.0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n\treturn (tonumber(o1) or 0)..\".\"..(tonumber(o2) or 0)..\".\"..(tonumber(o3) or 0)..\".\"..(tonumber(o4) or 0)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = string.gsub(ip, \"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn o1,o2,o3,o4\nend",
    "\tlocal ret = \"\"\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\tret = ret .. tonumber(octet) .. \".\"\n\tend\n\treturn ret:sub(1, -2)\nend",
    "\tlocal ret = ip:gsub(\"^0+(%d)\", \"%1\")\n\tif ret == ip then\n\t\treturn ip\n\telse\n\t\treturn removezero_ip(ret)\n\tend\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend"
  ]
}
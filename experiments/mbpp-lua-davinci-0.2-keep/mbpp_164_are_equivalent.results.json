{
  "name": "mbpp_164_are_equivalent",
  "language": "lua",
  "prompt": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_164_are_equivalent.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_divisors(num1)\n\tlocal sum2 = sum_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb02jsb6q.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpb02jsb6q.lua:3: in local 'candidate'\n\t/tmp/tmpb02jsb6q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0vn5uchc.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp0vn5uchc.lua:3: in local 'candidate'\n\t/tmp/tmp0vn5uchc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\tif sum1 == sum2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp41fmpaun.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp41fmpaun.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_of_divisors(num1)\n\tlocal sum2 = sum_of_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjs_6ulfq.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpjs_6ulfq.lua:3: in local 'candidate'\n\t/tmp/tmpjs_6ulfq.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfkivz38.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsfkivz38.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5w5mm02k.lua:22: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5w5mm02k.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  if sum1 == sum2 then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoguaxr6j.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpoguaxr6j.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1, sum2 = 0, 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123980,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp83h27s8s.lua:22: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp83h27s8s.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0vn5uchc.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp0vn5uchc.lua:3: in local 'candidate'\n\t/tmp/tmp0vn5uchc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_divisors(num1)\n\tlocal sum2 = sum_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb02jsb6q.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpb02jsb6q.lua:3: in local 'candidate'\n\t/tmp/tmpb02jsb6q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb5ieqf_.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsb5ieqf_.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  if sum1 == sum2 then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoguaxr6j.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpoguaxr6j.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfkivz38.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsfkivz38.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\tif sum1 == sum2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp41fmpaun.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp41fmpaun.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local divisors1 = divisors(num1)\n  local divisors2 = divisors(num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i, v in ipairs(divisors1) do\n    sum1 = sum1 + v\n  end\n  for i, v in ipairs(divisors2) do\n    sum2 = sum2 + v\n  end\n  if sum1 == sum2 then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123980,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpim0ih2ih.lua:3: attempt to call a nil value (global 'divisors')\nstack traceback:\n\t/tmp/tmpim0ih2ih.lua:3: in local 'candidate'\n\t/tmp/tmpim0ih2ih.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\tif sum1 == sum2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp41fmpaun.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp41fmpaun.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb5ieqf_.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsb5ieqf_.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfg5rrjkj.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpfg5rrjkj.lua:3: in function 'candidate'\n\t/tmp/tmpfg5rrjkj.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local divisors1 = get_divisors(num1)\n  local divisors2 = get_divisors(num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i, v in ipairs(divisors1) do\n    sum1 = sum1 + v\n  end\n  for i, v in ipairs(divisors2) do\n    sum2 = sum2 + v\n  end\n  if sum1 == sum2 then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123980,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq3bt3fv6.lua:3: attempt to call a nil value (global 'get_divisors')\nstack traceback:\n\t/tmp/tmpq3bt3fv6.lua:3: in local 'candidate'\n\t/tmp/tmpq3bt3fv6.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb5ieqf_.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsb5ieqf_.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\treturn sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3nyeeqtl.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp3nyeeqtl.lua:3: in local 'candidate'\n\t/tmp/tmp3nyeeqtl.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_of_divisors(num1)\n\tlocal sum2 = sum_of_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjs_6ulfq.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpjs_6ulfq.lua:3: in local 'candidate'\n\t/tmp/tmpjs_6ulfq.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0vn5uchc.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp0vn5uchc.lua:3: in local 'candidate'\n\t/tmp/tmp0vn5uchc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfkivz38.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsfkivz38.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\tif sum1 == sum2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp41fmpaun.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp41fmpaun.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_of_divisors(num1)\n\tlocal sum2 = sum_of_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjs_6ulfq.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpjs_6ulfq.lua:3: in local 'candidate'\n\t/tmp/tmpjs_6ulfq.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\tif sum1 == sum2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp41fmpaun.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp41fmpaun.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5w5mm02k.lua:22: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5w5mm02k.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_divisors(num1)\n\tlocal sum2 = sum_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb02jsb6q.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpb02jsb6q.lua:3: in local 'candidate'\n\t/tmp/tmpb02jsb6q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp6uytqe1.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpp6uytqe1.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local divisors1 = divisors(num1)\n    local divisors2 = divisors(num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, #divisors1 do\n        sum1 = sum1 + divisors1[i]\n    end\n    for i = 1, #divisors2 do\n        sum2 = sum2 + divisors2[i]\n    end\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123980,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnnygf707.lua:3: attempt to call a nil value (global 'divisors')\nstack traceback:\n\t/tmp/tmpnnygf707.lua:3: in local 'candidate'\n\t/tmp/tmpnnygf707.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  if sum1 == sum2 then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoguaxr6j.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpoguaxr6j.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfg5rrjkj.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpfg5rrjkj.lua:3: in function 'candidate'\n\t/tmp/tmpfg5rrjkj.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_of_divisors(num1)\n\tlocal sum2 = sum_of_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjs_6ulfq.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpjs_6ulfq.lua:3: in local 'candidate'\n\t/tmp/tmpjs_6ulfq.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb5ieqf_.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsb5ieqf_.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, num1 do\n    if num1 % i == 0 then\n      sum1 = sum1 + i\n    end\n  end\n  for i = 1, num2 do\n    if num2 % i == 0 then\n      sum2 = sum2 + i\n    end\n  end\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsb5ieqf_.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsb5ieqf_.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_divisors(num1)\n\tlocal sum2 = sum_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb02jsb6q.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpb02jsb6q.lua:3: in local 'candidate'\n\t/tmp/tmpb02jsb6q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn3eglvnk.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpn3eglvnk.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\tif sum1 == sum2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp41fmpaun.lua:27: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp41fmpaun.lua:27: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_divisors(num1) == sum_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq56qbyt5.lua:3: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpq56qbyt5.lua:3: in function 'candidate'\n\t/tmp/tmpq56qbyt5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfkivz38.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsfkivz38.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0s8nqn59.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp0s8nqn59.lua:3: in local 'candidate'\n\t/tmp/tmp0s8nqn59.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzs1x483q.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpzs1x483q.lua:3: in local 'candidate'\n\t/tmp/tmpzs1x483q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local divisors1 = divisors(num1)\n  local divisors2 = divisors(num2)\n  local sum1 = 0\n  local sum2 = 0\n  for _, v in ipairs(divisors1) do\n    sum1 = sum1 + v\n  end\n  for _, v in ipairs(divisors2) do\n    sum2 = sum2 + v\n  end\n  if sum1 == sum2 then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123980,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7q022_lz.lua:3: attempt to call a nil value (global 'divisors')\nstack traceback:\n\t/tmp/tmp7q022_lz.lua:3: in local 'candidate'\n\t/tmp/tmp7q022_lz.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1, sum2 = 0, 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123980,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp83h27s8s.lua:22: expected: true, actual: false\nstack traceback:\n\t/tmp/tmp83h27s8s.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0vn5uchc.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp0vn5uchc.lua:3: in local 'candidate'\n\t/tmp/tmp0vn5uchc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123979,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp6uytqe1.lua:23: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpp6uytqe1.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxjlpmc8d.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpxjlpmc8d.lua:3: in local 'candidate'\n\t/tmp/tmpxjlpmc8d.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp024z9bj0.lua:3: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp024z9bj0.lua:3: in local 'candidate'\n\t/tmp/tmp024z9bj0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n    local sum1 = sum_of_divisors(num1)\n    local sum2 = sum_of_divisors(num2)\n    return sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rlpx58l.lua:3: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0rlpx58l.lua:3: in function 'candidate'\n\t/tmp/tmp0rlpx58l.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n\tlocal sum1 = sum_divisors(num1)\n\tlocal sum2 = sum_divisors(num2)\n\treturn sum1 == sum2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb02jsb6q.lua:3: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpb02jsb6q.lua:3: in local 'candidate'\n\t/tmp/tmpb02jsb6q.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
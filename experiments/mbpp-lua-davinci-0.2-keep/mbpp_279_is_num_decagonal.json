{
  "name": "mbpp_279_is_num_decagonal",
  "language": "lua",
  "prompt": "-- Write a function to find the nth decagonal number.\nlocal function is_num_decagonal(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_num_decagonal\n    lu.assertEquals(candidate(3), 27)\n    lu.assertEquals(candidate(7), 175)\n    lu.assertEquals(candidate(10), 370)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local n = math.sqrt(2 * n / 5 + 1/4)\n    return n == math.floor(n)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = math.sqrt(2*n/5 + 1/4)\n\treturn nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = (3 * n^2 - n) / 2\n\treturn nth_decagonal\nend",
    "  local nth = math.sqrt(n*2)\n  return nth == math.floor(nth)\nend",
    "\tlocal n = tonumber(n)\n\tlocal d = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn d == math.floor(d)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n  return nth_decagonal_sqrt == nth_decagonal_sqrt_int\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth_decagonal = (3*n^2 - n) / 2\n    local nth_pentagonal = (1/6) * (math.sqrt(24*nth_decagonal + 1) + 1)\n    if math.floor(nth_pentagonal) == nth_pentagonal then\n        return true\n    end\n    return false\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(4*n + 1) + 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local n2 = (math.sqrt(40*n + 9) + 3)/10\n  return n2 == math.floor(n2)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(40*n+9) - 3) / 10\n\treturn nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local d = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return d == math.floor(d)\nend",
    "    local x = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n    return x == math.floor(x)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  if nth_decagonal == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(40*n+9)-3)/10\n    return nth == math.floor(nth)\nend",
    "  local num = (math.sqrt(1 + 4 * 2 * n) + 1) / 2\n  return num == math.floor(num)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = math.sqrt(n * 2)\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth = math.sqrt(n * 2)\n  return nth == math.floor(nth)\nend",
    "  local p = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return p == math.floor(p)\nend",
    "\tlocal nth_decagonal = (3 * n^2 - n) / 2\n\treturn nth_decagonal\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3*n^2 - n) / 2\n    local nth_pentagonal = (math.sqrt(24*nth_decagonal + 1) + 1) / 6\n    local nth_triangular = (-1 + math.sqrt(1 + 8*nth_decagonal)) / 2\n    if nth_pentagonal == math.floor(nth_pentagonal) and\n       nth_triangular == math.floor(nth_triangular) then\n        return true\n    end\n    return false\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local nth_decagonal = n * (3 * n - 2)\n    local nth_triangle = math.sqrt(nth_decagonal * 2)\n    if nth_triangle % 1 == 0 then\n        return true\n    end\n    return false\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n    return nth_decagonal_sqrt == math.floor(nth_decagonal_sqrt)\nend",
    "  local n = tonumber(n)\n  if n == nil then return false end\n  local p = (math.sqrt(4*n + 1) + 1) / 2\n  return p == math.floor(p)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = (3*n^2 - n) / 2\n\treturn nth_decagonal\nend",
    "    local n2 = (math.sqrt(40*n+9)-3)/10\n    return n2 == math.floor(n2)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = math.sqrt(2*n/5 + 1/4)\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = (1 + math.sqrt(1 + 24 * nth_decagonal)) / 6\n  return nth_pentagonal == math.floor(nth_pentagonal)\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n  return nth_decagonal_sqrt_int == nth_decagonal_sqrt\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    if nth == math.floor(nth) then\n        return true\n    else\n        return false\n    end\nend",
    "    local nth_decagonal = (3*n^2 - n) / 2\n    return nth_decagonal % 1 == 0\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n    local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n    return nth_decagonal_sqrt == nth_decagonal_sqrt_int\nend",
    "    local nth_decagonal = (3*n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(40 * n + 9) + 3) / 10\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = math.sqrt(n * 2)\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = (3*n^2 - n) / 2\n\treturn nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "\tlocal x = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn x == math.floor(x)\nend",
    "\tlocal n1 = math.sqrt(1 + 4 * 2 * n)\n\tlocal n2 = math.sqrt(1 + 4 * 2 * n)\n\treturn n1 == math.floor(n1) or n2 == math.floor(n2)\nend",
    "  local nth_decagonal = ((3 * n^2) - n) / 2\n  return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n    local nth_triangular = (-1 + math.sqrt(1 + 8 * nth_decagonal)) / 2\n    return nth_decagonal, nth_pentagonal, nth_triangular\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n    return nth_decagonal_sqrt == math.floor(nth_decagonal_sqrt)\nend",
    "\tlocal num = (math.sqrt(1 + 4 * 3 * 2 * n) - 1) / 6\n\treturn num == math.floor(num)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local d = (math.sqrt(4*n + 1) + 1)/2\n  return d == math.floor(d)\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "    local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return num == math.floor(num)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = n * (3 * n - 1) / 2\n  local nth_hexagonal = n * (2 * n - 1)\n  return nth_decagonal == nth_pentagonal and nth_decagonal == nth_hexagonal\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = math.floor((math.sqrt(24 * nth_decagonal + 1) + 1) / 6)\n  local nth_hexagonal = math.floor((math.sqrt(8 * nth_decagonal + 1) + 1) / 4)\n  return is_num_pentagonal(nth_pentagonal) and is_num_hexagonal(nth_hexagonal)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  local nth_pentagonal = (n * (3 * n - 1)) / 2\n  return nth_decagonal == nth_pentagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local x = (math.sqrt(4 * n + 1) + 1) / 2\n    return x == math.floor(x)\nend",
    "\tlocal n1 = (math.sqrt(40*n+9)-3)/10\n\treturn n1 == math.floor(n1)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = math.sqrt(n * 2)\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = math.sqrt(2*n/5 + 1/4)\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_floor = math.floor(nth_decagonal_sqrt)\n  return nth_decagonal_sqrt == nth_decagonal_sqrt_floor\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth_decagonal = (3*n^2 - n) / 2\n  if nth_decagonal % 1 == 0 then\n    return true\n  else\n    return false\n  end\nend",
    "    local n = math.sqrt(2 * n / 3)\n    return n == math.floor(n)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  return nth_decagonal\nend",
    "\tlocal nth = (math.sqrt(4*n + 1) + 1)/2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(40*n+9)-3)/10\n  return nth == math.floor(nth)\nend",
    "    local n1 = (math.sqrt(40 * n + 9) + 3) / 10\n    return n1 == math.floor(n1)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4*2*n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    return (math.sqrt(1 + 4 * 2 * n) - 1) % 4 == 0\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local n2 = 2 * n\n  local x = math.sqrt(n2)\n  return x == math.floor(x)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local d = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n  return d == math.floor(d)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local p = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return p == math.floor(p)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "\tlocal n1 = (math.sqrt(40*n+9)-3)/10\n\treturn n1 == math.floor(n1)\nend",
    "    return is_num_pentagonal(n) and is_num_triangular(n)\nend",
    "    local nth = (math.sqrt(4*n + 1) + 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = n * (3 * n - 1) / 2\n  local nth_hexagonal = n * (2 * n - 1)\n  return nth_decagonal == nth_pentagonal and nth_decagonal == nth_hexagonal\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  return nth_decagonal % 1 == 0\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n  if nth_decagonal_sqrt_int * nth_decagonal_sqrt_int == nth_decagonal then\n    return true\n  else\n    return false\n  end\nend",
    "    local x = (math.sqrt(40 * n + 9) + 3) / 10\n    return x == math.floor(x)\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n  local nth_triangular = (-1 + math.sqrt(1 + 8 * nth_decagonal)) / 2\n  return nth_decagonal == math.floor(nth_decagonal)\n    and nth_pentagonal == math.floor(nth_pentagonal)\n    and nth_triangular == math.floor(nth_triangular)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n    local nth_triangular = (-1 + math.sqrt(1 + 8 * nth_decagonal)) / 2\n    return nth_decagonal, nth_pentagonal, nth_triangular\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal n1 = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn n1 == math.floor(n1)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3*n^2 - n)/2\n    local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n    local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n    return nth_decagonal_sqrt == nth_decagonal_sqrt_int\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "\tlocal d = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn d == math.floor(d)\nend"
  ]
}
{
  "name": "mbpp_237_check_occurences",
  "language": "lua",
  "prompt": "-- Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.\nlocal function check_occurences(test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_237_check_occurences.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_occurences\n    lu.assertEquals(candidate({{3, 1}, {1, 3}, {2, 5}, {5, 2}, {6, 3}}), {[{1, 3}] = 2, [{2, 5}] = 2, [{3, 6}] = 1})\n    lu.assertEquals(candidate({{4, 2}, {2, 4}, {3, 6}, {6, 3}, {7, 4}}), {[{2, 4}] = 2, [{3, 6}] = 2, [{4, 7}] = 1})\n    lu.assertEquals(candidate({{13, 2}, {11, 23}, {12, 25}, {25, 12}, {16, 23}}), {[{2, 13}] = 1, [{11, 23}] = 1, [{12, 25}] = 2, [{16, 23}] = 1})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "  local dict = {}\n  for _, v in ipairs(test_list) do\n    if dict[v] == nil then\n      dict[v] = 1\n    else\n      dict[v] = dict[v] + 1\n    end\n  end\n  return dict\nend",
    "  local occurences = {}\n  for _, tuple in ipairs(test_list) do\n    if occurences[tuple] then\n      occurences[tuple] = occurences[tuple] + 1\n    else\n      occurences[tuple] = 1\n    end\n  end\n  return occurences\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, ',')\n        if occurences[key] then\n            occurences[key] = occurences[key] + 1\n        else\n            occurences[key] = 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if occurences[key] then\n            occurences[key] = occurences[key] + 1\n        else\n            occurences[key] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "  local dict = {}\n  for _, v in ipairs(test_list) do\n    if dict[v] then\n      dict[v] = dict[v] + 1\n    else\n      dict[v] = 1\n    end\n  end\n  return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "    local count = {}\n    for _, v in ipairs(test_list) do\n        if count[v] == nil then\n            count[v] = 1\n        else\n            count[v] = count[v] + 1\n        end\n    end\n    return count\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        if occurences[key] == nil then\n            occurences[key] = 1\n        else\n            occurences[key] = occurences[key] + 1\n        end\n    end\n    return occurences\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] == nil then\n      occurences[v] = 1\n    else\n      occurences[v] = occurences[v] + 1\n    end\n  end\n  return occurences\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] then\n      occurences[v] = occurences[v] + 1\n    else\n      occurences[v] = 1\n    end\n  end\n  return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] then\n      occurences[v] = occurences[v] + 1\n    else\n      occurences[v] = 1\n    end\n  end\n  return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "  local dict = {}\n  for _,v in ipairs(test_list) do\n    if dict[v] == nil then\n      dict[v] = 1\n    else\n      dict[v] = dict[v] + 1\n    end\n  end\n  return dict\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] == nil then\n      occurences[v] = 1\n    else\n      occurences[v] = occurences[v] + 1\n    end\n  end\n  return occurences\nend",
    "  local result = {}\n  for _, v in ipairs(test_list) do\n    if result[v] then\n      result[v] = result[v] + 1\n    else\n      result[v] = 1\n    end\n  end\n  return result\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] == nil then\n            occurences[tuple] = 1\n        else\n            occurences[tuple] = occurences[tuple] + 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "  local result = {}\n  for _, v in ipairs(test_list) do\n    if result[v] then\n      result[v] = result[v] + 1\n    else\n      result[v] = 1\n    end\n  end\n  return result\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "\tlocal occurences = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tif occurences[tuple] then\n\t\t\toccurences[tuple] = occurences[tuple] + 1\n\t\telse\n\t\t\toccurences[tuple] = 1\n\t\tend\n\tend\n\treturn occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] then\n      occurences[v] = occurences[v] + 1\n    else\n      occurences[v] = 1\n    end\n  end\n  return occurences\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "    local dict = {}\n    for i,v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "\tlocal dict = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tif dict[tuple] then\n\t\t\tdict[tuple] = dict[tuple] + 1\n\t\telse\n\t\t\tdict[tuple] = 1\n\t\tend\n\tend\n\treturn dict\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "  local dict = {}\n  for _, v in ipairs(test_list) do\n    if dict[v] then\n      dict[v] = dict[v] + 1\n    else\n      dict[v] = 1\n    end\n  end\n  return dict\nend",
    "\tlocal occurences = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tif occurences[tuple] == nil then\n\t\t\toccurences[tuple] = 1\n\t\telse\n\t\t\toccurences[tuple] = occurences[tuple] + 1\n\t\tend\n\tend\n\treturn occurences\nend",
    "    local occurences = {}\n    for i, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "\tlocal dict = {}\n\tfor i,v in ipairs(test_list) do\n\t\tif dict[v] == nil then\n\t\t\tdict[v] = 1\n\t\telse\n\t\t\tdict[v] = dict[v] + 1\n\t\tend\n\tend\n\treturn dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "  local dict = {}\n  for _, v in pairs(test_list) do\n    if dict[v] then\n      dict[v] = dict[v] + 1\n    else\n      dict[v] = 1\n    end\n  end\n  return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "\tlocal occurences = {}\n\tfor _, v in pairs(test_list) do\n\t\tif occurences[v] then\n\t\t\toccurences[v] = occurences[v] + 1\n\t\telse\n\t\t\toccurences[v] = 1\n\t\tend\n\tend\n\treturn occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "  local occurences = {}\n  for _, tuple in ipairs(test_list) do\n    if occurences[tuple] == nil then\n      occurences[tuple] = 1\n    else\n      occurences[tuple] = occurences[tuple] + 1\n    end\n  end\n  return occurences\nend",
    "\tlocal dict = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif dict[v] then\n\t\t\tdict[v] = dict[v] + 1\n\t\telse\n\t\t\tdict[v] = 1\n\t\tend\n\tend\n\treturn dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in pairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "  local result = {}\n  for _, v in ipairs(test_list) do\n    if result[v] then\n      result[v] = result[v] + 1\n    else\n      result[v] = 1\n    end\n  end\n  return result\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if occurences[key] then\n            occurences[key] = occurences[key] + 1\n        else\n            occurences[key] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "\tlocal result = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif result[v] then\n\t\t\tresult[v] = result[v] + 1\n\t\telse\n\t\t\tresult[v] = 1\n\t\tend\n\tend\n\treturn result\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        occurences[key] = (occurences[key] or 0) + 1\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, value in pairs(test_list) do\n        if occurences[value] == nil then\n            occurences[value] = 1\n        else\n            occurences[value] = occurences[value] + 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] then\n            dict[tuple] = dict[tuple] + 1\n        else\n            dict[tuple] = 1\n        end\n    end\n    return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] then\n      occurences[v] = occurences[v] + 1\n    else\n      occurences[v] = 1\n    end\n  end\n  return occurences\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, tuple in pairs(test_list) do\n        if dict[tuple] then\n            dict[tuple] = dict[tuple] + 1\n        else\n            dict[tuple] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "\tlocal dict = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tif dict[tuple] then\n\t\t\tdict[tuple] = dict[tuple] + 1\n\t\telse\n\t\t\tdict[tuple] = 1\n\t\tend\n\tend\n\treturn dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        dict[v] = (dict[v] or 0) + 1\n    end\n    return dict\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if not occurences[v] then\n      occurences[v] = 1\n    else\n      occurences[v] = occurences[v] + 1\n    end\n  end\n  return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "\tlocal occurences = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif occurences[v] then\n\t\t\toccurences[v] = occurences[v] + 1\n\t\telse\n\t\t\toccurences[v] = 1\n\t\tend\n\tend\n\treturn occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "\tlocal dict = {}\n\tfor _, v in pairs(test_list) do\n\t\tif dict[v] == nil then\n\t\t\tdict[v] = 1\n\t\telse\n\t\t\tdict[v] = dict[v] + 1\n\t\tend\n\tend\n\treturn dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        if result[key] then\n            result[key] = result[key] + 1\n        else\n            result[key] = 1\n        end\n    end\n    return result\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "  local result = {}\n  for _, v in ipairs(test_list) do\n    if result[v] == nil then\n      result[v] = 1\n    else\n      result[v] = result[v] + 1\n    end\n  end\n  return result\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for i, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] then\n            dict[tuple] = dict[tuple] + 1\n        else\n            dict[tuple] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "\tlocal occurences = {}\n\tfor _, value in pairs(test_list) do\n\t\tif occurences[value] == nil then\n\t\t\toccurences[value] = 1\n\t\telse\n\t\t\toccurences[value] = occurences[value] + 1\n\t\tend\n\tend\n\treturn occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] == nil then\n      occurences[v] = 1\n    else\n      occurences[v] = occurences[v] + 1\n    end\n  end\n  return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "  local counts = {}\n  for _, tuple in ipairs(test_list) do\n    local key = table.concat(tuple, ',')\n    counts[key] = (counts[key] or 0) + 1\n  end\n  return counts\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] then\n            dict[tuple] = dict[tuple] + 1\n        else\n            dict[tuple] = 1\n        end\n    end\n    return dict\nend",
    "  local occurences = {}\n  for _, v in pairs(test_list) do\n    if occurences[v] == nil then\n      occurences[v] = 1\n    else\n      occurences[v] = occurences[v] + 1\n    end\n  end\n  return occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] then\n            dict[tuple] = dict[tuple] + 1\n        else\n            dict[tuple] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "\tlocal dict = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif dict[v] then\n\t\t\tdict[v] = dict[v] + 1\n\t\telse\n\t\t\tdict[v] = 1\n\t\tend\n\tend\n\treturn dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, ',')\n        occurences[key] = (occurences[key] or 0) + 1\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, v in pairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] then\n            dict[tuple] = dict[tuple] + 1\n        else\n            dict[tuple] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for i, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if occurences[key] then\n            occurences[key] = occurences[key] + 1\n        else\n            occurences[key] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        dict[v] = (dict[v] or 0) + 1\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] then\n            dict[tuple] = dict[tuple] + 1\n        else\n            dict[tuple] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for i, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "    local occurences = {}\n    for i, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in pairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, ',')\n        if occurences[key] then\n            occurences[key] = occurences[key] + 1\n        else\n            occurences[key] = 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "\tlocal occurences = {}\n\tfor _,v in ipairs(test_list) do\n\t\tif occurences[v] then\n\t\t\toccurences[v] = occurences[v] + 1\n\t\telse\n\t\t\toccurences[v] = 1\n\t\tend\n\tend\n\treturn occurences\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "  local occurences = {}\n  for _, v in ipairs(test_list) do\n    if occurences[v] then\n      occurences[v] = occurences[v] + 1\n    else\n      occurences[v] = 1\n    end\n  end\n  return occurences\nend",
    "    local occurences = {}\n    for _, v in pairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "  local dict = {}\n  for _, tuple in ipairs(test_list) do\n    if dict[tuple] then\n      dict[tuple] = dict[tuple] + 1\n    else\n      dict[tuple] = 1\n    end\n  end\n  return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] then\n            occurences[v] = occurences[v] + 1\n        else\n            occurences[v] = 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for _, tuple in ipairs(test_list) do\n        if result[tuple] then\n            result[tuple] = result[tuple] + 1\n        else\n            result[tuple] = 1\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] then\n            result[v] = result[v] + 1\n        else\n            result[v] = 1\n        end\n    end\n    return result\nend",
    "    local dict = {}\n    for _, tuple in ipairs(test_list) do\n        if dict[tuple] == nil then\n            dict[tuple] = 1\n        else\n            dict[tuple] = dict[tuple] + 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if occurences[key] then\n            occurences[key] = occurences[key] + 1\n        else\n            occurences[key] = 1\n        end\n    end\n    return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "    local dict = {}\n    for i, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "  local dict = {}\n  for i, v in ipairs(test_list) do\n    if dict[v] == nil then\n      dict[v] = 1\n    else\n      dict[v] = dict[v] + 1\n    end\n  end\n  return dict\nend",
    "  local occurences = {}\n  for _, tuple in ipairs(test_list) do\n    local key = table.concat(tuple, \",\")\n    if occurences[key] then\n      occurences[key] = occurences[key] + 1\n    else\n      occurences[key] = 1\n    end\n  end\n  return occurences\nend",
    "    local result = {}\n    for _, v in ipairs(test_list) do\n        if result[v] == nil then\n            result[v] = 1\n        else\n            result[v] = result[v] + 1\n        end\n    end\n    return result\nend",
    "\tlocal occurences = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif occurences[v] == nil then\n\t\t\toccurences[v] = 1\n\t\telse\n\t\t\toccurences[v] = occurences[v] + 1\n\t\tend\n\tend\n\treturn occurences\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        if occurences[tuple] then\n            occurences[tuple] = occurences[tuple] + 1\n        else\n            occurences[tuple] = 1\n        end\n    end\n    return occurences\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] then\n            dict[v] = dict[v] + 1\n        else\n            dict[v] = 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, v in ipairs(test_list) do\n        if occurences[v] == nil then\n            occurences[v] = 1\n        else\n            occurences[v] = occurences[v] + 1\n        end\n    end\n    return occurences\nend",
    "  local dict = {}\n  for _, tuple in ipairs(test_list) do\n    if dict[tuple] == nil then\n      dict[tuple] = 1\n    else\n      dict[tuple] = dict[tuple] + 1\n    end\n  end\n  return dict\nend",
    "    local dict = {}\n    for _, v in ipairs(test_list) do\n        if dict[v] == nil then\n            dict[v] = 1\n        else\n            dict[v] = dict[v] + 1\n        end\n    end\n    return dict\nend",
    "    local occurences = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, ',')\n        occurences[key] = (occurences[key] or 0) + 1\n    end\n    return occurences\nend"
  ]
}
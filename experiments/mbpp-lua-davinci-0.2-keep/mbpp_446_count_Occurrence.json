{
  "name": "mbpp_446_count_Occurrence",
  "language": "lua",
  "prompt": "-- Write a python function to count the occurence of all elements of list in a tuple.\nlocal function count_Occurrence(tup, lst)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Occurrence\n    lu.assertEquals(candidate({'a', 'a', 'c', 'b', 'd'}, {'a', 'b'}), 3)\n    lu.assertEquals(candidate({1, 2, 3, 1, 4, 6, 7, 1, 4}, {1, 4, 7}), 6)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6}, {1, 2}), 2)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local count = 0\n    for _, v in ipairs(tup) do\n        for _, v2 in ipairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, v in ipairs(lst) do\n        for _, v2 in ipairs(tup) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, v in ipairs(lst) do\n        for _, v2 in ipairs(tup) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, v in ipairs(tup) do\n        for _, v2 in ipairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, v in ipairs(tup) do\n        for _, v2 in ipairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local count = 0\n  for i = 1, #tup do\n    for j = 1, #lst do\n      if tup[i] == lst[j] then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #lst do\n        for j = 1, #tup do\n            if lst[i] == tup[j] then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, v in ipairs(tup) do\n        for _, v2 in ipairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, val in ipairs(tup) do\n        for _, val2 in ipairs(lst) do\n            if val == val2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "\tlocal count = 0\n\tfor _, v in ipairs(tup) do\n\t\tfor _, v2 in ipairs(lst) do\n\t\t\tif v == v2 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "  local count = 0\n  for _, val in ipairs(lst) do\n    for _, val2 in ipairs(tup) do\n      if val == val2 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for _, v in ipairs(tup) do\n        for _, v2 in ipairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local t = {}\n  for k, v in pairs(lst) do\n    t[v] = 0\n  end\n  for k, v in pairs(tup) do\n    if t[v] then\n      t[v] = t[v] + 1\n    end\n  end\n  return t\nend",
    "    local count = 0\n    for _, v in pairs(tup) do\n        for _, v2 in pairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, v in ipairs(tup) do\n        for _, v2 in ipairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i, v in ipairs(lst) do\n        for j, k in ipairs(tup) do\n            if v == k then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for _, v in ipairs(tup) do\n        for _, v2 in ipairs(lst) do\n            if v == v2 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #tup do\n        for j = 1, #lst do\n            if tup[i] == lst[j] then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #tup do\n        for j = 1, #lst do\n            if tup[i] == lst[j] then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #tup do\n        for j = 1, #lst do\n            if tup[i] == lst[j] then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend"
  ]
}
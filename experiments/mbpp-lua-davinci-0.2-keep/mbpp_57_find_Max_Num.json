{
  "name": "mbpp_57_find_Max_Num",
  "language": "lua",
  "prompt": "-- Write a python function to find the largest number that can be formed with the given list of digits.\nlocal function find_Max_Num(arr)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_Max_Num\n    lu.assertEquals(candidate({1, 2, 3}), 321)\n    lu.assertEquals(candidate({4, 5, 6, 1}), 6541)\n    lu.assertEquals(candidate({1, 2, 3, 9}), 9321)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = arr[i]\n        local num_str = tostring(num)\n        local num_len = #num_str\n        local num_arr = {}\n        for j = 1, num_len do\n            num_arr[j] = tonumber(num_str:sub(j, j))\n        end\n        table.sort(num_arr, function(a, b) return a > b end)\n        local num_str = \"\"\n        for j = 1, num_len do\n            num_str = num_str .. tostring(num_arr[j])\n        end\n        local num = tonumber(num_str)\n        if num > max_num then\n            max_num = num\n        end\n    end\n    return max_num\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[j] > arr[i] then\n                num = num * 10 + arr[j]\n            end\n        end\n        num = num * 10 + arr[i]\n        if num > max_num then\n            max_num = num\n        end\n    end\n    return max_num\nend",
    "    local max_num = 0\n    local num_str = \"\"\n    for i = 1, #arr do\n        num_str = num_str .. arr[i]\n    end\n    max_num = tonumber(num_str)\n    return max_num\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[j] > num then\n                num = arr[j]\n                arr[j] = 0\n            end\n        end\n        max_num = max_num * 10 + num\n    end\n    return max_num\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        max_num = max_num * 10 + arr[i]\n    end\n    return max_num\nend",
    "\tlocal max_num = 0\n\tfor i = 1, #arr do\n\t\tfor j = i + 1, #arr do\n\t\t\tif arr[i] < arr[j] then\n\t\t\t\tarr[i], arr[j] = arr[j], arr[i]\n\t\t\tend\n\t\tend\n\tend\n\tfor i = 1, #arr do\n\t\tmax_num = max_num * 10 + arr[i]\n\tend\n\treturn max_num\nend",
    "    local max_num = 0\n    local num = 0\n    local n = #arr\n    for i = 1, n do\n        for j = i + 1, n do\n            if arr[i] < arr[j] then\n                arr[i], arr[j] = arr[j], arr[i]\n            end\n        end\n    end\n    for i = 1, n do\n        num = num * 10 + arr[i]\n    end\n    max_num = num\n    return max_num\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = arr[i]\n        for j = 1, #arr do\n            if i ~= j then\n                num = num * 10 + arr[j]\n            end\n        end\n        if num > max_num then\n            max_num = num\n        end\n    end\n    return max_num\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[j] ~= -1 then\n                num = num * 10 + arr[j]\n                arr[j] = -1\n                break\n            end\n        end\n        max_num = max_num * 10 + num\n    end\n    return max_num\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[i] > arr[j] then\n                num = num + 1\n            end\n        end\n        max_num = max_num + num * 10^(#arr - i)\n    end\n    return max_num\nend",
    "    local max_num = 0\n    local temp = 0\n    for i = 1, #arr do\n        for j = 1, #arr do\n            if arr[i] > arr[j] then\n                temp = arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n            end\n        end\n    end\n    for i = 1, #arr do\n        max_num = max_num * 10 + arr[i]\n    end\n    return max_num\nend",
    "  local max_num = 0\n  for i = 1, #arr do\n    max_num = max_num * 10 + arr[i]\n  end\n  return max_num\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = arr[i]\n        for j = 1, #arr do\n            if i ~= j then\n                num = num * 10 + arr[j]\n            end\n        end\n        if num > max_num then\n            max_num = num\n        end\n    end\n    return max_num\nend",
    "    local max = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[j] ~= -1 then\n                num = num * 10 + arr[j]\n                arr[j] = -1\n                break\n            end\n        end\n        max = math.max(max, num)\n    end\n    return max\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[j] ~= -1 then\n                num = num * 10 + arr[j]\n                arr[j] = -1\n                break\n            end\n        end\n        max_num = num\n    end\n    return max_num\nend",
    "    local max = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            num = num * 10 + arr[j]\n        end\n        if num > max then\n            max = num\n        end\n        local temp = arr[1]\n        for j = 1, #arr - 1 do\n            arr[j] = arr[j + 1]\n        end\n        arr[#arr] = temp\n    end\n    return max\nend",
    "    local max = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[i] > arr[j] then\n                num = num + 1\n            end\n        end\n        max = math.max(max, num)\n    end\n    return max\nend",
    "    local max_num = 0\n    for i = 1, #arr do\n        for j = i + 1, #arr do\n            if arr[i] < arr[j] then\n                arr[i], arr[j] = arr[j], arr[i]\n            end\n        end\n    end\n    for i = 1, #arr do\n        max_num = max_num * 10 + arr[i]\n    end\n    return max_num\nend",
    "    local max = 0\n    for i = 1, #arr do\n        local num = 0\n        for j = 1, #arr do\n            if arr[j] ~= -1 then\n                num = num * 10 + arr[j]\n                arr[j] = -1\n                break\n            end\n        end\n        max = math.max(max, num)\n    end\n    return max\nend",
    "\tlocal max_num = 0\n\tfor i = 1, #arr do\n\t\tfor j = 1, #arr do\n\t\t\tif arr[i] > arr[j] then\n\t\t\t\tarr[i], arr[j] = arr[j], arr[i]\n\t\t\tend\n\t\tend\n\tend\n\tfor i = 1, #arr do\n\t\tmax_num = max_num * 10 + arr[i]\n\tend\n\treturn max_num\nend"
  ]
}
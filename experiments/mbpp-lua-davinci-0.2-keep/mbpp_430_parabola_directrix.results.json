{
  "name": "mbpp_430_parabola_directrix",
  "language": "lua",
  "prompt": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b / (2 * a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wl0y4dp.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmp5wl0y4dp.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c) / (4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvyr1mua8.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpvyr1mua8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -b / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd9itpmxb.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmpd9itpmxb.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c/b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp1vcb0s6.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpp1vcb0s6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -b / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd9itpmxb.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmpd9itpmxb.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4sr9_fda.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp4sr9_fda.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b / (2 * a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wl0y4dp.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmp5wl0y4dp.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu73506yo.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmpu73506yo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -(b / (2 * a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp50wid0y3.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmp50wid0y3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdy1oz7b8.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpdy1oz7b8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplqb2kna7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmplqb2kna7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpofs6u4us.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpofs6u4us.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu73506yo.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmpu73506yo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4sr9_fda.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp4sr9_fda.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c) / (4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvyr1mua8.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpvyr1mua8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpofs6u4us.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpofs6u4us.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdy1oz7b8.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpdy1oz7b8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe50vsss.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpfe50vsss.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplqb2kna7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmplqb2kna7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c/b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp1vcb0s6.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpp1vcb0s6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -(b^2 - 4*a*c) / (4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdw84tpto.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpdw84tpto.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpofs6u4us.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpofs6u4us.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(2*a*c)/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0xzb5z2.lua:9: expected: -198, actual: -2.2222222222222\nstack traceback:\n\t/tmp/tmpk0xzb5z2.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpofs6u4us.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpofs6u4us.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpofs6u4us.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpofs6u4us.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b * b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqd_1qvvl.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqd_1qvvl.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b*b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeuwi8jje.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpeuwi8jje.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn (2*a*c - b^2)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp44plrpa8.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmp44plrpa8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq90ofcce.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpq90ofcce.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return (2 * a * c - b^2) / (4 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc7p47lod.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmpc7p47lod.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4sr9_fda.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp4sr9_fda.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -a / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpet_hwlpb.lua:9: expected: -198, actual: -1.6666666666667\nstack traceback:\n\t/tmp/tmpet_hwlpb.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5g3rnufv.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp5g3rnufv.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b / (2 * a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wl0y4dp.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmp5wl0y4dp.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -(a * b) / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn724dno6.lua:9: expected: -198, actual: -1.5\nstack traceback:\n\t/tmp/tmpn724dno6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -b / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd9itpmxb.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmpd9itpmxb.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -(b / (2 * a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp50wid0y3.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmp50wid0y3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpci6i0i_r.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpci6i0i_r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return (2*a*c - b^2)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6yya7inx.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmp6yya7inx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -(b / (2 * a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp50wid0y3.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmp50wid0y3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return (b^2 - 4*a*c) / (4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz6msx7wp.lua:9: expected: -198, actual: -1.55\nstack traceback:\n\t/tmp/tmpz6msx7wp.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4sr9_fda.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp4sr9_fda.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe50vsss.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpfe50vsss.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe50vsss.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpfe50vsss.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4*a*c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnm0ekqy4.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmpnm0ekqy4.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return (2 * a * c - b^2) / (4 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc7p47lod.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmpc7p47lod.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplqb2kna7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmplqb2kna7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5g3rnufv.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp5g3rnufv.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe50vsss.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpfe50vsss.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplqb2kna7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmplqb2kna7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -(b^2 - 4*a*c) / (4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpas3i0loy.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpas3i0loy.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdy1oz7b8.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpdy1oz7b8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbn8pxefu.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmpbn8pxefu.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdy1oz7b8.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpdy1oz7b8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplqb2kna7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmplqb2kna7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return (a*a - b)/(2*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7vqzy39j.lua:9: expected: -198, actual: 2.2\nstack traceback:\n\t/tmp/tmp7vqzy39j.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b / (2 * a))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wl0y4dp.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmp5wl0y4dp.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4sr9_fda.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp4sr9_fda.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4sr9_fda.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmp4sr9_fda.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return (2*a*c - b^2)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6yya7inx.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmp6yya7inx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe50vsss.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpfe50vsss.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn (a * b) / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6oxst_zr.lua:9: expected: -198, actual: 1.5\nstack traceback:\n\t/tmp/tmp6oxst_zr.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return (2 * a * c - b^2) / (4 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpenwyf_tm.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmpenwyf_tm.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu73506yo.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmpu73506yo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn (2 * a * c - b^2) / (4 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpokribo21.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmpokribo21.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpclqeje8p.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpclqeje8p.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n    return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpofs6u4us.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpofs6u4us.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuf8_0x_b.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmpuf8_0x_b.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe50vsss.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpfe50vsss.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c / (b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqr45xizn.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqr45xizn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return (2 * a * c - b^2) / (4 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc7p47lod.lua:9: expected: -198, actual: 0.55\nstack traceback:\n\t/tmp/tmpc7p47lod.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn (a*a*b*b - a*a*c*c - b*b*c*c)/(a*a*b*b + b*b*c*c)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123496,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0sdu2q_n.lua:9: expected: -198, actual: 0.34099616858238\nstack traceback:\n\t/tmp/tmp0sdu2q_n.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b * b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqd_1qvvl.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmpqd_1qvvl.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -(b^2 - 4*a*c)/(4*a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123494,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe50vsss.lua:9: expected: -198, actual: 1.55\nstack traceback:\n\t/tmp/tmpfe50vsss.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / (b ^ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kxezez7.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp2kxezez7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdattuuh9.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmpdattuuh9.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n  return -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbn8pxefu.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmpbn8pxefu.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4 * a * c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps299f3pt.lua:9: expected: -198, actual: -13.333333333333\nstack traceback:\n\t/tmp/tmps299f3pt.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -c / b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp138y5x5r.lua:9: expected: -198, actual: -0.66666666666667\nstack traceback:\n\t/tmp/tmp138y5x5r.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -b / (2 * a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd9itpmxb.lua:9: expected: -198, actual: -0.3\nstack traceback:\n\t/tmp/tmpd9itpmxb.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the directrix of a parabola.\nlocal function parabola_directrix(a, b, c)\n\treturn -4*a*c/(b^2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parabola_directrix\n    lu.assertEquals(candidate(5, 3, 2), -198)\n    lu.assertEquals(candidate(9, 8, 4), -2336)\n    lu.assertEquals(candidate(2, 4, 6), -130)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0j1stj4y.lua:9: expected: -198, actual: -4.4444444444444\nstack traceback:\n\t/tmp/tmp0j1stj4y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
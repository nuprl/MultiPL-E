{
  "name": "mbpp_756_text_match_zero_one",
  "language": "lua",
  "prompt": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/python-exercises/re/python-re-exercise-3.php\nlocal function text_match_zero_one(text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local pattern = \"^a?b?$\"\n    local result = string.match(text, pattern)\n    return result\nend",
    "    local pattern = \"^a?b$\"\n    return text:match(pattern)\nend",
    "    local pattern = \"a?b\"\n    local match = string.match(text, pattern)\n    return match\nend",
    "    local pattern = \"^a?b$\"\n    return re.match(text, pattern)\nend",
    "  return text:match(\"^a?b+$\")\nend",
    "    local pattern = \"ab?\"\n    return string.match(text, pattern)\nend",
    "  local pattern = \"^a?b$\"\n  return re.match(pattern, text)\nend",
    "    return text:match(\"ab?\")\nend",
    "    local pattern = \"ab?\"\n    local result = string.match(text, pattern)\n    print(result)\nend",
    "    local pattern = \"ab?\"\n    local result = string.match(text, pattern)\n    return result\nend",
    "    local pattern = \"^a?b?$\"\n    return re.match(text, pattern)\nend",
    "    return text:match(\"ab?\")\nend",
    "    local pattern = \"^a?b$\"\n    return text:match(pattern)\nend",
    "    local pattern = \"^a?b$\"\n    local result = string.match(text, pattern)\n    return result\nend",
    "  local pattern = \"^a?b$\"\n  return re.match(text, pattern)\nend",
    "    return text:match(\"a?b\")\nend",
    "  local pattern = \"^a?b?$\"\n  return re.match(text, pattern)\nend",
    "  local pattern = \"^a?b$\"\n  return re.match(text, pattern)\nend",
    "  return text:match(\"a?b\")\nend",
    "    local pattern = \"ab*\"\n    return text:match(pattern)\nend"
  ]
}
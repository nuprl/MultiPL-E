{
  "name": "mbpp_104_sort_sublists",
  "language": "lua",
  "prompt": "-- Write a function to sort each sublist of strings in a given list of lists.\nlocal function sort_sublists(input_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_104_sort_sublists.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_sublists\n    lu.assertEquals(candidate({{'green', 'orange'}, {'black', 'white'}, {'white', 'black', 'orange'}}), {{'green', 'orange'}, {'black', 'white'}, {'black', 'orange', 'white'}})\n    lu.assertEquals(candidate({{' red ', 'green'}, {'blue ', ' black'}, {' orange', 'brown'}}), {{' red ', 'green'}, {' black', 'blue '}, {' orange', 'brown'}})\n    lu.assertEquals(candidate({{'zilver', 'gold'}, {'magnesium', 'aluminium'}, {'steel', 'bronze'}}), {{'gold', 'zilver'}, {'aluminium', 'magnesium'}, {'bronze', 'steel'}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for i, v in ipairs(input_list) do\n    output_list[i] = {}\n    for j, w in ipairs(v) do\n      output_list[i][j] = w\n    end\n    table.sort(output_list[i])\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        output_list[i] = {}\n        for j, str in ipairs(sublist) do\n            output_list[i][j] = str:lower()\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "\tlocal output_list = {}\n\tfor _, sublist in ipairs(input_list) do\n\t\ttable.insert(output_list, table.sort(sublist))\n\tend\n\treturn output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "\tlocal output_list = {}\n\tfor i, sublist in ipairs(input_list) do\n\t\ttable.sort(sublist)\n\t\toutput_list[i] = sublist\n\tend\n\treturn output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i = 1, #input_list do\n        output_list[i] = {}\n        for j = 1, #input_list[i] do\n            table.insert(output_list[i], input_list[i][j])\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, table.sort(sublist))\n    end\n    return result\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for i, v in ipairs(input_list) do\n    table.insert(output_list, table.sort(v))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i = 1, #input_list do\n        output_list[i] = {}\n        for j = 1, #input_list[i] do\n            table.insert(output_list[i], input_list[i][j])\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        local sorted_sublist = {}\n        for _, str in ipairs(sublist) do\n            table.insert(sorted_sublist, str)\n        end\n        table.sort(sorted_sublist)\n        table.insert(output_list, sorted_sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for i, sublist in ipairs(input_list) do\n    table.sort(sublist)\n    output_list[i] = sublist\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "\tlocal output_list = {}\n\tfor i, sublist in ipairs(input_list) do\n\t\toutput_list[i] = {}\n\t\tfor j, str in ipairs(sublist) do\n\t\t\ttable.insert(output_list[i], str)\n\t\tend\n\t\ttable.sort(output_list[i])\n\tend\n\treturn output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for i, sublist in ipairs(input_list) do\n    table.sort(sublist)\n    output_list[i] = sublist\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for i, sublist in ipairs(input_list) do\n    output_list[i] = {}\n    for j, word in ipairs(sublist) do\n      table.insert(output_list[i], word)\n    end\n    table.sort(output_list[i])\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i = 1, #input_list do\n        output_list[i] = {}\n        for j = 1, #input_list[i] do\n            table.insert(output_list[i], input_list[i][j])\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for i = 1, #input_list do\n    output_list[i] = {}\n    for j = 1, #input_list[i] do\n      output_list[i][j] = input_list[i][j]\n    end\n    table.sort(output_list[i])\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for i, sublist in ipairs(input_list) do\n    output_list[i] = table.sort(sublist)\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, sort_list(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, sort_strings(sublist))\n    end\n    return result\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i = 1, #input_list do\n        output_list[i] = {}\n        for j = 1, #input_list[i] do\n            table.insert(output_list[i], input_list[i][j])\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for i, sublist in ipairs(input_list) do\n    table.sort(sublist)\n    output_list[i] = sublist\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i, v in ipairs(input_list) do\n        table.sort(v)\n        output_list[i] = v\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "\tlocal output_list = {}\n\tfor _, sublist in ipairs(input_list) do\n\t\ttable.insert(output_list, table.sort(sublist))\n\tend\n\treturn output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, table.sort(sublist))\n    end\n    return result\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, table.sort(sublist))\n    end\n    return result\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        output_list[i] = {}\n        for _, str in ipairs(sublist) do\n            table.insert(output_list[i], str)\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "\tlocal output_list = {}\n\tfor _, sublist in ipairs(input_list) do\n\t\ttable.insert(output_list, table.sort(sublist))\n\tend\n\treturn output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, table.sort(sublist))\n    end\n    return result\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i = 1, #input_list do\n        local sublist = input_list[i]\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i = 1, #input_list do\n        output_list[i] = {}\n        for j = 1, #input_list[i] do\n            table.insert(output_list[i], input_list[i][j])\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    for i = 1, #input_list do\n        table.sort(input_list[i])\n    end\n    return input_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, table.sort(sublist))\n    end\n    return result\nend",
    "  local result = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(result, sort_strings(sublist))\n  end\n  return result\nend",
    "    local sorted_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(sorted_list, table.sort(sublist))\n    end\n    return sorted_list\nend",
    "    local output_list = {}\n    for i, v in ipairs(input_list) do\n        output_list[i] = {}\n        for j, w in ipairs(v) do\n            table.insert(output_list[i], w)\n        end\n        table.sort(output_list[i])\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, table.sort(sublist))\n    end\n    return result\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local result = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(result, table.sort(sublist))\n    end\n    return result\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table_sort(sublist))\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  --[[\n  local sorted_list = {}\n  for i, sublist in ipairs(input_list) do\n    table.insert(sorted_list, table.sort(sublist))\n  end\n  return sorted_list\n  --]]\n  return table.map(input_list, table.sort)\nend",
    "\tlocal output_list = {}\n\tfor i, sublist in ipairs(input_list) do\n\t\ttable.sort(sublist)\n\t\toutput_list[i] = sublist\n\tend\n\treturn output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "\tlocal output_list = {}\n\tfor i, sublist in ipairs(input_list) do\n\t\ttable.sort(sublist)\n\t\toutput_list[i] = sublist\n\tend\n\treturn output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[#output_list + 1] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, sort_strings(sublist))\n  end\n  return output_list\nend",
    "\tfor i = 1, #input_list do\n\t\ttable.sort(input_list[i])\n\tend\n\treturn input_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, v in ipairs(input_list) do\n        table.sort(v)\n        output_list[i] = v\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for i, sublist in ipairs(input_list) do\n    table.sort(sublist)\n    output_list[i] = sublist\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "  local output_list = {}\n  for i, sublist in ipairs(input_list) do\n    table.sort(sublist)\n    output_list[i] = sublist\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "  local output_list = {}\n  for _, sublist in ipairs(input_list) do\n    table.insert(output_list, table.sort(sublist))\n  end\n  return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.insert(output_list, table.sort(sublist))\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for i, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        output_list[i] = sublist\n    end\n    return output_list\nend",
    "    local output_list = {}\n    for _, sublist in ipairs(input_list) do\n        table.sort(sublist)\n        table.insert(output_list, sublist)\n    end\n    return output_list\nend"
  ]
}
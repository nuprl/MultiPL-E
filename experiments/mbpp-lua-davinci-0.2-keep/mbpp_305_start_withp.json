{
  "name": "mbpp_305_start_withp",
  "language": "lua",
  "prompt": "-- Write a function to return two words from a list of words starting with letter 'p'.\nlocal function start_withp(words)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = start_withp\n    lu.assertEquals(candidate({'Python PHP', 'Java JavaScript', 'c c++'}), {'Python', 'PHP'})\n    lu.assertEquals(candidate({'Python Programming', 'Java Programming'}), {'Python', 'Programming'})\n    lu.assertEquals(candidate({'Pqrst Pqr', 'qrstuv'}), {'Pqrst', 'Pqr'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n        if #result == 2 then\n            break\n        end\n    end\n    return result\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            p_words[#p_words + 1] = word\n        end\n        if #p_words == 2 then\n            break\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      break\n    end\n  end\n  return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            pwords[#pwords + 1] = word\n        end\n        if #pwords == 2 then\n            break\n        end\n    end\n    return pwords\nend",
    "  local result = {}\n  for _, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(result, word)\n    end\n  end\n  return result\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      break\n    end\n  end\n  return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "\tlocal p_words = {}\n\tlocal count = 0\n\tfor i, v in ipairs(words) do\n\t\tif string.sub(v, 1, 1) == 'p' then\n\t\t\tcount = count + 1\n\t\t\tp_words[count] = v\n\t\tend\n\t\tif count == 2 then\n\t\t\tbreak\n\t\tend\n\tend\n\treturn p_words\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n  end\n  return result\nend",
    "  local function start_withp_helper(words, acc)\n    if #words == 0 then\n      return acc\n    else\n      local word = words[1]\n      if string.sub(word, 1, 1) == 'p' then\n        table.insert(acc, word)\n      end\n      return start_withp_helper(table.slice(words, 2, #words), acc)\n    end\n  end\n  return start_withp_helper(words, {})\nend",
    "\tlocal p_words = {}\n\tfor _, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(p_words, word)\n\t\tend\n\tend\n\treturn p_words\nend",
    "  local pwords = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local p_words = {}\n  for _, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      table.insert(p_words, word)\n    end\n  end\n  return p_words\nend",
    "\tlocal result = {}\n\tfor i, word in ipairs(words) do\n\t\tif word:sub(1,1) == 'p' then\n\t\t\ttable.insert(result, word)\n\t\tend\n\tend\n\treturn result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == \"p\" then\n      pwords[#pwords + 1] = word\n    end\n  end\n  return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "\tlocal list = {}\n\tfor i,v in ipairs(words) do\n\t\tif string.sub(v,1,1) == 'p' then\n\t\t\ttable.insert(list,v)\n\t\tend\n\tend\n\treturn list\nend",
    "    local words_withp = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(words_withp, word)\n        end\n    end\n    return words_withp\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1,1) == 'p' then\n            pwords[#pwords+1] = word\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      pwords[#pwords+1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "  local pwords = {}\n  for _, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      table.insert(result, word)\n    end\n  end\n  return result\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            pwords[#pwords + 1] = word\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == \"p\" then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      break\n    end\n  end\n  return result\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n        if #pwords == 2 then\n            return pwords\n        end\n    end\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      pwords[#pwords+1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n        if #p_words == 2 then\n            break\n        end\n    end\n    return p_words\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n        if #p_words == 2 then\n            break\n        end\n    end\n    return p_words\nend",
    "\tlocal result = {}\n\tfor _, word in ipairs(words) do\n\t\tif word:sub(1,1) == 'p' then\n\t\t\ttable.insert(result, word)\n\t\tend\n\tend\n\treturn result\nend",
    "  local p_words = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      p_words[#p_words + 1] = word\n    end\n    if #p_words == 2 then\n      break\n    end\n  end\n  return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n            if #pwords == 2 then\n                break\n            end\n        end\n    end\n    return pwords\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local result = {}\n  for _, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(result, word)\n    end\n  end\n  return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n            if #result == 2 then\n                return result\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n        if #p_words == 2 then\n            break\n        end\n    end\n    return p_words\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local words_with_p = {}\n  for i = 1, #words do\n    if words[i]:sub(1, 1) == 'p' then\n      table.insert(words_with_p, words[i])\n    end\n  end\n  return words_with_p\nend",
    "  local result = {}\n  local count = 0\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      count = count + 1\n      result[count] = word\n    end\n    if count == 2 then\n      break\n    end\n  end\n  return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == \"p\" then\n            pwords[#pwords + 1] = word\n        end\n    end\n    return pwords\nend",
    "\tlocal p_words = {}\n\tfor i, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(p_words, word)\n\t\tend\n\tend\n\treturn p_words\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n            if #result == 2 then\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local pwords = {}\n    for k, v in pairs(words) do\n        if string.sub(v, 1, 1) == 'p' then\n            table.insert(pwords, v)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      pwords[#pwords+1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n        if #result == 2 then\n            break\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n  end\n  return pwords\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            pwords[#pwords + 1] = word\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            p_words[#p_words + 1] = word\n        end\n    end\n    return p_words\nend",
    "\tlocal pwords = {}\n\tfor _, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(pwords, word)\n\t\tend\n\tend\n\treturn pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local result = {}\n  for _, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      break\n    end\n  end\n  return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n        if #p_words == 2 then\n            break\n        end\n    end\n    return p_words\nend",
    "\tlocal pwords = {}\n\tfor i, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(pwords, word)\n\t\tend\n\tend\n\treturn pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1,1) == 'p' then\n            pwords[#pwords+1] = word\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "\tlocal pwords = {}\n\tfor i, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(pwords, word)\n\t\tend\n\tend\n\treturn pwords\nend",
    "  local p_words = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      p_words[#p_words + 1] = word\n    end\n  end\n  return p_words\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for i, v in ipairs(words) do\n        if v:sub(1, 1) == 'p' then\n            table.insert(result, v)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords+1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "\tlocal p_words = {}\n\tfor _, word in ipairs(words) do\n\t\tif word:sub(1, 1) == 'p' then\n\t\t\ttable.insert(p_words, word)\n\t\tend\n\t\tif #p_words == 2 then\n\t\t\tbreak\n\t\tend\n\tend\n\treturn p_words\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local p_words = {}\n    local count = 0\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            count = count + 1\n            p_words[count] = word\n            if count == 2 then\n                break\n            end\n        end\n    end\n    return p_words\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n    if #pwords == 2 then\n      return pwords\n    end\n  end\n  return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            pwords[#pwords + 1] = word\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n            if #result == 2 then\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n            if #result == 2 then\n                return result\n            end\n        end\n    end\n    return result\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords[1], pwords[2]\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n  end\n  return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for _, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n  end\n  return pwords\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "\tlocal pwords = {}\n\tfor i, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(pwords, word)\n\t\tend\n\tend\n\treturn pwords\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n        if #p_words == 2 then\n            break\n        end\n    end\n    return p_words\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "\tlocal p_words = {}\n\tfor i, word in ipairs(words) do\n\t\tif word:sub(1, 1) == 'p' then\n\t\t\ttable.insert(p_words, word)\n\t\tend\n\tend\n\treturn p_words\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n        if #pwords == 2 then\n            return pwords\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local result = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      break\n    end\n  end\n  return result\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n        if #result == 2 then\n            break\n        end\n    end\n    return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            pwords[#pwords + 1] = word\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for k, v in pairs(words) do\n        if string.sub(v, 1, 1) == 'p' then\n            table.insert(pwords, v)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local result = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n      if #result == 2 then\n        break\n      end\n    end\n  end\n  return result\nend",
    "  local p_words = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(p_words, word)\n    end\n    if #p_words == 2 then\n      break\n    end\n  end\n  return p_words\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      break\n    end\n  end\n  return result\nend",
    "  local p_words = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(p_words, word)\n    end\n    if #p_words == 2 then\n      break\n    end\n  end\n  return p_words\nend",
    "  local pwords = {}\n  for i=1,#words do\n    if string.sub(words[i],1,1) == 'p' then\n      pwords[#pwords+1] = words[i]\n    end\n  end\n  return pwords\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      table.insert(result, word)\n    end\n  end\n  return result\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      table.insert(pwords, word)\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "  local p_words = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(p_words, word)\n    end\n    if #p_words == 2 then\n      return p_words\n    end\n  end\n  return p_words\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            pwords[#pwords + 1] = word\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n      if #pwords == 2 then\n        return pwords\n      end\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "\tlocal pwords = {}\n\tlocal count = 0\n\tfor _, word in ipairs(words) do\n\t\tif word:sub(1,1) == 'p' then\n\t\t\tcount = count + 1\n\t\t\tpwords[count] = word\n\t\tend\n\t\tif count == 2 then\n\t\t\tbreak\n\t\tend\n\tend\n\treturn pwords\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      return result\n    end\n  end\n  return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == \"p\" then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "\tlocal p_words = {}\n\tfor i, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(p_words, word)\n\t\tend\n\tend\n\treturn p_words\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n      if #result == 2 then\n        break\n      end\n    end\n  end\n  return result\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "  local result = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n  end\n  return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for _, word in pairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local p_words = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend",
    "  local p_words = {}\n  for _, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(p_words, word)\n    end\n    if #p_words == 2 then\n      break\n    end\n  end\n  return p_words\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            pwords[#pwords + 1] = word\n        end\n        if #pwords == 2 then\n            break\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "\tlocal words_p = {}\n\tfor i, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\ttable.insert(words_p, word)\n\t\tend\n\tend\n\treturn words_p\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(result, word)\n    end\n  end\n  return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for _,word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords[1], pwords[2]\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n            if #result == 2 then\n                break\n            end\n        end\n    end\n    return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n  end\n  return pwords\nend",
    "  local p_words = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      p_words[#p_words + 1] = word\n    end\n  end\n  return p_words\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      pwords[#pwords+1] = word\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local result = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(result, word)\n    end\n    if #result == 2 then\n      return result\n    end\n  end\n  return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n            if #result == 2 then break end\n        end\n    end\n    return result\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local words_with_p = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(words_with_p, word)\n        end\n    end\n    return words_with_p\nend",
    "\tlocal pwords = {}\n\tfor i, word in ipairs(words) do\n\t\tif word:sub(1,1) == 'p' then\n\t\t\ttable.insert(pwords, word)\n\t\tend\n\tend\n\treturn pwords\nend",
    "    local result = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "  local pwords = {}\n  for _, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n  end\n  return pwords[1], pwords[2]\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      pwords[#pwords + 1] = word\n    end\n  end\n  return pwords\nend",
    "\tlocal p_words = {}\n\tlocal count = 0\n\tfor _, word in ipairs(words) do\n\t\tif string.sub(word, 1, 1) == 'p' then\n\t\t\tcount = count + 1\n\t\t\tp_words[count] = word\n\t\tend\n\t\tif count == 2 then\n\t\t\tbreak\n\t\tend\n\tend\n\treturn p_words\nend",
    "    local p_words = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(p_words, word)\n        end\n    end\n    return p_words\nend"
  ]
}
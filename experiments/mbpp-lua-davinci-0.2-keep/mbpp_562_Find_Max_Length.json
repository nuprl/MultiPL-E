{
  "name": "mbpp_562_Find_Max_Length",
  "language": "lua",
  "prompt": "-- Write a python function to find the length of the longest sublists.\nlocal function Find_Max_Length(lst)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Find_Max_Length\n    lu.assertEquals(candidate({{1}, {1, 4}, {5, 6, 7, 8}}), 4)\n    lu.assertEquals(candidate({{0, 1}, {2, 2}, {3, 2, 1}}), 3)\n    lu.assertEquals(candidate({{7}, {22, 23}, {13, 14, 15}, {10, 20, 30, 40, 50}}), 5)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max_len = 0\n  for _, sublist in ipairs(lst) do\n    local len = #sublist\n    if len > max_len then\n      max_len = len\n    end\n  end\n  return max_len\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tif #lst[i] > max then\n\t\t\tmax = #lst[i]\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tmax = math.max(max, #lst[i])\n\tend\n\treturn max\nend",
    "\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\telse\n\t\t\tmax = 1\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max_length = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\telse\n\t\t\tmax_length = 1\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max = 0\n    for _, v in pairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local sublist = lst[i]\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == 'table' then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local sublist_length = #sublist\n        if sublist_length > max_length then\n            max_length = sublist_length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for i = 1, #lst do\n        if #lst[i] > max then\n            max = #lst[i]\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i = 1, #lst do\n        if #lst[i] > max then\n            max = #lst[i]\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "  local max_length = 0\n  for _, sublist in ipairs(lst) do\n    local length = #sublist\n    if length > max_length then\n      max_length = length\n    end\n  end\n  return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_len = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max_len then\n\t\t\tmax_len = len\n\t\tend\n\tend\n\treturn max_len\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, v in ipairs(lst) do\n        if type(v) == 'table' then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "\tlocal max = 0\n\tfor _,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tif #lst[i] > max then\n\t\t\tmax = #lst[i]\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tmax_length = math.max(max_length, #sublist)\n\tend\n\treturn max_length\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max = 0\n    for i = 1, #lst do\n        if #lst[i] > max then\n            max = #lst[i]\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i,v in pairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_len = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tif #sublist > max_length then\n\t\t\tmax_length = #sublist\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max_length = 0\n  for _, sublist in ipairs(lst) do\n    local length = #sublist\n    if length > max_length then\n      max_length = length\n    end\n  end\n  return max_length\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tif #lst[i] > max then\n\t\t\tmax = #lst[i]\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length + 1\nend",
    "  local max_len = 0\n  for _, sublist in ipairs(lst) do\n    local len = #sublist\n    if len > max_len then\n      max_len = len\n    end\n  end\n  return max_len\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local length = 0\n        for j = 1, #lst[i] do\n            length = length + 1\n        end\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "    local max = 0\n    for _, v in pairs(lst) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "  local max_length = 0\n  for _, sublist in ipairs(lst) do\n    local length = #sublist\n    if length > max_length then\n      max_length = length\n    end\n  end\n  return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        max_length = math.max(max_length, #sublist)\n    end\n    return max_length\nend",
    "  local max_length = 0\n  for _, sublist in ipairs(lst) do\n    local length = #sublist\n    if length > max_length then\n      max_length = length\n    end\n  end\n  return max_length\nend",
    "\tlocal max_length = 0\n\tlocal length = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlength = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\telse\n\t\t\tlength = length + 1\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max = 0\n  for _, v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local len = Find_Max_Length(v)\n      if len > max then\n        max = len\n      end\n    end\n  end\n  return max\nend",
    "\tlocal max_length = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\telse\n\t\t\tmax_length = 1\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        if type(lst[i]) == \"table\" then\n            local length = Find_Max_Length(lst[i])\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local sublist_length = #sublist\n        if sublist_length > max_length then\n            max_length = sublist_length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for i = 1, #lst do\n        if #lst[i] > max then\n            max = #lst[i]\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max + 1\nend",
    "\tlocal max_len = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal len = #sublist\n\t\tif len > max_len then\n\t\t\tmax_len = len\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_len = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "\tlocal max = 0\n\tlocal len = 0\n\tfor i = 1, #lst do\n\t\tif lst[i] == 1 then\n\t\t\tlen = len + 1\n\t\telse\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\t\tlen = 0\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local length = #lst[i]\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_length = 0\n\tfor _,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\telse\n\t\t\tmax_length = 1\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_len = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max_len = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal len = #sublist\n\t\tif len > max_len then\n\t\t\tmax_len = len\n\t\tend\n\tend\n\treturn max_len\nend",
    "    local max_len = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max_len then\n                max_len = len\n            end\n        end\n    end\n    return max_len + 1\nend",
    "  local max = 0\n  for _, sublist in ipairs(lst) do\n    local len = #sublist\n    if len > max then\n      max = len\n    end\n  end\n  return max\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_len = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max_len then\n\t\t\tmax_len = len\n\t\tend\n\tend\n\treturn max_len\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max then\n            max = len\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local sublist_length = #sublist\n        if sublist_length > max_length then\n            max_length = sublist_length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length + 1\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal length = #lst[i]\n\t\tif length > max then\n\t\t\tmax = length\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max then\n            max = len\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local length = #lst[i]\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\telse\n\t\t\tmax = 1\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max + 1\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local sub_lst = lst[i]\n        local sub_lst_length = #sub_lst\n        if sub_lst_length > max_length then\n            max_length = sub_lst_length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_len = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "  local max_length = 0\n  for _, sublist in ipairs(lst) do\n    local length = #sublist\n    if length > max_length then\n      max_length = length\n    end\n  end\n  return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for _,v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max_length = 0\n\tfor i = 1, #lst do\n\t\tlocal length = #lst[i]\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max = 0\n\tfor k,v in pairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\telseif type(v) == \"number\" then\n\t\t\tif max < 1 then\n\t\t\t\tmax = 1\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tlocal current_length = 0\n\tfor i = 1, #lst do\n\t\tif lst[i] == 1 then\n\t\t\tcurrent_length = current_length + 1\n\t\telse\n\t\t\tif current_length > max_length then\n\t\t\t\tmax_length = current_length\n\t\t\tend\n\t\t\tcurrent_length = 0\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal sublist_length = #sublist\n\t\tif sublist_length > max_length then\n\t\t\tmax_length = sublist_length\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max_length = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\telse\n\t\t\tmax_length = 1\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max_len = 0\n  for _, sublist in ipairs(lst) do\n    local len = #sublist\n    if len > max_len then\n      max_len = len\n    end\n  end\n  return max_len\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local length = #lst[i]\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max_length = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length + 1\nend",
    "\tlocal max_len = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max_len then\n\t\t\t\tmax_len = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len + 1\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == 'table' then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor _, sublst in ipairs(lst) do\n\t\tlocal len = #sublst\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max + 1\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tmax_length = math.max(max_length, #sublist)\n\tend\n\treturn max_length\nend",
    "\tlocal max_length = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length + 1\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_length = 0\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        max_length = math.max(max_length, #sublist)\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_length = 0\n\tlocal current_length = 0\n\tfor i,v in ipairs(lst) do\n\t\tif v then\n\t\t\tcurrent_length = current_length + 1\n\t\telse\n\t\t\tif current_length > max_length then\n\t\t\t\tmax_length = current_length\n\t\t\tend\n\t\t\tcurrent_length = 0\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_length = 0\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "    local max_len = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor _,v in pairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\telse\n\t\t\tmax = 1\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_len = 0\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max = 0\n  for _, v in pairs(lst) do\n    local len = #v\n    if len > max then\n      max = len\n    end\n  end\n  return max\nend",
    "  local max = 0\n  for _, v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local len = Find_Max_Length(v)\n      if len > max then\n        max = len\n      end\n    end\n  end\n  return max\nend",
    "    local max_length = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "    local max = 0\n    for i = 1, #lst do\n        local len = #lst[i]\n        if len > max then\n            max = len\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max_len = 0\n\tfor i, v in ipairs(lst) do\n\t\tmax_len = math.max(max_len, #v)\n\tend\n\treturn max_len\nend",
    "    local max = 0\n    for i = 1, #lst do\n        local len = #lst[i]\n        if len > max then\n            max = len\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local length = 0\n        for j = i, #lst do\n            if lst[j] == lst[i] then\n                length = length + 1\n            else\n                break\n            end\n        end\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for i = 1, #lst do\n        if #lst[i] > max then\n            max = #lst[i]\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "    local max_length = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length + 1\nend",
    "\tlocal max_length = 0\n\tfor i = 1, #lst do\n\t\tlocal length = #lst[i]\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor i = 1, #lst do\n\t\tlocal length = #lst[i]\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max_len = 0\n  for i = 1, #lst do\n    local len = #lst[i]\n    if len > max_len then\n      max_len = len\n    end\n  end\n  return max_len\nend",
    "    local max_len = 0\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max_len then\n                max_len = len\n            end\n        end\n    end\n    return max_len + 1\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max_length = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length + 1\nend",
    "    local max_len = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max_len then\n                max_len = len\n            end\n        end\n    end\n    return max_len + 1\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local length = #lst[i]\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_len = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max_len then\n\t\t\t\tmax_len = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len + 1\nend",
    "\tlocal max = 0\n\tfor _,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\telse\n\t\t\tmax = 1\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        if #lst[i] > max_length then\n            max_length = #lst[i]\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for i = 1, #lst do\n        local len = #lst[i]\n        if len > max then\n            max = len\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor _,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_len = 0\n    for _, sub_lst in pairs(lst) do\n        local len = #sub_lst\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "\tlocal max_length = 0\n\tfor _,v in pairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\telse\n\t\t\tmax_length = 1\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max = 0\n  for _,v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local len = Find_Max_Length(v)\n      if len > max then\n        max = len\n      end\n    end\n  end\n  return max\nend",
    "\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for i = 1, #lst do\n        if #lst[i] > max then\n            max = #lst[i]\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        max_length = math.max(max_length, #sublist)\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local sublist = lst[i]\n        local sublist_length = #sublist\n        if sublist_length > max_length then\n            max_length = sublist_length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local sub_lst = lst[i]\n        local sub_lst_length = #sub_lst\n        if sub_lst_length > max_length then\n            max_length = sub_lst_length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max + 1\nend",
    "\tlocal max_len = 0\n\tfor _, sublst in ipairs(lst) do\n\t\tlocal len = #sublst\n\t\tif len > max_len then\n\t\t\tmax_len = len\n\t\tend\n\tend\n\treturn max_len\nend",
    "  local max = 0\n  for _, sublist in ipairs(lst) do\n    local len = #sublist\n    if len > max then\n      max = len\n    end\n  end\n  return max\nend",
    "    local max_len = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max_len then\n                max_len = len\n            end\n        end\n    end\n    return max_len + 1\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then max = len end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for i = 1, #lst do\n        local sub_lst = lst[i]\n        local sub_lst_length = #sub_lst\n        if sub_lst_length > max_length then\n            max_length = sub_lst_length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor k,v in pairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max + 1\nend",
    "    local max_len = 0\n    for _, v in pairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max_len then\n                max_len = len\n            end\n        end\n    end\n    return max_len + 1\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\telse\n\t\t\treturn 1\n\t\tend\n\tend\n\treturn max_length + 1\nend",
    "\tlocal max_length = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal length = #sublist\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max = 0\n  for _, sublist in ipairs(lst) do\n    local len = #sublist\n    if len > max then\n      max = len\n    end\n  end\n  return max\nend",
    "\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tlocal len = #v\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "  local max = 0\n  for i = 1, #lst do\n    local len = #lst[i]\n    if len > max then\n      max = len\n    end\n  end\n  return max\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max + 1\nend",
    "\tlocal max_len = 0\n\tfor _, sublst in ipairs(lst) do\n\t\tlocal len = #sublst\n\t\tif len > max_len then\n\t\t\tmax_len = len\n\t\tend\n\tend\n\treturn max_len\nend",
    "    local max_len = 0\n    for _, sublst in ipairs(lst) do\n        local len = #sublst\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        max_length = math.max(max_length, #sublist)\n    end\n    return max_length\nend",
    "\tlocal max_len = 0\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal len = #sublist\n\t\tif len > max_len then\n\t\t\tmax_len = len\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tif #lst[i] > max then\n\t\t\tmax = #lst[i]\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max = 0\n\tfor _,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\telse\n\t\t\treturn 1\n\t\tend\n\tend\n\treturn max + 1\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local sublist_length = #sublist\n        if sublist_length > max_length then\n            max_length = sublist_length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max_length = 0\n\tfor i = 1, #lst do\n\t\tlocal length = #lst[i]\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        max_length = math.max(max_length, #sublist)\n    end\n    return max_length\nend",
    "    local max_length = 0\n    for _, sublist in pairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, sublist in ipairs(lst) do\n        local length = #sublist\n        if length > max_length then\n            max_length = length\n        end\n    end\n    return max_length\nend",
    "\tlocal max = 0\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\telse\n\t\t\tif max == 0 then\n\t\t\t\tmax = 1\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend"
  ]
}
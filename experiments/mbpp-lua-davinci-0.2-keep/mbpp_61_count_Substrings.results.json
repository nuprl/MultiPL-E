{
  "name": "mbpp_61_count_Substrings",
  "language": "lua",
  "prompt": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local c = 0\n    for i = 1, #s do\n        for j = i + 1, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                c = c + 1\n            end\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmmj826hy.lua:21: expected: 6, actual: 2\nstack traceback:\n\t/tmp/tmpmmj826hy.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == (j - i + 1) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = #s\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local l = string.len(s)\n    for i = 1, l do\n        for j = i, l do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        local sum = 0\n        for j = i, #s do\n            sum = sum + tonumber(s:sub(j, j))\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = #s\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            local len = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n                len = len + 1\n            end\n            if sum == len then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tlocal len = string.len(s)\n\tfor i = 1, len do\n\t\tfor j = i, len do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(string.sub(s, k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = string.len(s)\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122706,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == (j - i + 1) then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  local len = string.len(s)\n  for i = 1, len do\n    for j = i, len do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(string.sub(s, k, k))\n      end\n      if sum == (j - i + 1) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i + 1, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp195s6y9s.lua:21: expected: 6, actual: 2\nstack traceback:\n\t/tmp/tmp195s6y9s.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            local str = string.sub(s, i, j)\n            for k = 1, #str do\n                sum = sum + tonumber(string.sub(str, k, k))\n            end\n            if sum == #str then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = string.len(s)\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = #s\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tlocal len = #s\n\tfor i = 1, len do\n\t\tfor j = i, len do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tlocal len = string.len(s)\n\tfor i = 1, len do\n\t\tfor j = i, len do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(string.sub(s, k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  local len = string.len(s)\n  for i = 1, len do\n    for j = i, len do\n      local sub = string.sub(s, i, j)\n      local sum = 0\n      for k = 1, string.len(sub) do\n        sum = sum + tonumber(string.sub(sub, k, k))\n      end\n      if sum == string.len(sub) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local l = string.len(s)\n    for i = 1, l do\n        for j = i, l do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i=1,n do\n        for j=i,n do\n            local sum = 0\n            for k=i,j do\n                sum = sum + tonumber(s:sub(k,k))\n            end\n            if sum == j-i+1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == (j - i + 1) then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  local len = string.len(s)\n  for i = 1, len do\n    for j = i, len do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(string.sub(s, k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = string.len(s)\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + string.byte(s, k) - 48\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal c = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tc = c + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = string.len(s)\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            local str = string.sub(s, i, j)\n            for k = 1, string.len(str) do\n                sum = sum + tonumber(string.sub(str, k, k))\n            end\n            if sum == string.len(str) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = string.len(s)\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = string.len(s)\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = string.len(s)\n    for i = 1, len do\n        for j = i, len do\n            local sum = 0\n            for k = i, j do\n                sum = sum + string.byte(s, k) - string.byte('0')\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n  local count = 0\n  for i = 1, #s do\n    for j = i, #s do\n      local sum = 0\n      for k = i, j do\n        sum = sum + tonumber(s:sub(k, k))\n      end\n      if sum == j - i + 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tfor j = i, #s do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + tonumber(s:sub(k, k))\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n\tlocal count = 0\n\tlocal len = string.len(s)\n\tfor i = 1, len do\n\t\tfor j = i, len do\n\t\t\tlocal sum = 0\n\t\t\tfor k = i, j do\n\t\t\t\tsum = sum + string.byte(s, k) - 48\n\t\t\tend\n\t\t\tif sum == j - i + 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local l = string.len(s)\n    for i = 1, l do\n        for j = i, l do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(string.sub(s, k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == (j - i + 1) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i + 1, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp195s6y9s.lua:21: expected: 6, actual: 2\nstack traceback:\n\t/tmp/tmp195s6y9s.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local n = #s\n    for i = 1, n do\n        for j = i, n do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    for i = 1, #s do\n        for j = i, #s do\n            local sum = 0\n            for k = i, j do\n                sum = sum + tonumber(s:sub(k, k))\n            end\n            if sum == j - i + 1 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a python function to count the number of substrings with the sum of digits equal to their length.\nlocal function count_Substrings(s)\n    local count = 0\n    local len = string.len(s)\n    for i = 1, len do\n        for j = i, len do\n            local sub = string.sub(s, i, j)\n            local sum = 0\n            for k = 1, string.len(sub) do\n                sum = sum + tonumber(string.sub(sub, k, k))\n            end\n            if sum == string.len(sub) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_Substrings\n    lu.assertEquals(candidate('112112'), 6)\n    lu.assertEquals(candidate('111'), 6)\n    lu.assertEquals(candidate('1101112'), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122707,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
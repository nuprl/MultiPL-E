{
  "name": "mbpp_167_next_power_of_2",
  "language": "lua",
  "prompt": "-- Write a python function to find the smallest power of 2 greater than or equal to n.\nlocal function next_power_of_2(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = next_power_of_2\n    lu.assertEquals(candidate(0), 1)\n    lu.assertEquals(candidate(5), 8)\n    lu.assertEquals(candidate(17), 32)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "   local p = 1\n   while p < n do\n      p = p * 2\n   end\n   return p\nend",
    "\tlocal power = 1\n\twhile power < n do\n\t\tpower = power * 2\n\tend\n\treturn power\nend",
    "   local p = 1\n   while p < n do p = p * 2 end\n   return p\nend",
    "\tlocal p = 1\n\twhile p < n do\n\t\tp = p * 2\n\tend\n\treturn p\nend",
    "\tlocal power = 1\n\twhile power < n do\n\t\tpower = power * 2\n\tend\n\treturn power\nend",
    "\tlocal p = 1\n\twhile p < n do\n\t\tp = p * 2\n\tend\n\treturn p\nend",
    "    local power = 1\n    while power < n do\n        power = power * 2\n    end\n    return power\nend",
    "\tlocal p = 1\n\twhile p < n do\n\t\tp = p * 2\n\tend\n\treturn p\nend",
    "    local p = 1\n    while p < n do\n        p = p * 2\n    end\n    return p\nend",
    "   local p = 1\n   while p < n do p = p * 2 end\n   return p\nend",
    "\tlocal p = 1\n\twhile p < n do\n\t\tp = p * 2\n\tend\n\treturn p\nend",
    "\tlocal i = 1\n\twhile i < n do\n\t\ti = i * 2\n\tend\n\treturn i\nend",
    "  local p = 1\n  while p < n do p = p * 2 end\n  return p\nend",
    "\tlocal i = 1\n\twhile i < n do\n\t\ti = i * 2\n\tend\n\treturn i\nend",
    "\tlocal i = 1\n\twhile i < n do\n\t\ti = i * 2\n\tend\n\treturn i\nend",
    "    local power = 1\n    while power < n do\n        power = power * 2\n    end\n    return power\nend",
    "\tlocal p = 1\n\twhile p < n do\n\t\tp = p * 2\n\tend\n\treturn p\nend",
    "\tlocal p = 1\n\twhile p < n do\n\t\tp = p * 2\n\tend\n\treturn p\nend",
    "    local p = 1\n    while p < n do\n        p = p * 2\n    end\n    return p\nend",
    "\tlocal p = 1\n\twhile p < n do\n\t\tp = p * 2\n\tend\n\treturn p\nend"
  ]
}
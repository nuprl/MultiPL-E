{
  "name": "mbpp_563_extract_values",
  "language": "lua",
  "prompt": "-- Write a function to extract values between quotation marks from a string.\nlocal function extract_values(text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_563_extract_values.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = extract_values\n    lu.assertEquals(candidate('\"Python\", \"PHP\", \"Java\"'), {'Python', 'PHP', 'Java'})\n    lu.assertEquals(candidate('\"python\",\"program\",\"language\"'), {'python', 'program', 'language'})\n    lu.assertEquals(candidate('\"red\",\"blue\",\"green\",\"yellow\"'), {'red', 'blue', 'green', 'yellow'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local values = {}\n    local i = 1\n    while true do\n        local j, k = text:find('\"', i)\n        if not j then break end\n        local l = text:find('\"', k + 1)\n        if not l then break end\n        values[#values + 1] = text:sub(k + 1, l - 1)\n        i = l + 1\n    end\n    return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  local start = 1\n  local stop = 1\n  local value = ''\n  while start do\n    start, stop = text:find('\"', stop + 1)\n    if start then\n      value = text:sub(start + 1, stop - 1)\n      table.insert(values, value)\n    end\n  end\n  return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  for value in string.gmatch(text, '\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "\tlocal values = {}\n\tfor value in text:gmatch('\"(.-)\"') do\n\t\ttable.insert(values, value)\n\tend\n\treturn values\nend",
    "    local values = {}\n    for value in text:gmatch('\"(.-)\"') do\n        table.insert(values, value)\n    end\n    return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  local start = 1\n  while true do\n    local start_pos, end_pos = text:find('\"', start)\n    if not start_pos then\n      break\n    end\n    local value = text:sub(start_pos + 1, end_pos - 1)\n    table.insert(values, value)\n    start = end_pos + 1\n  end\n  return values\nend",
    "  local values = {}\n  local value = \"\"\n  local in_quotes = false\n  for i = 1, #text do\n    local char = text:sub(i, i)\n    if char == \"\\\"\" then\n      in_quotes = not in_quotes\n    elseif char == \",\" and not in_quotes then\n      table.insert(values, value)\n      value = \"\"\n    else\n      value = value .. char\n    end\n  end\n  table.insert(values, value)\n  return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "    local values = {}\n    local start = 1\n    while true do\n        local s, e = text:find('\"(.-)\"', start)\n        if not s then break end\n        values[#values+1] = text:sub(s+1, e-1)\n        start = e + 1\n    end\n    return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  for value in text:gmatch('\"(.-)\"') do\n    table.insert(values, value)\n  end\n  return values\nend",
    "  local values = {}\n  local i = 1\n  while true do\n    local j, k = text:find('\"', i)\n    if not j then break end\n    local value = text:sub(j + 1, k - 1)\n    values[#values + 1] = value\n    i = k + 1\n  end\n  return values\nend",
    "\tlocal values = {}\n\tlocal start = 1\n\tlocal quote = text:find('\"', start)\n\twhile quote do\n\t\tlocal next_quote = text:find('\"', quote + 1)\n\t\tif not next_quote then\n\t\t\tbreak\n\t\tend\n\t\ttable.insert(values, text:sub(quote + 1, next_quote - 1))\n\t\tstart = next_quote + 1\n\t\tquote = text:find('\"', start)\n\tend\n\treturn values\nend"
  ]
}
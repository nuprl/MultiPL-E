{
  "name": "mbpp_63_max_difference",
  "language": "lua",
  "prompt": "-- Write a function to find the maximum difference between available pairs in the given tuple list.\nlocal function max_difference(test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_difference\n    lu.assertEquals(candidate({{3, 5}, {1, 7}, {10, 3}, {1, 2}}), 7)\n    lu.assertEquals(candidate({{4, 6}, {2, 17}, {9, 13}, {11, 12}}), 15)\n    lu.assertEquals(candidate({{12, 35}, {21, 27}, {13, 23}, {41, 22}}), 23)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list - 1 do\n        for j = i + 1, #test_list do\n            local diff = test_list[i] - test_list[j]\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    local max_diff_pair = {}\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n                max_diff_pair = {test_list[i], test_list[j]}\n            end\n        end\n    end\n    return max_diff, max_diff_pair\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if math.abs(test_list[i] - test_list[j]) > max_diff then\n                max_diff = math.abs(test_list[i] - test_list[j])\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list - 1 do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  for i = 1, #test_list do\n    for j = i + 1, #test_list do\n      local diff = math.abs(test_list[i] - test_list[j])\n      if diff > max_diff then\n        max_diff = diff\n      end\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local max_diff_pair = {}\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n                max_diff_pair = {test_list[i], test_list[j]}\n            end\n        end\n    end\n    return max_diff, max_diff_pair\nend",
    "    local max_diff = 0\n    for i = 1, #test_list - 1 do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] - test_list[j] > max_diff then\n                max_diff = test_list[i] - test_list[j]\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "\tlocal max_diff = 0\n\tfor i = 1, #test_list - 1 do\n\t\tfor j = i + 1, #test_list do\n\t\t\tlocal diff = test_list[j] - test_list[i]\n\t\t\tif diff > max_diff then\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = 1, #test_list do\n            if i ~= j then\n                local diff = math.abs(test_list[i] - test_list[j])\n                if diff > max_diff then\n                    max_diff = diff\n                end\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    for i = 1, #test_list - 1 do\n        for j = i + 1, #test_list do\n            local diff = math.abs(test_list[i] - test_list[j])\n            if diff > max_diff then\n                max_diff = diff\n            end\n        end\n    end\n    return max_diff\nend"
  ]
}
{
  "name": "mbpp_290_max_length",
  "language": "lua",
  "prompt": "-- Write a function to find the list of maximum length in a list of lists.\nlocal function max_length(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_length\n    lu.assertEquals(candidate({{0}, {1, 3}, {5, 7}, {9, 11}, {13, 15, 17}}), {3, {13, 15, 17}})\n    lu.assertEquals(candidate({{1}, {5, 7}, {10, 12, 14, 15}}), {4, {10, 12, 14, 15}})\n    lu.assertEquals(candidate({{5}, {15, 20, 25}}), {3, {15, 20, 25}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max = 0\n  for i,v in ipairs(list1) do\n    if #v > max then\n      max = #v\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(list1) do\n\t\tif #v > max then\n\t\t\tmax = #v\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        if #list1[i] > max then\n            max = #list1[i]\n        end\n    end\n    return max\nend",
    "  local max = 0\n  for i, v in ipairs(list1) do\n    if #v > max then\n      max = #v\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "  local max = 0\n  for i, v in ipairs(list1) do\n    if #v > max then\n      max = #v\n    end\n  end\n  return max\nend",
    "  local max = 0\n  for i, v in ipairs(list1) do\n    if #v > max then\n      max = #v\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for i,v in ipairs(list1) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i = 1, #list1 do\n\t\tif #list1[i] > max then\n\t\t\tmax = #list1[i]\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, list2 in ipairs(list1) do\n        max = math.max(max, #list2)\n    end\n    return max\nend",
    "    local max = 0\n    for _, list2 in ipairs(list1) do\n        local len = #list2\n        if len > max then\n            max = len\n        end\n    end\n    return max\nend",
    "  local max = 0\n  for i, v in ipairs(list1) do\n    if #v > max then\n      max = #v\n    end\n  end\n  return max\nend",
    "\tlocal max = 0\n\tfor i, v in ipairs(list1) do\n\t\tif #v > max then\n\t\t\tmax = #v\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for i=1,#list1 do\n        if #list1[i] > max then\n            max = #list1[i]\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if type(v) == 'table' then\n            local len = max_length(v)\n            if len > max then\n                max = len\n            end\n        else\n            if i > max then\n                max = i\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(list1) do\n\t\tif #v > max then\n\t\t\tmax = #v\n\t\tend\n\tend\n\treturn max\nend",
    "  local max = 0\n  for i,v in ipairs(list1) do\n    if #v > max then\n      max = #v\n    end\n  end\n  return max\nend"
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "lua",
  "prompt": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tif is_amicable(i) then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_vul8qrg.lua:5: attempt to call a nil value (global 'is_amicable')\nstack traceback:\n\t/tmp/tmp_vul8qrg.lua:5: in local 'candidate'\n\t/tmp/tmp_vul8qrg.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplkvla5co.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmplkvla5co.lua:5: in local 'candidate'\n\t/tmp/tmplkvla5co.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        local b = sum_divisors(a)\n        if i == b and i ~= a then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsoxqcuzh.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpsoxqcuzh.lua:5: in local 'candidate'\n\t/tmp/tmpsoxqcuzh.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509918,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp89mr2rht.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp89mr2rht.lua:5: in local 'candidate'\n\t/tmp/tmp89mr2rht.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ittogpd.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp5ittogpd.lua:5: in local 'candidate'\n\t/tmp/tmp5ittogpd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a > i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb30jfvr8.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpb30jfvr8.lua:5: in local 'candidate'\n\t/tmp/tmpb30jfvr8.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_divisors(i)\n\t\tif i ~= j and sum_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509918,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsffd90av.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpsffd90av.lua:5: in local 'candidate'\n\t/tmp/tmpsffd90av.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_proper_divisors(i)\n        local b = sum_proper_divisors(a)\n        if b == i and a ~= b then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509918,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo4_pux2i.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpo4_pux2i.lua:5: in local 'candidate'\n\t/tmp/tmpo4_pux2i.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_divisors(i)\n\t\tif a ~= i and sum_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu0zdth9q.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpu0zdth9q.lua:5: in local 'candidate'\n\t/tmp/tmpu0zdth9q.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_proper_divisors(i)\n\t\tif a > i and sum_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyvqhh5jt.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpyvqhh5jt.lua:5: in local 'candidate'\n\t/tmp/tmpyvqhh5jt.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_of_divisors(i)\n\t\tif i ~= j and sum_of_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa57sw77.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppa57sw77.lua:5: in local 'candidate'\n\t/tmp/tmppa57sw77.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509918,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp89mr2rht.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp89mr2rht.lua:5: in local 'candidate'\n\t/tmp/tmp89mr2rht.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplkvla5co.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmplkvla5co.lua:5: in local 'candidate'\n\t/tmp/tmplkvla5co.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj4l44zps.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpj4l44zps.lua:5: in local 'candidate'\n\t/tmp/tmpj4l44zps.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplkvla5co.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmplkvla5co.lua:5: in local 'candidate'\n\t/tmp/tmplkvla5co.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ittogpd.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp5ittogpd.lua:5: in local 'candidate'\n\t/tmp/tmp5ittogpd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_proper_divisors(i)\n        local b = sum_of_proper_divisors(a)\n        if i == b and i ~= a then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxssg2n92.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpxssg2n92.lua:5: in local 'candidate'\n\t/tmp/tmpxssg2n92.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a > i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb30jfvr8.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpb30jfvr8.lua:5: in local 'candidate'\n\t/tmp/tmpb30jfvr8.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    local b = sum_of_divisors(a)\n    if i == b and i ~= a then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl8ovacgy.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpl8ovacgy.lua:5: in local 'candidate'\n\t/tmp/tmpl8ovacgy.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = amicable_number(i)\n        if a and a ~= i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3514n1xj.lua:5: attempt to call a nil value (global 'amicable_number')\nstack traceback:\n\t/tmp/tmp3514n1xj.lua:5: in local 'candidate'\n\t/tmp/tmp3514n1xj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tif is_amicable(i) then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_vul8qrg.lua:5: attempt to call a nil value (global 'is_amicable')\nstack traceback:\n\t/tmp/tmp_vul8qrg.lua:5: in local 'candidate'\n\t/tmp/tmp_vul8qrg.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  local amicable_numbers = {}\n  for i = 1, limit do\n    local sum_of_divisors = sum_of_divisors(i)\n    if sum_of_divisors ~= i and sum_of_divisors < limit and sum_of_divisors > 0 then\n      local sum_of_divisors_of_sum_of_divisors = sum_of_divisors(sum_of_divisors)\n      if sum_of_divisors_of_sum_of_divisors == i then\n        sum = sum + i + sum_of_divisors\n        amicable_numbers[i] = true\n        amicable_numbers[sum_of_divisors] = true\n      end\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0e_tx66o.lua:6: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp0e_tx66o.lua:6: in local 'candidate'\n\t/tmp/tmp0e_tx66o.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_divisors(i)\n    if a > i and sum_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvsilvf0.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpnvsilvf0.lua:5: in local 'candidate'\n\t/tmp/tmpnvsilvf0.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_proper_divisors(i)\n    if a > i and sum_proper_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgf4w_qxj.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpgf4w_qxj.lua:5: in local 'candidate'\n\t/tmp/tmpgf4w_qxj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_proper_divisors(i)\n\t\tlocal b = sum_proper_divisors(a)\n\t\tif b == i and a ~= b then\n\t\t\tsum = sum + a + b\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl0d1pxq6.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpl0d1pxq6.lua:5: in local 'candidate'\n\t/tmp/tmpl0d1pxq6.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a, b = sum_of_divisors(i), sum_of_divisors(sum_of_divisors(i))\n    if a ~= b and a == i then\n      sum = sum + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphck8g5_p.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmphck8g5_p.lua:5: in local 'candidate'\n\t/tmp/tmphck8g5_p.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509918,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp89mr2rht.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp89mr2rht.lua:5: in local 'candidate'\n\t/tmp/tmp89mr2rht.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvsfxwth7.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpvsfxwth7.lua:5: in local 'candidate'\n\t/tmp/tmpvsfxwth7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = amicable_number(i)\n    if a and a ~= i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj9s9e5th.lua:5: attempt to call a nil value (global 'amicable_number')\nstack traceback:\n\t/tmp/tmpj9s9e5th.lua:5: in local 'candidate'\n\t/tmp/tmpj9s9e5th.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_proper_divisors(i)\n    if a > i then\n      local b = sum_proper_divisors(a)\n      if b == i then\n        sum = sum + a + b\n      end\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeer5otqh.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpeer5otqh.lua:5: in local 'candidate'\n\t/tmp/tmpeer5otqh.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if i ~= a and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41r0v139.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp41r0v139.lua:5: in function 'candidate'\n\t/tmp/tmp41r0v139.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_divisors(i)\n    if a > i and sum_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvsilvf0.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpnvsilvf0.lua:5: in local 'candidate'\n\t/tmp/tmpnvsilvf0.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a ~= i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpftgxtrfc.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpftgxtrfc.lua:5: in local 'candidate'\n\t/tmp/tmpftgxtrfc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a ~= i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpftgxtrfc.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpftgxtrfc.lua:5: in local 'candidate'\n\t/tmp/tmpftgxtrfc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local d = sum_divisors(i)\n    if d ~= i and sum_divisors(d) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeqnbtaww.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpeqnbtaww.lua:5: in local 'candidate'\n\t/tmp/tmpeqnbtaww.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a ~= i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpftgxtrfc.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpftgxtrfc.lua:5: in local 'candidate'\n\t/tmp/tmpftgxtrfc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        if a > i and sum_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt_fcxbs7.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpt_fcxbs7.lua:5: in local 'candidate'\n\t/tmp/tmpt_fcxbs7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a > i and sum_of_proper_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_iw7dxpq.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp_iw7dxpq.lua:5: in local 'candidate'\n\t/tmp/tmp_iw7dxpq.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_proper_divisors(i)\n        if a ~= i and sum_proper_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpindfqsdq.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpindfqsdq.lua:5: in local 'candidate'\n\t/tmp/tmpindfqsdq.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        local b = sum_divisors(a)\n        if i == b and a ~= b then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqu0rzsmh.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpqu0rzsmh.lua:5: in local 'candidate'\n\t/tmp/tmpqu0rzsmh.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local j = sum_of_divisors(i)\n        if i ~= j and sum_of_divisors(j) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0z73nas.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa0z73nas.lua:5: in local 'candidate'\n\t/tmp/tmpa0z73nas.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    local b = sum_of_divisors(a)\n    if i == b and i ~= a then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl8ovacgy.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpl8ovacgy.lua:5: in local 'candidate'\n\t/tmp/tmpl8ovacgy.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a ~= i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpftgxtrfc.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpftgxtrfc.lua:5: in local 'candidate'\n\t/tmp/tmpftgxtrfc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_divisors(i)\n\t\tif i ~= j and sum_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509918,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsffd90av.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpsffd90av.lua:5: in local 'candidate'\n\t/tmp/tmpsffd90av.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_proper_divisors(i)\n\t\tif a > i and sum_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyvqhh5jt.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpyvqhh5jt.lua:5: in local 'candidate'\n\t/tmp/tmpyvqhh5jt.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        local b = sum_divisors(a)\n        if i == b and i ~= a then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsoxqcuzh.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpsoxqcuzh.lua:5: in local 'candidate'\n\t/tmp/tmpsoxqcuzh.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_proper_divisors(i)\n        if a ~= i and sum_of_proper_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprllg5_c2.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmprllg5_c2.lua:5: in local 'candidate'\n\t/tmp/tmprllg5_c2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tif is_amicable(i) then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_vul8qrg.lua:5: attempt to call a nil value (global 'is_amicable')\nstack traceback:\n\t/tmp/tmp_vul8qrg.lua:5: in local 'candidate'\n\t/tmp/tmp_vul8qrg.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a > i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4supk8cr.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp4supk8cr.lua:5: in local 'candidate'\n\t/tmp/tmp4supk8cr.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a > i and sum_of_proper_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_iw7dxpq.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp_iw7dxpq.lua:5: in local 'candidate'\n\t/tmp/tmp_iw7dxpq.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_proper_divisors(i)\n\t\tif a > i and sum_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyvqhh5jt.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpyvqhh5jt.lua:5: in local 'candidate'\n\t/tmp/tmpyvqhh5jt.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tif is_amicable(i) then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_vul8qrg.lua:5: attempt to call a nil value (global 'is_amicable')\nstack traceback:\n\t/tmp/tmp_vul8qrg.lua:5: in local 'candidate'\n\t/tmp/tmp_vul8qrg.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal d = sum_of_divisors(i)\n\t\tif d > i and sum_of_divisors(d) == i then\n\t\t\tsum = sum + i + d\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpessj1lzt.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpessj1lzt.lua:5: in local 'candidate'\n\t/tmp/tmpessj1lzt.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = d(i)\n    if j > i and d(j) == i then\n      sum = sum + i + j\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmb8rx7dj.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpmb8rx7dj.lua:5: in local 'candidate'\n\t/tmp/tmpmb8rx7dj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ittogpd.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp5ittogpd.lua:5: in local 'candidate'\n\t/tmp/tmp5ittogpd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplkvla5co.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmplkvla5co.lua:5: in local 'candidate'\n\t/tmp/tmplkvla5co.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tlocal b = sum_of_proper_divisors(a)\n\t\tif b == i and a ~= b then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqy22buz9.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpqy22buz9.lua:5: in local 'candidate'\n\t/tmp/tmpqy22buz9.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a > i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb30jfvr8.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpb30jfvr8.lua:5: in local 'candidate'\n\t/tmp/tmpb30jfvr8.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if i ~= a and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41r0v139.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp41r0v139.lua:5: in function 'candidate'\n\t/tmp/tmp41r0v139.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_proper_divisors(i)\n    if a > i and sum_proper_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgf4w_qxj.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpgf4w_qxj.lua:5: in local 'candidate'\n\t/tmp/tmpgf4w_qxj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local j = sum_divisors(i)\n        if i ~= j and sum_divisors(j) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvff5up96.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpvff5up96.lua:5: in local 'candidate'\n\t/tmp/tmpvff5up96.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_proper_divisors(i)\n    local b = sum_proper_divisors(a)\n    if i == b and i ~= a then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_divisors(i)\n\t\tlocal b = sum_divisors(a)\n\t\tif i == b and i ~= a then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeam6jdok.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpeam6jdok.lua:5: in local 'candidate'\n\t/tmp/tmpeam6jdok.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tlocal divisors = {}\n\tfor i = 1, limit do\n\t\tdivisors[i] = sum_divisors(i)\n\tend\n\tfor i = 1, limit do\n\t\tlocal j = divisors[i]\n\t\tif j > i and divisors[j] == i then\n\t\t\tsum = sum + i + j\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppimgkivq.lua:6: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmppimgkivq.lua:6: in local 'candidate'\n\t/tmp/tmppimgkivq.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_of_divisors(i)\n\t\tif i ~= j and sum_of_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa57sw77.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppa57sw77.lua:5: in local 'candidate'\n\t/tmp/tmppa57sw77.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    if is_amicable(i) then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5jic8675.lua:5: attempt to call a nil value (global 'is_amicable')\nstack traceback:\n\t/tmp/tmp5jic8675.lua:5: in local 'candidate'\n\t/tmp/tmp5jic8675.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = divisors_sum(i)\n\t\tlocal b = divisors_sum(a)\n\t\tif i == b and i ~= a then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvtod8670.lua:5: attempt to call a nil value (global 'divisors_sum')\nstack traceback:\n\t/tmp/tmpvtod8670.lua:5: in local 'candidate'\n\t/tmp/tmpvtod8670.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a, b = amicable_numbers(i)\n    if a and b then\n      sum = sum + a + b\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxejaazdc.lua:5: attempt to call a nil value (global 'amicable_numbers')\nstack traceback:\n\t/tmp/tmpxejaazdc.lua:5: in local 'candidate'\n\t/tmp/tmpxejaazdc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_of_divisors(i)\n\t\tif i ~= j and sum_of_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa57sw77.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppa57sw77.lua:5: in local 'candidate'\n\t/tmp/tmppa57sw77.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if i ~= a and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41r0v139.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp41r0v139.lua:5: in function 'candidate'\n\t/tmp/tmp41r0v139.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_divisors(i)\n    local b = sum_divisors(a)\n    if i == b and a ~= b then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaql2g7bn.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpaql2g7bn.lua:5: in local 'candidate'\n\t/tmp/tmpaql2g7bn.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a ~= i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpftgxtrfc.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpftgxtrfc.lua:5: in local 'candidate'\n\t/tmp/tmpftgxtrfc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local j = sum_of_proper_divisors(i)\n        if i ~= j and sum_of_proper_divisors(j) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb4_jv8md.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpb4_jv8md.lua:5: in local 'candidate'\n\t/tmp/tmpb4_jv8md.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tif is_amicable(i) then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_vul8qrg.lua:5: attempt to call a nil value (global 'is_amicable')\nstack traceback:\n\t/tmp/tmp_vul8qrg.lua:5: in local 'candidate'\n\t/tmp/tmp_vul8qrg.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi8x55fyd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpi8x55fyd.lua:5: in local 'candidate'\n\t/tmp/tmpi8x55fyd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_proper_divisors(i)\n    local b = sum_proper_divisors(a)\n    if b == i and a ~= b then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxr_do80h.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpxr_do80h.lua:5: in local 'candidate'\n\t/tmp/tmpxr_do80h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = amicable_number(i)\n\t\tif a and a ~= i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy3hm0tox.lua:5: attempt to call a nil value (global 'amicable_number')\nstack traceback:\n\t/tmp/tmpy3hm0tox.lua:5: in local 'candidate'\n\t/tmp/tmpy3hm0tox.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ittogpd.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp5ittogpd.lua:5: in local 'candidate'\n\t/tmp/tmp5ittogpd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaj9ne75k.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpaj9ne75k.lua:5: in local 'candidate'\n\t/tmp/tmpaj9ne75k.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = amicable_number(i)\n    if a and a ~= i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj9s9e5th.lua:5: attempt to call a nil value (global 'amicable_number')\nstack traceback:\n\t/tmp/tmpj9s9e5th.lua:5: in local 'candidate'\n\t/tmp/tmpj9s9e5th.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_of_divisors(i)\n\t\tif i ~= j and sum_of_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa57sw77.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppa57sw77.lua:5: in local 'candidate'\n\t/tmp/tmppa57sw77.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7e3dfcyv.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7e3dfcyv.lua:5: in local 'candidate'\n\t/tmp/tmp7e3dfcyv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local d = sum_of_divisors(i)\n        if d ~= i and sum_of_divisors(d) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxyetle7i.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpxyetle7i.lua:5: in function 'candidate'\n\t/tmp/tmpxyetle7i.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if i ~= a and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41r0v139.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp41r0v139.lua:5: in function 'candidate'\n\t/tmp/tmp41r0v139.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pr_4o_y.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7pr_4o_y.lua:5: in local 'candidate'\n\t/tmp/tmp7pr_4o_y.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_proper_divisors(i)\n\t\tif a > i and sum_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyvqhh5jt.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpyvqhh5jt.lua:5: in local 'candidate'\n\t/tmp/tmpyvqhh5jt.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_of_divisors(i)\n\t\tif i ~= j and sum_of_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa57sw77.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppa57sw77.lua:5: in local 'candidate'\n\t/tmp/tmppa57sw77.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplkvla5co.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmplkvla5co.lua:5: in local 'candidate'\n\t/tmp/tmplkvla5co.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgauvbtuc.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpgauvbtuc.lua:5: in local 'candidate'\n\t/tmp/tmpgauvbtuc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and i == sum_of_divisors(j) then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqhyshb9q.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpqhyshb9q.lua:5: in local 'candidate'\n\t/tmp/tmpqhyshb9q.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local d = sum_of_divisors(i)\n    if d > i and sum_of_divisors(d) == i then\n      sum = sum + i + d\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnl4c6r79.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpnl4c6r79.lua:5: in local 'candidate'\n\t/tmp/tmpnl4c6r79.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    local b = sum_of_divisors(a)\n    if i == b and i ~= a then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl8ovacgy.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpl8ovacgy.lua:5: in local 'candidate'\n\t/tmp/tmpl8ovacgy.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal d = sum_of_divisors(i)\n\t\tif d > i and sum_of_divisors(d) == i then\n\t\t\tsum = sum + i + d\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122674,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpessj1lzt.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpessj1lzt.lua:5: in local 'candidate'\n\t/tmp/tmpessj1lzt.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
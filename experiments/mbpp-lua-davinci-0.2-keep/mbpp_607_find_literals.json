{
  "name": "mbpp_607_find_literals",
  "language": "lua",
  "prompt": "-- Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.\nlocal function find_literals(text, pattern)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_607_find_literals.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_literals\n    lu.assertEquals(candidate('The quick brown fox jumps over the lazy dog.', 'fox'), {'fox', 16, 19})\n    lu.assertEquals(candidate('Its been a very crazy procedure right', 'crazy'), {'crazy', 16, 21})\n    lu.assertEquals(candidate('Hardest choices required strongest will', 'will'), {'will', 35, 39})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "\tlocal start = 0\n\tlocal stop = 0\n\tlocal match = \"\"\n\tlocal index = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0\n\tlocal last_match = \"\"\n\tlocal last_start = 0\n\tlocal last_stop = 0\n\tlocal last_index = 0",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index and end_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index, match = text:find(pattern)\n    return match, start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index == nil then\n        return nil, nil, nil\n    end\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  return text:sub(start, finish), start, finish\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start == nil then\n        return nil, nil, nil\n    end\n    return text:sub(start, finish), start, finish\nend",
    "    local start, stop = text:find(pattern)\n    if start then\n        return text:sub(start, stop), start, stop\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, start_index + #pattern - 1), start_index, start_index + #pattern - 1\n  end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = string.find(text, pattern)\n    if start_index ~= nil then\n        return string.sub(text, start_index, end_index), start_index, end_index\n    end\n    return nil\nend",
    "    local start, finish = text:find(pattern)\n    if start == nil then\n        return nil, nil, nil\n    end\n    return text:sub(start, finish), start, finish\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "\tlocal start, stop = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, stop), start, stop\n\tend\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index and end_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "\tlocal start, finish = string.find(text, pattern)\n\tif start then\n\t\treturn string.sub(text, start, finish), start, finish\n\tend\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "\tlocal start, stop = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, stop), start, stop\n\tend\nend",
    "    local start, finish = text:find(pattern)\n    return text:sub(start, finish), start, finish\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index == nil then\n        return nil, nil, nil\n    end\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start, stop = text:find(pattern)\n    if start then\n        return text:sub(start, stop), start, stop\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "\tlocal start, finish = text:find(pattern)\n\treturn text:sub(start, finish), start, finish\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, stop = text:find(pattern)\n  if start then\n    return text:sub(start, stop), start, stop\n  end\nend",
    "  local start, stop = text:find(pattern)\n  if start then\n    return text:sub(start, stop), start, stop\n  end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\tif start_index == nil then\n\t\treturn nil, nil, nil\n\tend\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)",
    "    local start_index, end_index = string.find(text, pattern)\n    if start_index then\n        return string.sub(text, start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, stop = text:find(pattern)\n    if start then\n        return text:sub(start, stop), start, stop\n    end\nend",
    "  local start, finish = text:find(pattern)\n  return text:sub(start, finish), start, finish\nend",
    "  local start_index, end_index = string.find(text, pattern)\n  if start_index then\n    return string.sub(text, start_index, end_index), start_index, end_index\n  end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "\tlocal start, stop = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, stop), start, stop\n\tend\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    else\n        return nil\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start, finish = text:find(pattern)\n    return text:sub(start, finish), start, finish\nend",
    "    local start_index, end_index = string.find(text, pattern)\n    if start_index then\n        return string.sub(text, start_index, end_index), start_index, end_index\n    end\nend",
    "\tlocal start, stop = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, stop), start, stop\n\tend\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  return text:sub(start, finish), start, finish\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    else\n        return nil\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  return text:sub(start, finish), start, finish\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "\tlocal start, stop = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, stop), start, stop\n\tend\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "  local start, finish = text:find(pattern)\n  return text:sub(start, finish), start, finish\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index == nil then\n        return nil, nil, nil\n    end\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, stop = text:find(pattern)\n  if start then\n    return text:sub(start, stop), start, stop\n  end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index == nil then\n        return nil\n    end\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    else\n        return nil\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "   local start, finish = text:find(pattern)\n   if start then\n      return text:sub(start, finish), start, finish\n   end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index == nil then\n        return nil, nil, nil\n    end\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "\tlocal start, finish = text:find(pattern)\n\treturn text:sub(start, finish), start, finish\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    return text:sub(start, finish), start, finish\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "\tlocal start, finish = text:find(pattern)\n\treturn text:sub(start, finish), start, finish\nend",
    "\tlocal start_index, end_index = string.find(text, pattern)\n\treturn string.sub(text, start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index == nil then\n        return nil\n    end\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "\tlocal start, finish = text:find(pattern)\n\treturn text:sub(start, finish), start, finish\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, stop = text:find(pattern)\n    if start then\n        return text:sub(start, stop), start, stop\n    end\nend",
    "\tlocal start, finish = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, finish), start, finish\n\tend\nend",
    "  local start_index, end_index = text:find(pattern)\n  if start_index then\n    return text:sub(start_index, end_index), start_index, end_index\n  end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start, finish = text:find(pattern)\n  if start then\n    return text:sub(start, finish), start, finish\n  end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "  local start, stop = text:find(pattern)\n  return text:sub(start, stop), start, stop\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, start_index + #pattern - 1), start_index, start_index + #pattern - 1\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = string.find(text, pattern)\n    if start_index then\n        return string.sub(text, start_index, end_index), start_index, end_index\n    end\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\treturn text:sub(start_index, end_index), start_index, end_index\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start, finish = text:find(pattern)\n    if start then\n        return text:sub(start, finish), start, finish\n    end\nend",
    "  local start_index, end_index = text:find(pattern)\n  return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    return text:sub(start_index, end_index), start_index, end_index\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "    local start_index, end_index = string.find(text, pattern)\n    if start_index == nil then\n        return nil\n    end\n    return string.sub(text, start_index, end_index), start_index, end_index\nend",
    "\tlocal start, stop = text:find(pattern)\n\tif start then\n\t\treturn text:sub(start, stop), start, stop\n\tend\nend",
    "    local start_index, end_index = text:find(pattern)\n    if start_index then\n        return text:sub(start_index, end_index), start_index, end_index\n    end\nend",
    "\tlocal start_index, end_index = text:find(pattern)\n\tif start_index then\n\t\treturn text:sub(start_index, end_index), start_index, end_index\n\tend\nend",
    "   local start_index, end_index = text:find(pattern)\n   return text:sub(start_index, end_index), start_index, end_index\nend"
  ]
}
{
  "name": "mbpp_89_closest_num",
  "language": "lua",
  "prompt": "-- Write a function to find the closest smaller number than n.\nlocal function closest_num(N)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = closest_num\n    lu.assertEquals(candidate(11), 10)\n    lu.assertEquals(candidate(7), 6)\n    lu.assertEquals(candidate(12), 11)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local n = N\n  local i = 0\n  while n > 0 do\n    n = n >> 1\n    i = i + 1\n  end\n  return 2^(i-1)\nend",
    "\tlocal n = N\n\tlocal d = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\td = n % 10\n\t\tn = math.floor(n / 10)\n\t\tif d == 0 then\n\t\t\ti = i + 1\n\t\telse\n\t\t\tbreak\n\t\tend\n\tend\n\tif i == 0 then\n\t\treturn N\n\telse\n\t\treturn N - math.pow(10, i)\n\tend\nend",
    "    local n = N\n    local i = 0\n    while n > 0 do\n        n = n >> 1\n        i = i + 1\n    end\n    return 2^(i-1)\nend",
    "    local n = N\n    local c0, c1 = 0, 0\n    while n > 0 do\n        local r = n % 2\n        if r == 0 then\n            c0 = c0 + 1\n        else\n            c1 = c1 + 1\n        end\n        n = math.floor(n / 2)\n    end\n    if c0 > c1 then\n        return N - (2 ^ c1)\n    else\n        return N + (2 ^ c0)\n    end\nend",
    "    local n = N\n    local c = 0\n    while n > 0 do\n        n = n & (n - 1)\n        c = c + 1\n    end\n    return c\nend",
    "\tlocal n = N\n\tlocal m = N\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\treturn m\n\t\tend\n\t\tn = n / 2\n\t\tm = m - 1\n\tend\n\treturn N\nend",
    "    local n = N\n    local i = 0\n    local j = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            i = i + 1\n        else\n            j = j + 1\n        end\n        n = math.floor(n/2)\n    end\n    return math.pow(2, i) + math.pow(2, j-1) - 1\nend",
    "    local n = N\n    local c0, c1 = 0, 0\n    while n > 0 do\n        local r = n % 2\n        if r == 0 then\n            c0 = c0 + 1\n        else\n            c1 = c1 + 1\n        end\n        n = math.floor(n / 2)\n    end\n    if c0 > c1 then\n        return N - 2^c1\n    else\n        return N + 2^c0\n    end\nend",
    "\tlocal n = N\n\tlocal n_bits = 0\n\twhile n > 0 do\n\t\tn = n >> 1\n\t\tn_bits = n_bits + 1\n\tend\n\treturn N - (1 << (n_bits - 1))\nend",
    "    local n = N\n    local c = 0\n    while n > 0 do\n        n = n & (n - 1)\n        c = c + 1\n    end\n    return c\nend",
    "  local n = N\n  local m = n\n  local i = 0\n  while n > 0 do\n    if n % 2 == 1 then\n      m = m - 2^i\n    end\n    n = math.floor(n / 2)\n    i = i + 1\n  end\n  return m\nend",
    "\tlocal n = N\n\tlocal m = N\n\twhile true do\n\t\tif is_prime(n) then\n\t\t\treturn n\n\t\telseif is_prime(m) then\n\t\t\treturn m\n\t\tend\n\t\tn = n - 1\n\t\tm = m + 1\n\tend\nend",
    "  local n = N\n  local m = N\n  while n > 0 do\n    if n % 2 == 0 then\n      n = n / 2\n    else\n      n = n - 1\n    end\n    if n < m then\n      m = n\n    end\n  end\n  return m\nend",
    "    local n = N\n    local m = 0\n    while n > 0 do\n        m = m * 2 + (n % 2)\n        n = math.floor(n / 2)\n    end\n    return m\nend",
    "\tlocal n = math.floor(N)\n\tlocal m = n % 2\n\tif m == 0 then\n\t\treturn n - 1\n\telse\n\t\treturn n + 1\n\tend\nend",
    "    local n = N\n    local c = 0\n    while n > 0 do\n        n = n & (n - 1)\n        c = c + 1\n    end\n    return c\nend",
    "    local n = N\n    local c0, c1 = 0, 0\n    while n > 0 do\n        local r = n % 2\n        if r == 0 then\n            c0 = c0 + 1\n        else\n            c1 = c1 + 1\n        end\n        n = math.floor(n / 2)\n    end\n    if c0 > c1 then\n        return N - 2^c1\n    else\n        return N + 2^c0\n    end\nend",
    "  local n = N\n  local i = 0\n  while n > 0 do\n    n = n >> 1\n    i = i + 1\n  end\n  return 2^(i-1)\nend",
    "\tlocal n = N\n\tlocal m = 1\n\tlocal c = 0\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tn = (n - d) / 10\n\t\tif d > 0 then\n\t\t\tc = c + (d - 1) * m\n\t\tend\n\t\tm = m * 10\n\tend\n\treturn c\nend",
    "\tlocal n = N\n\tlocal i = 0\n\twhile n > 0 do\n\t\tn = n >> 1\n\t\ti = i + 1\n\tend\n\treturn 1 << (i - 1)\nend"
  ]
}
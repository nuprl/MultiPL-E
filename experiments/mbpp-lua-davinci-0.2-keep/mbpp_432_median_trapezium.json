{
  "name": "mbpp_432_median_trapezium",
  "language": "lua",
  "prompt": "-- Write a function to find the median length of a trapezium.\nlocal function median_trapezium(base1, base2, height)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = median_trapezium\n    lu.assertEquals(candidate(15, 25, 35), 20)\n    lu.assertEquals(candidate(10, 20, 30), 15)\n    lu.assertEquals(candidate(6, 9, 4), 7.5)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\treturn (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "\treturn (base1 + base2) / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    local median = (base1 + base2) / 2\n    return median * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "\treturn (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "    return (base1 + base2) * height / 2\nend",
    "    return (base1 + base2) * height / 2\nend"
  ]
}
{
  "name": "mbpp_64_subject_marks",
  "language": "lua",
  "prompt": "-- Write a function to sort a list of tuples using the second value of each tuple.\nlocal function subject_marks(subjectmarks)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_64_subject_marks.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = subject_marks\n    lu.assertEquals(candidate({{'English', 88}, {'Science', 90}, {'Maths', 97}, {'Social sciences', 82}}), {{'Social sciences', 82}, {'English', 88}, {'Science', 90}, {'Maths', 97}})\n    lu.assertEquals(candidate({{'Telugu', 49}, {'Hindhi', 54}, {'Social', 33}}), {{'Social', 33}, {'Telugu', 49}, {'Hindhi', 54}})\n    lu.assertEquals(candidate({{'Physics', 96}, {'Chemistry', 97}, {'Biology', 45}}), {{'Biology', 45}, {'Physics', 96}, {'Chemistry', 97}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local function sort_by_marks(a,b)\n    return a[2] < b[2]\n  end\n  table.sort(subjectmarks,sort_by_marks)\n  return subjectmarks\nend",
    "    table.sort(subjectmarks, function(a, b) return a[2] < b[2] end)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a, b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a,b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a, b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a, b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "  local function sort_by_marks(a,b)\n    return a[2] < b[2]\n  end\n  table.sort(subjectmarks, sort_by_marks)\n  return subjectmarks\nend",
    "    local function sort_marks(a,b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_marks)\n    return subjectmarks\nend",
    "  local function sort_by_marks(a,b)\n    return a[2] < b[2]\n  end\n  table.sort(subjectmarks,sort_by_marks)\n  return subjectmarks\nend",
    "    local function sort_by_marks(a,b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "  local function sort_by_marks(a,b)\n    return a[2] < b[2]\n  end\n  table.sort(subjectmarks, sort_by_marks)\n  return subjectmarks\nend",
    "    table.sort(subjectmarks, function(a,b) return a[2] < b[2] end)\n    return subjectmarks\nend",
    "    table.sort(subjectmarks, function(a,b) return a[2]>b[2] end)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a, b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a, b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a, b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "    local function sort_by_marks(a, b)\n        return a[2] < b[2]\n    end\n    table.sort(subjectmarks, sort_by_marks)\n    return subjectmarks\nend",
    "\tlocal function compare(a,b)\n\t\treturn a[2] < b[2]\n\tend\n\ttable.sort(subjectmarks,compare)\n\treturn subjectmarks\nend",
    "    table.sort(subjectmarks, function(a,b) return a[2] < b[2] end)\n    return subjectmarks\nend",
    "    table.sort(subjectmarks, function(a, b) return a[2] < b[2] end)\n    return subjectmarks\nend"
  ]
}
{
  "name": "mbpp_108_merge_sorted_list",
  "language": "lua",
  "prompt": "-- Write a function to merge three lists into a single sorted list.\nlocal function merge_sorted_list(num1, num2, num3)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = merge_sorted_list\n    lu.assertEquals(candidate({25, 24, 15, 4, 5, 29, 110}, {19, 20, 11, 56, 25, 233, 154}, {24, 26, 54, 48}), {4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233})\n    lu.assertEquals(candidate({1, 3, 5, 6, 8, 9}, {2, 5, 7, 11}, {1, 4, 7, 8, 12}), {1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12})\n    lu.assertEquals(candidate({18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1}, {25, 35, 22, 85, 14, 65, 75, 25, 58}, {12, 74, 9, 50, 61, 41}), {1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "\tlocal list = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tlocal min = math.min(num1[i], num2[j], num3[k])\n\t\tif min == num1[i] then\n\t\t\ttable.insert(list, num1[i])\n\t\t\ti = i + 1\n\t\telseif min == num2[j] then\n\t\t\ttable.insert(list, num2[j])\n\t\t\tj = j + 1\n\t\telse\n\t\t\ttable.insert(list, num3[k])\n\t\t\tk = k + 1\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(list, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(list, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(list, num3[k])\n\t\tk = k + 1\n\tend\n\treturn list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local merged_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(merged_list, num1[i])\n                i = i + 1\n            else\n                table.insert(merged_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(merged_list, num2[j])\n                j = j + 1\n            else\n                table.insert(merged_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(merged_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(merged_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(merged_list, num3[k])\n        k = k + 1\n    end\n    return merged_list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "\tlocal list = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] < num2[j] then\n\t\t\tif num1[i] < num3[k] then\n\t\t\t\ttable.insert(list, num1[i])\n\t\t\t\ti = i + 1\n\t\t\telse\n\t\t\t\ttable.insert(list, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\telse\n\t\t\tif num2[j] < num3[k] then\n\t\t\t\ttable.insert(list, num2[j])\n\t\t\t\tj = j + 1\n\t\t\telse\n\t\t\t\ttable.insert(list, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(list, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(list, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(list, num3[k])\n\t\tk = k + 1\n\tend\n\treturn list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "    local function merge_two_sorted_list(num1, num2)\n        local result = {}\n        local i, j = 1, 1\n        while i <= #num1 and j <= #num2 do\n            if num1[i] < num2[j] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num2[j])\n                j = j + 1\n            end\n        end\n        while i <= #num1 do\n            table.insert(result, num1[i])\n            i = i + 1\n        end\n        while j <= #num2 do\n            table.insert(result, num2[j])\n            j = j + 1\n        end\n        return result\n    end\n    return merge_two_sorted_list(merge_two_sorted_list(num1, num2), num3)\nend",
    "    local nums = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(nums, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(nums, num2[j])\n            j = j + 1\n        else\n            table.insert(nums, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(nums, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(nums, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(nums, num3[k])\n        k = k + 1\n    end\n    return nums\nend",
    "    local merged_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(merged_list, num1[i])\n                i = i + 1\n            else\n                table.insert(merged_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(merged_list, num2[j])\n                j = j + 1\n            else\n                table.insert(merged_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(merged_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(merged_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(merged_list, num3[k])\n        k = k + 1\n    end\n    return merged_list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] <= num2[j] and num1[i] <= num3[k] then\n\t\t\ttable.insert(result, num1[i])\n\t\t\ti = i + 1\n\t\telseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n\t\t\ttable.insert(result, num2[j])\n\t\t\tj = j + 1\n\t\telseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n\t\t\ttable.insert(result, num3[k])\n\t\t\tk = k + 1\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(result, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(result, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(result, num3[k])\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "\tlocal sorted_list = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tlocal min_num = math.min(num1[i], num2[j], num3[k])\n\t\tif min_num == num1[i] then\n\t\t\ttable.insert(sorted_list, num1[i])\n\t\t\ti = i + 1\n\t\telseif min_num == num2[j] then\n\t\t\ttable.insert(sorted_list, num2[j])\n\t\t\tj = j + 1\n\t\telse\n\t\t\ttable.insert(sorted_list, num3[k])\n\t\t\tk = k + 1\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(sorted_list, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(sorted_list, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(sorted_list, num3[k])\n\t\tk = k + 1\n\tend\n\treturn sorted_list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local sorted_list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(sorted_list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(sorted_list, num2[j])\n      j = j + 1\n    else\n      table.insert(sorted_list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(sorted_list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(sorted_list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(sorted_list, num3[k])\n    k = k + 1\n  end\n  return sorted_list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end",
    "\tlocal list = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] < num2[j] then\n\t\t\tif num1[i] < num3[k] then\n\t\t\t\ttable.insert(list, num1[i])\n\t\t\t\ti = i + 1\n\t\t\telse\n\t\t\t\ttable.insert(list, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\telse\n\t\t\tif num2[j] < num3[k] then\n\t\t\t\ttable.insert(list, num2[j])\n\t\t\t\tj = j + 1\n\t\t\telse\n\t\t\t\ttable.insert(list, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(list, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(list, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(list, num3[k])\n\t\tk = k + 1\n\tend\n\treturn list\nend",
    "    local nums = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(nums, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(nums, num2[j])\n            j = j + 1\n        else\n            table.insert(nums, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(nums, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(nums, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(nums, num3[k])\n        k = k + 1\n    end\n    return nums\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(result, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(result, num2[j])\n      j = j + 1\n    else\n      table.insert(result, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                list[#list + 1] = num1[i]\n                i = i + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                list[#list + 1] = num2[j]\n                j = j + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        list[#list + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        list[#list + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        list[#list + 1] = num3[k]\n        k = k + 1\n    end\n    return list\nend",
    "    local merged_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min_num = math.min(num1[i], num2[j], num3[k])\n        if min_num == num1[i] then\n            table.insert(merged_list, num1[i])\n            i = i + 1\n        elseif min_num == num2[j] then\n            table.insert(merged_list, num2[j])\n            j = j + 1\n        else\n            table.insert(merged_list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(merged_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(merged_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(merged_list, num3[k])\n        k = k + 1\n    end\n    return merged_list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "  local list = {}\n  local i = 1\n  local j = 1\n  local k = 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        list[#list + 1] = num1[i]\n        i = i + 1\n      else\n        list[#list + 1] = num3[k]\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        list[#list + 1] = num2[j]\n        j = j + 1\n      else\n        list[#list + 1] = num3[k]\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    list[#list + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    list[#list + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    list[#list + 1] = num3[k]\n    k = k + 1\n  end\n  return list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local merged_list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(merged_list, num1[i])\n        i = i + 1\n      else\n        table.insert(merged_list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(merged_list, num2[j])\n        j = j + 1\n      else\n        table.insert(merged_list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(merged_list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(merged_list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(merged_list, num3[k])\n    k = k + 1\n  end\n  return merged_list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    local min = math.min(num1[i], num2[j], num3[k])\n    if min == num1[i] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif min == num2[j] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(result, num1[i])\n        i = i + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(result, num2[j])\n        j = j + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(result, num1[i])\n        i = i + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(result, num2[j])\n        j = j + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local num = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(num, num1[i])\n                i = i + 1\n            else\n                table.insert(num, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(num, num2[j])\n                j = j + 1\n            else\n                table.insert(num, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(num, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(num, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(num, num3[k])\n        k = k + 1\n    end\n    return num\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local merged_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(merged_list, num1[i])\n                i = i + 1\n            else\n                table.insert(merged_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(merged_list, num2[j])\n                j = j + 1\n            else\n                table.insert(merged_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(merged_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(merged_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(merged_list, num3[k])\n        k = k + 1\n    end\n    return merged_list\nend",
    "    local num_list = {}\n    local num1_index = 1\n    local num2_index = 1\n    local num3_index = 1\n    while num1_index <= #num1 and num2_index <= #num2 and num3_index <= #num3 do\n        if num1[num1_index] <= num2[num2_index] and num1[num1_index] <= num3[num3_index] then\n            table.insert(num_list, num1[num1_index])\n            num1_index = num1_index + 1\n        elseif num2[num2_index] <= num1[num1_index] and num2[num2_index] <= num3[num3_index] then\n            table.insert(num_list, num2[num2_index])\n            num2_index = num2_index + 1\n        else\n            table.insert(num_list, num3[num3_index])\n            num3_index = num3_index + 1\n        end\n    end\n    while num1_index <= #num1 do\n        table.insert(num_list, num1[num1_index])\n        num1_index = num1_index + 1\n    end\n    while num2_index <= #num2 do\n        table.insert(num_list, num2[num2_index])\n        num2_index = num2_index + 1\n    end\n    while num3_index <= #num3 do\n        table.insert(num_list, num3[num3_index])\n        num3_index = num3_index + 1\n    end\n    return num_list\nend",
    "    local num = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] and num1[i] < num3[k] then\n            num[#num + 1] = num1[i]\n            i = i + 1\n        elseif num2[j] < num1[i] and num2[j] < num3[k] then\n            num[#num + 1] = num2[j]\n            j = j + 1\n        else\n            num[#num + 1] = num3[k]\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        num[#num + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        num[#num + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        num[#num + 1] = num3[k]\n        k = k + 1\n    end\n    return num\nend",
    "  local sorted_list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n      else\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n      else\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(sorted_list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(sorted_list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(sorted_list, num3[k])\n    k = k + 1\n  end\n  return sorted_list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] < num2[j] then\n\t\t\tif num1[i] < num3[k] then\n\t\t\t\ttable.insert(result, num1[i])\n\t\t\t\ti = i + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\telse\n\t\t\tif num2[j] < num3[k] then\n\t\t\t\ttable.insert(result, num2[j])\n\t\t\t\tj = j + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(result, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(result, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(result, num3[k])\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "  local sorted_list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(sorted_list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(sorted_list, num2[j])\n      j = j + 1\n    else\n      table.insert(sorted_list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(sorted_list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(sorted_list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(sorted_list, num3[k])\n    k = k + 1\n  end\n  return sorted_list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local list = {}\n  local i = 1\n  local j = 1\n  local k = 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] and num1[i] < num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] < num1[i] and num2[j] < num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      result[#result + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      result[#result + 1] = num2[j]\n      j = j + 1\n    else\n      result[#result + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    result[#result + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    result[#result + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    result[#result + 1] = num3[k]\n    k = k + 1\n  end\n  return result\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(result, num1[i])\n        i = i + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(result, num2[j])\n        j = j + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] and num1[i] < num3[k] then\n            table.insert(sorted_list, num1[i])\n            i = i + 1\n        elseif num2[j] < num1[i] and num2[j] < num3[k] then\n            table.insert(sorted_list, num2[j])\n            j = j + 1\n        else\n            table.insert(sorted_list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "  local merged_list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      merged_list[#merged_list + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      merged_list[#merged_list + 1] = num2[j]\n      j = j + 1\n    else\n      merged_list[#merged_list + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    merged_list[#merged_list + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    merged_list[#merged_list + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    merged_list[#merged_list + 1] = num3[k]\n    k = k + 1\n  end\n  return merged_list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "\tlocal num_list = {}\n\tlocal num_list_index = 1\n\tlocal num1_index = 1\n\tlocal num2_index = 1\n\tlocal num3_index = 1\n\twhile num1_index <= #num1 and num2_index <= #num2 and num3_index <= #num3 do\n\t\tif num1[num1_index] < num2[num2_index] and num1[num1_index] < num3[num3_index] then\n\t\t\tnum_list[num_list_index] = num1[num1_index]\n\t\t\tnum1_index = num1_index + 1\n\t\telseif num2[num2_index] < num1[num1_index] and num2[num2_index] < num3[num3_index] then\n\t\t\tnum_list[num_list_index] = num2[num2_index]\n\t\t\tnum2_index = num2_index + 1\n\t\telse\n\t\t\tnum_list[num_list_index] = num3[num3_index]\n\t\t\tnum3_index = num3_index + 1\n\t\tend\n\t\tnum_list_index = num_list_index + 1\n\tend\n\twhile num1_index <= #num1 do\n\t\tnum_list[num_list_index] = num1[num1_index]\n\t\tnum1_index = num1_index + 1\n\t\tnum_list_index = num_list_index + 1\n\tend\n\twhile num2_index <= #num2 do\n\t\tnum_list[num_list_index] = num2[num2_index]\n\t\tnum2_index = num2_index + 1\n\t\tnum_list_index = num_list_index + 1\n\tend\n\twhile num3_index <= #num3 do\n\t\tnum_list[num_list_index] = num3[num3_index]\n\t\tnum3_index = num3_index + 1\n\t\tnum_list_index = num_list_index + 1\n\tend\n\treturn num_list\nend",
    "    local list = {}\n    local i1, i2, i3 = 1, 1, 1\n    while i1 <= #num1 and i2 <= #num2 and i3 <= #num3 do\n        if num1[i1] <= num2[i2] and num1[i1] <= num3[i3] then\n            table.insert(list, num1[i1])\n            i1 = i1 + 1\n        elseif num2[i2] <= num1[i1] and num2[i2] <= num3[i3] then\n            table.insert(list, num2[i2])\n            i2 = i2 + 1\n        else\n            table.insert(list, num3[i3])\n            i3 = i3 + 1\n        end\n    end\n    while i1 <= #num1 do\n        table.insert(list, num1[i1])\n        i1 = i1 + 1\n    end\n    while i2 <= #num2 do\n        table.insert(list, num2[i2])\n        i2 = i2 + 1\n    end\n    while i3 <= #num3 do\n        table.insert(list, num3[i3])\n        i3 = i3 + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(result, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(result, num2[j])\n      j = j + 1\n    else\n      table.insert(result, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                list[#list + 1] = num1[i]\n                i = i + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                list[#list + 1] = num2[j]\n                j = j + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        list[#list + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        list[#list + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        list[#list + 1] = num3[k]\n        k = k + 1\n    end\n    return list\nend",
    "  local sorted_list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n      else\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n      else\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(sorted_list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(sorted_list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(sorted_list, num3[k])\n    k = k + 1\n  end\n  return sorted_list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    local min = math.min(num1[i], num2[j], num3[k])\n    if min == num1[i] then\n      table.insert(result, num1[i])\n      i = i + 1\n    elseif min == num2[j] then\n      table.insert(result, num2[j])\n      j = j + 1\n    else\n      table.insert(result, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      list[#list + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      list[#list + 1] = num2[j]\n      j = j + 1\n    else\n      list[#list + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    list[#list + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    list[#list + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    list[#list + 1] = num3[k]\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(result, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(result, num2[j])\n      j = j + 1\n    else\n      table.insert(result, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local nums = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(nums, num1[i])\n                i = i + 1\n            else\n                table.insert(nums, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(nums, num2[j])\n                j = j + 1\n            else\n                table.insert(nums, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(nums, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(nums, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(nums, num3[k])\n        k = k + 1\n    end\n    return nums\nend",
    "  local nums = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      nums[#nums + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      nums[#nums + 1] = num2[j]\n      j = j + 1\n    else\n      nums[#nums + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    nums[#nums + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    nums[#nums + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    nums[#nums + 1] = num3[k]\n    k = k + 1\n  end\n  return nums\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min_num = math.min(num1[i], num2[j], num3[k])\n        if min_num == num1[i] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif min_num == num2[j] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local i, j, k = 1, 1, 1\n    local result = {}\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(sorted_list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(sorted_list, num2[j])\n            j = j + 1\n        else\n            table.insert(sorted_list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(result, num1[i])\n        i = i + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(result, num2[j])\n        j = j + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local i, j, k = 1, 1, 1\n    local nums = {}\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min_num = math.min(num1[i], num2[j], num3[k])\n        if min_num == num1[i] then\n            table.insert(nums, num1[i])\n            i = i + 1\n        elseif min_num == num2[j] then\n            table.insert(nums, num2[j])\n            j = j + 1\n        elseif min_num == num3[k] then\n            table.insert(nums, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(nums, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(nums, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(nums, num3[k])\n        k = k + 1\n    end\n    return nums\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] and num1[i] < num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] < num1[i] and num2[j] < num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local num_list = {}\n    local num1_index = 1\n    local num2_index = 1\n    local num3_index = 1\n    while num1_index <= #num1 and num2_index <= #num2 and num3_index <= #num3 do\n        if num1[num1_index] <= num2[num2_index] and num1[num1_index] <= num3[num3_index] then\n            num_list[#num_list + 1] = num1[num1_index]\n            num1_index = num1_index + 1\n        elseif num2[num2_index] <= num1[num1_index] and num2[num2_index] <= num3[num3_index] then\n            num_list[#num_list + 1] = num2[num2_index]\n            num2_index = num2_index + 1\n        else\n            num_list[#num_list + 1] = num3[num3_index]\n            num3_index = num3_index + 1\n        end\n    end\n    while num1_index <= #num1 do\n        num_list[#num_list + 1] = num1[num1_index]\n        num1_index = num1_index + 1\n    end\n    while num2_index <= #num2 do\n        num_list[#num_list + 1] = num2[num2_index]\n        num2_index = num2_index + 1\n    end\n    while num3_index <= #num3 do\n        num_list[#num_list + 1] = num3[num3_index]\n        num3_index = num3_index + 1\n    end\n    return num_list\nend",
    "    local sorted_list = {}\n    local index = 1\n    while #num1 > 0 and #num2 > 0 and #num3 > 0 do\n        if num1[1] < num2[1] and num1[1] < num3[1] then\n            sorted_list[index] = table.remove(num1, 1)\n        elseif num2[1] < num1[1] and num2[1] < num3[1] then\n            sorted_list[index] = table.remove(num2, 1)\n        else\n            sorted_list[index] = table.remove(num3, 1)\n        end\n        index = index + 1\n    end\n    while #num1 > 0 do\n        sorted_list[index] = table.remove(num1, 1)\n        index = index + 1\n    end\n    while #num2 > 0 do\n        sorted_list[index] = table.remove(num2, 1)\n        index = index + 1\n    end\n    while #num3 > 0 do\n        sorted_list[index] = table.remove(num3, 1)\n        index = index + 1\n    end\n    return sorted_list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local nums = {num1, num2, num3}\n    local sorted = {}\n    for i = 1, 3 do\n        for j = 1, #nums[i] do\n            table.insert(sorted, nums[i][j])\n        end\n    end\n    table.sort(sorted)\n    return sorted\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            result[#result + 1] = num1[i]\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            result[#result + 1] = num2[j]\n            j = j + 1\n        else\n            result[#result + 1] = num3[k]\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        result[#result + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        result[#result + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        result[#result + 1] = num3[k]\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local sorted_list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(sorted_list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(sorted_list, num2[j])\n      j = j + 1\n    else\n      table.insert(sorted_list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 and j <= #num2 do\n    if num1[i] <= num2[j] then\n      table.insert(sorted_list, num1[i])\n      i = i + 1\n    else\n      table.insert(sorted_list, num2[j])\n      j = j + 1\n    end\n  end\n  while i <= #num1 and k <= #num3 do\n    if num1[i] <= num3[k] then\n      table.insert(sorted_list, num1[i])\n      i = i + 1\n    else\n      table.insert(sorted_list, num3[k])\n      k = k + 1\n    end\n  end\n  while j <= #num2 and k <= #num3 do\n    if num2[j] <= num3[k] then\n      table.insert(sorted_list, num2[j])\n      j = j + 1\n    else\n      table.insert(sorted_list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(sorted_list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(sorted_list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n   ",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "\tlocal list = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] <= num2[j] and num1[i] <= num3[k] then\n\t\t\ttable.insert(list, num1[i])\n\t\t\ti = i + 1\n\t\telseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n\t\t\ttable.insert(list, num2[j])\n\t\t\tj = j + 1\n\t\telseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n\t\t\ttable.insert(list, num3[k])\n\t\t\tk = k + 1\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(list, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(list, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(list, num3[k])\n\t\tk = k + 1\n\tend\n\treturn list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        elseif num2[j] < num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local num_list = {}\n  local index = 1\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      num_list[index] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      num_list[index] = num2[j]\n      j = j + 1\n    else\n      num_list[index] = num3[k]\n      k = k + 1\n    end\n    index = index + 1\n  end\n  while i <= #num1 do\n    num_list[index] = num1[i]\n    i = i + 1\n    index = index + 1\n  end\n  while j <= #num2 do\n    num_list[index] = num2[j]\n    j = j + 1\n    index = index + 1\n  end\n  while k <= #num3 do\n    num_list[index] = num3[k]\n    k = k + 1\n    index = index + 1\n  end\n  return num_list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                list[#list + 1] = num1[i]\n                i = i + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                list[#list + 1] = num2[j]\n                j = j + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        end\n    end",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tlocal min = math.min(num1[i], num2[j], num3[k])\n\t\tif min == num1[i] then\n\t\t\ttable.insert(result, num1[i])\n\t\t\ti = i + 1\n\t\telseif min == num2[j] then\n\t\t\ttable.insert(result, num2[j])\n\t\t\tj = j + 1\n\t\telse\n\t\t\ttable.insert(result, num3[k])\n\t\t\tk = k + 1\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(result, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(result, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(result, num3[k])\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(result, num1[i])\n        i = i + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(result, num2[j])\n        j = j + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "\tlocal list = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] < num2[j] then\n\t\t\tif num1[i] < num3[k] then\n\t\t\t\ttable.insert(list, num1[i])\n\t\t\t\ti = i + 1\n\t\t\telse\n\t\t\t\ttable.insert(list, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\telse\n\t\t\tif num2[j] < num3[k] then\n\t\t\t\ttable.insert(list, num2[j])\n\t\t\t\tj = j + 1\n\t\t\telse\n\t\t\t\ttable.insert(list, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(list, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(list, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(list, num3[k])\n\t\tk = k + 1\n\tend\n\treturn list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(result, num1[i])\n        i = i + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(result, num2[j])\n        j = j + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i = 1\n    local j = 1\n    local k = 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            list[#list + 1] = num1[i]\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            list[#list + 1] = num2[j]\n            j = j + 1\n        else\n            list[#list + 1] = num3[k]\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        list[#list + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        list[#list + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        list[#list + 1] = num3[k]\n        k = k + 1\n    end\n    return list\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] <= num2[j] and num1[i] <= num3[k] then\n\t\t\ttable.insert(result, num1[i])\n\t\t\ti = i + 1\n\t\telseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n\t\t\ttable.insert(result, num2[j])\n\t\t\tj = j + 1\n\t\telse\n\t\t\ttable.insert(result, num3[k])\n\t\t\tk = k + 1\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(result, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(result, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(result, num3[k])\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "    local num_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min_num = math.min(num1[i], num2[j], num3[k])\n        if min_num == num1[i] then\n            table.insert(num_list, num1[i])\n            i = i + 1\n        elseif min_num == num2[j] then\n            table.insert(num_list, num2[j])\n            j = j + 1\n        else\n            table.insert(num_list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(num_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(num_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(num_list, num3[k])\n        k = k + 1\n    end\n    return num_list\nend",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] < num2[j] then\n\t\t\tif num1[i] < num3[k] then\n\t\t\t\ttable.insert(result, num1[i])\n\t\t\t\ti = i + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\telse\n\t\t\tif num2[j] < num3[k] then\n\t\t\t\ttable.insert(result, num2[j])\n\t\t\t\tj = j + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(result, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(result, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(result, num3[k])\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "    local result = {}\n    local i = 1\n    local j = 1\n    local k = 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(result, num2[j])\n            j = j + 1\n        elseif min == num3[k] then\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(result, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(result, num2[j])\n      j = j + 1\n    else\n      table.insert(result, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      list[#list + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      list[#list + 1] = num2[j]\n      j = j + 1\n    else\n      list[#list + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    list[#list + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    list[#list + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    list[#list + 1] = num3[k]\n    k = k + 1\n  end\n  return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] < num2[j] then\n\t\t\tif num1[i] < num3[k] then\n\t\t\t\ttable.insert(result, num1[i])\n\t\t\t\ti = i + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\telse\n\t\t\tif num2[j] < num3[k] then\n\t\t\t\ttable.insert(result, num2[j])\n\t\t\t\tj = j + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(result, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(result, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(result, num3[k])\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local index = 1\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            result[index] = num1[i]\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            result[index] = num2[j]\n            j = j + 1\n        else\n            result[index] = num3[k]\n            k = k + 1\n        end\n        index = index + 1\n    end\n    while i <= #num1 do\n        result[index] = num1[i]\n        i = i + 1\n        index = index + 1\n    end\n    while j <= #num2 do\n        result[index] = num2[j]\n        j = j + 1\n        index = index + 1\n    end\n    while k <= #num3 do\n        result[index] = num3[k]\n        k = k + 1\n        index = index + 1\n    end\n    return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      table.insert(list, num1[i])\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      table.insert(list, num2[j])\n      j = j + 1\n    else\n      table.insert(list, num3[k])\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] and num1[i] < num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] < num1[i] and num2[j] < num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local res = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(res, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(res, num2[j])\n            j = j + 1\n        else\n            table.insert(res, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(res, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(res, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(res, num3[k])\n        k = k + 1\n    end\n    return res\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(list, num1[i])\n        i = i + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(list, num2[j])\n        j = j + 1\n      else\n        table.insert(list, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(list, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(list, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(list, num3[k])\n    k = k + 1\n  end\n  return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i = 1\n    local j = 1\n    local k = 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                list[#list + 1] = num1[i]\n                i = i + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                list[#list + 1] = num2[j]\n                j = j + 1\n            else\n                list[#list + 1] = num3[k]\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        list[#list + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        list[#list + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        list[#list + 1] = num3[k]\n        k = k + 1\n    end\n    return list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(list, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(list, num2[j])\n            j = j + 1\n        else\n            table.insert(list, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            result[#result + 1] = num1[i]\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            result[#result + 1] = num2[j]\n            j = j + 1\n        else\n            result[#result + 1] = num3[k]\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        result[#result + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        result[#result + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        result[#result + 1] = num3[k]\n        k = k + 1\n    end\n    return result\nend",
    "    local nums = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(nums, num1[i])\n                i = i + 1\n            else\n                table.insert(nums, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(nums, num2[j])\n                j = j + 1\n            else\n                table.insert(nums, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(nums, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(nums, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(nums, num3[k])\n        k = k + 1\n    end\n    return nums\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      result[#result + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      result[#result + 1] = num2[j]\n      j = j + 1\n    elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n      result[#result + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    result[#result + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    result[#result + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    result[#result + 1] = num3[k]\n    k = k + 1\n  end\n  return result\nend",
    "  local list = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] and num1[i] < num3[k] then\n      list[#list + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] < num1[i] and num2[j] < num3[k] then\n      list[#list + 1] = num2[j]\n      j = j + 1\n    else\n      list[#list + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    list[#list + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    list[#list + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    list[#list + 1] = num3[k]\n    k = k + 1\n  end\n  return list\nend",
    "    local sorted_list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(sorted_list, num1[i])\n                i = i + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(sorted_list, num2[j])\n                j = j + 1\n            else\n                table.insert(sorted_list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(sorted_list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(sorted_list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(sorted_list, num3[k])\n        k = k + 1\n    end\n    return sorted_list\nend",
    "    local list = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(list, num1[i])\n                i = i + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(list, num2[j])\n                j = j + 1\n            else\n                table.insert(list, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(list, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(list, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(list, num3[k])\n        k = k + 1\n    end\n    return list\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend"
  ]
}
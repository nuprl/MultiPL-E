{
  "name": "mbpp_90_len_log",
  "language": "lua",
  "prompt": "-- Write a python function to find the length of the longest word.\nlocal function len_log(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = len_log\n    lu.assertEquals(candidate({'python', 'PHP', 'bigdata'}), 7)\n    lu.assertEquals(candidate({'a', 'ab', 'abc'}), 3)\n    lu.assertEquals(candidate({'small', 'big', 'tall'}), 5)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal len = 0\n\tfor i,v in ipairs(list1) do\n\t\tif len < #v then\n\t\t\tlen = #v\n\t\tend\n\tend\n\treturn len\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if max < #v then\n            max = #v\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        if #list1[i] > max then\n            max = #list1[i]\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        if max < #list1[i] then\n            max = #list1[i]\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if max < #v then\n            max = #v\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if max < string.len(v) then\n            max = string.len(v)\n        end\n    end\n    return max\nend",
    "\tlocal len = 0\n\tfor i,v in ipairs(list1) do\n\t\tif len < string.len(v) then\n\t\t\tlen = string.len(v)\n\t\tend\n\tend\n\treturn len\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "    local len = 0\n    for i,v in ipairs(list1) do\n        if len < string.len(v) then\n            len = string.len(v)\n        end\n    end\n    return len\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(list1) do\n\t\tif max < #v then\n\t\t\tmax = #v\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(list1) do\n\t\tif max < #v then\n\t\t\tmax = #v\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal len = 0\n\tfor i,v in ipairs(list1) do\n\t\tif string.len(v) > len then\n\t\t\tlen = string.len(v)\n\t\tend\n\tend\n\treturn len\nend",
    "    local len = 0\n    for i = 1, #list1 do\n        if len < #list1[i] then\n            len = #list1[i]\n        end\n    end\n    return len\nend",
    "\tlocal len = 0\n\tfor i = 1, #list1 do\n\t\tif len < #list1[i] then\n\t\t\tlen = #list1[i]\n\t\tend\n\tend\n\treturn len\nend",
    "    local max = 0\n    for _, v in pairs(list1) do\n        if #v > max then\n            max = #v\n        end\n    end\n    return max\nend",
    "\tlocal len = 0\n\tfor i, v in ipairs(list1) do\n\t\tif len < string.len(v) then\n\t\t\tlen = string.len(v)\n\t\tend\n\tend\n\treturn len\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if max < #v then\n            max = #v\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(list1) do\n\t\tif max < #v then\n\t\t\tmax = #v\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for i, v in ipairs(list1) do\n        if max < string.len(v) then\n            max = string.len(v)\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        if #list1[i] > max then\n            max = #list1[i]\n        end\n    end\n    return max\nend"
  ]
}
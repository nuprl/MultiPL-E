{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "lua",
  "prompt": "-- Write a function to convert more than one list to nested dictionary.\nlocal function convert_list_dictionary(l1, l2, l3)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = convert_list_dictionary\n    lu.assertEquals(candidate({'S001', 'S002', 'S003', 'S004'}, {'Adina Park', 'Leyton Marsh', 'Duncan Boyle', 'Saim Richards'}, {85, 98, 89, 92}), {{['S001'] = {['Adina Park'] = 85}}, {['S002'] = {['Leyton Marsh'] = 98}}, {['S003'] = {['Duncan Boyle'] = 89}}, {['S004'] = {['Saim Richards'] = 92}}})\n    lu.assertEquals(candidate({'abc', 'def', 'ghi', 'jkl'}, {'python', 'program', 'language', 'programs'}, {100, 200, 300, 400}), {{['abc'] = {['python'] = 100}}, {['def'] = {['program'] = 200}}, {['ghi'] = {['language'] = 300}}, {['jkl'] = {['programs'] = 400}}})\n    lu.assertEquals(candidate({'A1', 'A2', 'A3', 'A4'}, {'java', 'C', 'C++', 'DBMS'}, {10, 20, 30, 40}), {{['A1'] = {['java'] = 10}}, {['A2'] = {['C'] = 20}}, {['A3'] = {['C++'] = 30}}, {['A4'] = {['DBMS'] = 40}}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local d = {}\n  for i, v in ipairs(l1) do\n    d[v] = {}\n    for j, w in ipairs(l2) do\n      d[v][w] = l3[i][j]\n    end\n  end\n  return d\nend",
    "    local result = {}\n    for i = 1, #l1 do\n        result[l1[i]] = {\n            [l2[i]] = l3[i]\n        }\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #l1 do\n        result[l1[i]] = {l2[i], l3[i]}\n    end\n    return result\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = { l2[i], l3[i] }\n    end\n    return d\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = {l2[i], l3[i]}\n    end\n    return d\nend",
    "    local result = {}\n    for i = 1, #l1 do\n        result[l1[i]] = {l2[i], l3[i]}\n    end\n    return result\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = {l2[i], l3[i]}\n    end\n    return d\nend",
    "    local dict = {}\n    for i = 1, #l1 do\n        dict[l1[i]] = {l2[i], l3[i]}\n    end\n    return dict\nend",
    "  local d = {}\n  for i = 1, #l1 do\n    d[l1[i]] = {l2[i], l3[i]}\n  end\n  return d\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = {l2[i], l3[i]}\n    end\n    return d\nend",
    "  local dict = {}\n  for i = 1, #l1 do\n    dict[l1[i]] = {\n      [l2[i]] = l3[i]\n    }\n  end\n  return dict\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = {l2[i], l3[i]}\n    end\n    return d\nend",
    "  local result = {}\n  for i = 1, #l1 do\n    result[l1[i]] = {l2[i], l3[i]}\n  end\n  return result\nend",
    "  local dict = {}\n  for i = 1, #l1 do\n    dict[l1[i]] = {l2[i], l3[i]}\n  end\n  return dict\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = {l2[i], l3[i]}\n    end\n    return d\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = {l2[i], l3[i]}\n    end\n    return d\nend",
    "  local dict = {}\n  for i = 1, #l1 do\n    dict[l1[i]] = {l2[i], l3[i]}\n  end\n  return dict\nend",
    "  local d = {}\n  for i = 1, #l1 do\n    d[l1[i]] = {l2[i], l3[i]}\n  end\n  return d\nend",
    "    local d = {}\n    for i = 1, #l1 do\n        d[l1[i]] = {l2[i], l3[i]}\n    end\n    return d\nend",
    "  local d = {}\n  for i = 1, #l1 do\n    d[l1[i]] = {l2[i], l3[i]}\n  end\n  return d\nend"
  ]
}
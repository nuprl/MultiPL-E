{
  "name": "mbpp_472_check_Consecutive",
  "language": "lua",
  "prompt": "-- Write a python function to check whether the given list contains consecutive numbers or not.\nlocal function check_Consecutive(l)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_Consecutive\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), true)\n    lu.assertEquals(candidate({1, 2, 3, 5, 6}), false)\n    lu.assertEquals(candidate({1, 2, 1}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i,v in ipairs(l) do\n        if v > max then\n            max = v\n        end\n        if v < min then\n            min = v\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal count = 0\n\tlocal l1 = {}\n\tfor i = 1, #l do\n\t\tl1[i] = l[i]\n\tend\n\ttable.sort(l1)\n\tfor i = 1, #l1 - 1 do\n\t\tif l1[i + 1] - l1[i] == 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l1 - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = 0\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] == 1 then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"The list contains consecutive numbers\")\n\telse\n\t\tprint(\"The list does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i + 1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 1, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tif (max - min + 1) == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal flag = 0\n\tfor i = 1, n-1 do\n\t\tif l[i] + 1 ~= l[i+1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"List is not consecutive\")\n\telse\n\t\tprint(\"List is consecutive\")\n\tend\nend",
    "\tlocal n = #l\n\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, n do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal set = {}\n\tlocal max = 0\n\tlocal min = math.huge\n\tfor _,v in ipairs(l) do\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif set[v] then\n\t\t\treturn false\n\t\tend\n\t\tset[v] = true\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\tend\n\treturn false\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local s = l[1]\n  for i = 2, #l do\n    if l[i] ~= s + 1 then\n      return false\n    end\n    s = l[i]\n  end\n  return true\nend",
    "    local count = 0\n    local flag = 0\n    local n = #l\n    for i = 1, n - 1 do\n        if l[i + 1] - l[i] == 1 then\n            count = count + 1\n        else\n            flag = 1\n        end\n    end\n    if flag == 1 then\n        print(\"The list is not consecutive\")\n    else\n        print(\"The list is consecutive\")\n    end\nend\ncheck_Consecutive({1, 2, 3, 4, 5})\ncheck_Consecutive({1, 2, 3, 4, 6})",
    "  local count = 0\n  local flag = 0\n  for i = 1, #l do\n    for j = i + 1, #l do\n      if l[i] > l[j] then\n        count = count + 1\n      end\n    end\n  end\n  if count == #l - 1 then\n    flag = 1\n  end\n  return flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif (max - min + 1) == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i, v in ipairs(l) do\n        if v > max then\n            max = v\n        end\n        if v < min then\n            min = v\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend"
  ]
}
{
  "name": "mbpp_472_check_Consecutive",
  "language": "lua",
  "prompt": "-- Write a python function to check whether the given list contains consecutive numbers or not.\nlocal function check_Consecutive(l)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_Consecutive\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), true)\n    lu.assertEquals(candidate({1, 2, 3, 5, 6}), false)\n    lu.assertEquals(candidate({1, 2, 1}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i,v in ipairs(l) do\n        if v > max then\n            max = v\n        end\n        if v < min then\n            min = v\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal count = 0\n\tlocal l1 = {}\n\tfor i = 1, #l do\n\t\tl1[i] = l[i]\n\tend\n\ttable.sort(l1)\n\tfor i = 1, #l1 - 1 do\n\t\tif l1[i + 1] - l1[i] == 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l1 - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = 0\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] == 1 then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"The list contains consecutive numbers\")\n\telse\n\t\tprint(\"The list does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i + 1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 1, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tif (max - min + 1) == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal flag = 0\n\tfor i = 1, n-1 do\n\t\tif l[i] + 1 ~= l[i+1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"List is not consecutive\")\n\telse\n\t\tprint(\"List is consecutive\")\n\tend\nend",
    "\tlocal n = #l\n\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, n do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal set = {}\n\tlocal max = 0\n\tlocal min = math.huge\n\tfor _,v in ipairs(l) do\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif set[v] then\n\t\t\treturn false\n\t\tend\n\t\tset[v] = true\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\tend\n\treturn false\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local s = l[1]\n  for i = 2, #l do\n    if l[i] ~= s + 1 then\n      return false\n    end\n    s = l[i]\n  end\n  return true\nend",
    "    local count = 0\n    local flag = 0\n    local n = #l\n    for i = 1, n - 1 do\n        if l[i + 1] - l[i] == 1 then\n            count = count + 1\n        else\n            flag = 1\n        end\n    end\n    if flag == 1 then\n        print(\"The list is not consecutive\")\n    else\n        print(\"The list is consecutive\")\n    end\nend\ncheck_Consecutive({1, 2, 3, 4, 5})\ncheck_Consecutive({1, 2, 3, 4, 6})",
    "  local count = 0\n  local flag = 0\n  for i = 1, #l do\n    for j = i + 1, #l do\n      if l[i] > l[j] then\n        count = count + 1\n      end\n    end\n  end\n  if count == #l - 1 then\n    flag = 1\n  end\n  return flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif (max - min + 1) == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i, v in ipairs(l) do\n        if v > max then\n            max = v\n        end\n        if v < min then\n            min = v\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "    local count = 0\n    local flag = 0\n    local n = #l\n    for i = 1, n do\n        if l[i] == l[i+1] - 1 then\n            count = count + 1\n        end\n    end\n    if count == n-1 then\n        flag = 1\n    end\n    return flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal count = 0\n\tlocal flag = 0\n\tfor i = 1, #l do\n\t\tfor j = i + 1, #l do\n\t\t\tif l[i] > l[j] then\n\t\t\t\tflag = 1\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif flag == 1 then\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tfor i = 1, #l do\n\t\t\tfor j = i + 1, #l do\n\t\t\t\tif l[i] < l[j] then\n\t\t\t\t\tflag = 2\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif flag == 2 then\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tfor i = 1, #l - 1 do\n\t\t\tif l[i + 1] - l[i] == 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\t\tif count == #l - 1 then\n\t\t\tprint(\"Consecutive\")\n\t\telse\n\t\t\tprint(\"Not Consecutive\")\n\t\tend\n\telseif flag == 1 then\n\t\tfor i = 1, #l - 1 do\n\t\t\tif l[i] - l[i + 1] == 1 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\t\tif count == #l - 1 then\n\t\t\tprint(\"Consecutive\")\n\t\telse\n\t\t\tprint(\"Not Consecutive\")\n\t\tend\n\telse\n\t\tprint(\"Not Consecutive\")\n\tend\nend",
    "\tlocal min = math.min(unpack(l))\n\tlocal max = math.max(unpack(l))\n\tlocal count = 0\n\tfor i=min,max do\n\t\tif table.contains(l, i) then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = math.max(unpack(l))\n    local min = math.min(unpack(l))\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 1, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal n = #l\n\tlocal min = math.min(unpack(l))\n\tlocal max = math.max(unpack(l))\n\tif (max - min + 1) == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local max = l[1]\n  local min = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n    end\n    if l[i] < min then\n      min = l[i]\n    end\n  end\n  if max - min + 1 == #l then\n    return true\n  else\n    return false\n  end\nend",
    "\tlocal count = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 == l[i + 1] then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i=1,#l-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, n do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "    local flag = true\n    for i = 1, #l - 1 do\n        if l[i] + 1 ~= l[i + 1] then\n            flag = false\n            break\n        end\n    end\n    return flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local list = {}\n  local count = 1\n  for i = 1, #l do\n    if list[l[i]] == nil then\n      list[l[i]] = 1\n    else\n      list[l[i]] = list[l[i]] + 1\n    end\n  end\n  for i = 1, #l do\n    if list[l[i]] > 1 then\n      count = count + 1\n    end\n  end\n  if count > 1 then\n    return false\n  else\n    return true\n  end\nend",
    "\tlocal l_len = #l\n\tlocal l_min = math.min(unpack(l))\n\tlocal l_max = math.max(unpack(l))\n\tlocal l_range = l_max - l_min + 1\n\tif l_len == l_range then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal flag = 0\n\tfor i=1,n-1 do\n\t\tif l[i+1] - l[i] == 1 then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"List contains consecutive numbers\")\n\telse\n\t\tprint(\"List does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\telseif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local flag = true\n  local n = #l\n  for i = 1, n - 1 do\n    if l[i] + 1 ~= l[i + 1] then\n      flag = false\n      break\n    end\n  end\n  return flag\nend",
    "\tlocal flag = true\n\tlocal j = 1\n\tfor i = 1, #l - 1 do\n\t\tif l[i] ~= l[i + 1] - 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal flag = 0\n\tfor i = 1, n-1 do\n\t\tif l[i] + 1 ~= l[i+1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"List is not consecutive\")\n\telse\n\t\tprint(\"List is consecutive\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2,#l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max, min = l[1], l[1]\n\tfor _, v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\telseif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\treturn max - min + 1 == #l\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = false\n\tlocal len = #l\n\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tif (max - min + 1) == len then\n\t\tflag = true\n\tend\n\treturn flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal count = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 == l[i + 1] then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i=2, #l do\n        if l[i] > max then\n            max = l[i]\n        elseif l[i] < min then\n            min = l[i]\n        end\n    end\n    if (max - min + 1) == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal i, j, k = 1, 1, 1\n\tlocal flag = 0\n\tlocal count = 0\n\tlocal list = {}\n\tlocal list1 = {}\n\tlocal list2 = {}\n\tfor i = 1, #l do\n\t\tif l[i] == l[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"The given list contains consecutive numbers\")\n\telse\n\t\tprint(\"The given list does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal count = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 == l[i + 1] then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i,v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local flag = true\n  for i = 1, #l - 1 do\n    if l[i] + 1 ~= l[i + 1] then\n      flag = false\n      break\n    end\n  end\n  return flag\nend",
    "    local n = #l\n    local max = l[1]\n    local min = l[1]\n    for i = 2, n do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal max, min = l[1], l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i,v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tif (max - min + 1) == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i=1,#l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max-min+1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal count = 0\n\tfor i = 1, #l do\n\t\tif l[i] == l[i+1] - 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal min = math.min(unpack(l))\n\tlocal max = math.max(unpack(l))\n\tif (max - min + 1) == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal l1 = {}\n\tlocal l2 = {}\n\tfor i = 1, #l do\n\t\tif l[i] < 0 then\n\t\t\ttable.insert(l1, l[i])\n\t\telse\n\t\t\ttable.insert(l2, l[i])\n\t\tend\n\tend\n\tlocal l3 = {}\n\tfor i = 1, #l1 do\n\t\ttable.insert(l3, l1[i] * -1)\n\tend\n\ttable.sort(l3)\n\ttable.sort(l2)\n\tlocal flag = 0\n\tif #l3 == #l2 then\n\t\tfor i = 1, #l3 do\n\t\t\tif l3[i] ~= l2[i] then\n\t\t\t\tflag = 1\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\telse\n\t\tflag = 1\n\tend\n\tif flag == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal flag = 0\n\tlocal i = 1\n\twhile i < n do\n\t\tif l[i] + 1 ~= l[i+1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\tif flag == 1 then\n\t\tprint(\"List does not contain consecutive numbers\")\n\telse\n\t\tprint(\"List contains consecutive numbers\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local flag = true\n    local n = #l\n    for i = 1, n - 1 do\n        if l[i] + 1 ~= l[i + 1] then\n            flag = false\n            break\n        end\n    end\n    return flag\nend",
    "\tlocal flag = 0\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i, v in ipairs(l) do\n        if v > max then\n            max = v\n        end\n        if v < min then\n            min = v\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal set = {}\n\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor _, v in ipairs(l) do\n\t\tif set[v] then\n\t\t\treturn false\n\t\tend\n\t\tset[v] = true\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\tend\n\treturn false\nend",
    "\tlocal flag = true\n\tlocal l1 = {}\n\tfor i = 1, #l do\n\t\tl1[i] = l[i]\n\tend\n\ttable.sort(l1)\n\tfor i = 1, #l1 - 1 do\n\t\tif l1[i] + 1 ~= l1[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif max < l[i] then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif min > l[i] then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal m = l[1]\n\tlocal c = 0\n\tfor i = 1, n do\n\t\tif l[i] == m then\n\t\t\tc = c + 1\n\t\tend\n\tend\n\tif c == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i + 1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal max, min = l[1], l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i=1,n-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal min = math.min(unpack(l))\n\tlocal max = math.max(unpack(l))\n\tif n == max - min + 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = true\n\tlocal diff = l[2] - l[1]\n\tfor i = 1, #l - 1 do\n\t\tif l[i + 1] - l[i] ~= diff then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, n do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, n do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\telseif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = 0\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tprint(\"The list is consecutive\")\n\telse\n\t\tprint(\"The list is not consecutive\")\n\tend\nend",
    "\tlocal n = #l\n\tlocal min = math.min(unpack(l))\n\tlocal max = math.max(unpack(l))\n\tif (max - min + 1) == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i + 1] - l[i] ~= 1 then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"False\")\n\telse\n\t\tprint(\"True\")\n\tend\nend",
    "\tlocal n = #l\n\tif n == 0 then\n\t\treturn false\n\tend\n\tlocal min = l[1]\n\tlocal max = l[1]\n\tfor i = 2, n do\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\telseif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal l1 = {}\n\tlocal l2 = {}\n\tlocal l3 = {}\n\tlocal l4 = {}\n\tlocal l5 = {}\n\tlocal l6 = {}\n\tlocal l7 = {}\n\tlocal l8 = {}\n\tlocal l9 = {}\n\tlocal l10 = {}\n\tlocal l11 = {}\n\tlocal l12 = {}\n\tlocal l13 = {}\n\tlocal l14 = {}\n\tlocal l15 = {}\n\tlocal l16 = {}\n\tlocal l17 = {}\n\tlocal l18 = {}\n\tlocal l19 = {}\n\tlocal l20 = {}\n\tlocal l21 = {}\n\tlocal l22 = {}\n\tlocal l23 = {}\n\tlocal l24 = {}\n\tlocal l25 = {}\n\tlocal l26 = {}\n\tlocal l27 = {}\n\tlocal l28 = {}\n\tlocal l29 = {}\n\tlocal l30 = {}\n\tlocal l31 = {}\n\tlocal l32 = {}\n\tlocal l33 = {}\n\tlocal l34 = {}\n\tlocal l35 = {}\n\tlocal l36 = {}\n\tlocal l37 = {}\n\tlocal l38 = {}\n\tlocal l39 = {}\n\tlocal l40 = {}\n\tlocal l41 = {}\n\tlocal l42 = {}\n\tlocal l43 = {}\n\tlocal l44 = {}\n\tlocal l45 = {}\n\tlocal l46 = {}\n\tlocal l47 = {}\n\tlocal l48 = {}\n\tlocal l49 = {}\n\tlocal l50 = {}\n\tlocal l51 = {}\n\tlocal l52 = {}\n\tlocal l53 = {}\n\tlocal l54 = {}\n\tlocal l55 = {}\n\tlocal l56 = {}\n\tlocal l57 = {}\n\tlocal l58 = {}\n\tlocal l59 = {}\n\tlocal l60 = {}\n\tlocal l61 = {}\n\tlocal l62 = {}\n\tlocal l63 = {}\n\tlocal l64 = {}\n\tlocal l65 = {}\n\tlocal l66 = {}\n\tlocal l67 = {}\n\tlocal l68 = {}\n\tlocal l69 = {}\n\tlocal l70 = {}\n\tlocal l71 = {}\n\tlocal l72 = {}\n\tlocal l73 = {}\n",
    "  local max = math.max(unpack(l))\n  local min = math.min(unpack(l))\n  local count = 0\n  for i = min, max do\n    for j = 1, #l do\n      if i == l[j] then\n        count = count + 1\n      end\n    end\n  end\n  if count == #l then\n    return true\n  else\n    return false\n  end\nend",
    "    local n = #l\n    local count = 0\n    for i = 1, n do\n        if l[i] == l[i + 1] - 1 then\n            count = count + 1\n        end\n    end\n    if count == n - 1 then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal s = l[1]\n\tlocal e = l[#l]\n\tlocal n = #l\n\tlocal d = (e - s) / n\n\tfor i = 1, n do\n\t\tif l[i] ~= s then\n\t\t\treturn false\n\t\tend\n\t\ts = s + d\n\tend\n\treturn true\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal count = 0\n\tlocal flag = false\n\tfor i = 1, #l do\n\t\tif l[i] == l[i + 1] - 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\tflag = true\n\tend\n\treturn flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal count = 0\n\tfor i = 1, #l - 1 do\n\t\tif (l[i] + 1 == l[i + 1]) then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif (count == #l - 1) then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local count = 0\n  local flag = 0\n  for i = 1, #l do\n    if l[i] == l[i+1] - 1 then\n      count = count + 1\n    end\n  end\n  if count == #l - 1 then\n    flag = 1\n  end\n  return flag\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = 0\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] == 1 then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"List contains consecutive numbers\")\n\telse\n\t\tprint(\"List does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal l1 = {}\n\tlocal l2 = {}\n\tlocal l3 = {}\n\tlocal l4 = {}\n\tfor i = 1, #l do\n\t\tif l[i] < 0 then\n\t\t\ttable.insert(l1, l[i])\n\t\telseif l[i] > 0 then\n\t\t\ttable.insert(l2, l[i])\n\t\telseif l[i] == 0 then\n\t\t\ttable.insert(l3, l[i])\n\t\tend\n\tend\n\ttable.sort(l1)\n\ttable.sort(l2)\n\ttable.sort(l3)\n\tfor i = 1, #l1 do\n\t\ttable.insert(l4, l1[i])\n\tend\n\tfor i = 1, #l2 do\n\t\ttable.insert(l4, l2[i])\n\tend\n\tfor i = 1, #l3 do\n\t\ttable.insert(l4, l3[i])\n\tend\n\tlocal flag = 0\n\tfor i = 1, #l4 - 1 do\n\t\tif l4[i] == l4[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"False\")\n\telse\n\t\tprint(\"True\")\n\tend\nend\ncheck_Consecutive({-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5})",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i + 1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal max, min = l[1], l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\telseif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local count = 0\n    for i = 1, #l - 1 do\n        if l[i] + 1 == l[i + 1] then\n            count = count + 1\n        end\n    end\n    if count == #l - 1 then\n        return true\n    else\n        return false\n    end\nend",
    "  local max = math.max(unpack(l))\n  local min = math.min(unpack(l))\n  local diff = max - min\n  if diff == #l - 1 then\n    return true\n  else\n    return false\n  end\nend",
    "    local max_num = math.max(unpack(l))\n    local min_num = math.min(unpack(l))\n    local count = 0\n    for i = min_num, max_num do\n        if table.contains(l, i) then\n            count = count + 1\n        end\n    end\n    if count == #l then\n        return true\n    else\n        return false\n    end\nend",
    "    local flag = true\n    for i = 1, #l - 1 do\n        if l[i] + 1 ~= l[i + 1] then\n            flag = false\n            break\n        end\n    end\n    return flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i=1,#l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tlocal n = max - min + 1\n\tif n == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = 0\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] == 1 then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"List contains consecutive numbers\")\n\telse\n\t\tprint(\"List does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i + 1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal count = 0\n\tlocal flag = 0\n\tfor i = 1, #l do\n\t\tif l[i] == l[i+1] - 1 then\n\t\t\tcount = count + 1\n\t\telse\n\t\t\tflag = 1\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tprint(\"The list contains consecutive numbers\")\n\telse\n\t\tprint(\"The list does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal l_len = #l\n\tlocal l_min = math.min(unpack(l))\n\tlocal l_max = math.max(unpack(l))\n\tlocal l_range = l_max - l_min + 1\n\tif l_range == l_len then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "    local n = #l\n    local count = 0\n    for i = 1, n-1 do\n        if l[i+1] - l[i] == 1 then\n            count = count + 1\n        end\n    end\n    if count == n-1 then\n        return true\n    else\n        return false\n    end\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal max, min = l[1], l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tlocal diff = max - min + 1\n\tif diff == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local n = #l\n    local max = math.max(table.unpack(l))\n    local min = math.min(table.unpack(l))\n    if max - min + 1 == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "    local max = math.max(unpack(l))\n    local min = math.min(unpack(l))\n    local diff = max - min\n    if diff == #l - 1 then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i,v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i=1,#l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max-min+1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i=1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max-min+1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal count = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 == l[i + 1] then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i,v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\telseif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal s = l[1]\n\tlocal e = l[#l]\n\tlocal n = e - s + 1\n\tlocal count = 0\n\tfor i = 1, #l do\n\t\tif l[i] >= s and l[i] <= e then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local max, min = l[1], l[1]\n  for _, v in ipairs(l) do\n    if v > max then max = v end\n    if v < min then min = v end\n  end\n  return max - min + 1 == #l\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        elseif l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local count = 0\n    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = false\n\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tif max - min + 1 == #l then\n\t\tflag = true\n\tend\n\treturn flag\nend",
    "\tlocal temp = {}\n\tfor i = 1, #l do\n\t\tif temp[l[i]] then\n\t\t\treturn false\n\t\tend\n\t\ttemp[l[i]] = true\n\tend\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "  local max = l[1]\n  local min = l[1]\n  for i,v in ipairs(l) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  if max - min + 1 == #l then\n    return true\n  else\n    return false\n  end\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] ~= 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal n = #l\n\tlocal flag = 0\n\tfor i = 1, n-1 do\n\t\tif l[i+1] - l[i] == 1 then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"List contains consecutive numbers\")\n\telse\n\t\tprint(\"List does not contain consecutive numbers\")\n\tend\nend",
    "    local flag = true\n    for i = 1, #l - 1 do\n        if math.abs(l[i] - l[i + 1]) ~= 1 then\n            flag = false\n            break\n        end\n    end\n    return flag\nend",
    "\tlocal i = 1\n\tlocal j = 1\n\tlocal flag = 1\n\tlocal n = #l\n\twhile i < n do\n\t\tif l[i] ~= l[i + 1] - 1 then\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\tif flag == 1 then\n\t\tprint(\"The given list contains consecutive numbers\")\n\telse\n\t\tprint(\"The given list does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal count = 0\n\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal count = 0\n\tlocal flag = false\n\tlocal temp = 0\n\tfor i = 1, #l do\n\t\tif l[i] == l[i + 1] then\n\t\t\tflag = true\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag then\n\t\treturn false\n\tend\n\tfor i = 1, #l do\n\t\tif l[i] > l[i + 1] then\n\t\t\ttemp = l[i]\n\t\t\tl[i] = l[i + 1]\n\t\t\tl[i + 1] = temp\n\t\tend\n\tend\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 == l[i + 1] then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i=1,#l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\telseif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = 0\n\tlocal l1 = {}\n\tlocal l2 = {}\n\tfor i = 1, #l do\n\t\tif l[i] < 0 then\n\t\t\ttable.insert(l1, l[i])\n\t\telse\n\t\t\ttable.insert(l2, l[i])\n\t\tend\n\tend\n\tfor i = 1, #l1 do\n\t\tif l1[i] + 1 == l1[i + 1] then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #l2 do\n\t\tif l2[i] + 1 == l2[i + 1] then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"The list contains consecutive numbers\")\n\telse\n\t\tprint(\"The list does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i, v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif (max - min + 1) == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i,v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\telseif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif #l == max - min + 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = l[1]\n    local min = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tlocal n = #l\n\tif (max - min + 1) == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal min = math.min(unpack(l))\n\tlocal max = math.max(unpack(l))\n\tlocal count = 0\n\tfor i = min, max do\n\t\tfor j = 1, #l do\n\t\t\tif i == l[j] then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\tif count == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal count = 0\n\tlocal flag = false\n\tfor i = 1, #l do\n\t\tfor j = i + 1, #l do\n\t\t\tif l[i] == l[j] then\n\t\t\t\tflag = true\n\t\t\tend\n\t\tend\n\tend\n\tif flag == true then\n\t\treturn false\n\telse\n\t\tfor i = 1, #l do\n\t\t\tfor j = i + 1, #l do\n\t\t\t\tif l[i] + 1 == l[j] then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif count == #l - 1 then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i=2,#l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal i = 1\n\tlocal j = 1\n\tlocal flag = true\n\twhile i < n do\n\t\tj = i + 1\n\t\twhile j < n do\n\t\t\tif l[i] == l[j] then\n\t\t\t\tflag = false\n\t\t\t\tbreak\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn flag\nend",
    "  local n = #l\n  local max = math.max(table.unpack(l))\n  local min = math.min(table.unpack(l))\n  if n == max - min + 1 then\n    return true\n  else\n    return false\n  end\nend",
    "\tlocal count = 0\n\tlocal flag = false\n\tfor i = 1, #l - 1 do\n\t\tif l[i] == l[i + 1] - 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\tflag = true\n\tend\n\treturn flag\nend",
    "\tlocal flag = true\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "\tlocal count = 0\n\tlocal flag = 0\n\tfor i = 1, #l do\n\t\tfor j = i + 1, #l do\n\t\t\tif l[i] > l[j] then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\tif count == 0 then\n\t\tflag = 1\n\tend\n\treturn flag\nend",
    "\tlocal s = l[1]\n\tlocal e = l[#l]\n\tlocal n = e - s + 1\n\tif #l ~= n then\n\t\treturn false\n\tend\n\tlocal t = {}\n\tfor i = s, e do\n\t\tt[i] = true\n\tend\n\tfor _, v in ipairs(l) do\n\t\tif not t[v] then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 1, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal min = l[1]\n\tlocal max = l[1]\n\tfor i = 2, n do\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\telseif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local max = math.max(unpack(l))\n    local min = math.min(unpack(l))\n    local count = 0\n    for i = min, max do\n        for j = 1, #l do\n            if i == l[j] then\n                count = count + 1\n                break\n            end\n        end\n    end\n    if count == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal flag = 0\n\tlocal n = #l\n\tfor i = 1, n - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local n = #l\n    local max = l[1]\n    local min = l[1]\n    for i = 2, n do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local count = 0\n    for i = 1, #l - 1 do\n        if l[i + 1] - l[i] == 1 then\n            count = count + 1\n        end\n    end\n    if count == #l - 1 then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal n = #l\n\tlocal count = 0\n\tfor i = 1, n do\n\t\tfor j = i + 1, n do\n\t\t\tif l[i] == l[j] then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\tfor i = 1, n - 1 do\n\t\tif l[i] == l[i + 1] - 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == n - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n = #l\n\tlocal count = 0\n\tlocal flag = 0\n\tfor i = 1, n do\n\t\tif l[i] == l[i + 1] - 1 then\n\t\t\tflag = 1\n\t\telse\n\t\t\tflag = 0\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 1 then\n\t\tprint(\"Consecutive\")\n\telse\n\t\tprint(\"Not Consecutive\")\n\tend\nend",
    "    local count = 0\n    local flag = 0\n    local max = l[1]\n    local min = l[1]\n    for i = 1, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    for i = 1, #l do\n        if l[i] == min then\n            count = count + 1\n        end\n    end\n    if count == #l then\n        flag = 1\n    end\n    if flag == 1 then\n        print(\"The list is consecutive\")\n    else\n        print(\"The list is not consecutive\")\n    end\nend",
    "    local max, min = l[1], l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n        if l[i] < min then\n            min = l[i]\n        end\n    end\n    if max - min + 1 == #l then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max = l[1]\n\tlocal min = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\t\tif l[i] < min then\n\t\t\tmin = l[i]\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal max, min = l[1], l[1]\n\tfor _, v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\t\tif v < min then\n\t\t\tmin = v\n\t\tend\n\tend\n\tif max - min + 1 == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend"
  ]
}
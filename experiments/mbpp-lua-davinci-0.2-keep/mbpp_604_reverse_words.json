{
  "name": "mbpp_604_reverse_words",
  "language": "lua",
  "prompt": "-- Write a function to reverse words seperated by spaces in a given string.\nlocal function reverse_words(s)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = reverse_words\n    lu.assertEquals(candidate('python program'), 'program python')\n    lu.assertEquals(candidate('java language'), 'language java')\n    lu.assertEquals(candidate('indian man'), 'man indian')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local words = {}\n    for word in s:gmatch(\"%S+\") do\n        table.insert(words, 1, word)\n    end\n    return table.concat(words, \" \")\nend",
    "  local words = {}\n  for w in string.gmatch(s, \"%S+\") do\n    words[#words + 1] = w\n  end\n  local reversed = {}\n  for i = #words, 1, -1 do\n    reversed[#reversed + 1] = words[i]\n  end\n  return table.concat(reversed, \" \")\nend",
    "  local words = {}\n  for word in s:gmatch(\"%S+\") do\n    table.insert(words, word)\n  end\n  return table.concat(words, \" \", #words, 1)\nend",
    "    local words = {}\n    for word in s:gmatch(\"%S+\") do\n        table.insert(words, word)\n    end\n    local reversed = {}\n    for i = #words, 1, -1 do\n        table.insert(reversed, words[i])\n    end\n    return table.concat(reversed, \" \")\nend",
    "  local words = {}\n  for w in s:gmatch(\"%S+\") do\n    table.insert(words, w)\n  end\n  local reversed = {}\n  for i = #words, 1, -1 do\n    table.insert(reversed, words[i])\n  end\n  return table.concat(reversed, \" \")\nend",
    "  local words = {}\n  for word in s:gmatch(\"%S+\") do\n    table.insert(words, word)\n  end\n  return table.concat(words, \" \", #words, 1)\nend",
    "    local words = {}\n    for w in s:gmatch(\"%S+\") do\n        table.insert(words, w)\n    end\n    for i = 1, #words / 2 do\n        words[i], words[#words - i + 1] = words[#words - i + 1], words[i]\n    end\n    return table.concat(words, \" \")\nend",
    "  local words = {}\n  for word in s:gmatch(\"%S+\") do\n    table.insert(words, word)\n  end\n  table.reverse(words)\n  return table.concat(words, \" \")\nend",
    "  local words = {}\n  for w in s:gmatch(\"%S+\") do\n    table.insert(words, w)\n  end\n  local reversed = {}\n  for i = #words, 1, -1 do\n    table.insert(reversed, words[i])\n  end\n  return table.concat(reversed, \" \")\nend",
    "    local words = {}\n    for word in s:gmatch(\"%S+\") do\n        table.insert(words, word)\n    end\n    local reversed = {}\n    for i = #words, 1, -1 do\n        table.insert(reversed, words[i])\n    end\n    return table.concat(reversed, \" \")\nend",
    "    local words = {}\n    for w in string.gmatch(s, \"%S+\") do\n        table.insert(words, w)\n    end\n    local reversed = {}\n    for i = #words, 1, -1 do\n        table.insert(reversed, words[i])\n    end\n    return table.concat(reversed, \" \")\nend",
    "    local result = {}\n    for word in string.gmatch(s, \"%S+\") do\n        table.insert(result, 1, word)\n    end\n    return table.concat(result, \" \")\nend",
    "  local words = {}\n  for word in s:gmatch(\"%S+\") do\n    table.insert(words, word)\n  end\n  local reversed = {}\n  for i = #words, 1, -1 do\n    table.insert(reversed, words[i])\n  end\n  return table.concat(reversed, \" \")\nend",
    "  local words = {}\n  for word in s:gmatch(\"%S+\") do\n    words[#words + 1] = word\n  end\n  local reversed = {}\n  for i = #words, 1, -1 do\n    reversed[#reversed + 1] = words[i]\n  end\n  return table.concat(reversed, \" \")\nend",
    "  local words = {}\n  for w in s:gmatch(\"%S+\") do\n    words[#words+1] = w\n  end\n  return table.concat(words, \" \", #words, 1)\nend",
    "  local words = {}\n  for word in s:gmatch(\"%S+\") do\n    table.insert(words, word)\n  end\n  return table.concat(words, \" \", #words, 1)\nend",
    "    local words = {}\n    for w in s:gmatch(\"%S+\") do\n        table.insert(words, w)\n    end\n    local reversed = {}\n    for i = #words, 1, -1 do\n        table.insert(reversed, words[i])\n    end\n    return table.concat(reversed, \" \")\nend",
    "    local words = {}\n    for w in s:gmatch(\"%S+\") do\n        words[#words + 1] = w\n    end\n    local reversed = {}\n    for i = #words, 1, -1 do\n        reversed[#reversed + 1] = words[i]\n    end\n    return table.concat(reversed, \" \")\nend",
    "  local words = {}\n  for w in s:gmatch(\"%S+\") do\n    words[#words+1] = w\n  end\n  for i = #words, 1, -1 do\n    words[i] = words[i]:reverse()\n  end\n  return table.concat(words, \" \")\nend",
    "    local words = {}\n    for word in s:gmatch(\"%S+\") do\n        table.insert(words, word)\n    end\n    local reversed = {}\n    for i = #words, 1, -1 do\n        table.insert(reversed, words[i])\n    end\n    return table.concat(reversed, \" \")\nend"
  ]
}
{
  "name": "mbpp_732_replace_specialchar",
  "language": "lua",
  "prompt": "-- Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nlocal function replace_specialchar(text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = replace_specialchar\n    lu.assertEquals(candidate('Python language, Programming language.'), 'Python:language::Programming:language:')\n    lu.assertEquals(candidate('a b c,d e f'), 'a:b:c:d:e:f')\n    lu.assertEquals(candidate('ram reshma,ram rahim'), 'ram:reshma:ram:rahim')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return text:gsub('[%s,%.]', ':')\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  local s = text:gsub(\"%s\", \":\")\n  s = s:gsub(\"%p\", \":\")\n  s = s:gsub(\"%c\", \":\")\n  return s\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "    text = text:gsub(\"%s\", \":\")\n    text = text:gsub(\"%.\", \":\")\n    text = text:gsub(\",\", \":\")\n    return text\nend",
    "    local new_text = string.gsub(text, \"[%s,.]\", \":\")\n    return new_text\nend",
    "  return text:gsub(\"%s\", \":\"):gsub(\",\", \":\"):gsub(\"%.\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    if not text then return end\n    text = text:gsub(\"%s\", \":\")\n    text = text:gsub(\"%.\", \":\")\n    text = text:gsub(\",\", \":\")\n    return text\nend",
    "    return text:gsub('[%s,%.]', ':')\nend",
    "  return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    local s = text:gsub(\"%s\", \":\")\n    s = s:gsub(\"%.\", \":\")\n    s = s:gsub(\",\", \":\")\n    return s\nend",
    "    local new_text = string.gsub(text, \"[%s,%.]\", \":\")\n    return new_text\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"%s+\", \":\"):gsub(\"%p+\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    local new_text = text:gsub(\"%s\", \":\")\n    new_text = new_text:gsub(\",\", \":\")\n    new_text = new_text:gsub(\"%.\", \":\")\n    return new_text\nend",
    "  return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]+\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub('[%s,.]', ':')\nend",
    "    if not text then return end\n    text = text:gsub(\"%s\", \":\")\n    text = text:gsub(\",\", \":\")\n    text = text:gsub(\"%.\", \":\")\n    return text\nend",
    "    return text:gsub('[%s,%.]', ':')\nend",
    "    return text:gsub(\"%s+\", \":\")\n        :gsub(\"%p+\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "  return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  local new_text = text:gsub(\"%s\", \":\")\n  new_text = new_text:gsub(\",\", \":\")\n  new_text = new_text:gsub(\"%.\", \":\")\n  return new_text\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    text = string.gsub(text, \" \", \":\")\n    text = string.gsub(text, \",\", \":\")\n    text = string.gsub(text, \".\", \":\")\n    return text\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    local t = text:gsub(\"%s\", \":\")\n    t = t:gsub(\"%.\", \":\")\n    t = t:gsub(\",\", \":\")\n    return t\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    text = string.gsub(text, \" \", \":\")\n    text = string.gsub(text, \",\", \":\")\n    text = string.gsub(text, \".\", \":\")\n    return text\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "\ttext = text:gsub(\"%s\", \":\")\n\ttext = text:gsub(\"%.\", \":\")\n\ttext = text:gsub(\",\", \":\")\n\treturn text\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"%s+\", \":\"):gsub(\"%p+\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]+\", \":\")\nend",
    "    text = string.gsub(text, \" \", \":\")\n    text = string.gsub(text, \",\", \":\")\n    text = string.gsub(text, \".\", \":\")\n    return text\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "  local new_text = text:gsub(\"%s\", \":\")\n  new_text = new_text:gsub(\",\", \":\")\n  new_text = new_text:gsub(\"%.\", \":\")\n  return new_text\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub('[%s,%.]', ':')\nend",
    "    local newtext = string.gsub(text, \"[%s,.]\", \":\")\n    return newtext\nend",
    "    text = text:gsub(\"%s\", \":\")\n    text = text:gsub(\"%.\", \":\")\n    text = text:gsub(\",\", \":\")\n    return text\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "\treturn string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%s\", \":\")\nend",
    "    text = string.gsub(text, \" \", \":\")\n    text = string.gsub(text, \",\", \":\")\n    text = string.gsub(text, \".\", \":\")\n    return text\nend",
    "    return text:gsub('[%s,%.]', ':')\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    local new_text = string.gsub(text, \"[%s,.]\", \":\")\n    return new_text\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    text = text:gsub(\"%s\", \":\")\n    text = text:gsub(\",\", \":\")\n    text = text:gsub(\"%.\", \":\")\n    return text\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    text = string.gsub(text, \" \", \":\")\n    text = string.gsub(text, \",\", \":\")\n    text = string.gsub(text, \".\", \":\")\n    return text\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"%s+\", \" \"):gsub(\"%p\", \":\")\nend",
    "  text = text:gsub(\"%s\", \":\")\n  text = text:gsub(\"%.\", \":\")\n  text = text:gsub(\",\", \":\")\n  return text\nend",
    "\tlocal t = text:gsub(\"%s\", \":\")\n\tt = t:gsub(\",\", \":\")\n\tt = t:gsub(\"%.\", \":\")\n\treturn t\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%p\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub('[%s,%.]', ':')\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    local new_text = string.gsub(text, \"[%s,%.]\", \":\")\n    return new_text\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    local new_text = string.gsub(text, \"[%s,.]\", \":\")\n    return new_text\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    local result = text:gsub(\"[%s,.]\", \":\")\n    return result\nend",
    "    return string.gsub(text, '[%s,%.]', ':')\nend",
    "    return text:gsub('[%s,%.]', ':')\nend",
    "  return text:gsub('[%s,%.]', ':')\nend",
    "  local text = text:gsub('%s', ':')\n  text = text:gsub(',', ':')\n  text = text:gsub('.', ':')\n  return text\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "\treturn string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%s\", \":\")\n        :gsub(\"%.\", \":\")\n        :gsub(\",\", \":\")\nend",
    "  return text:gsub('[%s,%.]', ':')\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]+\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]+\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "  return text:gsub(\"%s\", \":\")\n    :gsub(\"%.\", \":\")\n    :gsub(\",\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%s+\", \":\"):gsub(\"%p+\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub('[%s,%.]', ':')\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%s+\", \":\"):gsub(\"%p+\", \":\")\nend",
    "    return text:gsub(\"%s+\", \":\")\n        :gsub(\"%p+\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%s+\", \":\"):gsub(\"%p+\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub('[%s,.]', ':')\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub('[%s,.]', ':')\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "\treturn string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, '[%s,%.]', ':')\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "\treturn text:gsub(\"[%s,%.]\", \":\")\nend",
    "    local text = string.gsub(text, \" \", \":\")\n    text = string.gsub(text, \",\", \":\")\n    text = string.gsub(text, \".\", \":\")\n    return text\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    text = string.gsub(text, \" \", \":\")\n    text = string.gsub(text, \",\", \":\")\n    text = string.gsub(text, \".\", \":\")\n    return text\nend",
    "  return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend"
  ]
}
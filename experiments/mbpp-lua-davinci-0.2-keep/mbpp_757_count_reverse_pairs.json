{
  "name": "mbpp_757_count_reverse_pairs",
  "language": "lua",
  "prompt": "-- Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/\nlocal function count_reverse_pairs(test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_757_count_reverse_pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_reverse_pairs\n    lu.assertEquals(candidate({'julia', 'best', 'tseb', 'for', 'ailuj'}), 2)\n    lu.assertEquals(candidate({'geeks', 'best', 'for', 'skeeg'}), 1)\n    lu.assertEquals(candidate({'makes', 'best', 'sekam', 'for', 'rof'}), 2)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local count = 0\n  for i = 1, #test_list do\n    for j = i + 1, #test_list do\n      if test_list[i] == string.reverse(test_list[j]) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #test_list do\n    for j = i + 1, #test_list do\n      if test_list[i] == string.reverse(test_list[j]) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local count = 0\n  for i = 1, #test_list do\n    for j = i + 1, #test_list do\n      if test_list[i] == string.reverse(test_list[j]) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local count = 0\n  for i = 1, #test_list do\n    for j = i + 1, #test_list do\n      if test_list[i] == string.reverse(test_list[j]) then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #test_list do\n        for j = i + 1, #test_list do\n            if test_list[i] == string.reverse(test_list[j]) then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend"
  ]
}
{
  "name": "mbpp_65_recursive_list_sum",
  "language": "lua",
  "prompt": "-- Write a function to flatten a list and sum all of its elements.\nlocal function recursive_list_sum(data_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_65_recursive_list_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = recursive_list_sum\n    lu.assertEquals(candidate({1, 2, {3, 4}, {5, 6}}), 21)\n    lu.assertEquals(candidate({7, 10, {15, 14}, {19, 41}}), 106)\n    lu.assertEquals(candidate({10, 20, {30, 40}, {50, 60}}), 210)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local sum = 0\n  for _, v in ipairs(data_list) do\n    if type(v) == 'table' then\n      sum = sum + recursive_list_sum(v)\n    else\n      sum = sum + v\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for _, v in pairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "  local sum = 0\n  for _, v in ipairs(data_list) do\n    if type(v) == \"table\" then\n      sum = sum + recursive_list_sum(v)\n    else\n      sum = sum + v\n    end\n  end\n  return sum\nend",
    "  local sum = 0\n  for _, v in ipairs(data_list) do\n    if type(v) == \"table\" then\n      sum = sum + recursive_list_sum(v)\n    else\n      sum = sum + v\n    end\n  end\n  return sum\nend",
    "  local sum = 0\n  for _, v in ipairs(data_list) do\n    if type(v) == \"table\" then\n      sum = sum + recursive_list_sum(v)\n    else\n      sum = sum + v\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    if #data_list == 0 then\n        return 0\n    end\n    local head = data_list[1]\n    local tail = data_list[2]\n    if type(head) == \"table\" then\n        return recursive_list_sum(head) + recursive_list_sum(tail)\n    else\n        return head + recursive_list_sum(tail)\n    end\nend",
    "    local sum = 0\n    for i, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for i, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for i, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for _, v in pairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "  local sum = 0\n  for _, v in ipairs(data_list) do\n    if type(v) == \"table\" then\n      sum = sum + recursive_list_sum(v)\n    else\n      sum = sum + v\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for _, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for i, v in ipairs(data_list) do\n        if type(v) == \"table\" then\n            sum = sum + recursive_list_sum(v)\n        else\n            sum = sum + v\n        end\n    end\n    return sum\nend"
  ]
}
{
  "name": "mbpp_626_triangle_area",
  "language": "lua",
  "prompt": "-- Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\nlocal function triangle_area(r)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(-1), None)\n    lu.assertEquals(candidate(0), 0)\n    lu.assertEquals(candidate(2), 4)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return (math.sqrt(3) / 4) * (r ^ 2)\nend",
    "\treturn (math.pi * r^2) / 2\nend",
    "    local s = r * 2\n    local a = s * s\n    local b = math.pi * r * r\n    local c = a - b\n    local d = math.sqrt(c)\n    local e = d / 2\n    local f = e * e\n    local g = math.sqrt(f)\n    local h = g * e\n    return h\nend",
    "\tlocal s = r * 2\n\treturn (math.sqrt(s * (s - r) * (s - r) * (s - r))) / 4\nend",
    "    local s = r * 2\n    local a = math.sqrt(s * (s - r) * (s - r) * (s - r))\n    return a\nend",
    "\tlocal s = r * 2\n\treturn math.sqrt(s * (s - r) * (s - r) * (s - r))\nend",
    "    return (r^2 * math.sqrt(3)) / 4\nend",
    "    return r^2 * math.sqrt(3) / 4\nend",
    "    local a = math.sqrt(r^2 - (r/2)^2)\n    local area = (a*r)/2\n    return area\nend",
    "    return (math.pi * r^2) / 2\nend",
    "    return (math.sqrt(3) * r * r) / 4\nend",
    "  return (math.pi * r^2) / 2\nend",
    "  return (math.sqrt(3) * r * r) / 4\nend",
    "\treturn (r^2 * math.sqrt(3)) / 4\nend",
    "  return (math.sqrt(3) * r * r) / 4\nend",
    "  return (math.sqrt(3)/4)*r^2\nend",
    "    return (r^2 * math.sqrt(3)) / 4\nend",
    "    local s = r * 2\n    return (s * (s - r) * (s - r) * (s - r)) ^ 0.5\nend",
    "\tlocal s = r * 2\n\treturn math.sqrt(s * (s - r) * (s - r) * (s - r))\nend",
    "    return math.sqrt(3) * r * r / 4\nend"
  ]
}
{
  "name": "mbpp_728_sum_list",
  "language": "lua",
  "prompt": "-- Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].\nlocal function sum_list(lst1, lst2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_728_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_list\n    lu.assertEquals(candidate({10, 20, 30}, {15, 25, 35}), {25, 45, 65})\n    lu.assertEquals(candidate({1, 2, 3}, {5, 6, 7}), {6, 8, 10})\n    lu.assertEquals(candidate({15, 20, 30}, {15, 45, 75}), {30, 65, 105})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #lst1 do\n        result[i] = lst1[i] + lst2[i]\n    end\n    return result\nend",
    "  local sum = {}\n  for i = 1, #lst1 do\n    sum[i] = lst1[i] + lst2[i]\n  end\n  return sum\nend",
    "\tlocal sum = {}\n\tfor i = 1, #lst1 do\n\t\tsum[i] = lst1[i] + lst2[i]\n\tend\n\treturn sum\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #lst1 do\n        result[i] = lst1[i] + lst2[i]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "\tlocal result = {}\n\tfor i, v in ipairs(lst1) do\n\t\tresult[i] = v + lst2[i]\n\tend\n\treturn result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "\tlocal result = {}\n\tfor i = 1, #lst1 do\n\t\tresult[i] = lst1[i] + lst2[i]\n\tend\n\treturn result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "    local sum = {}\n    for i = 1, #lst1 do\n        sum[i] = lst1[i] + lst2[i]\n    end\n    return sum\nend",
    "  local res = {}\n  for i = 1, #lst1 do\n    res[i] = lst1[i] + lst2[i]\n  end\n  return res\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend",
    "  local result = {}\n  for i = 1, #lst1 do\n    result[i] = lst1[i] + lst2[i]\n  end\n  return result\nend"
  ]
}
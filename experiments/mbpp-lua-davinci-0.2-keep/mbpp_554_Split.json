{
  "name": "mbpp_554_Split",
  "language": "lua",
  "prompt": "-- Write a python function which takes a list of integers and only returns the odd ones.\nlocal function Split(list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_554_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Split\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6}), {1, 3, 5})\n    lu.assertEquals(candidate({10, 11, 12, 13}), {11, 13})\n    lu.assertEquals(candidate({7, 8, 9, 1}), {7, 9, 1})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "  local odd = {}\n  local even = {}\n  for i, v in ipairs(list) do\n    if v % 2 == 0 then\n      table.insert(even, v)\n    else\n      table.insert(odd, v)\n    end\n  end\n  return odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i = 1, #list do\n\t\tif list[i] % 2 == 0 then\n\t\t\ttable.insert(even, list[i])\n\t\telse\n\t\t\ttable.insert(odd, list[i])\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i = 1, #list do\n\t\tif list[i] % 2 == 0 then\n\t\t\ttable.insert(even, list[i])\n\t\telse\n\t\t\ttable.insert(odd, list[i])\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[i] = v\n\t\telse\n\t\t\todd[i] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v%2 == 0 then\n\t\t\ttable.insert(even,v)\n\t\telse\n\t\t\ttable.insert(odd,v)\n\t\tend\n\tend\n\treturn odd,even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i = 1, #list do\n\t\tif list[i] % 2 == 0 then\n\t\t\ttable.insert(even, list[i])\n\t\telse\n\t\t\ttable.insert(odd, list[i])\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v%2 == 0 then\n\t\t\ttable.insert(even,v)\n\t\telse\n\t\t\ttable.insert(odd,v)\n\t\tend\n\tend\n\treturn odd,even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor k, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor k, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 1 then\n\t\t\ttable.insert(odd, v)\n\t\telse\n\t\t\ttable.insert(even, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v%2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v%2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v%2 == 0 then\n\t\t\ttable.insert(even,v)\n\t\telse\n\t\t\ttable.insert(odd,v)\n\t\tend\n\tend\n\treturn odd,even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i,v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i = 1, #list do\n\t\tif list[i] % 2 == 0 then\n\t\t\ttable.insert(even, list[i])\n\t\telse\n\t\t\ttable.insert(odd, list[i])\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd, even = {}, {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend",
    "    local odd = {}\n    local even = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return odd, even\nend",
    "\tlocal odd = {}\n\tlocal even = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn odd, even\nend"
  ]
}
{
  "name": "mbpp_3_is_not_prime",
  "language": "lua",
  "prompt": "-- Write a python function to identify non-prime numbers.\nlocal function is_not_prime(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_3_is_not_prime.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_not_prime\n    lu.assertEquals(candidate(2), false)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(35), true)\n    lu.assertEquals(candidate(37), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tif n == 1 then\n\t\treturn true\n\tend\n\tfor i = 2, n - 1 do\n\t\tif n % i == 0 then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    if n <= 1 then\n        return true\n    end\n    for i = 2, n - 1 do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "\tlocal i = 2\n\twhile i < n do\n\t\tif n % i == 0 then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    if n <= 1 then\n        return true\n    elseif n <= 3 then\n        return false\n    elseif n % 2 == 0 or n % 3 == 0 then\n        return true\n    end\n    local i = 5\n    while i * i <= n do\n        if n % i == 0 or n % (i + 2) == 0 then\n            return true\n        end\n        i = i + 6\n    end\n    return false\nend",
    "    if n <= 1 then return true end\n    if n <= 3 then return false end\n    if n % 2 == 0 or n % 3 == 0 then return true end\n    local i = 5\n    while i * i <= n do\n        if n % i == 0 or n % (i + 2) == 0 then\n            return true\n        end\n        i = i + 6\n    end\n    return false\nend",
    "  if n <= 1 then\n    return true\n  elseif n <= 3 then\n    return false\n  elseif n % 2 == 0 or n % 3 == 0 then\n    return true\n  end\n  local i = 5\n  while i * i <= n do\n    if n % i == 0 or n % (i + 2) == 0 then\n      return true\n    end\n    i = i + 6\n  end\n  return false\nend",
    "    if n == 1 then\n        return true\n    end\n    for i = 2, n - 1 do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "  if n <= 1 then\n    return true\n  end\n  for i = 2, n - 1 do\n    if n % i == 0 then\n      return true\n    end\n  end\n  return false\nend",
    "  if n <= 1 then return true end\n  for i = 2, n - 1 do\n    if n % i == 0 then return true end\n  end\n  return false\nend",
    "    if n <= 1 then\n        return true\n    end\n    for i = 2, n - 1 do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "    if n <= 1 then\n        return true\n    end\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "    if n < 2 then\n        return true\n    end\n    for i = 2, math.floor(math.sqrt(n)) do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "    if n < 2 then\n        return true\n    end\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "  if n < 2 then return true end\n  for i = 2, n - 1 do\n    if n % i == 0 then return true end\n  end\n  return false\nend",
    "    if n < 2 then\n        return true\n    end\n    for i = 2, n - 1 do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "    if n <= 1 then\n        return true\n    elseif n <= 3 then\n        return false\n    elseif n % 2 == 0 or n % 3 == 0 then\n        return true\n    else\n        local i = 5\n        while i * i <= n do\n            if n % i == 0 or n % (i + 2) == 0 then\n                return true\n            end\n            i = i + 6\n        end\n        return false\n    end\nend",
    "    for i=2, n-1 do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "  if n <= 1 then\n    return true\n  end\n  for i = 2, math.sqrt(n) do\n    if n % i == 0 then\n      return true\n    end\n  end\n  return false\nend",
    "    if n < 2 then\n        return true\n    end\n    for i = 2, math.sqrt(n) do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "    if n <= 1 then\n        return true\n    end\n    for i = 2, n - 1 do\n        if n % i == 0 then\n            return true\n        end\n    end\n    return false\nend"
  ]
}
{
  "name": "mbpp_440_find_adverb_position",
  "language": "lua",
  "prompt": "-- Write a function to find the first adverb and their positions in a given sentence.\nlocal function find_adverb_position(text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_440_find_adverb_position.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_adverb_position\n    lu.assertEquals(candidate('clearly!! we can see the sky'), {0, 7, 'clearly'})\n    lu.assertEquals(candidate('seriously!! there are many roses'), {0, 9, 'seriously'})\n    lu.assertEquals(candidate('unfortunately!! sita is going to home'), {0, 13, 'unfortunately'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_found = false\n    local adverb_count = 0\n    local adverb_start = 0\n    local adverb_end = 0\n    local adverb_length = 0\n    local adverb_text = \"\"\n    local adverb_text_length = 0\n    local adverb_text_start = 0\n    local adverb_text_end = 0\n    local adverb_text_found = false\n    local adverb_text_count = 0\n    local adverb_text_position = 0\n    local adverb_text_positions = {}\n    local adverb_text_position_count = 0\n    local adverb_text_position_start = 0\n    local adverb_text_position_end = 0\n    local adverb_text_position_length = 0\n    local adverb_text_position_found = false\n    local adverb_text_position_text = \"\"\n    local adverb_text_position_text_length = 0\n    local adverb_text_position_text_start = 0\n    local adverb_text_position_text_end = 0\n    local adverb_text_position_text_found = false\n    local adverb_text_position_text_count = 0\n    local adverb_text_position_text_position = 0\n    local adverb_text_position_text_positions = {}\n    local adverb_text_position_text_position_count = 0\n    local adverb_text_position_text_position_start = 0\n    local adverb_text_position_text_position_end = 0\n    local adverb_text_position_text_position_length = 0\n    local adverb_text_position_text_position_found = false\n    local adverb_text_position_text_position_text = \"\"\n    local adverb_text_position_text_position_text_length = 0\n    local adverb_text_position_text_position_text_start = 0\n    local adverb_text_position_text_position_text_end = 0\n    local adverb_text_position_text",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tfor word in string.gmatch(text, \"%S+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif adverb_found == false then\n\t\t\tif word:match(\"^%u\") then\n\t\t\t\tadverb_found = true\n\t\t\t\tadverb_positions[#adverb_positions + 1] = adverb_position\n\t\t\t\tadverbs[#adverbs + 1] = word\n\t\t\tend\n\t\telse\n\t\t\tif word:match(\"^%u\") then\n\t\t\t\tadverb_positions[#adverb_positions + 1] = adverb_position\n\t\t\t\tadverbs[#adverbs + 1] = word\n\t\t\telse\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_position = {}\n\tlocal adverb_count = 0\n\tlocal adverb_index = 0\n\tlocal adverb_position_index = 0\n\tlocal adverb_position_count = 0\n\tlocal adverb_position_start = 0\n\tlocal adverb_position_end = 0\n\tlocal adverb_position_start_index = 0\n\tlocal adverb_position_end_index = 0\n\tlocal adverb_position_start_count = 0\n\tlocal adverb_position_end_count = 0\n\tlocal adverb_position_start_value = 0\n\tlocal adverb_position_end_value = 0\n\tlocal adverb_position_start_value_index = 0\n\tlocal adverb_position_end_value_index = 0\n\tlocal adverb_position_start_value_count = 0\n\tlocal adverb_position_end_value_count = 0\n\tlocal adverb_position_start_value_value = 0\n\tlocal adverb_position_end_value_value = 0\n\tlocal adverb_position_start_value_value_index = 0\n\tlocal adverb_position_end_value_value_index = 0\n\tlocal adverb_position_start_value_value_count = 0\n\tlocal adverb_position_end_value_value_count = 0\n\tlocal adverb_position_start_value_value_value = 0\n\tlocal adverb_position_end_value_value_value = 0\n\tlocal adverb_position_start_value_value_value_index = 0\n\tlocal adverb_position_end_value_value_value_index = 0\n\tlocal adverb_position_start_value_value_value_count = 0\n\tlocal adverb_position_end_value_value_value_count = 0\n\tlocal adverb_position_start_value_value_value_value = 0\n\tlocal adverb_position_end_value_value_value_value = 0\n\tlocal adverb_position_start_value_value_value_value_index = 0\n\tlocal adverb_position_end_value_value_value_value_index = 0\n\tlocal adverb_position_",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_position = 0\n\tlocal adverb_found_index = 0\n\tlocal adverb_found_index_position = 0\n\tlocal adverb_found_index_position_index = 0\n\tlocal adverb_found_index_position_index_position = 0\n\tlocal adverb_found_index_position_index_position_index = 0\n\tlocal adverb_found_index_position_index_position_index_position = 0\n\tlocal adverb_found_index_position_index_position_index_position_index = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position_index = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position_index_position = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position_index_position_index = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position_index_position_index_position = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position_index_position_index_position_index = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position_index_position_index_position_index_position = 0\n\tlocal adverb_found_index_position_index_position_index_position_index_position_index_position_index_position_index_position_index_position_index = 0\n\tlocal adverb_found",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs_table[word] then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, text:find(word))\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_position = 0\n\tlocal adverb_found_length = 0\n\tlocal adverb_found_text = \"\"\n\tlocal adverb_found_text_lower = \"\"\n\tlocal adverb_found_text_upper = \"\"\n\tlocal adverb_found_text_title = \"\"\n\tlocal adverb_found_text_capitalized = \"\"\n\tlocal adverb_found_text_lowercased = \"\"\n\tlocal adverb_found_text_uppercased = \"\"\n\tlocal adverb_found_text_capitalized_all = \"\"\n\tlocal adverb_found_text_lowercased_all = \"\"\n\tlocal adverb_found_text_uppercased_all = \"\"\n\tlocal adverb_found_text_titlecased = \"\"\n\tlocal adverb_found_text_titlecased_all = \"\"\n\tlocal adverb_found_text_camelcased = \"\"\n\tlocal adverb_found_text_camelcased_all = \"\"\n\tlocal adverb_found_text_underscored = \"\"\n\tlocal adverb_found_text_underscored_all = \"\"\n\tlocal adverb_found_text_dashed = \"\"\n\tlocal adverb_found_text_dashed_all = \"\"\n\tlocal adverb_found_text_spaced = \"\"\n\tlocal adverb_found_text_spaced_all = \"\"\n\tlocal adverb_found_text_dot = \"\"\n\tlocal adverb_found_text_dot_all = \"\"\n\tlocal adverb_found_text_comma = \"\"\n\tlocal adverb_found_text_comma_all = \"\"\n\tlocal adverb_found_text_semicolon = \"\"\n\tlocal adverb_found_text_semicolon_all = \"\"\n\tlocal adverb_found_text_colon = \"\"\n\tlocal adverb_found_text_colon_all = \"\"\n\tlocal adverb_found_text_slash = \"\"\n\tlocal adverb_found_text_slash_all = \"\"\n\tlocal",
    "\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_length = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_count = 0\n\tlocal adverb_found_positions = {}\n\tlocal adverb_found_lengths = {}\n\tlocal adverb_found_texts = {}\n\tlocal adverb_found_text = \"\"\n\tlocal adverb_found_text_length = 0\n\tlocal adverb_found_text_position = 0\n\tlocal adverb_found_text_positions = {}\n\tlocal adverb_found_text_lengths = {}\n\tlocal adverb_found_text_texts = {}\n\tlocal adverb_found_text_text = \"\"\n\tlocal adverb_found_text_text_length = 0\n\tlocal adverb_found_text_text_position = 0\n\tlocal adverb_found_text_text_positions = {}\n\tlocal adverb_found_text_text_lengths = {}\n\tlocal adverb_found_text_text_texts = {}\n\tlocal adverb_found_text_text_text = \"\"\n\tlocal adverb_found_text_text_text_length = 0\n\tlocal adverb_found_text_text_text_position = 0\n\tlocal adverb_found_text_text_text_positions = {}\n\tlocal adverb_found_text_text_text_lengths = {}\n\tlocal adverb_found_text_text_text_texts = {}\n\tlocal adverb_found_text_text_text_text = \"\"\n\tlocal adverb_found_text_text_text_text_length = 0\n\tlocal adverb_found_text_text_text_text_position = 0\n\tlocal adverb_found_text_text_text_text_positions = {}\n\tlocal adverb_found_text_text_text_text_lengths = {}\n\tlocal adverb_found_text_text_text_text_texts = {}\n\tlocal adverb_found_text_text_text_text_text = \"\"\n\tlocal adverb_found_text_text_text_text_text_length = 0",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 1\n  for adverb in text:gmatch(\"%f[%w]%l+%f[%W]\") do\n    adverbs[adverb_position] = adverb\n    adverb_positions[adverb] = adverb_position\n    adverb_position = adverb_position + 1\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_found = false\n  local adverb_start = 0\n  local adverb_end = 0\n  local adverb_length = 0\n  local adverb_index = 0\n  local adverb_count = 0\n  local adverb_index_count = 0\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local adverb_index_position = 0\n  local adverb_index_found = false\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local adverb_index_position = 0\n  local adverb_index_found = false\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local adverb_index_position = 0\n  local adverb_index_found = false\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local adverb_index_position = 0\n  local adverb_index_found = false\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local adverb_index_position = 0\n  local adverb_index_found = false\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local adverb_index_position = 0\n  local adverb_index_found = false\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local adverb_index_position = 0\n  local adverb_index_found = false\n  local adverb_index_start = 0\n  local adverb_index_end = 0\n  local adverb_index_length = 0\n  local",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, text:find(word))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_dict[word] then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_dict[word] then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    for word in string.gmatch(text, \"%w+\") do\n        adverb_position = adverb_position + 1\n        if adverb_list[word] then\n            adverbs[#adverbs + 1] = word\n            adverb_positions[#adverb_positions + 1] = adverb_position\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_found = false\n  local adverb_index = 0\n  local adverb_pattern = \"%f[%a]%a+ly%f[%A]\"",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_index = 1\n    local adverb_position_index = 1\n    local adverb_position = 0\n    local adverb_position_end = 0\n    local adverb_position_start = 0\n    local adverb_position_start_index = 1\n    local adverb_position_end_index = 1\n    local adverb_position_start_index_end = 0\n    local adverb_position_end_index_end = 0\n    local adverb_position_start_index_start = 0\n    local adverb_position_end_index_start = 0\n    local adverb_position_start_index_start_index = 1\n    local adverb_position_end_index_start_index = 1\n    local adverb_position_start_index_end_index = 1\n    local adverb_position_end_index_end_index = 1\n    local adverb_position_start_index_start_index_end = 0\n    local adverb_position_end_index_start_index_end = 0\n    local adverb_position_start_index_end_index_end = 0\n    local adverb_position_end_index_end_index_end = 0\n    local adverb_position_start_index_start_index_start = 0\n    local adverb_position_end_index_start_index_start = 0\n    local adverb_position_start_index_end_index_start = 0\n    local adverb_position_end_index_end_index_start = 0\n    local adverb_position_start_index_start_index_start_index = 1\n    local adverb_position_end_index_start_index_start_index = 1\n    local adverb_position_start_index_end_index_start_index = 1\n    local adverb_position_end_index_end_index_start_index = 1\n    local adverb_position_start_index_start_index_end_index = 1\n    local adverb_position_end_index_start_index_end_index = 1\n    local adverb_position_start_index_",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_positions_count = 0\n\tfor word in string.gmatch(text, \"%w+\") do\n\t\tif adverbs_dict[word] then\n\t\t\tadverb_positions_count = adverb_positions_count + 1\n\t\t\tadverbs[adverb_positions_count] = word\n\t\t\tadverb_positions[adverb_positions_count] = string.find(text, word)\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor word in text:gmatch(\"%w+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif adverbs[word] then\n\t\t\ttable.insert(adverb_positions, adverb_position)\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    for word in string.gmatch(text, \"%S+\") do\n        if word_is_adverb(word) then\n            adverb_position = adverb_position + 1\n            adverbs[adverb_position] = word\n            adverb_positions[adverb_position] = string.find(text, word)\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in string.gmatch(text, \"%S+\") do\n    if adverbs[word] == nil then\n      adverbs[word] = 1\n    else\n      adverbs[word] = adverbs[word] + 1\n    end\n  end\n  for word, count in pairs(adverbs) do\n    if count > 1 then\n      local position = string.find(text, word)\n      adverb_positions[position] = word\n    end\n  end\n  return adverb_positions\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_dict[word] then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_start = 0\n\tlocal adverb_end = 0\n\tlocal adverb_length = 0\n\tlocal adverb_text = \"\"\n\tlocal adverb_text_length = 0\n\tlocal adverb_text_start = 0\n\tlocal adverb_text_end = 0\n\tlocal adverb_text_found = false\n\tlocal adverb_text_position = 0\n\tlocal adverb_text_positions = {}\n\tlocal adverb_text_positions_length = 0\n\tlocal adverb_text_positions_start = 0\n\tlocal adverb_text_positions_end = 0\n\tlocal adverb_text_positions_found = false\n\tlocal adverb_text_positions_position = 0\n\tlocal adverb_text_positions_position_length = 0\n\tlocal adverb_text_positions_position_start = 0\n\tlocal adverb_text_positions_position_end = 0\n\tlocal adverb_text_positions_position_found = false\n\tlocal adverb_text_positions_position_text = \"\"\n\tlocal adverb_text_positions_position_text_length = 0\n\tlocal adverb_text_positions_position_text_start = 0\n\tlocal adverb_text_positions_position_text_end = 0\n\tlocal adverb_text_positions_position_text_found = false\n\tlocal adverb_text_positions_position_text_position = 0\n\tlocal adverb_text_positions_position_text_position_length = 0\n\tlocal adverb_text_positions_position_text_position_start = 0\n\tlocal adverb_text_positions_position_text_position_end = 0\n\tlocal adverb_text_positions_position_text_position_found = false\n\tlocal adverb_text_positions_position_text_position_text = \"\"\n\tlocal adverb_text_positions_position_text_position_text_length = 0\n\tlocal adverb_text_positions_position",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_length = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_count = 0\n\tlocal adverb_found_positions = {}\n\tlocal adverb_found_lengths = {}\n\tlocal adverb_found_text = {}\n\tlocal adverb_found_text_positions = {}\n\tlocal adverb_found_text_lengths = {}\n\tlocal adverb_found_text_positions_lengths = {}\n\tlocal adverb_found_text_positions_lengths_count = 0\n\tlocal adverb_found_text_positions_lengths_count_max = 0\n\tlocal adverb_found_text_positions_lengths_count_max_position = 0\n\tlocal adverb_found_text_positions_lengths_count_max_length = 0\n\tlocal adverb_found_text_positions_lengths_count_max_text = \"\"\n\tlocal adverb_found_text_positions_lengths_count_max_text_position = 0\n\tlocal adverb_found_text_positions_lengths_count_max_text_length = 0\n\tlocal adverb_found_text_positions_lengths_count_max_text_positions_lengths = {}\n\tlocal adverb_found_text_positions_lengths_count_max_text_positions_lengths_count = 0\n\tlocal adverb_found_text_positions_lengths_count_max_text_positions_lengths_count_max = 0\n\tlocal adverb_found_text_positions_lengths_count_max_text_positions_lengths_count_max_position = 0\n\tlocal adverb_found_text_positions_lengths_count_max_text_positions_lengths_count_max_length = 0\n\tlocal adverb_found_text_positions_lengths_count_max_text_positions_lengths_count_max_text = \"\"\n\tlocal adverb_found_text_positions_lengths_count_max_",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%S+\") do\n    if word:match(\"%w+ly\") then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, text:find(word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_pattern = \"([%w]+ly)\"\n  for adverb in text:gmatch(adverb_pattern) do\n    adverb_position = text:find(adverb)\n    table.insert(adverbs, adverb)\n    table.insert(adverb_positions, adverb_position)\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%S+\") do\n    if word:match(\"%w+ly\") then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, text:find(word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    for word in string.gmatch(text, \"%w+\") do\n        if word_is_adverb(word) then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs[word] then\n      adverb_positions[word] = adverb_positions[word] or {}\n      table.insert(adverb_positions[word], text:find(word))\n    else\n      adverbs[word] = is_adverb(word)\n      if adverbs[word] then\n        adverb_positions[word] = adverb_positions[word] or {}\n        table.insert(adverb_positions[word], text:find(word))\n      end\n    end\n  end\n  return adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_pattern = \"([^%w]*)(%w+ly)([^%w]*)\"\n    local adverb_start_position, adverb_end_position, adverb",
    "    local adverb_positions = {}\n    local adverb_found = false\n    local adverb_position = 0\n    local adverb_length = 0\n    local adverb_text = \"\"\n    local adverb_text_length = 0\n    local adverb_text_position = 0\n    local adverb_text_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local adverb_text_end_found = false\n    local adverb_text_end_position = 0\n    local adverb_text_end_length = 0\n    local ad",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal i = 0\n\tfor word in text:gmatch(\"%w+\") do\n\t\ti = i + 1\n\t\tif adverbs_list[word] then\n\t\t\ttable.insert(adverbs, {word, i})\n\t\tend\n\tend\n\treturn adverbs\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_position_start = 0\n    local adverb_position_end = 0\n    local adverb_found = false\n    local adverb_found_start = false\n    local adverb_found_end = false\n    local adverb_found_start_position = 0\n    local adverb_found_end_position = 0\n    local adverb_found_start_position_start = 0\n    local adverb_found_start_position_end = 0\n    local adverb_found_end_position_start = 0\n    local adverb_found_end_position_end = 0\n    local adverb_found_start_position_start_start = 0\n    local adverb_found_start_position_start_end = 0\n    local adverb_found_start_position_end_start = 0\n    local adverb_found_start_position_end_end = 0\n    local adverb_found_end_position_start_start = 0\n    local adverb_found_end_position_start_end = 0\n    local adverb_found_end_position_end_start = 0\n    local adverb_found_end_position_end_end = 0\n    local adverb_found_start_position_start_start_start = 0\n    local adverb_found_start_position_start_start_end = 0\n    local adverb_found_start_position_start_end_start = 0\n    local adverb_found_start_position_start_end_end = 0\n    local adverb_found_start_position_end_start_start = 0\n    local adverb_found_start_position_end_start_end = 0\n    local adverb_found_start_position_end_end_start = 0\n    local adverb_found_start_position_end_end_end = 0\n    local adverb_found_end_position_start_start_start = 0\n    local adverb_found_end_position_start_start_end = 0\n    local adverb_found_end_position_start_end_start = 0\n   ",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n    if tag == \"RB\" then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, word:len())\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs+1] = word\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word, tag in text:gmatch(\"([%w']+)%s+/([%w']+)\") do\n    if tag == \"RB\" then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, word:find(text))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs[word] then\n\t\t\tadverb_positions[word] = adverb_positions[word] + 1\n\t\telse\n\t\t\tadverbs[word] = true\n\t\t\tadverb_positions[word] = 1\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "  local adverb_position = {}\n  local adverb_index = 0\n  for word in text:gmatch(\"%w+\") do\n    if adverb_list[word] then\n      adverb_index = adverb_index + 1\n      adverb_position[adverb_index] = word\n    end\n  end\n  return adverb_position\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_found = false\n  local adverb_pattern = \"([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_found = false\n    local adverb_index = 1\n    local adverb_found_index = 0\n    local adverb_found_position = 0\n    local adverb_found_length = 0\n    local adverb_found_text = \"\"\n    local adverb_found_text_length = 0\n    local adverb_found_text_position = 0\n    local adverb_found_text_index = 0\n    local adverb_found_text_found_index = 0\n    local adverb_found_text_found_position = 0\n    local adverb_found_text_found_length = 0\n    local adverb_found_text_found_text = \"\"\n    local adverb_found_text_found_text_length = 0\n    local adverb_found_text_found_text_position = 0\n    local adverb_found_text_found_text_index = 0\n    local adverb_found_text_found_text_found_index = 0\n    local adverb_found_text_found_text_found_position = 0\n    local adverb_found_text_found_text_found_length = 0\n    local adverb_found_text_found_text_found_text = \"\"\n    local adverb_found_text_found_text_found_text_length = 0\n    local adverb_found_text_found_text_found_text_position = 0\n    local adverb_found_text_found_text_found_text_index = 0\n    local adverb_found_text_found_text_found_text_found_index = 0\n    local adverb_found_text_found_text_found_text_found_position = 0\n    local adverb_found_text_found_text_found_text_found_length = 0\n    local adverb_found_text_found_text_found_text_found_text = \"\"\n    local adverb_found_text_found_text_found_text_found_text_length = 0\n    local adverb_found_text_found_text_found_text_",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_count = 0\n\tlocal adverb_found_first = 0\n\tlocal adverb_found_last = 0\n\tfor word in text:gmatch(\"%S+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tadverb_found = false\n\t\tfor _, adverb in ipairs(adverbs) do\n\t\t\tif word == adverb then\n\t\t\t\tadverb_found = true\n\t\t\t\tadverb_found_count = adverb_found_count + 1\n\t\t\t\tadverb_found_last = adverb_position\n\t\t\t\tif adverb_found_first == 0 then\n\t\t\t\t\tadverb_found_first = adverb_position\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif not adverb_found then\n\t\t\tadverb_found_count = 0\n\t\t\tadverb_found_first = 0\n\t\t\tadverb_found_last = 0\n\t\tend\n\tend\n\treturn adverb_found_count, adverb_found_first, adverb_found_last\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    for word in string.gmatch(text, \"%w+\") do\n        if word_is_adverb(word) then\n            adverb_position = adverb_position + 1\n            adverbs[adverb_position] = word\n            adverb_positions[adverb_position] = string.find(text, word)\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs_list[word] then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, text:find(word))\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_list = {\n\t\t\"abruptly\",\n\t\t\"absentmindedly\",\n\t\t\"accidentally\",\n\t\t\"acidly\",\n\t\t\"actually\",\n\t\t\"adventurously\",\n\t\t\"afterwards\",\n\t\t\"almost\",\n\t\t\"always\",\n\t\t\"angrily\",\n\t\t\"annually\",\n\t\t\"anxiously\",\n\t\t\"arrogantly\",\n\t\t\"awkwardly\",\n\t\t\"badly\",\n\t\t\"bashfully\",\n\t\t\"beautifully\",\n\t\t\"bitterly\",\n\t\t\"bleakly\",\n\t\t\"blindly\",\n\t\t\"blissfully\",\n\t\t\"boastfully\",\n\t\t\"boldly\",\n\t\t\"bravely\",\n\t\t\"briefly\",\n\t\t\"brightly\",\n\t\t\"briskly\",\n\t\t\"broadly\",\n\t\t\"busily\",\n\t\t\"calmly\",\n\t\t\"carefully\",\n\t\t\"carelessly\",\n\t\t\"cautiously\",\n\t\t\"certainly\",\n\t\t\"cheerfully\",\n\t\t\"clearly\",\n\t\t\"cleverly\",\n\t\t\"closely\",\n\t\t\"coaxingly\",\n\t\t\"colorfully\",\n\t\t\"commonly\",\n\t\t\"continually\",\n\t\t\"coolly\",\n\t\t\"correctly\",\n\t\t\"courageously\",\n\t\t\"crossly\",\n\t\t\"cruelly\",\n\t\t\"curiously\",\n\t\t\"daily\",\n\t\t\"daintily\",\n\t\t\"dearly\",\n\t\t\"deceivingly\",\n\t\t\"deeply\",\n\t\t\"defiantly\",\n\t\t\"deliberately\",\n\t\t\"delightfully\",\n\t\t\"diligently\",\n\t\t\"dimly\",\n\t\t\"doubtfully\",\n\t\t\"dreamily\",\n\t\t\"easily\",\n\t\t\"elegantly\",\n\t\t\"energetically\",\n\t\t\"en",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_pattern = \"([%w]+ly)\"\n\tlocal adverb_pattern_2 = \"([%w]+ly)%s\"\n\tlocal adverb_pattern_3 = \"%s([%w]+ly)%s\"\n\tlocal adverb_pattern_4 = \"%s([%w]+ly)$\"\n\tlocal adverb_pattern_5 = \"^([%w]+ly)%s\"\n\tlocal adverb_pattern_6 = \"^([%w]+ly)$\"\n\tlocal adverb_pattern_7 = \"%s([%w]+ly)$\"\n\tlocal adverb_pattern_8 = \"^([%w]+ly)%s\"\n\tlocal adverb_pattern_9 = \"%s([%w]+ly)%s\"\n\tlocal adverb_pattern_10 = \"^([%w]+ly)$\"\n\tlocal adverb_pattern_11 = \"([%w]+ly)$\"\n\tlocal adverb_pattern_12 = \"^([%w]+ly)\"\n\tlocal adverb_pattern_13 = \"([%w]+ly)%s\"\n\tlocal adverb_pattern_14 = \"%s([%w]+ly)\"\n\tlocal adverb_pattern_15 = \"^([%w]+ly)\"\n\tlocal adverb_pattern_16 = \"([%w]+ly)$\"\n\tlocal adverb_pattern_17 = \"%s([%w]+ly)$\"\n\tlocal adverb_pattern_18 = \"^([%w]+ly)%s\"\n\tlocal adverb_pattern_19 = \"%s([%w]+ly)%s\"\n\tlocal adverb_pattern_20 = \"^([%w]+ly)$\"\n\tlocal adverb_pattern_21 = \"([%w]+ly)$\"\n\tlocal adverb_pattern_22 = \"^([%w]+ly)\"\n\tlocal adverb_pattern_23 = \"([%w]+ly)%s\"\n\tlocal adverb_pattern_24 = \"%s([%w]+ly)\"\n\tlocal adverb_pattern_25",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_start = 0\n\tlocal adverb_end = 0\n\tlocal adverb_length = 0\n\tlocal adverb_word = \"\"\n\tlocal adverb_word_length = 0\n\tlocal adverb_word_start = 0\n\tlocal adverb_word_end = 0\n\tlocal adverb_word_position = 0\n\tlocal adverb_word_found = false\n\tlocal adverb_word_found_first = false\n\tlocal adverb_word_found_last = false\n\tlocal adverb_word_found_last_position = 0\n\tlocal adverb_word_found_last_start = 0\n\tlocal adverb_word_found_last_end = 0\n\tlocal adverb_word_found_last_length = 0\n\tlocal adverb_word_found_last_word = \"\"\n\tlocal adverb_word_found_last_word_length = 0\n\tlocal adverb_word_found_last_word_start = 0\n\tlocal adverb_word_found_last_word_end = 0\n\tlocal adverb_word_found_last_word_position = 0\n\tlocal adverb_word_found_last_word_found = false\n\tlocal adverb_word_found_last_word_found_first = false\n\tlocal adverb_word_found_last_word_found_last = false\n\tlocal adverb_word_found_last_word_found_last_position = 0\n\tlocal adverb_word_found_last_word_found_last_start = 0\n\tlocal adverb_word_found_last_word_found_last_end = 0\n\tlocal adverb_word_found_last_word_found_last_length = 0\n\tlocal adverb_word_found_last_word_found_last_word = \"\"\n\tlocal adverb_word_found_last_word_found_last_word_length = 0\n\tlocal adverb_word_found_last_word_found_last_word_start = 0\n\tlocal adverb_word_found_last",
    "  local adverbs = {}\n  local adverb_pos = {}\n  local adverb_pos_count = 0\n  for word, tag in text:gmatch(\"(%S+)([^%s]+)\") do\n    if tag == \"RB\" then\n      adverb_pos_count = adverb_pos_count + 1\n      adverbs[adverb_pos_count] = word\n      adverb_pos[adverb_pos_count] = word:find(word)\n    end\n  end\n  return adverbs, adverb_pos\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    for word in string.gmatch(text, \"%w+\") do\n        adverb_position = adverb_position + 1\n        if adverbs[word] then\n            adverb_positions[word] = adverb_position\n        end\n    end\n    return adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  for word in string.gmatch(text, \"%S+\") do\n    adverb_position = adverb_position + 1\n    if adverbs[word] then\n      table.insert(adverb_positions, adverb_position)\n    end\n  end\n  return adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs+1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal l = 1\n\tlocal m = 1\n\tlocal n = 1\n\tlocal o = 1\n\tlocal p = 1\n\tlocal q = 1\n\tlocal r = 1\n\tlocal s = 1\n\tlocal t = 1\n\tlocal u = 1\n\tlocal v = 1\n\tlocal w = 1\n\tlocal x = 1\n\tlocal y = 1\n\tlocal z = 1\n\tlocal aa = 1\n\tlocal ab = 1\n\tlocal ac = 1\n\tlocal ad = 1\n\tlocal ae = 1\n\tlocal af = 1\n\tlocal ag = 1\n\tlocal ah = 1\n\tlocal ai = 1\n\tlocal aj = 1\n\tlocal ak = 1\n\tlocal al = 1\n\tlocal am = 1\n\tlocal an = 1\n\tlocal ao = 1\n\tlocal ap = 1\n\tlocal aq = 1\n\tlocal ar = 1\n\tlocal as = 1\n\tlocal at = 1\n\tlocal au = 1\n\tlocal av = 1\n\tlocal aw = 1\n\tlocal ax = 1\n\tlocal ay = 1\n\tlocal az = 1\n\tlocal ba = 1\n\tlocal bb = 1\n\tlocal bc = 1\n\tlocal bd = 1\n\tlocal be = 1\n\tlocal bf = 1\n\tlocal bg = 1\n\tlocal bh = 1\n\tlocal bi = 1\n\tlocal bj = 1\n\tlocal bk = 1\n\tlocal bl = 1\n\tlocal bm = 1\n\tlocal bn = 1\n\tlocal bo = 1\n\tlocal bp = 1\n\tlocal bq = 1\n\tlocal br = 1\n\tlocal bs = 1\n\tlocal bt = 1\n\tlocal bu = 1\n\tlocal bv = 1\n\tlocal bw = 1\n\tlocal bx = 1\n\tlocal by = 1\n\tlocal bz = 1\n\tlocal ca = 1\n\tlocal cb = 1\n\tlocal cc = 1\n\tlocal cd = 1\n\tlocal ce = 1\n\tlocal",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%S+\") do\n    if word:match(\"%w+ly\") then\n      adverbs[#adverbs + 1] = word\n      adverb_positions[#adverb_positions + 1] = text:find(word)\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "\tlocal adverb_positions = {}\n\tlocal adverb_position = text:find(\"%w+ly\")\n\twhile adverb_position do\n\t\ttable.insert(adverb_positions, adverb_position)\n\t\tadverb_position = text:find(\"%w+ly\", adverb_position + 1)\n\tend\n\treturn adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in string.gmatch(text, \"%w+\") do\n        if adverbs_list[word] then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, string.find(text, word))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tfor word, tag in tokenize(text) do\n\t\tif tag == \"RB\" then\n\t\t\ttable.insert(adverbs, word)\n\t\tend\n\tend\n\treturn adverbs\nend",
    "  local adverb_positions = {}\n  local adverb_position = 1\n  local adverb_found = false\n  local adverb_found_position = 0\n  local adverb_found_text = \"\"\n  while adverb_position do\n    adverb_position = text:find(\"%f[%w]%a+ly%f[%W]\", adverb_position)\n    if adverb_position then\n      adverb_found = true\n      adverb_found_position = adverb_position\n      adverb_found_text = text:sub(adverb_position, adverb_position + 2)\n      table.insert(adverb_positions, adverb_position)\n      adverb_position = adverb_position + 1\n    end\n  end\n  return adverb_found, adverb_found_position, adverb_found_text, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_position_start = 0\n  local adverb_position_end = 0\n  local adverb_position_start_found = false\n  local adverb_position_end_found = false\n  local adverb_found = false\n  local adverb_found_count = 0\n  local adverb_found_count_max = 1\n  local adverb_found_count_max_set = false\n  local adverb_found_count_max_set_count = 0\n  local adverb_found_count_max_set_count_max = 1\n  local adverb_found_count_max_set_count_max_set = false\n  local adverb_found_count_max_set_count_max_set_count = 0\n  local adverb_found_count_max_set_count_max_set_count_max = 1\n  local adverb_found_count_max_set_count_max_set_count_max_set = false\n  local adverb_found_count_max_set_count_max_set_count_max_set_count = 0\n  local adverb_found_count_max_set_count_max_set_count_max_set_count_max = 1\n  local adverb_found_count_max_set_count_max_set_count_max_set_count_max_set = false\n  local adverb_found_count_max_set_count_max_set_count_max_set_count_max_set_count = 0\n  local adverb_found_count_max_set_count_max_set_count_max_set_count_max_set_count_max = 1\n  local adverb_found_count_max_set_count_max_set_count_max_set_count_max_set_count_max_set = false\n  local adverb_found_count_max_set_count_max_set_count_max_set_count_max_set_count_max_set_count = 0\n  local adverb_found_count_max_set",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_dict[word] then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in string.gmatch(text, \"%w+\") do\n    if is_adverb(word) then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, string.find(text, word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs+1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%S+\") do\n\t\tif word:match(\"%w+ly\") then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, text:find(word))\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs + 1] = word\n      adverb_positions[#adverb_positions + 1] = text:find(word)\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word, tag in pos_tag(text) do\n    if tag == \"RB\" then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, word:find(word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if word:match(\"%w+ly\") then\n      adverbs[#adverbs+1] = word\n    end\n  end\n  return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 1\n    for word in string.gmatch(text, \"%S+\") do\n        if is_adverb(word) then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, adverb_position)\n        end\n        adverb_position = adverb_position + 1\n    end\n    return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_start = 0\n\tlocal adverb_end = 0\n\tlocal adverb_length = 0\n\tlocal adverb_text = \"\"\n\tlocal adverb_text_length = 0\n\tlocal adverb_text_end = 0\n\tlocal adverb_text_start = 0\n\tlocal adverb_text_found = false\n\tlocal adverb_text_position = 0\n\tlocal adverb_text_positions = {}\n\tlocal adverb_text_position_found = false\n\tlocal adverb_text_position_start = 0\n\tlocal adverb_text_position_end = 0\n\tlocal adverb_text_position_length = 0\n\tlocal adverb_text_position_text = \"\"\n\tlocal adverb_text_position_text_length = 0\n\tlocal adverb_text_position_text_end = 0\n\tlocal adverb_text_position_text_start = 0\n\tlocal adverb_text_position_text_found = false\n\tlocal adverb_text_position_text_position = 0\n\tlocal adverb_text_position_text_positions = {}\n\tlocal adverb_text_position_text_position_found = false\n\tlocal adverb_text_position_text_position_start = 0\n\tlocal adverb_text_position_text_position_end = 0\n\tlocal adverb_text_position_text_position_length = 0\n\tlocal adverb_text_position_text_position_text = \"\"\n\tlocal adverb_text_position_text_position_text_length = 0\n\tlocal adverb_text_position_text_position_text_end = 0\n\tlocal adverb_text_position_text_position_text_start = 0\n\tlocal adverb_text_position_text_position_text_found = false\n\tlocal adverb_text_position_text_position_text_position = 0\n\tlocal adverb_text_position_text_position_text_positions = {}\n\tlocal adverb_text_position_text_position_text_position_",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverb_position = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs[word] then\n\t\t\ttable.insert(adverb_position, {word, text:find(word)})\n\t\tend\n\tend\n\treturn adverb_position\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  for word in string.gmatch(text, \"%S+\") do\n    adverb_position = adverb_position + 1\n    if adverbs[word] then\n      adverb_positions[adverb_position] = true\n    end\n  end\n  return adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs[word] then\n\t\t\tadverb_positions[word] = text:find(word)\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor adverb in text:gmatch(\"%f[%w]%l+%f[%W]\") do\n\t\tadverb_position = text:find(adverb, adverb_position + 1)\n\t\tif adverb_position then\n\t\t\tadverbs[#adverbs + 1] = adverb\n\t\t\tadverb_positions[#adverb_positions + 1] = adverb_position\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_position_start = 0\n\tlocal adverb_position_end = 0\n\tlocal adverb_position_start_found = false\n\tlocal adverb_position_end_found = false\n\tlocal adverb_position_start_found_first = false\n\tlocal adverb_position_end_found_first = false\n\tlocal adverb_position_start_found_second = false\n\tlocal adverb_position_end_found_second = false\n\tlocal adverb_position_start_found_third = false\n\tlocal adverb_position_end_found_third = false\n\tlocal adverb_position_start_found_fourth = false\n\tlocal adverb_position_end_found_fourth = false\n\tlocal adverb_position_start_found_fifth = false\n\tlocal adverb_position_end_found_fifth = false\n\tlocal adverb_position_start_found_sixth = false\n\tlocal adverb_position_end_found_sixth = false\n\tlocal adverb_position_start_found_seventh = false\n\tlocal adverb_position_end_found_seventh = false\n\tlocal adverb_position_start_found_eighth = false\n\tlocal adverb_position_end_found_eighth = false\n\tlocal adverb_position_start_found_ninth = false\n\tlocal adverb_position_end_found_ninth = false\n\tlocal adverb_position_start_found_tenth = false\n\tlocal adverb_position_end_found_tenth = false\n\tlocal adverb_position_start_found_eleventh = false\n\tlocal adverb_position_end_found_eleventh = false\n\tlocal adverb_position_start_found_twelfth = false\n\tlocal adverb_position_end_found_twelfth = false\n\tlocal adverb_position_start_found_thirteenth = false\n\tlocal adverb_position_end_found_thirteenth = false\n\tlocal adverb_position_start_found_fourteenth = false\n\tlocal adverb_position_end_found_fourteenth",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n      adverb_positions[#adverb_positions + 1] = text:find(word)\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor word in text:gmatch(\"%w+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif adverbs[word] then\n\t\t\tadverb_positions[adverb_position] = word\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_pattern = \"([^%s]+)\"\n    for adverb in text:gmatch(adverb_pattern) do\n        if adverb_list[adverb] then\n            table.insert(adverbs, adverb)\n            table.insert(adverb_positions, text:find(adverb))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n        if tag == \"RB\" then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, word:len())\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%a+ly\") then\n            adverbs[#adverbs+1] = word\n        end\n    end\n    return adverbs\nend",
    "\tlocal adverb_position = {}\n\tlocal adverb_list = {}\n\tlocal adverb_count = 0\n\tfor word in text:gmatch(\"%S+\") do\n\t\tlocal word_pos = get_word_pos(word)\n\t\tif word_pos == \"RB\" then\n\t\t\tadverb_count = adverb_count + 1\n\t\t\tadverb_list[adverb_count] = word\n\t\t\tadverb_position[adverb_count] = text:find(word)\n\t\tend\n\tend\n\treturn adverb_list, adverb_position\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, text:find(word))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs_list[word] then\n\t\t\tadverbs[#adverbs + 1] = word\n\t\t\tadverb_positions[#adverb_positions + 1] = text:find(word)\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs_list[word] then\n\t\t\tadverbs[#adverbs+1] = word\n\t\tend\n\tend\n\treturn adverbs\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local i = 1\n  while i <= #text do\n    local word = text[i]\n    if word.pos == \"ADV\" then\n      table.insert(adverbs, {word.word, i})\n    end\n    i = i + 1\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor word in string.gmatch(text, \"%S+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif word_type(word) == \"adverb\" then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, adverb_position)\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs_list[word] then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, text:find(word))\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n    if tag == \"RB\" then\n      table.insert(adverbs, word)\n    end\n  end\n  return adverbs\nend",
    "    local adverb = {}\n    local adverb_pos = {}\n    for i = 1, #text do\n        if text[i].pos == 'ADV' then\n            table.insert(adverb, text[i].word)\n            table.insert(adverb_pos, i)\n        end\n    end\n    return adverb, adverb_pos\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_position_start = 0\n\tlocal adverb_position_end = 0\n\tlocal adverb_position_start_found = false\n\tlocal adverb_position_end_found = false\n\tlocal adverb_found = false\n\tlocal adverb_found_count = 0\n\tlocal adverb_found_count_max = 1\n\tlocal adverb_found_count_max_default = 1\n\tlocal adverb_found_count_max_set = false\n\tlocal adverb_found_count_max_set_default = false\n\tlocal adverb_found_count_max_set_default_value = 1\n\tlocal adverb_found_count_max_set_value = 1\n\tlocal adverb_found_count_max_set_value_default = 1\n\tlocal adverb_found_count_max_set_value_default_value = 1\n\tlocal adverb_found_count_max_set_value_default_value_default = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value_default = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value_default_value = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value_default_value_default = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value_default_value_default_value = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value_default_value_default_value_default = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value_default_value_default_value_default_value = 1\n\tlocal adverb_found_count_max_set_value_default_value_default_value_default_value_default_value_default_value_default = 1\n\tlocal",
    "\tlocal adverbs = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs_list[word] then\n\t\t\tadverbs[#adverbs + 1] = word\n\t\tend\n\tend\n\treturn adverbs\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    for word in string.gmatch(text, \"%w+\") do\n        if adverbs[word] then\n            adverb_position = adverb_position + 1\n            adverb_positions[adverb_position] = word\n        end\n    end\n    return adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if word:match(\"%w+ly\") then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor adverb in text:gmatch(\"%f[%w]%l+%f[%W]\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif adverb:match(\"ly$\") then\n\t\t\ttable.insert(adverbs, adverb)\n\t\t\ttable.insert(adverb_positions, adverb_position)\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_list[word] then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_count = 0\n\tfor word in string.gmatch(text, \"%w+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif adverb_list[word] then\n\t\t\tadverb_count = adverb_count + 1\n\t\t\tadverbs[adverb_count] = word\n\t\t\tadverb_positions[adverb_count] = adverb_position\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_pattern = \"([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%w%p]+)(%s+)([%",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if word:match(\"%w+ly\") then\n            adverbs[#adverbs+1] = word\n        end\n    end\n    return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor word in text:gmatch(\"%w+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif word:match(\"%w+ly\") then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, adverb_position)\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif word:match(\"%w+ly\") then\n\t\t\tadverbs[#adverbs + 1] = word\n\t\tend\n\tend\n\treturn adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  for word in string.gmatch(text, \"%S+\") do\n    if word:match(\"%w+ly\") then\n      adverb_position = adverb_position + 1\n      adverbs[adverb_position] = word\n      adverb_positions[adverb_position] = string.find(text, word)\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs[word] then\n\t\t\ttable.insert(adverb_positions, {word, text:find(word)})\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "\tlocal adverb_position = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs[word] then\n\t\t\ttable.insert(adverb_position, {word, text:find(word)})\n\t\tend\n\tend\n\treturn adverb_position\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_position = 0\n\tlocal adverb_found_length = 0\n\tlocal adverb_found_text = \"\"\n\tlocal adverb_found_text_lower = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_exclamation = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_exclamation_no_question = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_exclamation_no_question_no_colon = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_exclamation_no_question_no_colon_no_semicolon = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_exclamation_no_question_no_colon_no_semicolon_no_dash = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_exclamation_no_question_no_colon_no_semicolon_no_dash_no_parentheses = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_exclamation_no_question_no_colon_no_semicolon_no_dash_no_parentheses_no_quotation = \"\"\n\tlocal adverb_found_text_lower_no_apostrophe_no_period_no_comma_no_ex",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_found = false\n  local adverb_found_position = 0\n  local adverb_found_length = 0\n  local adverb_found_text = \"\"\n  local adverb_found_text_length = 0\n  local adverb_found_text_position = 0\n  local adverb_found_text_position_end = 0\n  local adverb_found_text_position_start = 0\n  local adverb_found_text_position_start_end = 0\n  local adverb_found_text_position_start_start = 0\n  local adverb_found_text_position_start_start_end = 0\n  local adverb_found_text_position_start_start_start = 0\n  local adverb_found_text_position_start_start_start_end = 0\n  local adverb_found_text_position_start_start_start_start = 0\n  local adverb_found_text_position_start_start_start_start_end = 0\n  local adverb_found_text_position_start_start_start_start_start = 0\n  local adverb_found_text_position_start_start_start_start_start_end = 0\n  local adverb_found_text_position_start_start_start_start_start_start = 0\n  local adverb_found_text_position_start_start_start_start_start_start_end = 0\n  local adverb_found_text_position_start_start_start_start_start_start_start = 0\n  local adverb_found_text_position_start_start_start_start_start_start_start_end = 0\n  local adverb_found_text_position_start_start_start_start_start_start_start_start = 0\n  local adverb_found_text_position_start_start_start_start_start_start_start_start_end = 0\n  local adverb_found_text_position_start_start_start_start_start_start_start_start_start = 0\n  local ad",
    "\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs[word] then\n\t\t\ttable.insert(adverb_positions, {word, text:find(word)})\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_pattern = \"([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%s+)([^%s]+)(%",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_dict[word] then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "\tlocal adverb_position = {}\n\tfor word in string.gmatch(text, \"%S+\") do\n\t\tif adverbs[word] then\n\t\t\ttable.insert(adverb_position, {word, string.find(text, word)})\n\t\tend\n\tend\n\treturn adverb_position\nend",
    "  local adverb_position = {}\n  local adverb_list = {}\n  local adverb_list_temp = {}\n  local adverb_list_temp_2 = {}\n  local adverb_list_temp_3 = {}\n  local adverb_list_temp_4 = {}\n  local adverb_list_temp_5 = {}\n  local adverb_list_temp_6 = {}\n  local adverb_list_temp_7 = {}\n  local adverb_list_temp_8 = {}\n  local adverb_list_temp_9 = {}\n  local adverb_list_temp_10 = {}\n  local adverb_list_temp_11 = {}\n  local adverb_list_temp_12 = {}\n  local adverb_list_temp_13 = {}\n  local adverb_list_temp_14 = {}\n  local adverb_list_temp_15 = {}\n  local adverb_list_temp_16 = {}\n  local adverb_list_temp_17 = {}\n  local adverb_list_temp_18 = {}\n  local adverb_list_temp_19 = {}\n  local adverb_list_temp_20 = {}\n  local adverb_list_temp_21 = {}\n  local adverb_list_temp_22 = {}\n  local adverb_list_temp_23 = {}\n  local adverb_list_temp_24 = {}\n  local adverb_list_temp_25 = {}\n  local adverb_list_temp_26 = {}\n  local adverb_list_temp_27 = {}\n  local adverb_list_temp_28 = {}\n  local adverb_list_temp_29 = {}\n  local adverb_list_temp_30 = {}\n  local adverb_list_temp_31 = {}\n  local adverb_list_temp_32 = {}\n  local adverb_list_temp_33 = {}\n  local adverb_list_temp_34 = {}\n  local adverb_list_temp_35 = {}\n  local adverb_list_temp_36 = {}\n  local adverb_list_temp_37 = {}\n  local adverb_list_temp_38 = {}\n ",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, text:find(word))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      table.insert(adverbs, word)\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_positions_in_text = {}\n  local adverb_positions_in_text_with_adverb = {}\n  local adverb_positions_in_text_with_adverb_and_position = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position_and_text = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position_and_text_and_adverb = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position_and_text_and_adverb_and_position = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position_and_text_and_adverb_and_position_and_text = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position_and_text_and_adverb_and_position_and_text_and_adverb = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position_and_text_and_adverb_and_position_and_text_and_adverb_and_position = {}\n  local adverb_positions_in_text_with_adverb_and_position_and_text_and_adverb_and_position_and_",
    "  local adverb_positions = {}\n  local adverb_index = 1\n  for word in text:gmatch(\"%w+\") do\n    if adverbs[word] then\n      adverb_positions[adverb_index] = word\n      adverb_index = adverb_index + 1\n    end\n  end\n  return adverb_positions\nend",
    "    local adverbs = {}\n    for word, tag in lpeg.gmatch(text, \"<(.-)>%s*<(.-)>\") do\n        if tag == \"RB\" then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_index = 0\n    local adverb_position = 0\n    local adverb_found = false\n    local adverb_pattern = \"([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%s+)([^%s]*)(%",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_index = 0\n\tlocal adverb_count = 0\n\tlocal adverb_index_start = 0\n\tlocal adverb_index_end = 0\n\tlocal adverb_index_start_found = false\n\tlocal adverb_index_end_found = false\n\tlocal adverb_index_start_found_count = 0\n\tlocal adverb_index_end_found_count = 0\n\tlocal adverb_index_start_found_index = 0\n\tlocal adverb_index_end_found_index = 0\n\tlocal adverb_index_start_found_index_count = 0\n\tlocal adverb_index_end_found_index_count = 0\n\tlocal adverb_index_start_found_index_count_index = 0\n\tlocal adverb_index_end_found_index_count_index = 0\n\tlocal adverb_index_start_found_index_count_index_count = 0\n\tlocal adverb_index_end_found_index_count_index_count = 0\n\tlocal adverb_index_start_found_index_count_index_count_index = 0\n\tlocal adverb_index_end_found_index_count_index_count_index = 0\n\tlocal adverb_index_start_found_index_count_index_count_index_count = 0\n\tlocal adverb_index_end_found_index_count_index_count_index_count = 0\n\tlocal adverb_index_start_found_index_count_index_count_index_count_index = 0\n\tlocal adverb_index_end_found_index_count_index_count_index_count_index = 0\n\tlocal adverb_index_start_found_index_count_index_count_index_count_index_count = 0\n\tlocal adverb_index_end_found_index_count_index_count_index_count_index_count = 0\n\tlocal adverb_index_start_found_index_count_index_count_index_count_index_count_index",
    "  local adverbs = {}\n  for word, tag in tokenizer.tokenize(text) do\n    if tag == \"RB\" then\n      table.insert(adverbs, word)\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_position = 0\n\tlocal adverb_found_length = 0\n\tlocal adverb_found_text = \"\"\n\tlocal adverb_found_text_length = 0\n\tlocal adverb_found_text_position = 0\n\tlocal adverb_found_text_position_end = 0\n\tlocal adverb_found_text_position_start = 0\n\tlocal adverb_found_text_position_start_end = 0\n\tlocal adverb_found_text_position_start_start = 0\n\tlocal adverb_found_text_position_start_start_end = 0\n\tlocal adverb_found_text_position_start_start_start = 0\n\tlocal adverb_found_text_position_start_start_start_end = 0\n\tlocal adverb_found_text_position_start_start_start_start = 0\n\tlocal adverb_found_text_position_start_start_start_start_end = 0\n\tlocal adverb_found_text_position_start_start_start_start_start = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_end = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_start = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_start_end = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_start_start = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_start_start_end = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_start_start_start = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_start_start_start_end = 0\n\tlocal adverb_found_text_position_start_start_start_start_start_start_start_start_start = 0\n\tlocal ad",
    "  local adverb_positions = {}\n  local adverb_position = text:find(\"%w+ly\")\n  while adverb_position do\n    table.insert(adverb_positions, adverb_position)\n    adverb_position = text:find(\"%w+ly\", adverb_position + 1)\n  end\n  return adverb_positions\nend",
    "\tlocal adverbs = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs_list[word] then\n\t\t\tadverbs[#adverbs + 1] = word\n\t\tend\n\tend\n\treturn adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_dict[word] then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, text:find(word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_found = false\n  local adverb_start = 0\n  local adverb_end = 0\n  local adverb_length = 0\n  local adverb_index = 0\n  local adverb_count = 0\n  local adverb_text = \"\"\n  local adverb_text_length = 0\n  local adverb_text_index = 0\n  local adverb_text_found = false\n  local adverb_text_start = 0\n  local adverb_text_end = 0\n  local adverb_text_length = 0\n  local adverb_text_index = 0\n  local adverb_text_count = 0\n  local adverb_text_position = 0\n  local adverb_text_positions = {}\n  local adverb_text_position_count = 0\n  local adverb_text_position_index = 0\n  local adverb_text_position_start = 0\n  local adverb_text_position_end = 0\n  local adverb_text_position_length = 0\n  local adverb_text_position_text = \"\"\n  local adverb_text_position_text_length = 0\n  local adverb_text_position_text_index = 0\n  local adverb_text_position_text_found = false\n  local adverb_text_position_text_start = 0\n  local adverb_text_position_text_end = 0\n  local adverb_text_position_text_length = 0\n  local adverb_text_position_text_index = 0\n  local adverb_text_position_text_count = 0\n  local adverb_text_position_text_position = 0\n  local adverb_text_position_text_positions = {}\n  local adverb_text_position_text_position_count = 0\n  local adverb_text_position_text_position_index = 0\n  local adverb_text_position_text_position_start = 0\n  local adverb_text_position_text_position_end = 0\n  local adverb_text_position_text_position_length",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_found = false\n  local adverb_start_position = 0\n  local adverb_end_position = 0\n  local adverb = \"\"\n  local adverb_found_count = 0\n  local adverb_found_count_max = 0\n  local adverb_found_count_max_position = 0\n  local adverb_found_count_max_position_start = 0\n  local adverb_found_count_max_position_end = 0\n  local adverb_found_count_max_position_start_end = {}\n  local adverb_found_count_max_position_start_end_adverb = {}\n  local adverb_found_count_max_position_start_end_adverb_positions = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb_positions = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb_positions_adverb = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb_positions_adverb_positions = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb_positions_adverb_positions_adverb = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb_positions_adverb_positions_adverb_positions = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb_positions_adverb_positions_adverb_positions_adverb = {}\n  local adverb_found_count_max_position_start_end_adverb_positions_adverb_positions_adverb_positions_adverb_positions_adverb_positions = {}\n",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_found = false\n    local adverb_index = 0\n    local adverb_start_position = 0\n    local adverb_end_position = 0\n    local adverb_length = 0\n    local adverb_text = \"\"\n    local adverb_text_length = 0\n    local adverb_text_position = 0\n    local adverb_text_found = false\n    local adverb_text_index = 0\n    local adverb_text_start_position = 0\n    local adverb_text_end_position = 0\n    local adverb_text_length = 0\n    local adverb_text_text = \"\"\n    local adverb_text_text_length = 0\n    local adverb_text_text_position = 0\n    local adverb_text_text_found = false\n    local adverb_text_text_index = 0\n    local adverb_text_text_start_position = 0\n    local adverb_text_text_end_position = 0\n    local adverb_text_text_length = 0\n    local adverb_text_text_text = \"\"\n    local adverb_text_text_text_length = 0\n    local adverb_text_text_text_position = 0\n    local adverb_text_text_text_found = false\n    local adverb_text_text_text_index = 0\n    local adverb_text_text_text_start_position = 0\n    local adverb_text_text_text_end_position = 0\n    local adverb_text_text_text_length = 0\n    local adverb_text_text_text_text = \"\"\n    local adverb_text_text_text_text_length = 0\n    local adverb_text_text_text_text_position = 0\n    local adverb_text_text_text_text_found = false\n    local adverb_text_text_text_text_index = 0\n    local adverb_text_text_text_text_start_position = 0\n    local adverb_text_text_text_text_end_position",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%a+ly\") then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, text:find(word))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverb_positions = {}\n  local adverb_position = text:find(\"%w+ly\")\n  while adverb_position do\n    adverb_positions[#adverb_positions + 1] = adverb_position\n    adverb_position = text:find(\"%w+ly\", adverb_position + 1)\n  end\n  return adverb_positions\nend",
    "    local adverbs = {}\n    for word, pos in text:gmatch(\"(%w+)([%p]*)\") do\n        if pos == \"ly\" then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "    local adverb_position = {}\n    local adverb_pattern = \"([^%s]+)\"\n    for adverb in string.gmatch(text, adverb_pattern) do\n        if adverb_list[adverb] then\n            table.insert(adverb_position, adverb)\n        end\n    end\n    return adverb_position\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_dict[word] then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "    local adverbs = {}\n    for i, word in ipairs(text) do\n        if word.pos == 'ADV' then\n            table.insert(adverbs, {word = word.word, position = i})\n        end\n    end\n    return adverbs\nend",
    "  local adverb_positions = {}\n  local adverb_position = text:find(\"%w+ly\")\n  while adverb_position do\n    adverb_positions[#adverb_positions + 1] = adverb_position\n    adverb_position = text:find(\"%w+ly\", adverb_position + 1)\n  end\n  return adverb_positions\nend",
    "    local adverbs = {}\n    for word in string.gmatch(text, \"%w+\") do\n        if is_adverb(word) then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "    local adverb_position = {}\n    local adverb_list = {}\n    local adverb_index = 1\n    for word in string.gmatch(text, \"%S+\") do\n        if adverb[word] then\n            adverb_position[adverb_index] = word\n            adverb_index = adverb_index + 1\n        end\n    end\n    return adverb_position\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 1\n  local adverb_found = false\n  local adverb_pattern = \"([^%s]+)\"\n  local adverb_pattern_2 = \"([^%s]+)\"\n  local adverb_pattern_3 = \"([^%s]+)\"\n  local adverb_pattern_4 = \"([^%s]+)\"\n  local adverb_pattern_5 = \"([^%s]+)\"\n  local adverb_pattern_6 = \"([^%s]+)\"\n  local adverb_pattern_7 = \"([^%s]+)\"\n  local adverb_pattern_8 = \"([^%s]+)\"\n  local adverb_pattern_9 = \"([^%s]+)\"\n  local adverb_pattern_10 = \"([^%s]+)\"\n  local adverb_pattern_11 = \"([^%s]+)\"\n  local adverb_pattern_12 = \"([^%s]+)\"\n  local adverb_pattern_13 = \"([^%s]+)\"\n  local adverb_pattern_14 = \"([^%s]+)\"\n  local adverb_pattern_15 = \"([^%s]+)\"\n  local adverb_pattern_16 = \"([^%s]+)\"\n  local adverb_pattern_17 = \"([^%s]+)\"\n  local adverb_pattern_18 = \"([^%s]+)\"\n  local adverb_pattern_19 = \"([^%s]+)\"\n  local adverb_pattern_20 = \"([^%s]+)\"\n  local adverb_pattern_21 = \"([^%s]+)\"\n  local adverb_pattern_22 = \"([^%s]+)\"\n  local adverb_pattern_23 = \"([^%s]+)\"\n  local adverb_pattern_24 = \"([^%s]+)\"\n  local adverb_pattern_25 = \"([^%s]+)\"\n  local adverb_pattern_26 = \"([^%s]+)\"\n  local adverb_pattern_27 = \"([^%s]+)\"\n  local adverb_pattern_28 = \"([^%s]+)\"\n  local",
    "\tlocal adverbs = {}\n\tlocal position = 0\n\tfor word in text:gmatch(\"%w+\") do\n\t\tposition = position + 1\n\t\tif adverbs_list[word] then\n\t\t\tadverbs[word] = position\n\t\tend\n\tend\n\treturn adverbs\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_dict[word] then\n      table.insert(adverbs, word)\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%S+\") do\n    if word:match(\"%w+ly\") then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, text:find(word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverb_position = {}\n  local adverb_list = {}\n  local adverb_list_position = {}\n  local adverb_list_position_temp = {}\n  local adverb_list_position_temp_2 = {}\n  local adverb_list_position_temp_3 = {}\n  local adverb_list_position_temp_4 = {}\n  local adverb_list_position_temp_5 = {}\n  local adverb_list_position_temp_6 = {}\n  local adverb_list_position_temp_7 = {}\n  local adverb_list_position_temp_8 = {}\n  local adverb_list_position_temp_9 = {}\n  local adverb_list_position_temp_10 = {}\n  local adverb_list_position_temp_11 = {}\n  local adverb_list_position_temp_12 = {}\n  local adverb_list_position_temp_13 = {}\n  local adverb_list_position_temp_14 = {}\n  local adverb_list_position_temp_15 = {}\n  local adverb_list_position_temp_16 = {}\n  local adverb_list_position_temp_17 = {}\n  local adverb_list_position_temp_18 = {}\n  local adverb_list_position_temp_19 = {}\n  local adverb_list_position_temp_20 = {}\n  local adverb_list_position_temp_21 = {}\n  local adverb_list_position_temp_22 = {}\n  local adverb_list_position_temp_23 = {}\n  local adverb_list_position_temp_24 = {}\n  local adverb_list_position_temp_25 = {}\n  local adverb_list_position_temp_26 = {}\n  local adverb_list_position_temp_27 = {}\n  local adverb_list_position_temp_28 = {}\n  local adverb_list_position_temp_29 = {}\n  local adverb_list_position_temp_30 = {}\n  local adverb_list_position_temp_31 = {}\n  local adverb_list_position_temp_32 = {}\n  local adverb",
    "    local adverb_position = {}\n    local adverb_list = find_adverb(text)\n    for i = 1, #adverb_list do\n        local adverb = adverb_list[i]\n        local start_position, end_position = string.find(text, adverb)\n        adverb_position[adverb] = {start_position, end_position}\n    end\n    return adverb_position\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%S+\") do\n        if adverb[word] then\n            adverbs[#adverbs + 1] = word\n        end\n    end\n    return adverbs\nend",
    "    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_found = false\n    local adverb_found_count = 0\n    local adverb_found_position = 0\n    local adverb_found_text = \"\"\n    local adverb_found_text_length = 0\n    local adverb_found_text_length_count = 0\n    local adverb_found_text_length_count_max = 0\n    local adverb_found_text_length_count_max_position = 0\n    local adverb_found_text_length_count_max_text = \"\"\n    local adverb_found_text_length_count_max_text_length = 0\n    local adverb_found_text_length_count_max_text_length_count = 0\n    local adverb_found_text_length_count_max_text_length_count_max = 0\n    local adverb_found_text_length_count_max_text_length_count_max_position = 0\n    local adverb_found_text_length_count_max_text_length_count_max_text = \"\"\n    local adverb_found_text_length_count_max_text_length_count_max_text_length = 0\n    local adverb_found_text_length_count_max_text_length_count_max_text_length_count = 0\n    local adverb_found_text_length_count_max_text_length_count_max_text_length_count_max = 0\n    local adverb_found_text_length_count_max_text_length_count_max_text_length_count_max_position = 0\n    local adverb_found_text_length_count_max_text_length_count_max_text_length_count_max_text = \"\"\n    local adverb_found_text_length_count_max_text_length_count_max_text_length_count_max_text_length = 0\n    local adverb_found_text_length_count_max_text_length_count_max_text_length_count_max_text_length_count = 0\n    local adverb_",
    "  local adverbs = {}\n  local adverbs_pos = {}\n  for word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n    if tag == \"RB\" then\n      adverbs[#adverbs + 1] = word\n      adverbs_pos[#adverbs_pos + 1] = word:len()\n    end\n  end\n  return adverbs, adverbs_pos\nend",
    "  local adverbs = {}\n  local adverb_position = {}\n  local adverb_positions = {}\n  local adverb_position_count = 0\n  local adverb_position_counts = {}\n  local adverb_position_count_max = 0\n  local adverb_position_count_maxs = {}\n  local adverb_position_count_max_index = 0\n  local adverb_position_count_max_indexs = {}\n  local adverb_position_count_max_index_count = 0\n  local adverb_position_count_max_index_counts = {}\n  local adverb_position_count_max_index_count_max = 0\n  local adverb_position_count_max_index_count_maxs = {}\n  local adverb_position_count_max_index_count_max_index = 0\n  local adverb_position_count_max_index_count_max_indexs = {}\n  local adverb_position_count_max_index_count_max_index_count = 0\n  local adverb_position_count_max_index_count_max_index_counts = {}\n  local adverb_position_count_max_index_count_max_index_count_max = 0\n  local adverb_position_count_max_index_count_max_index_count_maxs = {}\n  local adverb_position_count_max_index_count_max_index_count_max_index = 0\n  local adverb_position_count_max_index_count_max_index_count_max_indexs = {}\n  local adverb_position_count_max_index_count_max_index_count_max_index_count = 0\n  local adverb_position_count_max_index_count_max_index_count_max_index_counts = {}\n  local adverb_position_count_max_index_count_max_index_count_max_index_count_max = 0\n  local adverb_position_count_max_index_count_max_index_count_max_index_count_maxs = {}\n  local adverb_position_count_max_index",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs_list[word] then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, text:find(word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    for word, pos in text:gmatch(\"(%a+)([%p]?)\") do\n        if pos == \"!\" then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_list[word] then\n            adverbs[#adverbs + 1] = word\n            adverb_positions[#adverb_positions + 1] = text:find(word)\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in string.gmatch(text, \"%S+\") do\n    if word_is_adverb(word) then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, string.find(text, word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_position_end = 0\n  local adverb_found = false\n  local adverb_found_end = false\n  local adverb_found_end_position = 0\n  local adverb_found_end_position_end = 0\n  local adverb_found_end_position_end_end = 0\n  local adverb_found_end_position_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end_end_end_end_end_end_end = 0\n  local adverb_found_end_position_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end = 0\n  local adverb_found",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%S+\") do\n\t\tif word:match(\"%w+ly\") then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, text:find(word))\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"[^%s]+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_dict[word] then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, text:find(word))\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_list[word] then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs+1] = word\n    end\n  end\n  return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_pos = 0\n  local adverb_pos_end = 0\n  local adverb_pos_start = 0\n  local adverb_pos_start_prev = 0\n  local adverb_pos_end_prev = 0\n  local adverb_pos_prev = 0\n  local adverb_pos_prev_prev = 0\n  local adverb_pos_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0\n  local adverb_pos_prev_prev_prev_prev_prev_prev_prev_",
    "  local adverb_positions = {}\n  for word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n    if tag == \"RB\" then\n      table.insert(adverb_positions, word)\n    end\n  end\n  return adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor word in text:gmatch(\"%S+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif word:match(\"%w+ly\") then\n\t\t\ttable.insert(adverbs, word)\n\t\t\ttable.insert(adverb_positions, adverb_position)\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_found = false\n  local adverb_start = 0\n  local adverb_end = 0\n  local adverb_length = 0\n  local adverb_index = 0\n  local adverb_count = 0\n  local adverb_text = \"\"\n  local adverb_text_length = 0\n  local adverb_text_index = 0\n  local adverb_text_found = false\n  local adverb_text_start = 0\n  local adverb_text_end = 0\n  local adverb_text_length = 0\n  local adverb_text_count = 0\n  local adverb_text_position = 0\n  local adverb_text_positions = {}\n  local adverb_text_position_index = 0\n  local adverb_text_position_count = 0\n  local adverb_text_position_found = false\n  local adverb_text_position_start = 0\n  local adverb_text_position_end = 0\n  local adverb_text_position_length = 0\n  local adverb_text_position_text = \"\"\n  local adverb_text_position_text_length = 0\n  local adverb_text_position_text_index = 0\n  local adverb_text_position_text_found = false\n  local adverb_text_position_text_start = 0\n  local adverb_text_position_text_end = 0\n  local adverb_text_position_text_length = 0\n  local adverb_text_position_text_count = 0\n  local adverb_text_position_text_position = 0\n  local adverb_text_position_text_positions = {}\n  local adverb_text_position_text_position_index = 0\n  local adverb_text_position_text_position_count = 0\n  local adverb_text_position_text_position_found = false\n  local adverb_text_position_text_position_start = 0\n  local adverb_text_position_text_position_end = 0\n  local adverb_text_position_text",
    "  local adverbs = {}\n  for word in string.gmatch(text, \"%w+\") do\n    if adverbs_dict[word] then\n      table.insert(adverbs, word)\n    end\n  end\n  return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_found = false\n    local adverb_found_at = 0",
    "  local adverbs = {}\n  local adverb_positions = {}\n  local adverb_position = 0\n  local adverb_position_end = 0\n  local adverb_found = false\n  local adverb_found_end = false\n  local adverb_found_end_position = 0\n  local adverb_found_position = 0\n  local adverb_found_position_end = 0\n  local adverb_found_position_start = 0\n  local adverb_found_start = false\n  local adverb_found_start_position = 0\n  local adverb_found_start_position_end = 0\n  local adverb_found_start_position_start = 0\n  local adverb_found_start_start = false\n  local adverb_found_start_start_position = 0\n  local adverb_found_start_start_position_end = 0\n  local adverb_found_start_start_position_start = 0\n  local adverb_found_start_start_start = false\n  local adverb_found_start_start_start_position = 0\n  local adverb_found_start_start_start_position_end = 0\n  local adverb_found_start_start_start_position_start = 0\n  local adverb_found_start_start_start_start = false\n  local adverb_found_start_start_start_start_position = 0\n  local adverb_found_start_start_start_start_position_end = 0\n  local adverb_found_start_start_start_start_position_start = 0\n  local adverb_found_start_start_start_start_start = false\n  local adverb_found_start_start_start_start_start_position = 0\n  local adverb_found_start_start_start_start_start_position_end = 0\n  local adverb_found_start_start_start_start_start_position_start = 0\n  local adverb_found_start_start_start_start_start_start = false\n  local adverb_found_start_start_start_start_start_start_position = 0\n  local adverb_found_start_start",
    "\tlocal adverbs = {}\n\tlocal adverb_position = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position_count = 0\n\tlocal adverb_position_counts = {}\n\tlocal adverb_position_count_max = 0\n\tlocal adverb_position_count_maxs = {}\n\tlocal adverb_position_count_max_index = 0\n\tlocal adverb_position_count_max_indexs = {}\n\tlocal adverb_position_count_max_index_value = 0\n\tlocal adverb_position_count_max_index_values = {}\n\tlocal adverb_position_count_max_index_value_position = 0\n\tlocal adverb_position_count_max_index_value_positions = {}\n\tlocal adverb_position_count_max_index_value_position_count = 0\n\tlocal adverb_position_count_max_index_value_position_counts = {}\n\tlocal adverb_position_count_max_index_value_position_count_max = 0\n\tlocal adverb_position_count_max_index_value_position_count_maxs = {}\n\tlocal adverb_position_count_max_index_value_position_count_max_index = 0\n\tlocal adverb_position_count_max_index_value_position_count_max_indexs = {}\n\tlocal adverb_position_count_max_index_value_position_count_max_index_value = 0\n\tlocal adverb_position_count_max_index_value_position_count_max_index_values = {}\n\tlocal adverb_position_count_max_index_value_position_count_max_index_value_position = 0\n\tlocal adverb_position_count_max_index_value_position_count_max_index_value_positions = {}\n\tlocal adverb_position_count_max_index_value_position_count_max_index_value_position_count = 0\n\tlocal adverb_position_count_max_index_value_position_count_max_index_value_position_counts = {}\n\tlocal adverb_position_count_max_index_value",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, text:find(word))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_found_position = 0\n\tlocal adverb_found_length = 0\n\tlocal adverb_found_text = \"\"\n\tlocal adverb_found_type = \"\"\n\tlocal adverb_found_type_number = 0\n\tlocal adverb_found_type_text = \"\"\n\tlocal adverb_found_type_text_number = 0\n\tlocal adverb_found_type_text_number_text = \"\"\n\tlocal adverb_found_type_text_number_text_number = 0\n\tlocal adverb_found_type_text_number_text_number_text = \"\"\n\tlocal adverb_found_type_text_number_text_number_text_number = 0\n\tlocal adverb_found_type_text_number_text_number_text_number_text = \"\"\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number = 0\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number_text = \"\"\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number_text_number = 0\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number_text_number_text = \"\"\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number_text_number_text_number = 0\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number_text_number_text_number_text = \"\"\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number_text_number_text_number_text_number = 0\n\tlocal adverb_found_type_text_number_text_number_text_number_text_number_text_number_text_number_text_number_text = \"\"\n\tlocal adverb_found_type_text_number_text",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n    if tag == \"RB\" then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, word:len())\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in string.gmatch(text, \"%w+\") do\n    if adverbs_list[word] then\n      adverbs[#adverbs + 1] = word\n      adverb_positions[#adverb_positions + 1] = string.find(text, word)\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverb_list[word] then\n      table.insert(adverbs, word)\n    end\n  end\n  return adverbs\nend",
    "    local adverb_position = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverb_position, word)\n        end\n    end\n    return adverb_position\nend",
    "    local adverb_position = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverb_position, word)\n        end\n    end\n    return adverb_position\nend",
    "  local adverb_position = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverbs[word] then\n      adverb_position[#adverb_position + 1] = {word, text:find(word)}\n    end\n  end\n  return adverb_position\nend",
    "\tlocal adverb_positions = {}\n\tfor word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n\t\tif tag == \"RB\" then\n\t\t\ttable.insert(adverb_positions, word)\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_position = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position_count = 0\n\tlocal adverb_position_counts = {}\n\tlocal adverb_position_counts_count = 0\n\tlocal adverb_position_counts_counts = {}\n\tlocal adverb_position_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts = {}\n\tlocal adverb_position_counts_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts_counts = {}\n\tlocal adverb_position_counts_counts_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts_counts_counts = {}\n\tlocal adverb_position_counts_counts_counts_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts = {}\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts_counts = {}\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts_counts_counts = {}\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts_counts_counts_counts = {}\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts_counts_counts_counts_count = 0\n\tlocal adverb_position_counts_counts_counts_counts_counts_counts",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor word in text:gmatch(\"%w+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif adverb_list[word] then\n\t\t\tadverbs[#adverbs+1] = word\n\t\t\tadverb_positions[#adverb_positions+1] = adverb_position\n\t\tend\n\tend\n\treturn adverbs, adverb_positions\nend",
    "  local adverb_list = {}\n  local adverb_pos = {}\n  for word, pos in text:gmatch(\"(%w+)%s(%w+)\") do\n    if pos == \"RB\" then\n      table.insert(adverb_list, word)\n      table.insert(adverb_pos, pos)\n    end\n  end\n  return adverb_list, adverb_pos\nend",
    "    local adverb_positions = {}\n    local adverb_position = text:find(\"%w+ly\")\n    while adverb_position do\n        table.insert(adverb_positions, adverb_position)\n        adverb_position = text:find(\"%w+ly\", adverb_position + 1)\n    end\n    return adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      table.insert(adverbs, {word, text:find(word)})\n    end\n  end\n  return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%S+\") do\n        if adverbs[word] then\n            adverb_positions[word] = adverb_positions[word] or {}\n            table.insert(adverb_positions[word], text:find(word))\n        else\n            adverbs[word] = is_adverb(word)\n        end\n    end\n    for adverb, positions in pairs(adverb_positions) do\n        if #positions > 1 then\n            return adverb, positions\n        end\n    end\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tfor word in text:gmatch(\"%w+\") do\n\t\tif adverbs[word] then\n\t\t\tadverbs[word] = adverbs[word] + 1\n\t\telse\n\t\t\tadverbs[word] = 1\n\t\tend\n\tend\n\tfor word, count in pairs(adverbs) do\n\t\tif count == 1 then\n\t\t\tlocal position = text:find(word)\n\t\t\ttable.insert(adverb_positions, position)\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "\tlocal adverb_position = {}\n\tlocal adverb_list = {}\n\tlocal adverb_count = 0\n\tfor word in string.gmatch(text, \"%S+\") do\n\t\tlocal word_type = get_word_type(word)\n\t\tif word_type == \"adverb\" then\n\t\t\tadverb_count = adverb_count + 1\n\t\t\tadverb_list[adverb_count] = word\n\t\t\tadverb_position[adverb_count] = string.find(text, word)\n\t\tend\n\tend\n\treturn adverb_list, adverb_position\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_pattern = \"([^%s]+)\"\n    local adverb_pattern_pos = 1\n    for adverb in string.gmatch(text, adverb_pattern) do\n        adverb_position = string.find(text, adverb, adverb_pattern_pos)\n        adverb_pattern_pos = adverb_position + 1\n        table.insert(adverbs, adverb)\n        table.insert(adverb_positions, adverb_position)\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%w+\") do\n    if adverbs_list[word] then\n      table.insert(adverbs, {word, text:find(word)})\n    end\n  end\n  return adverbs\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for i = 1, #text do\n        if text[i].pos == 'ADV' then\n            table.insert(adverbs, text[i].word)\n            table.insert(adverb_positions, i)\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "  local adverbs = {}\n  for word in text:gmatch(\"%S+\") do\n    if adverb_list[word] then\n      adverbs[#adverbs + 1] = word\n    end\n  end\n  return adverbs\nend",
    "\tlocal adverb_position = {}\n\tfor word in string.gmatch(text, \"%w+\") do\n\t\tif adverbs[word] then\n\t\t\tadverb_position[#adverb_position + 1] = word\n\t\tend\n\tend\n\treturn adverb_position\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word in text:gmatch(\"%S+\") do\n        if word:match(\"%w+ly\") then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, text:find(word))\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tlocal adverb_found = false\n\tlocal adverb_start = 0\n\tlocal adverb_end = 0\n\tlocal adverb_length = 0\n\tlocal adverb_text = \"\"\n\tlocal adverb_text_length = 0\n\tlocal adverb_text_start = 0\n\tlocal adverb_text_end = 0\n\tlocal adverb_text_found = false\n\tlocal adverb_text_position = 0\n\tlocal adverb_text_positions = {}\n\tlocal adverb_text_position_found = false\n\tlocal adverb_text_position_start = 0\n\tlocal adverb_text_position_end = 0\n\tlocal adverb_text_position_length = 0\n\tlocal adverb_text_position_text = \"\"\n\tlocal adverb_text_position_text_length = 0\n\tlocal adverb_text_position_text_start = 0\n\tlocal adverb_text_position_text_end = 0\n\tlocal adverb_text_position_text_found = false\n\tlocal adverb_text_position_text_position = 0\n\tlocal adverb_text_position_text_positions = {}\n\tlocal adverb_text_position_text_position_found = false\n\tlocal adverb_text_position_text_position_start = 0\n\tlocal adverb_text_position_text_position_end = 0\n\tlocal adverb_text_position_text_position_length = 0\n\tlocal adverb_text_position_text_position_text = \"\"\n\tlocal adverb_text_position_text_position_text_length = 0\n\tlocal adverb_text_position_text_position_text_start = 0\n\tlocal adverb_text_position_text_position_text_end = 0\n\tlocal adverb_text_position_text_position_text_found = false\n\tlocal adverb_text_position_text_position_text_position = 0\n\tlocal adverb_text_position_text_position_text_positions = {}\n\tlocal adverb_text_position_text_position_text_position_",
    "\tlocal adverb_positions = {}\n\tfor word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n\t\tif tag == \"RB\" then\n\t\t\ttable.insert(adverb_positions, word)\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    for word, pos in text:gmatch(\"(%w+)/(%w+)\") do\n        if pos == \"RB\" then\n            table.insert(adverbs, word)\n            table.insert(adverb_positions, pos)\n        end\n    end\n    return adverbs, adverb_positions\nend",
    "    local adverbs = {}\n    for word, tag in text:gmatch(\"(%S+)/([^%s]+)\") do\n        if tag == \"RB\" then\n            table.insert(adverbs, word)\n        end\n    end\n    return adverbs\nend",
    "  local adverbs = {}\n  local adverb_positions = {}\n  for word in string.gmatch(text, \"%w+\") do\n    local word_positions = {}\n    for position in string.gmatch(word, \"[^_]+\") do\n      table.insert(word_positions, tonumber(position))\n    end\n    if word_positions[2] == \"RB\" then\n      table.insert(adverbs, word)\n      table.insert(adverb_positions, word_positions)\n    end\n  end\n  return adverbs, adverb_positions\nend",
    "\tlocal adverbs = {}\n\tlocal adverb_positions = {}\n\tlocal adverb_position = 0\n\tfor word in text:gmatch(\"%w+\") do\n\t\tadverb_position = adverb_position + 1\n\t\tif adverbs[word] then\n\t\t\ttable.insert(adverb_positions, adverb_position)\n\t\tend\n\tend\n\treturn adverb_positions\nend",
    "    local adverbs = {}\n    local adverb_positions = {}\n    local adverb_position = 0\n    local adverb_found = false\n    local adverb_start = 0\n    local adverb_end = 0\n    local adverb_length = 0\n    local adverb_index = 0\n    local adverb_index_found = false\n    local adverb_index_start = 0\n    local adverb_index_end = 0\n    local adverb_index_length = 0\n    local adverb_index_position = 0\n    local adverb_index_position_found = false\n    local adverb_index_position_start = 0\n    local adverb_index_position_end = 0\n    local adverb_index_position_length = 0\n    local adverb_index_position_value = 0\n    local adverb_index_position_value_found = false\n    local adverb_index_position_value_start = 0\n    local adverb_index_position_value_end = 0\n    local adverb_index_position_value_length = 0\n    local adverb_index_position_value_value = 0\n    local adverb_index_position_value_value_found = false\n    local adverb_index_position_value_value_start = 0\n    local adverb_index_position_value_value_end = 0\n    local adverb_index_position_value_value_length = 0\n    local adverb_index_position_value_value_value = 0\n    local adverb_index_position_value_value_value_found = false\n    local adverb_index_position_value_value_value_start = 0\n    local adverb_index_position_value_value_value_end = 0\n    local adverb_index_position_value_value_value_length = 0\n    local adverb_index_position_value_value_value_value = 0\n    local adverb_index_position_value_value_value_value_found = false\n    local adverb_index_position_value_value_value_value_start = 0\n    local adverb_index_position_value_value_value_value_end = 0\n    local",
    "    local adverbs = {}\n    for word in text:gmatch(\"%w+\") do\n        if adverbs_dict[word] then\n            adverbs[#adverbs+1] = word\n        end\n    end\n    return adverbs\nend"
  ]
}
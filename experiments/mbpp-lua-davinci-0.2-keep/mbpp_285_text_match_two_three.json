{
  "name": "mbpp_285_text_match_two_three",
  "language": "lua",
  "prompt": "-- Write a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.\nlocal function text_match_two_three(text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_285_text_match_two_three.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_two_three\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = 'a%s*b%s*b%s*b?'\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = \"ab{2,3}\"\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = '^a%d*b%d*b%d*b?$'\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab*b*\")\nend",
    "    return text:match('a%d*b%d*b%d*b')\nend",
    "  return string.match(text, \"ab*b*\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"^a%d+b%d+b%d+b$\")\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab{2,3}\")\nend",
    "    return text:match(\"^a%d?%d?b%d?%d?b%d?%d?b$\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"a%d*b%d*b%d*b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab{2,3}\")\nend",
    "  return string.match(text, \"a%d?%db%d?%db\")\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab*b*\")\nend",
    "    return string.match(text, \"a%d?%db%d?%db\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"^ab?b?b?$\")\nend",
    "    local pattern = '^a%d*b%d*b%d*b?$'\n    return string.match(text, pattern)\nend",
    "  return text:match('a%d?%db%d?%db')\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"a%d%d%d?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    local match = string.match(text, \"ab{2,3}\")\n    if match then\n        print(\"Matched: \" .. match)\n    else\n        print(\"No match\")\n    end\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"a%d*b%d*b%d*b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b?\")\nend",
    "  return string.match(text, \"ab*b*\")\nend",
    "    local pattern = \"ab{2,3}\"\n    local match = string.match(text, pattern)\n    if match == nil then\n        return false\n    else\n        return true\n    end\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local match = string.match(text, \"ab?b?b\")\n    if match then\n        return true\n    else\n        return false\n    end\nend",
    "  return text:match(\"a%d?%d?b%d?%d?b%d?%d?b\") ~= nil\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = 'a%d*b%d*b%d*'\n    return string.match(text, pattern)\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, 'ab?b?b')\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "  local pattern = \"ab{2,3}\"\n  return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local match = text:match('a%d%d%d')\n    return match ~= nil\nend",
    "    return text:match('a%d*b%d*b%d*b')\nend",
    "    local pattern = \"ab{2,3}\"\n    return text:match(pattern)\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return text:match('a%d*b%d*b%d*b')\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    local pattern = \"a%d*b%d*b%d*\"\n    return string.match(text, pattern)\nend",
    "    local pattern = 'a%d*b%d*b%d*b'\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab{2,3}\")\nend",
    "    local pattern = \"a%d*b%d*b%d*b\"\n    return string.match(text, pattern)\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab+b+\")\nend",
    "    local pattern = \"a%d*b%d*b%d*\"\n    return string.match(text, pattern)\nend",
    "\treturn string.match(text, \"ab?b?b?\")\nend",
    "    local match = string.match(text, 'ab?b?b?')\n    if match then\n        return true\n    end\n    return false\nend",
    "  return string.match(text, \"ab?b?b?\")\nend",
    "    return text:match('ab?b?b')\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab{2,3}\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = \"ab{2,3}\"\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b?\")\nend",
    "    return string.match(text, \"ab?b?b?\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local match = string.match(text, \"ab*b*\")\n    if match then\n        return true\n    else\n        return false\n    end\nend",
    "  return string.match(text, 'a%d?%db')\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local match = string.match(text, \"ab{2,3}\")\n    return match\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = '^a%d%d%d*b%d%d%d*b%d%d%d*$'\n    return text:match(pattern)\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab{2,3}\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b?\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"a%d*b%d*b%d*b\")\nend",
    "  local match_two_three = text:match(\"ab{2,3}\")\n  if match_two_three then\n    print(\"The string contains the 'a' character followed by two or three 'b' characters.\")\n  else\n    print(\"The string does not contain the 'a' character followed by two or three 'b' characters.\")\n  end\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return text:match(\"ab{2,3}\")\nend",
    "    return string.match(text, \"ab*b*\")\nend",
    "\treturn string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, 'ab?b?b')\nend",
    "  return text:match(\"a%d?%db%d?%db\")\nend",
    "  local pattern = 'a%s*b%s*b%s*b?'\n  return string.match(text, pattern)\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"^a%d*b%d*b%d*b?$\")\nend",
    "  return string.match(text, \"ab*b*\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab*b*\")\nend",
    "    return string.match(text, \"ab{2,3}\")\nend",
    "    return string.match(text, 'ab?b?b')\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = '^a%d%d%d?b$'\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab*b*\")\nend",
    "    return string.match(text, \"a%d*b%d*b%d*b\")\nend",
    "    local pattern = 'a%s*b%s*b%s*b?'\n    return text:match(pattern)\nend",
    "    local pattern = 'ab{2,3}'\n    return text:match(pattern)\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "  local pattern = \"a%d*b%d*b%d*\"\n  return string.match(text, pattern)\nend",
    "    local pattern = \"a%d*b%d*b%d*\"\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"ab{2,3}\")\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return text:match('a%d?%db%d?%db')\nend",
    "    local match = string.match(text, \"ab{2,3}\")\n    if match then\n        return true\n    else\n        return false\n    end\nend",
    "  return text:match('a%d?%db%d?%db')\nend",
    "    return text:match(\"ab*b\")\nend",
    "  return string.match(text, \"ab?b?b?\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"a%d*b%d*b%d*b\")\nend",
    "  return text:match('a%d?%db%d?%db')\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, 'a%d?%db%d?%db')\nend",
    "    return text:match(\"ab{2,3}\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "\treturn text:match(\"ab?b?b\")\nend",
    "    -- TODO: Implement this function\nend",
    "    local match = string.match(text, \"a%d?%db%d?%db\")\n    if match then\n        return true\n    else\n        return false\n    end\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return text:match('ab*b*')\nend",
    "    return string.match(text, \"a%d*b%d*b%d*\")\nend",
    "    local pattern = 'a%d%d%d%d%d%dbbb'\n    return string.match(text, pattern)\nend",
    "    local pattern = 'a%s*b%s*b%s*b?'\n    return string.match(text, pattern)\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b?\")\nend",
    "  return string.match(text, \"ab*b*\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab{2,3}\")\nend",
    "    return string.match(text, 'ab?b?b')\nend",
    "    return text:match(\"ab?b?b\")\nend",
    "    return string.match(text, \"a%d*b%d*b%d*\")\nend",
    "    return string.match(text, \"ab?b?b?\")\nend",
    "    return string.match(text, \"ab{2,3}\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b?\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return text:match(\"ab?b?b\")\nend",
    "    return text:match(\"ab?b?b?\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"a%d%d%d?b\")\nend",
    "    return text:match(\"ab*b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local pattern = 'a%d*b%d*b%d*'\n    return string.match(text, pattern)\nend",
    "    local pattern = '^a%d%d%d?b$'\n    return string.match(text, pattern)\nend",
    "    return string.match(text, 'ab?b?b')\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    local match = string.match(text, \"a%d*b%d*b%d*b\")\n    return match\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend",
    "  return string.match(text, \"ab?b?b\")\nend",
    "    return string.match(text, \"ab?b?b?\")\nend",
    "    return string.match(text, \"ab?b?b\")\nend"
  ]
}
{
  "name": "mbpp_129_magic_square_test",
  "language": "lua",
  "prompt": "-- Write a function to calculate whether the matrix is a magic square.\nlocal function magic_square_test(my_matrix)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_129_magic_square_test.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = magic_square_test\n    lu.assertEquals(candidate({{7, 12, 1, 14}, {2, 13, 8, 11}, {16, 3, 10, 5}, {9, 6, 15, 4}}), true)\n    lu.assertEquals(candidate({{2, 7, 6}, {9, 5, 1}, {4, 3, 8}}), true)\n    lu.assertEquals(candidate({{2, 7, 6}, {9, 5, 1}, {4, 3, 7}}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local sum = 0\n    local sum_test = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        sum_test = 0\n        for j = 1, n do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_test = 0\n        for j = 1, n do\n            sum_test = sum_test + my_matrix[j][i]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test2 = 0\n\tlocal sum_test3 = 0\n\tlocal sum_test4 = 0\n\tlocal sum_test5 = 0\n\tlocal sum_test6 = 0\n\tlocal sum_test7 = 0\n\tlocal sum_test8 = 0\n\tlocal sum_test9 = 0\n\tlocal sum_test10 = 0\n\tlocal sum_test11 = 0\n\tlocal sum_test12 = 0\n\tlocal sum_test13 = 0\n\tlocal sum_test14 = 0\n\tlocal sum_test15 = 0\n\tlocal sum_test16 = 0\n\tlocal sum_test17 = 0\n\tlocal sum_test18 = 0\n\tlocal sum_test19 = 0\n\tlocal sum_test20 = 0\n\tlocal sum_test21 = 0\n\tlocal sum_test22 = 0\n\tlocal sum_test23 = 0\n\tlocal sum_test24 = 0\n\tlocal sum_test25 = 0\n\tlocal sum_test26 = 0\n\tlocal sum_test27 = 0\n\tlocal sum_test28 = 0\n\tlocal sum_test29 = 0\n\tlocal sum_test30 = 0\n\tlocal sum_test31 = 0\n\tlocal sum_test32 = 0\n\tlocal sum_test33 = 0\n\tlocal sum_test34 = 0\n\tlocal sum_test35 = 0\n\tlocal sum_test36 = 0\n\tlocal sum_test37 = 0\n\tlocal sum_test38 = 0\n\tlocal sum_test39 = 0\n\tlocal sum_test40 = 0\n\tlocal sum_test41 = 0\n\tlocal sum_test42 = 0\n\tlocal sum_test43 = 0\n\tlocal sum_test44 = 0\n\tlocal sum_test45 = 0\n\tlocal sum_test46 = 0\n\tlocal sum_test47 = 0\n\tlocal sum_test48 = 0\n\tlocal sum_test49 = 0\n\tlocal sum_test50 = 0\n\tlocal sum_test51 = 0\n\tlocal sum_test52 = 0\n\tlocal sum_test53 = 0\n\tlocal sum_test54 = 0\n\tlocal sum_test55 = 0\n\tlocal sum_test56 = 0\n\tlocal",
    "    local sum = 0\n    local magic = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic = false\n            break\n        end\n    end\n    local diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        magic = false\n    end\n    diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][#my_matrix - i + 1]\n    end\n    if diag_sum ~= sum then\n        magic = false\n    end\n    return magic\nend",
    "    -- Calculate the sum of each row.\n    local sum_row = {}\n    for i = 1, #my_matrix do\n        sum_row[i] = 0\n        for j = 1, #my_matrix[i] do\n            sum_row[i] = sum_row[i] + my_matrix[i][j]\n        end\n    end\n    -- Calculate the sum of each column.\n    local sum_col = {}\n    for j = 1, #my_matrix[1] do\n        sum_col[j] = 0\n        for i = 1, #my_matrix do\n            sum_col[j] = sum_col[j] + my_matrix[i][j]\n        end\n    end\n    -- Calculate the sum of the main diagonal.\n    local sum_main_diag = 0\n    for i = 1, #my_matrix do\n        sum_main_diag = sum_main_diag + my_matrix[i][i]\n    end\n    -- Calculate the sum of the secondary diagonal.\n    local sum_sec_diag = 0\n    for i = 1, #my_matrix do\n        sum_sec_diag = sum_sec_diag + my_matrix[i][#my_matrix - i + 1]\n    end\n    -- Check if all the sums are equal.\n    local sum = sum_row[1]\n    for i = 2, #sum_row do\n        if sum_row[i] ~= sum then\n            return false\n        end\n    end\n    for j = 1, #sum_col do\n        if sum_col[j] ~= sum then\n            return false\n        end\n    end\n    if sum_main_diag ~= sum or sum_sec_diag ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local column_sum = 0\n    local diagonal_sum = 0\n    local reverse_diagonal_sum = 0\n    local i = 1\n    local j = 1\n    local k = 1\n    local l = 1\n    local m = 1\n    local n = 1\n    local o = 1\n    local p = 1\n    local q = 1\n    local r = 1\n    local s = 1\n    local t = 1\n    local u = 1\n    local v = 1\n    local w = 1\n    local x = 1\n    local y = 1\n    local z = 1\n    local aa = 1\n    local bb = 1\n    local cc = 1\n    local dd = 1\n    local ee = 1\n    local ff = 1\n    local gg = 1\n    local hh = 1\n    local ii = 1\n    local jj = 1\n    local kk = 1\n    local ll = 1\n    local mm = 1\n    local nn = 1\n    local oo = 1\n    local pp = 1\n    local qq = 1\n    local rr = 1\n    local ss = 1\n    local tt = 1\n    local uu = 1\n    local vv = 1\n    local ww = 1\n    local xx = 1\n    local yy = 1\n    local zz = 1\n    local aaa = 1\n    local bbb = 1\n    local ccc = 1\n    local ddd = 1\n    local eee = 1\n    local fff = 1\n    local ggg = 1\n    local hhh = 1\n    local iii = 1\n    local jjj = 1\n    local kkk = 1\n    local lll = 1\n    local mmm = 1\n    local nnn = 1\n    local ooo = 1\n    local ppp = 1\n    local qqq = 1\n    local rrr = 1\n    local sss = 1\n    local ttt = 1\n    local uuu = 1\n    local vvv = 1\n    local www = 1\n    local xxx = 1\n    local yyy = 1\n    local zzz = 1\n   ",
    "    local sum = 0\n    local sum_test = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[1][i]\n    end\n    for i = 1, n do\n        sum_test = 0\n        for j = 1, n do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_test = 0\n        for j = 1, n do\n            sum_test = sum_test + my_matrix[j][i]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    sum_test = 0\n    for i = 1, n do\n        sum_test = sum_test + my_matrix[i][i]\n    end\n    if sum_test ~= sum then\n        return false\n    end\n    sum_test = 0\n    for i = 1, n do\n        sum_test = sum_test + my_matrix[i][n - i + 1]\n    end\n    if sum_test ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag1 ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    local sum = 0\n    local sum_diag = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_row_2 = 0\n    local sum_col_2 = 0\n    local sum_row_3 = 0\n    local sum_col_3 = 0\n    local sum_row_4 = 0\n    local sum_col_4 = 0\n    local sum_row_5 = 0\n    local sum_col_5 = 0\n    local sum_row_6 = 0\n    local sum_col_6 = 0\n    local sum_row_7 = 0\n    local sum_col_7 = 0\n    local sum_row_8 = 0\n    local sum_col_8 = 0\n    local sum_row_9 = 0\n    local sum_col_9 = 0\n    local sum_row_10 = 0\n    local sum_col_10 = 0\n    local sum_row_11 = 0\n    local sum_col_11 = 0\n    local sum_row_12 = 0\n    local sum_col_12 = 0\n    local sum_row_13 = 0\n    local sum_col_13 = 0\n    local sum_row_14 = 0\n    local sum_col_14 = 0\n    local sum_row_15 = 0\n    local sum_col_15 = 0\n    local sum_row_16 = 0\n    local sum_col_16 = 0\n    local sum_row_17 = 0\n    local sum_col_17 = 0\n    local sum_row_18 = 0\n    local sum_col_18 = 0\n    local sum_row_19 = 0\n    local sum_col_19 = 0\n    local sum_row_20 = 0\n    local sum_col_20 = 0\n    local sum_row_21 = 0\n    local sum_col_21 = 0\n    local sum_row_22 = 0\n    local sum_col_22 = 0\n    local sum_row_23 = 0\n    local sum_col_23 = 0\n    local sum_row_24 = 0\n    local sum_col_24 = 0",
    "    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Write a function to calculate whether the matrix is a magic square.\n    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_col2 = 0\n    local sum_row2 = 0\n    local sum_col3 = 0\n    local sum_row3 = 0\n    local sum_col4 = 0\n    local sum_row4 = 0\n    local sum_col5 = 0\n    local sum_row5 = 0\n    local sum_col6 = 0\n    local sum_row6 = 0\n    local sum_col7 = 0\n    local sum_row7 = 0\n    local sum_col8 = 0\n    local sum_row8 = 0\n    local sum_col9 = 0\n    local sum_row9 = 0\n    local sum_col10 = 0\n    local sum_row10 = 0\n    local sum_col11 = 0\n    local sum_row11 = 0\n    local sum_col12 = 0\n    local sum_row12 = 0\n    local sum_col13 = 0\n    local sum_row13 = 0\n    local sum_col14 = 0\n    local sum_row14 = 0\n    local sum_col15 = 0\n    local sum_row15 = 0\n    local sum_col16 = 0\n    local sum_row16 = 0\n    local sum_col17 = 0\n    local sum_row17 = 0\n    local sum_col18 = 0\n    local sum_row18 = 0\n    local sum_col19 = 0\n    local sum_row19 = 0\n    local sum_col20 = 0\n    local sum_row20 = 0\n    local sum_col21 = 0\n    local sum_row21 = 0\n    local sum_col22 = 0\n    local sum_row22 = 0\n    local sum_col23 = 0\n    local sum_row23 = 0\n    local sum_col24 = 0\n    local sum_row24 = 0\n    local sum_col25 = 0\n    local sum_row25 = 0\n    local sum_col26 = 0\n    local sum_row26 = 0\n   ",
    "\t-- TODO: implement this function\n\tlocal sum = 0\n\tlocal sum2 = 0\n\tlocal sum3 = 0\n\tlocal sum4 = 0\n\tlocal sum5 = 0\n\tlocal sum6 = 0\n\tlocal sum7 = 0\n\tlocal sum8 = 0\n\tfor i = 1, #my_matrix do\n\t\tfor j = 1, #my_matrix[i] do\n\t\t\tsum = sum + my_matrix[i][j]\n\t\t\tsum2 = sum2 + my_matrix[j][i]\n\t\t\tsum3 = sum3 + my_matrix[i][i]\n\t\t\tsum4 = sum4 + my_matrix[i][#my_matrix[i] - i + 1]\n\t\t\tsum5 = sum5 + my_matrix[i][j]\n\t\t\tsum6 = sum6 + my_matrix[j][i]\n\t\t\tsum7 = sum7 + my_matrix[i][i]\n\t\t\tsum8 = sum8 + my_matrix[i][#my_matrix[i] - i + 1]\n\t\tend\n\t\tif sum ~= sum2 or sum ~= sum3 or sum ~= sum4 then\n\t\t\treturn false\n\t\tend\n\t\tsum = 0\n\t\tsum2 = 0\n\t\tsum3 = 0\n\t\tsum4 = 0\n\tend\n\tif sum5 ~= sum6 or sum5 ~= sum7 or sum5 ~= sum8 then\n\t\treturn false\n\tend\n\treturn true\nend",
    "    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_diag = sum_diag + my_matrix[i][n - i + 1]\n    end\n    if sum_diag ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag = sum_diag + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You can use the sum_row function you wrote above.\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test2 = 0\n\tlocal sum_test3 = 0\n\tlocal sum_test4 = 0\n\tlocal sum_test5 = 0\n\tlocal sum_test6 = 0\n\tlocal sum_test7 = 0\n\tlocal sum_test8 = 0\n\tlocal sum_test9 = 0\n\tlocal sum_test10 = 0\n\tlocal sum_test11 = 0\n\tlocal sum_test12 = 0\n\tlocal sum_test13 = 0\n\tlocal sum_test14 = 0\n\tlocal sum_test15 = 0\n\tlocal sum_test16 = 0\n\tlocal sum_test17 = 0\n\tlocal sum_test18 = 0\n\tlocal sum_test19 = 0\n\tlocal sum_test20 = 0\n\tlocal sum_test21 = 0\n\tlocal sum_test22 = 0\n\tlocal sum_test23 = 0\n\tlocal sum_test24 = 0\n\tlocal sum_test25 = 0\n\tlocal sum_test26 = 0\n\tlocal sum_test27 = 0\n\tlocal sum_test28 = 0\n\tlocal sum_test29 = 0\n\tlocal sum_test30 = 0\n\tlocal sum_test31 = 0\n\tlocal sum_test32 = 0\n\tlocal sum_test33 = 0\n\tlocal sum_test34 = 0\n\tlocal sum_test35 = 0\n\tlocal sum_test36 = 0\n\tlocal sum_test37 = 0\n\tlocal sum_test38 = 0\n\tlocal sum_test39 = 0\n\tlocal sum_test40 = 0\n\tlocal sum_test41 = 0\n\tlocal sum_test42 = 0\n\tlocal sum_test43 = 0\n\tlocal sum_test44 = 0\n\tlocal sum_test45 = 0\n\tlocal sum_test46 = 0\n\tlocal sum_test47 = 0\n\tlocal sum_test48 = 0\n\tlocal sum_test49 = 0\n\tlocal sum_test50 = 0\n\tlocal sum_test51 = 0\n\tlocal sum_test52 = 0\n\tlocal sum_test53 = 0\n\tlocal sum_test54 = 0\n\tlocal sum_test55 = 0\n\tlocal sum_test56 = 0\n\tlocal",
    "  local sum = 0\n  local magic_square = true\n  local row_sum = 0\n  local col_sum = 0\n  local diag_sum = 0\n  local diag_sum2 = 0\n  local row_count = 0\n  local col_count = 0\n  local diag_count = 0\n  local diag_count2 = 0\n  local row_max = 0\n  local col_max = 0\n  local diag_max = 0\n  local diag_max2 = 0\n  local row_min = 0\n  local col_min = 0\n  local diag_min = 0\n  local diag_min2 = 0\n  local row_avg = 0\n  local col_avg = 0\n  local diag_avg = 0\n  local diag_avg2 = 0\n  local row_med = 0\n  local col_med = 0\n  local diag_med = 0\n  local diag_med2 = 0\n  local row_mode = 0\n  local col_mode = 0\n  local diag_mode = 0\n  local diag_mode2 = 0\n  local row_range = 0\n  local col_range = 0\n  local diag_range = 0\n  local diag_range2 = 0\n  local row_var = 0\n  local col_var = 0\n  local diag_var = 0\n  local diag_var2 = 0\n  local row_std = 0\n  local col_std = 0\n  local diag_std = 0\n  local diag_std2 = 0\n  local row_skew = 0\n  local col_skew = 0\n  local diag_skew = 0\n  local diag_skew2 = 0\n  local row_kurt = 0\n  local col_kurt = 0\n  local diag_kurt = 0\n  local diag_kurt2 = 0\n  local row_zscore = 0\n  local col_zscore = 0\n  local diag_zscore = 0\n  local diag_zscore2 = 0\n  local row_minmax = 0\n  local col_minmax = 0\n  local diag",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local column_sum = 0\n    local diagonal_sum = 0\n    local anti_diagonal_sum = 0\n    local row_index = 1\n    local column_index = 1\n    local row_count = #my_matrix\n    local column_count = #my_matrix[1]\n    local diagonal_index = 1\n    local anti_diagonal_index = column_count\n    -- Calculate the sum of the first row.\n    for column_index = 1, column_count do\n        row_sum = row_sum + my_matrix[row_index][column_index]\n    end\n    -- Check if the sum of the first row is equal to the sum of the other rows.\n    for row_index = 2, row_count do\n        for column_index = 1, column_count do\n            row_sum = row_sum + my_matrix[row_index][column_index]\n        end\n        if row_sum ~= sum then\n            magic_square = false\n        end\n        row_sum = 0\n    end\n    -- Check if the sum of the first column is equal to the sum of the other columns.\n    for row_index = 1, row_count do\n        for column_index = 1, column_count do\n            column_sum = column_sum + my_matrix[column_index][row_index]\n        end\n        if column_sum ~= sum then\n            magic_square = false\n        end\n        column_sum = 0\n    end\n    -- Check if the sum of the diagonal is equal to the sum of the anti-diagonal.\n    for diagonal_index = 1, column_count do\n        diagonal_sum = diagonal_sum + my_matrix[diagonal_index][diagonal_index]\n    end\n    for anti_diagonal_index = 1, column_count do\n        anti_diagonal_sum = anti_diagonal_sum + my_matrix[anti_diagonal_index][column_count - anti_diagonal_index + 1]\n    end\n    if diagonal_sum ~= anti_diagonal_sum then\n        magic_",
    "    local sum = 0\n    local sum_test = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        sum_test = 0\n        for j = 1, n do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    for j = 1, n do\n        sum_test = 0\n        for i = 1, n do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend"
  ]
}
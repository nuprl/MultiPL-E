{
  "name": "mbpp_120_max_product_tuple",
  "language": "lua",
  "prompt": "-- Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.\nlocal function max_product_tuple(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_product_tuple\n    lu.assertEquals(candidate({{2, 7}, {2, 6}, {1, 8}, {4, 9}}), 36)\n    lu.assertEquals(candidate({{10, 20}, {15, 2}, {5, 10}}), 200)\n    lu.assertEquals(candidate({{11, 44}, {10, 15}, {20, 5}, {12, 9}}), 484)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max = 0\n  for i = 1, #list1 do\n    for j = 1, #list1 do\n      if i ~= j then\n        local product = math.abs(list1[i][1] * list1[j][2])\n        if product > max then\n          max = product\n        end\n      end\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1])\n            if product > max then\n                max = product\n            end\n        end\n    end\n    return max\nend",
    "  local max = -math.huge\n  for i = 1, #list1 do\n    for j = 1, #list1 do\n      if i ~= j then\n        local prod = math.abs(list1[i][1] * list1[j][1])\n        if prod > max then\n          max = prod\n        end\n      end\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1])\n            if product > max then\n                max = product\n            end\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for _, tuple in ipairs(list1) do\n        local product = math.abs(tuple[1] * tuple[2])\n        if product > max then\n            max = product\n        end\n    end\n    return max\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1])\n            if product > max_product then\n                max_product = product\n            end\n        end\n    end\n    return max_product\nend",
    "\tlocal max_product = 0\n\tfor i = 1, #list1 do\n\t\tfor j = i + 1, #list1 do\n\t\t\tlocal product = math.abs(list1[i][1] * list1[j][1])\n\t\t\tif product > max_product then\n\t\t\t\tmax_product = product\n\t\t\tend\n\t\tend\n\tend\n\treturn max_product\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1]) * math.abs(list1[i][2] * list1[j][2])\n            if product > max_product then\n                max_product = product\n            end\n        end\n    end\n    return max_product\nend",
    "  local max_product = 0\n  for i, tuple1 in ipairs(list1) do\n    for j, tuple2 in ipairs(list1) do\n      if i ~= j then\n        local product = math.abs(tuple1[1] * tuple2[1])\n        if product > max_product then\n          max_product = product\n        end\n      end\n    end\n  end\n  return max_product\nend",
    "\tlocal max_product = 0\n\tfor i = 1, #list1 do\n\t\tfor j = i + 1, #list1 do\n\t\t\tlocal product = math.abs(list1[i][1] * list1[j][1])\n\t\t\tif product > max_product then\n\t\t\t\tmax_product = product\n\t\t\tend\n\t\tend\n\tend\n\treturn max_product\nend",
    "  local max = 0\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      local product = math.abs(list1[i][1] * list1[j][1])\n      if product > max then\n        max = product\n      end\n    end\n  end\n  return max\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1])\n            if product > max_product then\n                max_product = product\n            end\n        end\n    end\n    return max_product\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1])\n            if product > max then\n                max = product\n            end\n        end\n    end\n    return max\nend",
    "\tlocal max = 0\n\tfor i = 1, #list1 do\n\t\tfor j = 1, #list1[i] do\n\t\t\tfor k = 1, #list1[i] do\n\t\t\t\tif math.abs(list1[i][j] * list1[i][k]) > max then\n\t\t\t\t\tmax = math.abs(list1[i][j] * list1[i][k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1])\n            if product > max_product then\n                max_product = product\n            end\n        end\n    end\n    return max_product\nend",
    "  local max_product = 0\n  local max_product_tuple = {}\n  for i = 1, #list1 do\n    for j = 1, #list1 do\n      local product = math.abs(list1[i][1] * list1[j][2])\n      if product > max_product then\n        max_product = product\n        max_product_tuple = {list1[i], list1[j]}\n      end\n    end\n  end\n  return max_product_tuple\nend",
    "  local max_product = 0\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      local product = math.abs(list1[i][1] * list1[j][1])\n      if product > max_product then\n        max_product = product\n      end\n    end\n  end\n  return max_product\nend",
    "\tlocal max_product = 0\n\tfor i = 1, #list1 do\n\t\tfor j = i + 1, #list1 do\n\t\t\tlocal product = math.abs(list1[i][1] * list1[j][1])\n\t\t\tif product > max_product then\n\t\t\t\tmax_product = product\n\t\t\tend\n\t\tend\n\tend\n\treturn max_product\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = math.abs(list1[i][1] * list1[j][1])\n            if product > max then\n                max = product\n            end\n        end\n    end\n    return max\nend",
    "    local max_product = 0\n    for i, tuple1 in ipairs(list1) do\n        for j, tuple2 in ipairs(list1) do\n            if i ~= j then\n                local product = math.abs(tuple1[1] * tuple2[1])\n                if product > max_product then\n                    max_product = product\n                end\n            end\n        end\n    end\n    return max_product\nend"
  ]
}
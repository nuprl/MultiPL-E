{
  "name": "mbpp_579_find_dissimilar",
  "language": "lua",
  "prompt": "-- Write a function to find the dissimilar elements in the given two tuples.\nlocal function find_dissimilar(test_tup1, test_tup2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_579_find_dissimilar.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_dissimilar\n    lu.assertEquals(candidate({3, 4, 5, 6}, {5, 7, 4, 10}), {3, 6, 7, 10})\n    lu.assertEquals(candidate({1, 2, 3, 4}, {7, 2, 3, 9}), {1, 4, 7, 9})\n    lu.assertEquals(candidate({21, 11, 25, 26}, {26, 34, 21, 36}), {34, 36, 11, 25})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      dissimilar[#dissimilar + 1] = test_tup1[i]\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, i)\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar_elements = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar_elements, test_tup1[i])\n    end\n  end\n  return dissimilar_elements\nend",
    "\tlocal dissimilar_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_tup\nend",
    "    local dissimilar = {}\n    for i, v in ipairs(test_tup1) do\n        if v ~= test_tup2[i] then\n            table.insert(dissimilar, v)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            result[#result + 1] = test_tup1[i]\n        end\n    end\n    return result\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            result[#result + 1] = test_tup1[i]\n        end\n    end\n    return result\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar, i)\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i, v in ipairs(test_tup1) do\n        if v ~= test_tup2[i] then\n            table.insert(dissimilar_elements, v)\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      dissimilar[#dissimilar + 1] = test_tup1[i]\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar = {}\n    for i, v in ipairs(test_tup1) do\n        if v ~= test_tup2[i] then\n            table.insert(dissimilar, v)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_tup, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, i)\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i=1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, i)\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar_elements = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n    end\n  end\n  return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar[#dissimilar + 1] = i\n\t\tend\n\tend\n\treturn dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(result, test_tup1[i])\n        end\n    end\n    return result\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = i\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_tup\nend",
    "  local dissimilar_list = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar_list, test_tup1[i])\n    end\n  end\n  return dissimilar_list\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i, v in ipairs(test_tup1) do\n        if v ~= test_tup2[i] then\n            table.insert(dissimilar_tup, v)\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elems = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elems, test_tup1[i])\n        end\n    end\n    return dissimilar_elems\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = i\n        end\n    end\n    return dissimilar\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(result, i)\n        end\n    end\n    return result\nend",
    "    local dissimilar = {}\n    for i, v in ipairs(test_tup1) do\n        if v ~= test_tup2[i] then\n            table.insert(dissimilar, v)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = i\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, i)\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      dissimilar[#dissimilar + 1] = test_tup1[i]\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local tup1 = {}\n    local tup2 = {}\n    for i = 1, #test_tup1 do\n        tup1[test_tup1[i]] = true\n    end\n    for i = 1, #test_tup2 do\n        tup2[test_tup2[i]] = true\n    end\n    local dissimilar = {}\n    for k, v in pairs(tup1) do\n        if not tup2[k] then\n            dissimilar[#dissimilar + 1] = k\n        end\n    end\n    for k, v in pairs(tup2) do\n        if not tup1[k] then\n            dissimilar[#dissimilar + 1] = k\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elems = {}\n    for i=1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elems, i)\n        end\n    end\n    return dissimilar_elems\nend",
    "    local dissimilar_elems = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elems, test_tup1[i])\n        end\n    end\n    return dissimilar_elems\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar, test_tup1[i])\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return unpack(dissimilar_elements)\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "  local dissimilar_elements = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar_elements, test_tup1[i])\n    end\n  end\n  return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar_elements = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar_elements, test_tup1[i])\n    end\n  end\n  return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local result = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(result, test_tup1[i])\n        end\n    end\n    return result\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "\tlocal dissimilar = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar, i)\n\t\tend\n\tend\n\treturn dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        local found = false\n        for j = 1, #test_tup2 do\n            if test_tup1[i] == test_tup2[j] then\n                found = true\n                break\n            end\n        end\n        if not found then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar, i)\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elems = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elems, test_tup1[i])\n        end\n    end\n    return dissimilar_elems\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar_elements = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar_elements, test_tup1[i])\n    end\n  end\n  return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_tup, test_tup1[i])\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "  local dissimilar_elements = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n    end\n  end\n  return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_tup\nend",
    "    local dissimilar_list = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_list, i)\n        end\n    end\n    return dissimilar_list\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "  local dissimilar_elements = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar_elements, test_tup1[i])\n    end\n  end\n  return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar, test_tup1[i])\n    end\n  end\n  return dissimilar\nend",
    "\tlocal dissimilar_tup = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\tdissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n\t\tend\n\tend\n\treturn dissimilar_tup\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_tup = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_tup[#dissimilar_tup + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      dissimilar[#dissimilar + 1] = test_tup1[i]\n    end\n  end\n  return dissimilar\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar, test_tup1[i])\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar[#dissimilar + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "  local dissimilar = {}\n  for i, v in ipairs(test_tup1) do\n    if v ~= test_tup2[i] then\n      dissimilar[#dissimilar + 1] = i\n    end\n  end\n  return dissimilar\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar, test_tup1[i])\n    end\n  end\n  return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "  local dissimilar = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      dissimilar[#dissimilar + 1] = test_tup1[i]\n    end\n  end\n  return dissimilar\nend",
    "\tlocal dissimilar_elements = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar_elements, test_tup1[i])\n\t\tend\n\tend\n\treturn dissimilar_elements\nend",
    "  local dissimilar_tup = {}\n  for i = 1, #test_tup1 do\n    if test_tup1[i] ~= test_tup2[i] then\n      table.insert(dissimilar_tup, test_tup1[i])\n    end\n  end\n  return dissimilar_tup\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, i)\n        end\n    end\n    return dissimilar_elements\nend",
    "\tlocal dissimilar = {}\n\tfor i = 1, #test_tup1 do\n\t\tif test_tup1[i] ~= test_tup2[i] then\n\t\t\ttable.insert(dissimilar, i)\n\t\tend\n\tend\n\treturn dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, i)\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            dissimilar_elements[#dissimilar_elements + 1] = test_tup1[i]\n        end\n    end\n    return dissimilar_elements\nend",
    "    local dissimilar = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar, test_tup1[i])\n        end\n    end\n    return dissimilar\nend",
    "    local dissimilar_elements = {}\n    for i = 1, #test_tup1 do\n        if test_tup1[i] ~= test_tup2[i] then\n            table.insert(dissimilar_elements, test_tup1[i])\n        end\n    end\n    return dissimilar_elements\nend"
  ]
}
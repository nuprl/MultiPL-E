{
  "name": "mbpp_643_text_match_wordz_middle",
  "language": "lua",
  "prompt": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_643_text_match_wordz_middle.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match('^[^z]*z[^z]*$')\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match('^[^z]*z[^z]*$') ~= nil\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match('^[^z]*z[^z]*$')\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '%f[%w]z%f[%W]'\n    return string.match(text, pattern)\nend",
    "    local pattern = '^[^z]*z[^z]*$'\n    return text:match(pattern) ~= nil\nend",
    "    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    return string.match(text, 'z.-z')\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    -- TODO: Implement the function\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  local pattern = '^[^z]*z[^z]*$'\n  return text:match(pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.find(text, 'z')\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local s, e = string.find(text, 'z')\n    if s == 1 or e == #text then\n        return false\n    end\n    return true\nend",
    "  local pattern = '^[^z]*z[^z]*$'\n  return text:match(pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"%w*z%w*\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '^[^z]*z[^z]*$'\n    return text:match(pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"%f[%a]z%f[%A]\"\n  return string.find(text, pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "\treturn text:match(\"^[^z]*z[^z]*$\")\nend",
    "    local match = string.match(text, \"^[^z]*z[^z]*$\")\n    if match then\n        return true\n    else\n        return false\n    end\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    local pattern = \"^[^z]*z[^z]*$\"\n    return text:match(pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, '^[^z]*z[^z]*$')\nend",
    "    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend",
    "    return string.find(text, \"z\")\nend",
    "  return text:match(\"%f[%w]z%f[^%w]\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern)\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  local pattern = '^[^z]*z[^z]*$'\n  return string.match(text, pattern)\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"z\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"%f[%a]z%f[%A]\")\nend",
    "    return text:match('^[^z]*z[^z]*$') ~= nil\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '%f[%a]z%f[%A]'\n    return string.match(text, pattern)\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    local match = string.match(text, '%w*z%w*')\n    if match then\n        return true\n    else\n        return false\n    end\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"%w*z%w*\")\nend",
    "  local pattern = '^[^z]*z[^z]*$'\n  return text:match(pattern)\nend",
    "    local match = string.match(text, '%w*z%w*')\n    return match ~= nil\nend",
    "    return text:match('^[^z]*z[^z]*$')\nend",
    "    return string.match(text, \"z\")\nend",
    "  local pattern = '^[^z]*z[^z]*$'\n  return string.match(text, pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    return string.match(text, \"z\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match('^[^z]*z[^z]*$')\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, 'z.-z')\nend",
    "  return text:match(\"%f[%a]z%f[%A]\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match('^[^z]*z[^z]*$')\nend",
    "\tlocal pattern = \"^[^z]*z[^z]*$\"\n\treturn string.match(text, pattern)\nend",
    "  local pattern = '%f[%a]z%f[%A]'\n  return string.match(text, pattern)\nend",
    "  local match = text:match(\"^[^z]*z[^z]*$\")\n  if match then\n    return true\n  else\n    return false\n  end\nend",
    "  local pattern = \"^[^z]+z[^z]+$\"\n  return string.match(text, pattern)\nend",
    "    local match = string.match(text, '^[^z]*z[^z]*$')\n    if match then\n        return match\n    else\n        return nil\n    end\nend",
    "    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    local match = string.match(text, 'z')\n    if match == nil then\n        return false\n    else\n        return true\n    end\nend",
    "  return text:match('^[^z]*z[^z]*$')\nend",
    "    local pattern = '%f[%a]z%f[%A]'\n    return text:match(pattern) ~= nil\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return text:match('^[^z]*z[^z]*$')\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match('^[^z]*z[^z]*$')\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    local match = string.match(text, '%w*z%w*')\n    return match ~= nil\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, 'z.+z')\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, 'z')\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend",
    "  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = \"z\"\n    local result = string.match(text, pattern)\n    return result\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '%f[%a]z%f[%A]'\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match(\"^[^z]*z[^z]*$\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return text:match('^[^z]*z[^z]*$')\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern)\nend",
    "  return string.match(text, \"z\")\nend",
    "    return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "  return string.find(text, 'z')\nend",
    "  return string.match(text, \"^[^z]*z[^z]*$\")\nend",
    "    local match = string.match(text, '^[^z]*z[^z]*$')\n    if match then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal match = string.match(text, \"^[^z]*z[^z]*$\")\n\tif match then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  return text:match(\"%f[%w]z%f[%W]\")\nend"
  ]
}
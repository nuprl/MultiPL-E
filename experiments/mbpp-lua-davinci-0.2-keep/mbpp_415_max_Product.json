{
  "name": "mbpp_415_max_Product",
  "language": "lua",
  "prompt": "-- Write a python function to find a pair with highest product from a given array of integers.\nlocal function max_Product(arr)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_Product\n    lu.assertEquals(candidate({1, 2, 3, 4, 7, 0, 8, 4}), {7, 8})\n    lu.assertEquals(candidate({0, -1, -2, -4, 5, 0, -6}), {-4, -6})\n    lu.assertEquals(candidate({1, 2, 3}), {2, 3})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local max_product = arr[1] * arr[2]\n    for i = 1, #arr do\n        for j = i + 1, #arr do\n            local product = arr[i] * arr[j]\n            if product > max_product then\n                max_product = product\n            end\n        end\n    end\n    return max_product\nend",
    "    local max_product = 1\n    local max_index = 1\n    local min_index = 1\n    for i = 1, #arr do\n        if arr[i] > arr[max_index] then\n            max_index = i\n        end\n        if arr[i] < arr[min_index] then\n            min_index = i\n        end\n    end\n    max_product = arr[max_index] * arr[min_index]\n    return max_product\nend",
    "    local max = arr[1]\n    local min = arr[1]\n    local max_product = arr[1]\n    local min_product = arr[1]\n    local result = arr[1]\n    for i=2,#arr do\n        if arr[i] > 0 then\n            max_product = max * arr[i]\n            min_product = min * arr[i]\n        else\n            max_product = min * arr[i]\n            min_product = max * arr[i]\n        end\n        max = math.max(arr[i], max_product)\n        min = math.min(arr[i], min_product)\n        result = math.max(result, max)\n    end\n    return result\nend",
    "    local max_product = arr[1] * arr[2]\n    for i = 1, #arr do\n        for j = i + 1, #arr do\n            if arr[i] * arr[j] > max_product then\n                max_product = arr[i] * arr[j]\n            end\n        end\n    end\n    return max_product\nend",
    "    local max = arr[1]\n    local max_index = 1\n    local second_max = arr[2]\n    local second_max_index = 2\n    for i = 3, #arr do\n        if arr[i] > max then\n            second_max = max\n            second_max_index = max_index\n            max = arr[i]\n            max_index = i\n        elseif arr[i] > second_max then\n            second_max = arr[i]\n            second_max_index = i\n        end\n    end\n    return max, max_index, second_max, second_max_index\nend",
    "  local max_product = 1\n  local max_product_index = 0\n  local max_product_index_2 = 0\n  local max_product_index_3 = 0\n  local max_product_index_4 = 0\n  local max_product_index_5 = 0\n  local max_product_index_6 = 0\n  local max_product_index_7 = 0\n  local max_product_index_8 = 0\n  local max_product_index_9 = 0\n  local max_product_index_10 = 0\n  local max_product_index_11 = 0\n  local max_product_index_12 = 0\n  local max_product_index_13 = 0\n  local max_product_index_14 = 0\n  local max_product_index_15 = 0\n  local max_product_index_16 = 0\n  local max_product_index_17 = 0\n  local max_product_index_18 = 0\n  local max_product_index_19 = 0\n  local max_product_index_20 = 0\n  local max_product_index_21 = 0\n  local max_product_index_22 = 0\n  local max_product_index_23 = 0\n  local max_product_index_24 = 0\n  local max_product_index_25 = 0\n  local max_product_index_26 = 0\n  local max_product_index_27 = 0\n  local max_product_index_28 = 0\n  local max_product_index_29 = 0\n  local max_product_index_30 = 0\n  local max_product_index_31 = 0\n  local max_product_index_32 = 0\n  local max_product_index_33 = 0\n  local max_product_index_34 = 0\n  local max_product_index_35 = 0\n  local max_product_index_36 = 0\n  local max_product_index_37 = 0\n  local max_product_index_38 = 0\n  local max_product_index_39 = 0\n  local max_product_index_40 = 0\n  local max_product_index_41 = 0\n  local max_product_index_42 = 0\n ",
    "  local max_product = arr[1] * arr[2]\n  local max_index = 2\n  local min_index = 1\n  for i = 3, #arr do\n    if arr[i] * arr[max_index] > max_product then\n      max_product = arr[i] * arr[max_index]\n      min_index = max_index\n      max_index = i\n    elseif arr[i] * arr[min_index] > max_product then\n      max_product = arr[i] * arr[min_index]\n      max_index = min_index\n      min_index = i\n    end\n  end\n  return max_product, max_index, min_index\nend",
    "\tlocal max = arr[1]\n\tlocal min = arr[1]\n\tlocal max_product = arr[1]\n\tfor i = 2, #arr do\n\t\tif arr[i] < 0 then\n\t\t\tlocal temp = max\n\t\t\tmax = min\n\t\t\tmin = temp\n\t\tend\n\t\tmax = math.max(arr[i], max * arr[i])\n\t\tmin = math.min(arr[i], min * arr[i])\n\t\tmax_product = math.max(max_product, max)\n\tend\n\treturn max_product\nend",
    "    local max = arr[1]\n    local second_max = arr[2]\n    local min = arr[1]\n    local second_min = arr[2]\n    for i = 3, #arr do\n        if arr[i] > max then\n            second_max = max\n            max = arr[i]\n        elseif arr[i] > second_max then\n            second_max = arr[i]\n        end\n        if arr[i] < min then\n            second_min = min\n            min = arr[i]\n        elseif arr[i] < second_min then\n            second_min = arr[i]\n        end\n    end\n    return math.max(max * second_max, min * second_min)\nend",
    "    local max_product = arr[1] * arr[2]\n    for i = 1, #arr do\n        for j = i + 1, #arr do\n            if arr[i] * arr[j] > max_product then\n                max_product = arr[i] * arr[j]\n            end\n        end\n    end\n    return max_product\nend",
    "    local max_product = -math.huge\n    for i = 1, #arr do\n        for j = i + 1, #arr do\n            local product = arr[i] * arr[j]\n            if product > max_product then\n                max_product = product\n            end\n        end\n    end\n    return max_product\nend",
    "  local max_product = 1\n  local n = #arr\n  for i = 1, n do\n    max_product = max_product * arr[i]\n  end\n  return max_product\nend",
    "    local max_product = arr[1] * arr[2]\n    local max_index = 1\n    local min_index = 2\n    local max_value = arr[1]\n    local min_value = arr[2]\n    for i = 3, #arr do\n        if arr[i] * max_value > max_product then\n            max_product = arr[i] * max_value\n            max_index = i\n        end\n        if arr[i] * min_value > max_product then\n            max_product = arr[i] * min_value\n            min_index = i\n        end\n        if arr[i] > max_value then\n            max_value = arr[i]\n            max_index = i\n        end\n        if arr[i] < min_value then\n            min_value = arr[i]\n            min_index = i\n        end\n    end\n    return max_product, max_index, min_index\nend",
    "\tlocal max = arr[1]\n\tlocal second_max = arr[2]\n\tlocal min = arr[1]\n\tlocal second_min = arr[2]\n\tfor i = 3, #arr do\n\t\tif arr[i] > max then\n\t\t\tsecond_max = max\n\t\t\tmax = arr[i]\n\t\telseif arr[i] > second_max then\n\t\t\tsecond_max = arr[i]\n\t\tend\n\t\tif arr[i] < min then\n\t\t\tsecond_min = min\n\t\t\tmin = arr[i]\n\t\telseif arr[i] < second_min then\n\t\t\tsecond_min = arr[i]\n\t\tend\n\tend\n\treturn max * second_max, min * second_min\nend",
    "    local max_product = 1\n    local max_product_pair = {}\n    for i = 1, #arr do\n        for j = i + 1, #arr do\n            if arr[i] * arr[j] > max_product then\n                max_product = arr[i] * arr[j]\n                max_product_pair = {arr[i], arr[j]}\n            end\n        end\n    end\n    return max_product_pair\nend",
    "  local max_product = arr[1] * arr[2]\n  local max_index = 1\n  local second_max_index = 2\n  for i = 3, #arr do\n    if arr[i] > arr[max_index] then\n      second_max_index = max_index\n      max_index = i\n    elseif arr[i] > arr[second_max_index] then\n      second_max_index = i\n    end\n  end\n  return max_product, max_index, second_max_index\nend",
    "  local max_product = -math.huge\n  for i = 1, #arr do\n    for j = i + 1, #arr do\n      local product = arr[i] * arr[j]\n      if product > max_product then\n        max_product = product\n      end\n    end\n  end\n  return max_product\nend",
    "    local max_product = 0\n    local n = #arr\n    for i = 1, n do\n        for j = i + 1, n do\n            if arr[i] * arr[j] > max_product then\n                max_product = arr[i] * arr[j]\n            end\n        end\n    end\n    return max_product\nend",
    "  local max = arr[1]\n  local min = arr[1]\n  local max_product = arr[1] * arr[2]\n  local min_product = arr[1] * arr[2]\n  local result = max_product\n  for i = 3, #arr do\n    max_product = math.max(math.max(max * arr[i], min * arr[i]), arr[i])\n    min_product = math.min(math.min(max * arr[i], min * arr[i]), arr[i])\n    max = math.max(max, arr[i])\n    min = math.min(min, arr[i])\n    result = math.max(max_product, result)\n  end\n  return result\nend",
    "    local max_product = arr[1] * arr[2]\n    local max_i = 1\n    local max_j = 2\n    for i = 1, #arr do\n        for j = i + 1, #arr do\n            if arr[i] * arr[j] > max_product then\n                max_product = arr[i] * arr[j]\n                max_i = i\n                max_j = j\n            end\n        end\n    end\n    return max_i, max_j, max_product\nend"
  ]
}
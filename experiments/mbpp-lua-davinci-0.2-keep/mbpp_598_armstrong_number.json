{
  "name": "mbpp_598_armstrong_number",
  "language": "lua",
  "prompt": "-- Write a function to check whether the given number is armstrong or not.\nlocal function armstrong_number(number)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = armstrong_number\n    lu.assertEquals(candidate(153), true)\n    lu.assertEquals(candidate(259), false)\n    lu.assertEquals(candidate(4458), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal temp = number\n\tlocal sum = 0\n\tlocal remainder = 0\n\twhile (temp ~= 0) do\n\t\tremainder = temp % 10\n\t\tsum = sum + (remainder * remainder * remainder)\n\t\ttemp = math.floor(temp / 10)\n\tend\n\tif (number == sum) then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local sum = 0\n    local temp = number\n    while temp > 0 do\n        local remainder = temp % 10\n        sum = sum + remainder ^ 3\n        temp = math.floor(temp / 10)\n    end\n    if sum == number then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal sum = 0\n\tlocal temp = number\n\twhile temp > 0 do\n\t\tlocal remainder = temp % 10\n\t\tsum = sum + (remainder * remainder * remainder)\n\t\ttemp = math.floor(temp / 10)\n\tend\n\tif sum == number then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal sum = 0\n\tlocal temp = number\n\twhile temp > 0 do\n\t\tlocal remainder = temp % 10\n\t\tsum = sum + (remainder * remainder * remainder)\n\t\ttemp = math.floor(temp / 10)\n\tend\n\tif sum == number then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local num = number\n    local sum = 0\n    local rem = 0\n    while num > 0 do\n        rem = num % 10\n        sum = sum + (rem * rem * rem)\n        num = math.floor(num / 10)\n    end\n    if sum == number then\n        return true\n    else\n        return false\n    end\nend\nprint(armstrong_number(153))",
    "    local sum = 0\n    local temp = number\n    while temp > 0 do\n        local digit = temp % 10\n        sum = sum + digit ^ 3\n        temp = math.floor(temp / 10)\n    end\n    if sum == number then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal sum = 0\n\tlocal num = number\n\twhile num > 0 do\n\t\tlocal digit = num % 10\n\t\tsum = sum + digit ^ 3\n\t\tnum = math.floor(num / 10)\n\tend\n\tif sum == number then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local sum = 0\n    local temp = number\n    while temp > 0 do\n        local remainder = temp % 10\n        sum = sum + remainder * remainder * remainder\n        temp = math.floor(temp / 10)\n    end\n    if sum == number then\n        return true\n    else\n        return false\n    end\nend",
    "    local temp = number\n    local sum = 0\n    while temp > 0 do\n        local remainder = temp % 10\n        sum = sum + remainder ^ 3\n        temp = math.floor(temp / 10)\n    end\n    if sum == number then\n        print(number .. \" is an armstrong number\")\n    else\n        print(number .. \" is not an armstrong number\")\n    end\nend",
    "\tlocal sum = 0\n\tlocal temp = number\n\twhile number > 0 do\n\t\tlocal remainder = number % 10\n\t\tsum = sum + (remainder * remainder * remainder)\n\t\tnumber = math.floor(number / 10)\n\tend\n\tif sum == temp then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal temp = number\n\tlocal sum = 0\n\tlocal remainder = 0\n\twhile temp ~= 0 do\n\t\tremainder = temp % 10\n\t\tsum = sum + remainder * remainder * remainder\n\t\ttemp = math.floor(temp / 10)\n\tend\n\tif sum == number then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal sum = 0\n\tlocal temp = number\n\twhile number > 0 do\n\t\tlocal remainder = number % 10\n\t\tsum = sum + (remainder * remainder * remainder)\n\t\tnumber = math.floor(number / 10)\n\tend\n\tif sum == temp then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal number_copy = number\n\tlocal sum = 0\n\tlocal remainder = 0\n\twhile number_copy ~= 0 do\n\t\tremainder = number_copy % 10\n\t\tsum = sum + (remainder * remainder * remainder)\n\t\tnumber_copy = math.floor(number_copy / 10)\n\tend\n\tif sum == number then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal sum = 0\n\tlocal temp = number\n\twhile number > 0 do\n\t\tlocal remainder = number % 10\n\t\tsum = sum + (remainder * remainder * remainder)\n\t\tnumber = math.floor(number / 10)\n\tend\n\tif sum == temp then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local sum = 0\n    local temp = number\n    while (temp ~= 0) do\n        local remainder = temp % 10\n        sum = sum + (remainder * remainder * remainder)\n        temp = math.floor(temp / 10)\n    end\n    if (number == sum) then\n        print(number .. \" is an Armstrong number.\")\n    else\n        print(number .. \" is not an Armstrong number.\")\n    end\nend",
    "\tlocal result = 0\n\tlocal temp = number\n\twhile number > 0 do\n\t\tlocal remainder = number % 10\n\t\tresult = result + (remainder * remainder * remainder)\n\t\tnumber = math.floor(number / 10)\n\tend\n\tif result == temp then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local sum = 0\n    local temp = number\n    while temp > 0 do\n        local digit = temp % 10\n        sum = sum + digit ^ 3\n        temp = math.floor(temp / 10)\n    end\n    if sum == number then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal temp = number\n\tlocal sum = 0\n\tlocal rem = 0\n\twhile temp ~= 0 do\n\t\trem = temp % 10\n\t\tsum = sum + (rem * rem * rem)\n\t\ttemp = math.floor(temp / 10)\n\tend\n\tif sum == number then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local num = number\n    local sum = 0\n    local rem = 0\n    while num > 0 do\n        rem = num % 10\n        sum = sum + (rem * rem * rem)\n        num = math.floor(num / 10)\n    end\n    if sum == number then\n        print(number .. \" is an armstrong number\")\n    else\n        print(number .. \" is not an armstrong number\")\n    end\nend",
    "    local sum = 0\n    local temp = number\n    while temp > 0 do\n        local remainder = temp % 10\n        sum = sum + (remainder * remainder * remainder)\n        temp = math.floor(temp / 10)\n    end\n    if sum == number then\n        return true\n    else\n        return false\n    end\nend"
  ]
}
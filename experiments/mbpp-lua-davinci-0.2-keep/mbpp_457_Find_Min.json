{
  "name": "mbpp_457_Find_Min",
  "language": "lua",
  "prompt": "-- Write a python function to find the sublist having minimum length.\nlocal function Find_Min(lst)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Find_Min\n    lu.assertEquals(candidate({{1}, {1, 2}, {1, 2, 3}}), {1})\n    lu.assertEquals(candidate({{1, 1}, {1, 1, 1}, {1, 2, 7, 8}}), {1, 1})\n    lu.assertEquals(candidate({{'x'}, {'x', 'y'}, {'x', 'y', 'z'}}), {'x'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, l in ipairs(lst) do\n\t\tif #l < min then\n\t\t\tmin = #l\n\t\t\tmin_lst = l\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 1, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_index = 0\n    for i,v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_index = i\n        end\n    end\n    return min_index\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "  local min = math.huge\n  local min_lst = {}\n  for _, l in ipairs(lst) do\n    if #l < min then\n      min = #l\n      min_lst = l\n    end\n  end\n  return min_lst\nend",
    "\tlocal min = #lst[1]\n\tlocal min_lst = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_lst = lst[i]\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = #lst[1]\n\tlocal min_index = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn min_index\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = #lst[1]\n\tlocal min_index = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn lst[min_index]\nend",
    "    local min_len = math.huge\n    local min_lst = nil\n    for _, lst in ipairs(lst) do\n        local len = #lst\n        if len < min_len then\n            min_len = len\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, lst in ipairs(lst) do\n        if #lst < min then\n            min = #lst\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min_len = math.huge\n\tlocal min_lst = nil\n\tfor _, lst in ipairs(lst) do\n\t\tlocal len = #lst\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_lst = lst\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = #lst[1]\n    local min_index = 1\n    for i = 2, #lst do\n        if #lst[i] < min then\n            min = #lst[i]\n            min_index = i\n        end\n    end\n    return min_index\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min = math.huge\n    local min_sublist = {}\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len < min then\n            min = len\n            min_sublist = sublist\n        end\n    end\n    return min_sublist\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = lst[1]\n    for _,v in ipairs(lst) do\n        if #v < #min then\n            min = v\n        end\n    end\n    return min\nend",
    "    local min = lst[1]\n    for i = 1, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "  local min_len = math.huge\n  local min_lst = nil\n  for _, lst in ipairs(lst) do\n    if #lst < min_len then\n      min_len = #lst\n      min_lst = lst\n    end\n  end\n  return min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_sublist = {}\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal sublist = Find_Min(v)\n\t\t\tif #sublist < min then\n\t\t\t\tmin = #sublist\n\t\t\t\tmin_sublist = sublist\n\t\t\tend\n\t\tend\n\tend\n\treturn min_sublist\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _,v in ipairs(lst) do\n\t\tif #v < min then\n\t\t\tmin = #v\n\t\t\tmin_lst = v\n\t\tend\n\tend\n\treturn min_lst\nend",
    "  local min = math.huge\n  local min_lst = {}\n  for _, v in ipairs(lst) do\n    if #v < min then\n      min = #v\n      min_lst = v\n    end\n  end\n  return min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _,v in ipairs(lst) do\n\t\tif #v < min then\n\t\t\tmin = #v\n\t\t\tmin_lst = v\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = #lst[1]\n\tlocal min_index = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn min_index\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min = math.huge\n    local min_list = nil\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = #v\n            if len < min then\n                min = len\n                min_list = v\n            end\n        end\n    end\n    return min_list\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = nil\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local min_lst\n    for _, lst in ipairs(lst) do\n        if #lst < min then\n            min = #lst\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "  local min_len = math.huge\n  local min_lst = nil\n  for _, l in ipairs(lst) do\n    if #l < min_len then\n      min_len = #l\n      min_lst = l\n    end\n  end\n  return min_lst\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst\n\tfor _, lst in ipairs(lst) do\n\t\tif #lst < min then\n\t\t\tmin = #lst\n\t\t\tmin_lst = lst\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_sublist = {}\n\tfor _, sublist in ipairs(lst) do\n\t\tif #sublist < min then\n\t\t\tmin = #sublist\n\t\t\tmin_sublist = sublist\n\t\tend\n\tend\n\treturn min_sublist\nend",
    "    local min_len = math.huge\n    local min_sublist = {}\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len < min_len then\n            min_len = len\n            min_sublist = sublist\n        end\n    end\n    return min_sublist\nend",
    "    local min = math.huge\n    local min_index = 0\n    for i, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_index = i\n        end\n    end\n    return min_index\nend",
    "    local min = math.huge\n    local min_lst = nil\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  local min_lst\n  for _, l in ipairs(lst) do\n    if #l < min then\n      min = #l\n      min_lst = l\n    end\n  end\n  return min_lst\nend",
    "\tlocal min_len = math.huge\n\tlocal min_lst = {}\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tif #v < min_len then\n\t\t\t\tmin_len = #v\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local min_lst\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_sublist = {}\n    for _, sublist in ipairs(lst) do\n        if #sublist < min then\n            min = #sublist\n            min_sublist = sublist\n        end\n    end\n    return min_sublist\nend",
    "    local min_len = math.huge\n    local min_lst = nil\n    for _, v in ipairs(lst) do\n        if #v < min_len then\n            min_len = #v\n            min_lst = v\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_lst\n\tfor _, l in ipairs(lst) do\n\t\tif #l < min then\n\t\t\tmin = #l\n\t\t\tmin_lst = l\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_lst\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = #lst[1]\n\tlocal min_lst = lst[1]\n\tfor i, v in ipairs(lst) do\n\t\tif #v < min then\n\t\t\tmin = #v\n\t\t\tmin_lst = v\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, l in ipairs(lst) do\n\t\tif #l < min then\n\t\t\tmin = #l\n\t\t\tmin_lst = l\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal l = #v\n\t\t\tif l < min then\n\t\t\t\tmin = l\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "  local min_len = math.huge\n  local min_lst = {}\n  for _, v in ipairs(lst) do\n    if #v < min_len then\n      min_len = #v\n      min_lst = v\n    end\n  end\n  return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "    local min = lst[1]\n    for i, v in ipairs(lst) do\n        if #v < #min then\n            min = v\n        end\n    end\n    return min\nend",
    "  local min = math.huge\n  local min_sublist = {}\n  for _, sublist in ipairs(lst) do\n    local len = #sublist\n    if len < min then\n      min = len\n      min_sublist = sublist\n    end\n  end\n  return min_sublist\nend",
    "\tlocal min = lst[1]\n\tfor _, v in ipairs(lst) do\n\t\tif #v < #min then\n\t\t\tmin = v\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = #lst[1]\n\tlocal min_lst = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_lst = lst[i]\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = #lst[1]\n\tlocal min_lst = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_lst = lst[i]\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, l in ipairs(lst) do\n\t\tif #l < min then\n\t\t\tmin = #l\n\t\t\tmin_lst = l\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = lst[1]\n\tfor _,v in ipairs(lst) do\n\t\tif #v < #min then\n\t\t\tmin = v\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor _,v in ipairs(lst) do\n\t\tif #v < #min then\n\t\t\tmin = v\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local sublist = {}\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = #v\n            if len < min then\n                min = len\n                sublist = v\n            end\n        end\n    end\n    return sublist\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min_len = math.huge\n\tlocal min_lst = nil\n\tfor _, lst in ipairs(lst) do\n\t\tlocal len = #lst\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_lst = lst\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local min_lst\n    for _, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_lst = v\n        end\n    end\n    return min_lst\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_lst = v\n        end\n    end\n    return min_lst\nend",
    "    local min_len = math.huge\n    local min_lst = {}\n    for _, lst in ipairs(lst) do\n        if #lst < min_len then\n            min_len = #lst\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "    local min = math.huge\n    local min_lst\n    for _, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_lst = v\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tlocal min_index = 1\n\tfor i,v in ipairs(lst) do\n\t\tif #v < #min then\n\t\t\tmin = v\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn min_index\nend",
    "    local min_lst = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min_lst then\n            min_lst = lst[i]\n        end\n    end\n    return min_lst\nend",
    "  local min = math.huge\n  local min_lst = {}\n  for _, l in ipairs(lst) do\n    if #l < min then\n      min = #l\n      min_lst = l\n    end\n  end\n  return min_lst\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min_len = math.huge\n    local min_lst = nil\n    for _, lst in ipairs(lst) do\n        if #lst < min_len then\n            min_len = #lst\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_index = 0\n\tfor i,v in ipairs(lst) do\n\t\tif #v < min then\n\t\t\tmin = #v\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn min_index\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, v in ipairs(lst) do\n\t\tif #v < min then\n\t\t\tmin = #v\n\t\t\tmin_lst = v\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local min_sublist = {}\n    for _, sublist in ipairs(lst) do\n        if #sublist < min then\n            min = #sublist\n            min_sublist = sublist\n        end\n    end\n    return min_sublist\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_sublist = {}\n\tfor _, sublist in ipairs(lst) do\n\t\tif #sublist < min then\n\t\t\tmin = #sublist\n\t\t\tmin_sublist = sublist\n\t\tend\n\tend\n\treturn min_sublist\nend",
    "    local min = lst[1]\n    for i, v in ipairs(lst) do\n        if #v < #min then\n            min = v\n        end\n    end\n    return min\nend",
    "\tlocal min = math.huge\n\tlocal min_sublist\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal len = #sublist\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_sublist = sublist\n\t\tend\n\tend\n\treturn min_sublist\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min_len = math.huge\n\tlocal min_sublist = nil\n\tfor _, sublist in ipairs(lst) do\n\t\tlocal len = #sublist\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_sublist = sublist\n\t\tend\n\tend\n\treturn min_sublist\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_lst = v\n        end\n    end\n    return min_lst\nend",
    "  local min = math.huge\n  local min_lst\n  for _, l in ipairs(lst) do\n    if #l < min then\n      min = #l\n      min_lst = l\n    end\n  end\n  return min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = #lst[1]\n\tlocal min_lst = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_lst = lst[i]\n\t\tend\n\tend\n\treturn min_lst\nend",
    "  local min = math.huge\n  local min_lst = nil\n  for _, l in ipairs(lst) do\n    if #l < min then\n      min = #l\n      min_lst = l\n    end\n  end\n  return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_sublist\n    for _, sublist in ipairs(lst) do\n        local len = #sublist\n        if len < min then\n            min = len\n            min_sublist = sublist\n        end\n    end\n    return min_sublist\nend",
    "  local min = lst[1]\n  for _, v in ipairs(lst) do\n    if #v < #min then\n      min = v\n    end\n  end\n  return min\nend",
    "\tlocal min_len = #lst[1]\n\tlocal min_sublist = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min_len then\n\t\t\tmin_len = #lst[i]\n\t\t\tmin_sublist = lst[i]\n\t\tend\n\tend\n\treturn min_sublist\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #min > #lst[i] then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, sublst in ipairs(lst) do\n\t\tif #sublst < min then\n\t\t\tmin = #sublst\n\t\t\tmin_lst = sublst\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min_len = #lst[1]\n    local min_lst = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < min_len then\n            min_len = #lst[i]\n            min_lst = lst[i]\n        end\n    end\n    return min_lst\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "    local min = math.huge\n    local min_lst = nil\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor i, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, sublist in ipairs(lst) do\n        if #sublist < min then\n            min = #sublist\n            min_lst = sublist\n        end\n    end\n    return min_lst\nend",
    "    local min = math.huge\n    local min_lst = nil\n    for i, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_lst = v\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor i = 1, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_lst = lst[i]\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local min_idx = 0\n    for i, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_idx = i\n        end\n    end\n    return min_idx\nend",
    "  local min_len = math.huge\n  local min_lst = nil\n  for _, lst_i in ipairs(lst) do\n    local len_i = #lst_i\n    if len_i < min_len then\n      min_len = len_i\n      min_lst = lst_i\n    end\n  end\n  return min_lst\nend",
    "    local min_len = math.huge\n    local min_lst = nil\n    for _, lst in ipairs(lst) do\n        if #lst < min_len then\n            min_len = #lst\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, l in ipairs(lst) do\n\t\tif #l < min then\n\t\t\tmin = #l\n\t\t\tmin_lst = l\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "  local min = lst[1]\n  for _, v in ipairs(lst) do\n    if #v < #min then\n      min = v\n    end\n  end\n  return min\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, lst in pairs(lst) do\n\t\tif #lst < min then\n\t\t\tmin = #lst\n\t\t\tmin_lst = lst\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local sublist = {}\n    for i = 1, #lst do\n        if #lst[i] < min then\n            min = #lst[i]\n            sublist = lst[i]\n        end\n    end\n    return sublist\nend",
    "\tlocal min = math.huge\n\tlocal min_lst\n\tfor _, l in ipairs(lst) do\n\t\tif #l < min then\n\t\t\tmin = #l\n\t\t\tmin_lst = l\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local l = Find_Min(v)\n            if l < min then\n                min = l\n                min_lst = v\n            end\n        end\n    end\n    return min\nend",
    "\tlocal min = lst[1]\n\tfor i=2,#lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = #lst[1]\n    local min_lst = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < min then\n            min = #lst[i]\n            min_lst = lst[i]\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_sublist\n\tfor _, sublist in ipairs(lst) do\n\t\tif #sublist < min then\n\t\t\tmin = #sublist\n\t\t\tmin_sublist = sublist\n\t\tend\n\tend\n\treturn min_sublist\nend",
    "    local min = math.huge\n    local min_lst\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "    local min = math.huge\n    local min_sublist = {}\n    for _, sublist in ipairs(lst) do\n        if #sublist < min then\n            min = #sublist\n            min_sublist = sublist\n        end\n    end\n    return min_sublist\nend",
    "    local min_len = math.huge\n    local min_lst = {}\n    for _, lst in ipairs(lst) do\n        if #lst < min_len then\n            min_len = #lst\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = #lst[1]\n    local min_index = 1\n    for i = 2, #lst do\n        if #lst[i] < min then\n            min = #lst[i]\n            min_index = i\n        end\n    end\n    return min_index\nend",
    "    local min = math.huge\n    local res = {}\n    for _, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            res = v\n        end\n    end\n    return res\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "\tlocal min_len = math.huge\n\tlocal min_lst = {}\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min_len then\n\t\t\t\tmin_len = len\n\t\t\t\tmin_lst = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min_len = #lst[1]\n    local min_lst = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < min_len then\n            min_len = #lst[i]\n            min_lst = lst[i]\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _,v in ipairs(lst) do\n\t\tif #v < min then\n\t\t\tmin = #v\n\t\t\tmin_lst = v\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i, v in ipairs(lst) do\n\t\tif #v < #min then\n\t\t\tmin = v\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = lst[1]\n    for _, v in ipairs(lst) do\n        if #v < #min then\n            min = v\n        end\n    end\n    return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_lst = nil\n    for _, l in ipairs(lst) do\n        if #l < min then\n            min = #l\n            min_lst = l\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, l in ipairs(lst) do\n\t\tif #l < min then\n\t\t\tmin = #l\n\t\t\tmin_lst = l\n\t\tend\n\tend\n\treturn min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_lst = {}\n\tfor _, lst in ipairs(lst) do\n\t\tif #lst < min then\n\t\t\tmin = #lst\n\t\t\tmin_lst = lst\n\t\tend\n\tend\n\treturn min_lst\nend",
    "    local min = math.huge\n    local min_lst = {}\n    for _, lst in ipairs(lst) do\n        if #lst < min then\n            min = #lst\n            min_lst = lst\n        end\n    end\n    return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min_len = #lst[1]\n\tlocal min_lst = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min_len then\n\t\t\tmin_len = #lst[i]\n\t\t\tmin_lst = lst[i]\n\t\tend\n\tend\n\treturn min_lst\nend",
    "  local min = math.huge\n  local min_lst = {}\n  for _, l in ipairs(lst) do\n    if #l < min then\n      min = #l\n      min_lst = l\n    end\n  end\n  return min_lst\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend"
  ]
}
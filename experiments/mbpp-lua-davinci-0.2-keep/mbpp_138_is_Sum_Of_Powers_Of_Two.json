{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "lua",
  "prompt": "-- Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nlocal function is_Sum_Of_Powers_Of_Two(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_Sum_Of_Powers_Of_Two\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(7), false)\n    lu.assertEquals(candidate(14), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + math.pow(2, i)\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    if n == 0 then\n        return false\n    end\n    while n % 2 == 0 do\n        n = n / 2\n    end\n    return n == 1\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    if sum == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + math.pow(2, i)\n\t\tend\n\t\tn = math.floor(n / 2)\n\t\ti = i + 1\n\tend\n\treturn sum\nend",
    "    local sum = 0\n    local i = 1\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + i\n        end\n        i = i * 2\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local m = n\n    while m > 0 do\n        if m % 2 ~= 0 then\n            return false\n        end\n        m = m // 2\n    end\n    return true\nend",
    "\tif n == 0 then\n\t\treturn false\n\tend\n\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + math.pow(2, i)\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tif n == 0 then\n\t\treturn false\n\tend\n\twhile n ~= 1 do\n\t\tif n % 2 ~= 0 then\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + math.pow(2, i)\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend"
  ]
}
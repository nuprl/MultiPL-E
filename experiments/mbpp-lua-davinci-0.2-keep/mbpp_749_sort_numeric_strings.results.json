{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "lua",
  "prompt": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        nums[#nums + 1] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpigugdr0y.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpigugdr0y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    return table.concat(nums, \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcha7yw8v.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpcha7yw8v.lua:4: in local 'candidate'\n\t/tmp/tmpcha7yw8v.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_shnmznw.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp_shnmznw.lua:4: in local 'candidate'\n\t/tmp/tmp_shnmznw.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    table.sort(nums_str, function(a, b) return tonumber(a) < tonumber(b) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_669w75d.lua:9: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: nil\nstack traceback:\n\t/tmp/tmp_669w75d.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num))\n  end\n  table.sort(nums)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpop75l0wc.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpop75l0wc.lua:4: in local 'candidate'\n\t/tmp/tmpop75l0wc.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    nums[#nums + 1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  for i, num in ipairs(nums) do\n    nums_str[i] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpax07iu98.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpax07iu98.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local sorted_nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(sorted_nums_str, tostring(num))\n    end\n    return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8jsgjcvh.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp8jsgjcvh.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local function compare(a, b)\n        return tonumber(a) < tonumber(b)\n    end\n    table.sort(nums_str, compare)\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmpt8yhl.lua:13: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpsmpt8yhl.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    -- Convert strings to numbers\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "",
      "stderr": "lua: /tmp/tmpk9461mzy.lua:17: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n\tlocal nums = {}\n\tfor num_str in nums_str:gmatch('%d+') do\n\t\tnums[#nums+1] = tonumber(num_str)\n\tend\n\ttable.sort(nums)\n\tlocal nums_str = {}\n\tfor _, num in ipairs(nums) do\n\t\tnums_str[#nums_str+1] = tostring(num)\n\tend\n\treturn table.concat(nums_str, ' ')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl1fzbnat.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpl1fzbnat.lua:4: in local 'candidate'\n\t/tmp/tmpl1fzbnat.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums_int = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums_int, tonumber(num_str))\n    end\n    table.sort(nums_int)\n    local nums_str = {}\n    for _, num_int in ipairs(nums_int) do\n        table.insert(nums_str, tostring(num_int))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5c_wp3a.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_5c_wp3a.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local result = {}\n    for _, num in ipairs(nums) do\n        table.insert(result, tostring(num))\n    end\n    return table.concat(result, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpamnf_6iw.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpamnf_6iw.lua:4: in local 'candidate'\n\t/tmp/tmpamnf_6iw.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local sorted_nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(sorted_nums_str, tostring(num))\n    end\n    return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8jsgjcvh.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp8jsgjcvh.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplx57slcs.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmplx57slcs.lua:4: in local 'candidate'\n\t/tmp/tmplx57slcs.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return table.concat(nums_str, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp828144_2.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp828144_2.lua:4: in local 'candidate'\n\t/tmp/tmp828144_2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local sorted_nums_str = \"\"\n  for _, num in ipairs(nums) do\n    sorted_nums_str = sorted_nums_str .. num .. \" \"\n  end\n  return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4e8n0na8.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp4e8n0na8.lua:4: in local 'candidate'\n\t/tmp/tmp4e8n0na8.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplx57slcs.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmplx57slcs.lua:4: in local 'candidate'\n\t/tmp/tmplx57slcs.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums_int = {}\n    for i, num_str in ipairs(nums_str) do\n        nums_int[i] = tonumber(num_str)\n    end\n    table.sort(nums_int)\n    for i, num_int in ipairs(nums_int) do\n        nums_str[i] = tostring(num_int)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6zfmnwqe.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp6zfmnwqe.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk7keeaih.lua:16: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: nil\nstack traceback:\n\t/tmp/tmpk7keeaih.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, v in ipairs(nums_str) do\n    nums[i] = tonumber(v)\n  end\n  table.sort(nums)\n  for i, v in ipairs(nums) do\n    nums_str[i] = tostring(v)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8qunufx.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpp8qunufx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num in nums_str:gmatch(\"%d+\") do\n        nums[#nums+1] = tonumber(num)\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_cwr0joq.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp_cwr0joq.lua:4: in local 'candidate'\n\t/tmp/tmp_cwr0joq.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums_int = {}\n    for i, v in ipairs(nums_str) do\n        nums_int[i] = tonumber(v)\n    end\n    table.sort(nums_int)\n    for i, v in ipairs(nums_int) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe1ryx0nh.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpe1ryx0nh.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv37si_1h.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpv37si_1h.lua:4: in local 'candidate'\n\t/tmp/tmpv37si_1h.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        nums[#nums + 1] = tonumber(num_str)\n    end\n    table.sort(nums)\n    local sorted_nums_str = \"\"\n    for _, num in ipairs(nums) do\n        sorted_nums_str = sorted_nums_str .. tostring(num)\n    end\n    return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6celzz_b.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp6celzz_b.lua:4: in local 'candidate'\n\t/tmp/tmp6celzz_b.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local sorted_nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(sorted_nums_str, tostring(num))\n    end\n    return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8jsgjcvh.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp8jsgjcvh.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num in ipairs(nums_str) do\n    nums[#nums + 1] = tonumber(num)\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    nums_str[#nums_str + 1] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplcs1o65c.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmplcs1o65c.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, v in ipairs(nums_str) do\n        table.insert(nums, tonumber(v))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, v in ipairs(nums) do\n        table.insert(nums_str, tostring(v))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nm1bvwq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp7nm1bvwq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i = 1, #nums_str do\n        nums[i] = tonumber(nums_str[i])\n    end\n    table.sort(nums)\n    for i = 1, #nums_str do\n        nums_str[i] = tostring(nums[i])\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn30ds16j.lua:16: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: nil\nstack traceback:\n\t/tmp/tmpn30ds16j.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    nums[#nums + 1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  local sorted_nums_str = \"\"\n  for _, num in ipairs(nums) do\n    sorted_nums_str = sorted_nums_str .. tostring(num)\n  end\n  return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3t173wul.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp3t173wul.lua:4: in local 'candidate'\n\t/tmp/tmp3t173wul.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, v in ipairs(nums_str) do\n    nums[i] = tonumber(v)\n  end\n  table.sort(nums)\n  for i, v in ipairs(nums) do\n    nums_str[i] = tostring(v)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8qunufx.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpp8qunufx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_shnmznw.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp_shnmznw.lua:4: in local 'candidate'\n\t/tmp/tmp_shnmznw.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_shnmznw.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp_shnmznw.lua:4: in local 'candidate'\n\t/tmp/tmp_shnmznw.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    nums[#nums + 1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    nums_str[#nums_str + 1] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxvutpb9a.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpxvutpb9a.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, v in ipairs(nums_str) do\n        nums[#nums + 1] = tonumber(v)\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, v in ipairs(nums) do\n        nums_str[#nums_str + 1] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpppp1n6_i.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpppp1n6_i.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i = 1, #nums_str do\n    nums[i] = tonumber(nums_str[i])\n  end\n  table.sort(nums)\n  for i = 1, #nums_str do\n    nums_str[i] = tostring(nums[i])\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpas0hehd6.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpas0hehd6.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        nums[#nums + 1] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpigugdr0y.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpigugdr0y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num))\n  end\n  table.sort(nums)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpop75l0wc.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpop75l0wc.lua:4: in local 'candidate'\n\t/tmp/tmpop75l0wc.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    nums[#nums+1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  for i, num in ipairs(nums) do\n    nums_str[i] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9n1n5rkq.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp9n1n5rkq.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num in ipairs(nums_str) do\n    nums[#nums + 1] = tonumber(num)\n  end\n  table.sort(nums)\n  for i = 1, #nums do\n    nums_str[i] = tostring(nums[i])\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt9e5l6qm.lua:16: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: nil\nstack traceback:\n\t/tmp/tmpt9e5l6qm.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num in ipairs(nums_str) do\n        nums[i] = tonumber(num)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzhx78uek.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpzhx78uek.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local sorted_nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(sorted_nums_str, tostring(num))\n  end\n  return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpblelo59q.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpblelo59q.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local sorted_nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(sorted_nums_str, tostring(num))\n    end\n    return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8jsgjcvh.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp8jsgjcvh.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local function compare(a, b)\n    return tonumber(a) < tonumber(b)\n  end\n  table.sort(nums_str, compare)\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8sx8qtea.lua:13: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp8sx8qtea.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  return table.concat(nums, \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo99zrdh4.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpo99zrdh4.lua:4: in local 'candidate'\n\t/tmp/tmpo99zrdh4.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local function compare(a, b)\n        return tonumber(a) < tonumber(b)\n    end\n    table.sort(nums_str, compare)\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmpt8yhl.lua:13: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpsmpt8yhl.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return table.concat(nums_str, \" \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpunws96vg.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpunws96vg.lua:4: in local 'candidate'\n\t/tmp/tmpunws96vg.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num in nums_str:gmatch('%d+') do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcprx0wqt.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpcprx0wqt.lua:4: in local 'candidate'\n\t/tmp/tmpcprx0wqt.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num in nums_str:gmatch('%d+') do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcprx0wqt.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpcprx0wqt.lua:4: in local 'candidate'\n\t/tmp/tmpcprx0wqt.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, v in ipairs(nums_str) do\n    nums[i] = tonumber(v)\n  end\n  table.sort(nums)\n  for i, v in ipairs(nums) do\n    nums_str[i] = tostring(v)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8qunufx.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpp8qunufx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n\tlocal nums = {}\n\tfor num_str in nums_str:gmatch(\"%d+\") do\n\t\ttable.insert(nums, tonumber(num_str))\n\tend\n\ttable.sort(nums)\n\treturn table.concat(nums, \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp79yb4ett.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmp79yb4ett.lua:4: in local 'candidate'\n\t/tmp/tmp79yb4ett.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num))\n  end\n  table.sort(nums)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpop75l0wc.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpop75l0wc.lua:4: in local 'candidate'\n\t/tmp/tmpop75l0wc.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        nums[#nums + 1] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpigugdr0y.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpigugdr0y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local sorted_nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(sorted_nums_str, tostring(num))\n  end\n  return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpblelo59q.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpblelo59q.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, num_str in ipairs(nums_str) do\n    nums[i] = tonumber(num_str)\n  end\n  table.sort(nums)\n  for i, num in ipairs(nums) do\n    nums_str[i] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpytch_b_y.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpytch_b_y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local sorted_nums_str = \"\"\n    for _, num in ipairs(nums) do\n        sorted_nums_str = sorted_nums_str .. num .. \" \"\n    end\n    return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpel3cqplk.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpel3cqplk.lua:4: in local 'candidate'\n\t/tmp/tmpel3cqplk.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    return table.concat(nums, \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcha7yw8v.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpcha7yw8v.lua:4: in local 'candidate'\n\t/tmp/tmpcha7yw8v.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n\tlocal nums = {}\n\tfor _, num_str in ipairs(nums_str) do\n\t\tnums[#nums+1] = tonumber(num_str)\n\tend\n\ttable.sort(nums)\n\tfor i, num in ipairs(nums) do\n\t\tnums_str[i] = tostring(num)\n\tend\n\treturn nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9fk0e5uf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp9fk0e5uf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, v in ipairs(nums_str) do\n    nums[i] = tonumber(v)\n  end\n  table.sort(nums)\n  for i, v in ipairs(nums) do\n    nums_str[i] = tostring(v)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8qunufx.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpp8qunufx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    nums[#nums+1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  return table.concat(nums, \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxqy1p8d0.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpxqy1p8d0.lua:4: in local 'candidate'\n\t/tmp/tmpxqy1p8d0.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return table.concat(nums_str, \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpae5bwi8f.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpae5bwi8f.lua:4: in local 'candidate'\n\t/tmp/tmpae5bwi8f.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num in string.gmatch(nums_str, \"%d+\") do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdthg04qp.lua:4: bad argument #1 to 'gmatch' (string expected, got table)\nstack traceback:\n\t/tmp/tmpdthg04qp.lua:4: in local 'candidate'\n\t/tmp/tmpdthg04qp.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplx57slcs.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmplx57slcs.lua:4: in local 'candidate'\n\t/tmp/tmplx57slcs.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%d+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplx57slcs.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmplx57slcs.lua:4: in local 'candidate'\n\t/tmp/tmplx57slcs.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpek1v9ugm.lua:16: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: nil\nstack traceback:\n\t/tmp/tmpek1v9ugm.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, v in pairs(nums_str) do\n        table.insert(nums, tonumber(v))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, v in pairs(nums) do\n        table.insert(nums_str, tostring(v))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn9ou4b7j.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpn9ou4b7j.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0ryqgtz.lua:16: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: nil\nstack traceback:\n\t/tmp/tmp_0ryqgtz.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num_str in nums_str:gmatch(\"%S+\") do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe549fx3g.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpe549fx3g.lua:4: in local 'candidate'\n\t/tmp/tmpe549fx3g.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, v in ipairs(nums_str) do\n        table.insert(nums, tonumber(v))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, v in ipairs(nums) do\n        table.insert(nums_str, tostring(v))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nm1bvwq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp7nm1bvwq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, v in ipairs(nums_str) do\n        table.insert(nums, tonumber(v))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, v in ipairs(nums) do\n        table.insert(nums_str, tostring(v))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nm1bvwq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp7nm1bvwq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, v in ipairs(nums_str) do\n        table.insert(nums, tonumber(v))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, v in ipairs(nums) do\n        table.insert(nums_str, tostring(v))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nm1bvwq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp7nm1bvwq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch(\"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return table.concat(nums_str, \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpae5bwi8f.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpae5bwi8f.lua:4: in local 'candidate'\n\t/tmp/tmpae5bwi8f.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        nums[#nums + 1] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpigugdr0y.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpigugdr0y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpek1v9ugm.lua:16: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: nil\nstack traceback:\n\t/tmp/tmpek1v9ugm.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in nums_str:gmatch('%d+') do\n    nums[#nums+1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwjevtgql.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpwjevtgql.lua:4: in local 'candidate'\n\t/tmp/tmpwjevtgql.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    nums[#nums + 1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  local sorted_nums_str = {}\n  for _, num in ipairs(nums) do\n    sorted_nums_str[#sorted_nums_str + 1] = tostring(num)\n  end\n  return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo3om9k0s.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpo3om9k0s.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for num_str in string.gmatch(nums_str, \"%d+\") do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local result = \"\"\n  for _, num in ipairs(nums) do\n    result = result .. tostring(num)\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7bww7ib9.lua:4: bad argument #1 to 'gmatch' (string expected, got table)\nstack traceback:\n\t/tmp/tmp7bww7ib9.lua:4: in local 'candidate'\n\t/tmp/tmp7bww7ib9.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    nums[#nums + 1] = tonumber(num_str)\n  end\n  table.sort(nums)\n  for i, num in ipairs(nums) do\n    nums_str[i] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpax07iu98.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpax07iu98.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, v in ipairs(nums_str) do\n    nums[i] = tonumber(v)\n  end\n  table.sort(nums)\n  for i, v in ipairs(nums) do\n    nums_str[i] = tostring(v)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8qunufx.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpp8qunufx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums_int = {}\n    for i, num_str in ipairs(nums_str) do\n        nums_int[i] = tonumber(num_str)\n    end\n    table.sort(nums_int)\n    for i, num_int in ipairs(nums_int) do\n        nums_str[i] = tostring(num_int)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6zfmnwqe.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp6zfmnwqe.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, num in ipairs(nums_str) do\n    nums[i] = tonumber(num)\n  end\n  table.sort(nums)\n  for i, num in ipairs(nums) do\n    nums_str[i] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn4s8mz_r.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpn4s8mz_r.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local sorted_nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(sorted_nums_str, tostring(num))\n    end\n    return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8jsgjcvh.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp8jsgjcvh.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local sorted_nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(sorted_nums_str, tostring(num))\n  end\n  return sorted_nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpblelo59q.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpblelo59q.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, num in ipairs(nums_str) do\n    table.insert(nums, tonumber(num))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for i, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4x0emvhg.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp4x0emvhg.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for num in nums_str:gmatch('%d+') do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcprx0wqt.lua:4: attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpcprx0wqt.lua:4: in local 'candidate'\n\t/tmp/tmpcprx0wqt.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, num_str in ipairs(nums_str) do\n    nums[i] = tonumber(num_str)\n  end\n  table.sort(nums)\n  for i, num in ipairs(nums) do\n    nums_str[i] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpytch_b_y.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpytch_b_y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for i, num_str in ipairs(nums_str) do\n    nums[i] = tonumber(num_str)\n  end\n  table.sort(nums)\n  for i, num in ipairs(nums) do\n    nums_str[i] = tostring(num)\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpytch_b_y.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpytch_b_y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local function compare(a, b)\n        return tonumber(a) < tonumber(b)\n    end\n    table.sort(nums_str, compare)\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmpt8yhl.lua:13: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpsmpt8yhl.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkbasyr0g.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpkbasyr0g.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i,v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i,v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5hxkcttk.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5hxkcttk.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n  local nums = {}\n  for _, num_str in ipairs(nums_str) do\n    table.insert(nums, tonumber(num_str))\n  end\n  table.sort(nums)\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str, tostring(num))\n  end\n  return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoc_wvffq.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpoc_wvffq.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local function compare(a, b)\n        return tonumber(a) < tonumber(b)\n    end\n    table.sort(nums_str, compare)\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmpt8yhl.lua:13: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpsmpt8yhl.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, v in ipairs(nums_str) do\n        nums[i] = tonumber(v)\n    end\n    table.sort(nums)\n    for i, v in ipairs(nums) do\n        nums_str[i] = tostring(v)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2elgouf.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpk2elgouf.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num in ipairs(nums_str) do\n        nums[i] = tonumber(num)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzhx78uek.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpzhx78uek.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num_str in ipairs(nums_str) do\n        table.insert(nums, tonumber(num_str))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_0q6660k.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp_0q6660k.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    table.sort(nums_str, function(a, b) return tonumber(a) < tonumber(b) end)\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo_0cb7c3.lua:10: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpo_0cb7c3.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for _, num in ipairs(nums_str) do\n        table.insert(nums, tonumber(num))\n    end\n    table.sort(nums)\n    local nums_str = {}\n    for _, num in ipairs(nums) do\n        table.insert(nums_str, tostring(num))\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m5tkvcj.lua:18: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp3m5tkvcj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local nums = {}\n    for i, num_str in ipairs(nums_str) do\n        nums[i] = tonumber(num_str)\n    end\n    table.sort(nums)\n    for i, num in ipairs(nums) do\n        nums_str[i] = tostring(num)\n    end\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509919,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5_n96ixs.lua:17: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmp5_n96ixs.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nlocal function sort_numeric_strings(nums_str)\n    local function compare(a, b)\n        return tonumber(a) < tonumber(b)\n    end\n    table.sort(nums_str, compare)\n    return nums_str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numeric_strings\n    lu.assertEquals(candidate({'4', '12', '45', '7', '0', '100', '200', '-12', '-500'}), {-500, -12, 0, 4, 7, 12, 45, 100, 200})\n    lu.assertEquals(candidate({'2', '3', '8', '4', '7', '9', '8', '2', '6', '5', '1', '6', '1', '2', '3', '4', '6', '9', '1', '2'}), {1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9})\n    lu.assertEquals(candidate({'1', '3', '5', '7', '1', '3', '13', '15', '17', '5', '7 ', '9', '1', '11'}), {1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123086,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmpt8yhl.lua:13: expected: {-500, -12, 0, 4, 7, 12, 45, 100, 200}\nactual: {\"-500\", \"-12\", \"0\", \"4\", \"7\", \"12\", \"45\", \"100\", \"200\"}\nstack traceback:\n\t/tmp/tmpsmpt8yhl.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
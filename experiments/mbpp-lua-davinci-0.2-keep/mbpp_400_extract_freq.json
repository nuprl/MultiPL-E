{
  "name": "mbpp_400_extract_freq",
  "language": "lua",
  "prompt": "-- Write a function to extract the number of unique tuples in the given list.\nlocal function extract_freq(test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_400_extract_freq.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = extract_freq\n    lu.assertEquals(candidate({{3, 4}, {1, 2}, {4, 3}, {5, 6}}), 3)\n    lu.assertEquals(candidate({{4, 15}, {2, 3}, {5, 4}, {6, 7}}), 4)\n    lu.assertEquals(candidate({{5, 16}, {2, 3}, {6, 5}, {6, 9}}), 4)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local freq_list = {}\n    for _, tuple in ipairs(test_list) do\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq = {}\n  for _, v in ipairs(test_list) do\n    if not freq[v] then\n      freq[v] = 1\n    else\n      freq[v] = freq[v] + 1\n    end\n  end\n  return freq\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local tuple = test_list[i]\n    local key = tuple[1]\n    local value = tuple[2]\n    if freq_list[key] == nil then\n      freq_list[key] = value\n    else\n      freq_list[key] = freq_list[key] + value\n    end\n  end\n  return freq_list\nend",
    "  local freq = {}\n  for i = 1, #test_list do\n    local t = test_list[i]\n    if not freq[t] then\n      freq[t] = 1\n    else\n      freq[t] = freq[t] + 1\n    end\n  end\n  return freq\nend",
    "\tlocal freq_list = {}\n\tfor i,v in ipairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        freq_list[v] = (freq_list[v] or 0) + 1\n    end\n    return freq_list\nend",
    "    local freq_table = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, ',')\n        if freq_table[key] then\n            freq_table[key] = freq_table[key] + 1\n        else\n            freq_table[key] = 1\n        end\n    end\n    return freq_table\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local tuple = test_list[i]\n    if freq_list[tuple] == nil then\n      freq_list[tuple] = 1\n    else\n      freq_list[tuple] = freq_list[tuple] + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local t = table.concat(v, \",\")\n        if freq[t] == nil then\n            freq[t] = 1\n        else\n            freq[t] = freq[t] + 1\n        end\n    end\n    return freq\nend",
    "\tlocal freq_list = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif not freq_list[v] then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_table = {}\n\tfor i = 1, #test_list do\n\t\tif freq_table[test_list[i]] == nil then\n\t\t\tfreq_table[test_list[i]] = 1\n\t\telse\n\t\t\tfreq_table[test_list[i]] = freq_table[test_list[i]] + 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local t = test_list[i]\n    if freq_list[t] == nil then\n      freq_list[t] = 1\n    else\n      freq_list[t] = freq_list[t] + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "\tlocal freq_list = {}\n\tfor i = 1, #test_list do\n\t\tlocal test_tuple = test_list[i]\n\t\tlocal test_tuple_freq = test_tuple[1]\n\t\tlocal test_tuple_id = test_tuple[2]\n\t\tfreq_list[test_tuple_id] = test_tuple_freq\n\tend\n\treturn freq_list\nend",
    "    local freq_table = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local tuple_str = table.concat(tuple, ',')\n        if freq_table[tuple_str] == nil then\n            freq_table[tuple_str] = 1\n        else\n            freq_table[tuple_str] = freq_table[tuple_str] + 1\n        end\n    end\n    return freq_table\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if not freq[v] then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    freq_list[v] = (freq_list[v] or 0) + 1\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local freq = 0\n        for j = 1, #test_list do\n            if test_list[i] == test_list[j] then\n                freq = freq + 1\n            end\n        end\n        freq_list[i] = freq\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        freq[v] = (freq[v] or 0) + 1\n    end\n    return freq\nend",
    "\tlocal freq_list = {}\n\tfor k, v in pairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq = {}\n    for _, tup in ipairs(test_list) do\n        local tup_str = table.concat(tup, \",\")\n        if freq[tup_str] then\n            freq[tup_str] = freq[tup_str] + 1\n        else\n            freq[tup_str] = 1\n        end\n    end\n    return freq\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local t = test_list[i]\n        if not freq[t] then\n            freq[t] = 1\n        else\n            freq[t] = freq[t] + 1\n        end\n    end\n    return freq\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local t = test_list[i]\n        if freq[t] == nil then\n            freq[t] = 1\n        else\n            freq[t] = freq[t] + 1\n        end\n    end\n    return freq\nend",
    "\tlocal freq_list = {}\n\tfor i = 1, #test_list do\n\t\tlocal test_tuple = test_list[i]\n\t\tlocal test_tuple_str = table.concat(test_tuple, ',')\n\t\tif not freq_list[test_tuple_str] then\n\t\t\tfreq_list[test_tuple_str] = 1\n\t\telse\n\t\t\tfreq_list[test_tuple_str] = freq_list[test_tuple_str] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        if freq[tuple] == nil then\n            freq[tuple] = 1\n        else\n            freq[tuple] = freq[tuple] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local freq = freq_list[test_tuple]\n        if not freq then\n            freq = 0\n        end\n        freq_list[test_tuple] = freq + 1\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local t = test_list[i]\n        if freq[t] == nil then\n            freq[t] = 1\n        else\n            freq[t] = freq[t] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local t = test_list[i]\n        if not freq[t] then\n            freq[t] = 1\n        else\n            freq[t] = freq[t] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local key = string.format(\"%d,%d\", v[1], v[2])\n        if freq_list[key] == nil then\n            freq_list[key] = 1\n        else\n            freq_list[key] = freq_list[key] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local tuple = v[1]\n        local freq = v[2]\n        if not freq_list[tuple] then\n            freq_list[tuple] = freq\n        else\n            freq_list[tuple] = freq_list[tuple] + freq\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if not freq_list[v] then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if not freq_list[v] then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif freq[v] == nil then\n\t\t\tfreq[v] = 1\n\t\telse\n\t\t\tfreq[v] = freq[v] + 1\n\t\tend\n\tend\n\treturn freq\nend",
    "    local freq = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if freq[key] then\n            freq[key] = freq[key] + 1\n        else\n            freq[key] = 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local key = v[1] .. '_' .. v[2]\n        freq[key] = (freq[key] or 0) + 1\n    end\n    return freq\nend",
    "    local freq_table = {}\n    for _, v in ipairs(test_list) do\n        if freq_table[v] then\n            freq_table[v] = freq_table[v] + 1\n        else\n            freq_table[v] = 1\n        end\n    end\n    return freq_table\nend",
    "    local freq_list = {}\n    for _, v in pairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    local key = v[1] .. ',' .. v[2]\n    if freq_list[key] == nil then\n      freq_list[key] = 1\n    else\n      freq_list[key] = freq_list[key] + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for _, tuple in ipairs(test_list) do\n        local freq = freq_list[tuple] or 0\n        freq_list[tuple] = freq + 1\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local key = tuple[1]\n        local value = tuple[2]\n        if freq[key] == nil then\n            freq[key] = 1\n        else\n            freq[key] = freq[key] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i = 1, #test_list do\n\t\tlocal tuple = test_list[i]\n\t\tif freq_list[tuple] == nil then\n\t\t\tfreq_list[tuple] = 1\n\t\telse\n\t\t\tfreq_list[tuple] = freq_list[tuple] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    local key = v[1] .. ' ' .. v[2]\n    freq_list[key] = (freq_list[key] or 0) + 1\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, tuple in ipairs(test_list) do\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    local freq_count = 0\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        if not freq_list[tuple] then\n            freq_count = freq_count + 1\n            freq_list[tuple] = true\n        end\n    end\n    return freq_count\nend",
    "\tlocal freq_list = {}\n\tfor i,v in ipairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        freq_list[v] = (freq_list[v] or 0) + 1\n    end\n    return freq_list\nend",
    "\tlocal freq_table = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tlocal tuple_str = table.concat(tuple, \",\")\n\t\tif freq_table[tuple_str] == nil then\n\t\t\tfreq_table[tuple_str] = 1\n\t\telse\n\t\t\tfreq_table[tuple_str] = freq_table[tuple_str] + 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        freq[v] = (freq[v] or 0) + 1\n    end\n    return freq\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local test_tuple = test_list[i]\n    local tuple_str = table.concat(test_tuple, \",\")\n    if not freq_list[tuple_str] then\n      freq_list[tuple_str] = 1\n    else\n      freq_list[tuple_str] = freq_list[tuple_str] + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local tuple_str = table.concat(test_tuple, \",\")\n        if freq_list[tuple_str] == nil then\n            freq_list[tuple_str] = 1\n        else\n            freq_list[tuple_str] = freq_list[tuple_str] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        freq[key] = (freq[key] or 0) + 1\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_table = {}\n  for _, tuple in ipairs(test_list) do\n    local key = table.concat(tuple, \",\")\n    if freq_table[key] == nil then\n      freq_table[key] = 1\n    else\n      freq_table[key] = freq_table[key] + 1\n    end\n  end\n  return freq_table\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        freq[key] = (freq[key] or 0) + 1\n    end\n    return freq\nend",
    "  local freq_list = {}\n  for _, tuple in ipairs(test_list) do\n    local freq = freq_list[tuple]\n    if freq then\n      freq_list[tuple] = freq + 1\n    else\n      freq_list[tuple] = 1\n    end\n  end\n  return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        freq[v] = (freq[v] or 0) + 1\n    end\n    return freq\nend",
    "  local freq = {}\n  for _, tup in ipairs(test_list) do\n    local key = table.concat(tup, \",\")\n    freq[key] = (freq[key] or 0) + 1\n  end\n  return freq\nend",
    "  local freq_dict = {}\n  for _, tuple in ipairs(test_list) do\n    local key = table.concat(tuple, ',')\n    if freq_dict[key] == nil then\n      freq_dict[key] = 1\n    else\n      freq_dict[key] = freq_dict[key] + 1\n    end\n  end\n  return freq_dict\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    local freq = freq_list[v]\n    if freq == nil then\n      freq_list[v] = 1\n    else\n      freq_list[v] = freq + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        freq[key] = (freq[key] or 0) + 1\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in pairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif not freq_list[v] then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i = 1, #test_list do\n\t\tlocal freq = 0\n\t\tfor j = 1, #test_list do\n\t\t\tif test_list[i] == test_list[j] then\n\t\t\t\tfreq = freq + 1\n\t\t\tend\n\t\tend\n\t\tif freq_list[freq] == nil then\n\t\t\tfreq_list[freq] = 1\n\t\telse\n\t\t\tfreq_list[freq] = freq_list[freq] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "\tlocal freq = {}\n\tfor i,v in ipairs(test_list) do\n\t\tlocal t = table.concat(v, \",\")\n\t\tif freq[t] == nil then\n\t\t\tfreq[t] = 1\n\t\telse\n\t\t\tfreq[t] = freq[t] + 1\n\t\tend\n\tend\n\treturn freq\nend",
    "  local freq_table = {}\n  for _, v in ipairs(test_list) do\n    freq_table[v] = (freq_table[v] or 0) + 1\n  end\n  return freq_table\nend",
    "\tlocal freq = {}\n\tfor _, tuple in pairs(test_list) do\n\t\tlocal key = tuple[1] .. '_' .. tuple[2]\n\t\tif freq[key] == nil then\n\t\t\tfreq[key] = 1\n\t\telse\n\t\t\tfreq[key] = freq[key] + 1\n\t\tend\n\tend\n\treturn freq\nend",
    "\tlocal freq = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif freq[v] == nil then\n\t\t\tfreq[v] = 1\n\t\telse\n\t\t\tfreq[v] = freq[v] + 1\n\t\tend\n\tend\n\treturn freq\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local tuple = test_list[i]\n    local tuple_str = table.concat(tuple, ',')\n    if freq_list[tuple_str] == nil then\n      freq_list[tuple_str] = 1\n    else\n      freq_list[tuple_str] = freq_list[tuple_str] + 1\n    end\n  end\n  return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i,v in ipairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local test_tuple_str = table.concat(test_tuple, '_')\n        if freq_list[test_tuple_str] == nil then\n            freq_list[test_tuple_str] = 1\n        else\n            freq_list[test_tuple_str] = freq_list[test_tuple_str] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq = {}\n  for _, t in ipairs(test_list) do\n    local t_str = table.concat(t, ',')\n    freq[t_str] = (freq[t_str] or 0) + 1\n  end\n  return freq\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        freq[key] = (freq[key] or 0) + 1\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local tuple_str = table.concat(test_tuple, \",\")\n        if freq_list[tuple_str] == nil then\n            freq_list[tuple_str] = 1\n        else\n            freq_list[tuple_str] = freq_list[tuple_str] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local freq = freq_list[test_tuple]\n        if freq == nil then\n            freq_list[test_tuple] = 1\n        else\n            freq_list[test_tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq = {}\n\tfor i,v in ipairs(test_list) do\n\t\tif freq[v] == nil then\n\t\t\tfreq[v] = 1\n\t\telse\n\t\t\tfreq[v] = freq[v] + 1\n\t\tend\n\tend\n\treturn freq\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "\tlocal freq_list = {}\n\tfor i, v in ipairs(test_list) do\n\t\tlocal freq = 0\n\t\tfor j, w in ipairs(test_list) do\n\t\t\tif v == w then\n\t\t\t\tfreq = freq + 1\n\t\t\tend\n\t\tend\n\t\tif freq_list[freq] == nil then\n\t\t\tfreq_list[freq] = {}\n\t\tend\n\t\ttable.insert(freq_list[freq], v)\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_table = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if freq_table[key] == nil then\n            freq_table[key] = 1\n        else\n            freq_table[key] = freq_table[key] + 1\n        end\n    end\n    return freq_table\nend",
    "    local freq_list = {}\n    for _, tuple in ipairs(test_list) do\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, tuple in pairs(test_list) do\n        local key = table.concat(tuple, ',')\n        if freq_list[key] == nil then\n            freq_list[key] = 1\n        else\n            freq_list[key] = freq_list[key] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, tuple in ipairs(test_list) do\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        if not freq_list[v] then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    freq_list[v] = (freq_list[v] or 0) + 1\n  end\n  return freq_list\nend",
    "\tlocal freq = {}\n\tfor _, v in ipairs(test_list) do\n\t\tlocal t = {}\n\t\tfor _, v in ipairs(v) do\n\t\t\tt[v] = true\n\t\tend\n\t\tlocal k = table.concat(table.keys(t), ',')\n\t\tfreq[k] = (freq[k] or 0) + 1\n\tend\n\treturn freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_dict = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, ',')\n        if freq_dict[key] == nil then\n            freq_dict[key] = 1\n        else\n            freq_dict[key] = freq_dict[key] + 1\n        end\n    end\n    return freq_dict\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, tup in ipairs(test_list) do\n        local key = table.concat(tup, \",\")\n        freq[key] = (freq[key] or 0) + 1\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local tuple = v[1]\n        local freq = v[2]\n        freq_list[tuple] = freq\n    end\n    return freq_list\nend",
    "\tlocal freq = {}\n\tfor _, v in ipairs(test_list) do\n\t\tfreq[v] = (freq[v] or 0) + 1\n\tend\n\treturn freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_table = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, ',')\n        if freq_table[key] then\n            freq_table[key] = freq_table[key] + 1\n        else\n            freq_table[key] = 1\n        end\n    end\n    return freq_table\nend",
    "  local freq_list = {}\n  for i, v in ipairs(test_list) do\n    if freq_list[v] == nil then\n      freq_list[v] = 1\n    else\n      freq_list[v] = freq_list[v] + 1\n    end\n  end\n  return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i = 1, #test_list do\n\t\tlocal tuple = test_list[i]\n\t\tlocal found = false\n\t\tfor j = 1, #freq_list do\n\t\t\tif freq_list[j][1] == tuple then\n\t\t\t\tfreq_list[j][2] = freq_list[j][2] + 1\n\t\t\t\tfound = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif not found then\n\t\t\ttable.insert(freq_list, {tuple, 1})\n\t\tend\n\tend\n\treturn freq_list\nend",
    "\tlocal freq = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif freq[v] == nil then\n\t\t\tfreq[v] = 1\n\t\telse\n\t\t\tfreq[v] = freq[v] + 1\n\t\tend\n\tend\n\treturn freq\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if not freq[v] then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        local freq_flag = false\n        for j,k in ipairs(freq_list) do\n            if v == k then\n                freq_flag = true\n            end\n        end\n        if not freq_flag then\n            table.insert(freq_list, v)\n        end\n    end\n    return #freq_list\nend",
    "  local freq_list = {}\n  for _, tuple in ipairs(test_list) do\n    local freq = freq_list[tuple] or 0\n    freq_list[tuple] = freq + 1\n  end\n  return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "\tlocal freq_table = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif not freq_table[v] then\n\t\t\tfreq_table[v] = 1\n\t\telse\n\t\t\tfreq_table[v] = freq_table[v] + 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local key = table.concat(tuple, ',')\n        if freq[key] == nil then\n            freq[key] = 1\n        else\n            freq[key] = freq[key] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        if freq_list[tuple] == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq_list[tuple] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i = 1, #test_list do\n\t\tlocal tuple = test_list[i]\n\t\tif freq_list[tuple] == nil then\n\t\t\tfreq_list[tuple] = 1\n\t\telse\n\t\t\tfreq_list[tuple] = freq_list[tuple] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i,v in ipairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "  local freq_table = {}\n  for _, tuple in ipairs(test_list) do\n    local key = table.concat(tuple, ',')\n    freq_table[key] = (freq_table[key] or 0) + 1\n  end\n  return freq_table\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    if not freq_list[v] then\n      freq_list[v] = 1\n    else\n      freq_list[v] = freq_list[v] + 1\n    end\n  end\n  return freq_list\nend",
    "  local freq = {}\n  for _, v in ipairs(test_list) do\n    local key = table.concat(v, ',')\n    if freq[key] then\n      freq[key] = freq[key] + 1\n    else\n      freq[key] = 1\n    end\n  end\n  return freq\nend",
    "    local freq_list = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if freq_list[key] == nil then\n            freq_list[key] = 1\n        else\n            freq_list[key] = freq_list[key] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    local key = v[1]..v[2]..v[3]\n    if freq_list[key] == nil then\n      freq_list[key] = 1\n    else\n      freq_list[key] = freq_list[key] + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq = {}\n    for _, tuple in ipairs(test_list) do\n        local key = tuple[1] .. ',' .. tuple[2]\n        if freq[key] == nil then\n            freq[key] = 1\n        else\n            freq[key] = freq[key] + 1\n        end\n    end\n    return freq\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        if freq[tuple] == nil then\n            freq[tuple] = 1\n        else\n            freq[tuple] = freq[tuple] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if not freq then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif not freq[v] then\n\t\t\tfreq[v] = 1\n\t\telse\n\t\t\tfreq[v] = freq[v] + 1\n\t\tend\n\tend\n\treturn freq\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        freq_list[i] = v[2]\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, tuple in ipairs(test_list) do\n        freq[tuple] = (freq[tuple] or 0) + 1\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        local freq = 0\n        for j,w in ipairs(test_list) do\n            if v[1] == w[1] and v[2] == w[2] then\n                freq = freq + 1\n            end\n        end\n        freq_list[i] = {v[1], v[2], freq}\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_list = {}\n  for _, v in ipairs(test_list) do\n    if not freq_list[v] then\n      freq_list[v] = 1\n    else\n      freq_list[v] = freq_list[v] + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if not freq_list[v] then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_table = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tlocal freq = freq_table[tuple]\n\t\tif freq == nil then\n\t\t\tfreq_table[tuple] = 1\n\t\telse\n\t\t\tfreq_table[tuple] = freq + 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local tuple = test_list[i]\n    local freq = freq_list[tuple]\n    if freq == nil then\n      freq_list[tuple] = 1\n    else\n      freq_list[tuple] = freq + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local t = test_list[i]\n        local key = t[1] .. '_' .. t[2]\n        if freq_list[key] == nil then\n            freq_list[key] = 1\n        else\n            freq_list[key] = freq_list[key] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_map = {}\n  for _, v in ipairs(test_list) do\n    local key = table.concat(v, \",\")\n    freq_map[key] = (freq_map[key] or 0) + 1\n  end\n  return freq_map\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq = {}\n  for _, v in ipairs(test_list) do\n    freq[v] = (freq[v] or 0) + 1\n  end\n  return freq\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local tuple = test_list[i]\n    if freq_list[tuple] == nil then\n      freq_list[tuple] = 1\n    else\n      freq_list[tuple] = freq_list[tuple] + 1\n    end\n  end\n  return freq_list\nend",
    "\tlocal freq_table = {}\n\tfor _, v in ipairs(test_list) do\n\t\tlocal key = v[1] .. v[2]\n\t\tif freq_table[key] == nil then\n\t\t\tfreq_table[key] = 1\n\t\telse\n\t\t\tfreq_table[key] = freq_table[key] + 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local tuple = v[1]\n        local freq = v[2]\n        if freq_list[tuple] == nil then\n            freq_list[tuple] = freq\n        else\n            freq_list[tuple] = freq_list[tuple] + freq\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local freq = freq_list[test_tuple]\n        if freq == nil then\n            freq_list[test_tuple] = 1\n        else\n            freq_list[test_tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor _, v in ipairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        freq[key] = (freq[key] or 0) + 1\n    end\n    return freq\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "\tlocal freq_table = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tlocal tuple_str = table.concat(tuple, \",\")\n\t\tif freq_table[tuple_str] == nil then\n\t\t\tfreq_table[tuple_str] = 1\n\t\telse\n\t\t\tfreq_table[tuple_str] = freq_table[tuple_str] + 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        if not freq_list[v] then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq = {}\n  for _, v in ipairs(test_list) do\n    if not freq[v] then\n      freq[v] = 1\n    else\n      freq[v] = freq[v] + 1\n    end\n  end\n  return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local test_tuple_str = table.concat(test_tuple, ',')\n        if freq_list[test_tuple_str] == nil then\n            freq_list[test_tuple_str] = 1\n        else\n            freq_list[test_tuple_str] = freq_list[test_tuple_str] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq = {}\n  for _, v in ipairs(test_list) do\n    local key = table.concat(v, '_')\n    if freq[key] == nil then\n      freq[key] = 1\n    else\n      freq[key] = freq[key] + 1\n    end\n  end\n  return freq\nend",
    "    local freq_table = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        if freq_table[key] == nil then\n            freq_table[key] = 1\n        else\n            freq_table[key] = freq_table[key] + 1\n        end\n    end\n    return freq_table\nend",
    "\tlocal freq_list = {}\n\tfor i,v in ipairs(test_list) do\n\t\tif freq_list[v] == nil then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        local freq = 0\n        for j,w in ipairs(test_list) do\n            if v[1] == w[1] and v[2] == w[2] then\n                freq = freq + 1\n            end\n        end\n        if freq == 1 then\n            table.insert(freq_list, v)\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        local freq = 0\n        for j,w in ipairs(test_list) do\n            if v[1] == w[1] and v[2] == w[2] then\n                freq = freq + 1\n            end\n        end\n        table.insert(freq_list, {v[1], v[2], freq})\n    end\n    return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i = 1, #test_list do\n\t\tlocal test_tuple = test_list[i]\n\t\tlocal test_tuple_str = table.concat(test_tuple, ',')\n\t\tif freq_list[test_tuple_str] == nil then\n\t\t\tfreq_list[test_tuple_str] = 1\n\t\telse\n\t\t\tfreq_list[test_tuple_str] = freq_list[test_tuple_str] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        local found = false\n        for j, w in ipairs(freq_list) do\n            if v[1] == w[1] then\n                found = true\n                break\n            end\n        end\n        if not found then\n            table.insert(freq_list, v)\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i, v in ipairs(test_list) do\n\t\tif not freq_list[v] then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq_list[v] + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_table = {}\n    for _, tuple in ipairs(test_list) do\n        local key = table.concat(tuple, \",\")\n        freq_table[key] = (freq_table[key] or 0) + 1\n    end\n    return freq_table\nend",
    "    local freq_list = {}\n    for i,v in ipairs(test_list) do\n        local freq = 0\n        for j,k in ipairs(test_list) do\n            if v == k then\n                freq = freq + 1\n            end\n        end\n        freq_list[i] = freq\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local key = tuple[1]\n        if freq_list[key] == nil then\n            freq_list[key] = 1\n        else\n            freq_list[key] = freq_list[key] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        freq_list[v] = (freq_list[v] or 0) + 1\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        local tuple_str = table.concat(tuple, ',')\n        if freq_list[tuple_str] == nil then\n            freq_list[tuple_str] = 1\n        else\n            freq_list[tuple_str] = freq_list[tuple_str] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq = {}\n  for i = 1, #test_list do\n    local t = test_list[i]\n    if freq[t] == nil then\n      freq[t] = 1\n    else\n      freq[t] = freq[t] + 1\n    end\n  end\n  return freq\nend",
    "\tlocal freq_list = {}\n\tfor _, v in ipairs(test_list) do\n\t\tlocal freq = freq_list[v]\n\t\tif not freq then\n\t\t\tfreq_list[v] = 1\n\t\telse\n\t\t\tfreq_list[v] = freq + 1\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        local freq = 0\n        for j, w in ipairs(test_list) do\n            if v == w then\n                freq = freq + 1\n            end\n        end\n        freq_list[i] = freq\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_table = {}\n    for _, v in ipairs(test_list) do\n        local key = table.concat(v, \",\")\n        freq_table[key] = (freq_table[key] or 0) + 1\n    end\n    return freq_table\nend",
    "  local freq_list = {}\n  for i = 1, #test_list do\n    local test_tuple = test_list[i]\n    local test_str = table.concat(test_tuple, ',')\n    if freq_list[test_str] == nil then\n      freq_list[test_str] = 1\n    else\n      freq_list[test_str] = freq_list[test_str] + 1\n    end\n  end\n  return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local freq = freq_list[test_tuple]\n        if freq == nil then\n            freq_list[test_tuple] = 1\n        else\n            freq_list[test_tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        freq[v] = (freq[v] or 0) + 1\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local tuple_str = table.concat(test_tuple, ',')\n        if freq_list[tuple_str] == nil then\n            freq_list[tuple_str] = 1\n        else\n            freq_list[tuple_str] = freq_list[tuple_str] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        if freq_list[tuple] == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq_list[tuple] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i, v in ipairs(test_list) do\n        if freq_list[v] == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        if freq[v] == nil then\n            freq[v] = 1\n        else\n            freq[v] = freq[v] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, tuple in ipairs(test_list) do\n        local freq = freq_list[tuple]\n        if freq == nil then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local freq = 0\n        for j = 1, #test_list do\n            if test_list[i] == test_list[j] then\n                freq = freq + 1\n            end\n        end\n        freq_list[i] = freq\n    end\n    return freq_list\nend",
    "\tlocal freq_table = {}\n\tfor i = 1, #test_list do\n\t\tif freq_table[test_list[i]] == nil then\n\t\t\tfreq_table[test_list[i]] = 1\n\t\telse\n\t\t\tfreq_table[test_list[i]] = freq_table[test_list[i]] + 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "\tlocal freq_table = {}\n\tfor _, tuple in ipairs(test_list) do\n\t\tlocal key = table.concat(tuple, \",\")\n\t\tif freq_table[key] then\n\t\t\tfreq_table[key] = freq_table[key] + 1\n\t\telse\n\t\t\tfreq_table[key] = 1\n\t\tend\n\tend\n\treturn freq_table\nend",
    "    local freq = {}\n    for i = 1, #test_list do\n        local test_tuple = test_list[i]\n        local test_tuple_str = table.concat(test_tuple, ',')\n        if freq[test_tuple_str] == nil then\n            freq[test_tuple_str] = 1\n        else\n            freq[test_tuple_str] = freq[test_tuple_str] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for i = 1, #test_list do\n        local tuple = test_list[i]\n        if not freq_list[tuple] then\n            freq_list[tuple] = 1\n        else\n            freq_list[tuple] = freq_list[tuple] + 1\n        end\n    end\n    return freq_list\nend",
    "    local freq = {}\n    for _, v in ipairs(test_list) do\n        local t = {}\n        for _, v2 in ipairs(v) do\n            t[v2] = true\n        end\n        local t_key = table.concat(table.keys(t), ',')\n        if freq[t_key] == nil then\n            freq[t_key] = 1\n        else\n            freq[t_key] = freq[t_key] + 1\n        end\n    end\n    return freq\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if not freq_list[v] then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend",
    "  local freq_table = {}\n  for i = 1, #test_list do\n    local key = test_list[i][1] .. ',' .. test_list[i][2]\n    if freq_table[key] == nil then\n      freq_table[key] = 1\n    else\n      freq_table[key] = freq_table[key] + 1\n    end\n  end\n  return freq_table\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        local freq = freq_list[v]\n        if freq == nil then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq + 1\n        end\n    end\n    return freq_list\nend",
    "\tlocal freq_list = {}\n\tfor i,v in ipairs(test_list) do\n\t\tlocal flag = false\n\t\tfor j,k in ipairs(freq_list) do\n\t\t\tif v[1] == k[1] and v[2] == k[2] then\n\t\t\t\tk[3] = k[3] + 1\n\t\t\t\tflag = true\n\t\t\tend\n\t\tend\n\t\tif flag == false then\n\t\t\ttable.insert(freq_list, {v[1], v[2], 1})\n\t\tend\n\tend\n\treturn freq_list\nend",
    "    local freq_list = {}\n    for _, v in ipairs(test_list) do\n        if not freq_list[v] then\n            freq_list[v] = 1\n        else\n            freq_list[v] = freq_list[v] + 1\n        end\n    end\n    return freq_list\nend"
  ]
}
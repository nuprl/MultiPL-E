{
  "name": "mbpp_409_min_product_tuple",
  "language": "lua",
  "prompt": "-- Write a function to find the minimum product from the pairs of tuples within a given list.\nlocal function min_product_tuple(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_409_min_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = min_product_tuple\n    lu.assertEquals(candidate({{2, 7}, {2, 6}, {1, 8}, {4, 9}}), 8)\n    lu.assertEquals(candidate({{10, 20}, {15, 2}, {5, 10}}), 30)\n    lu.assertEquals(candidate({{11, 44}, {10, 15}, {20, 5}, {12, 9}}), 100)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local min = math.huge\n  for i = 1, #list1 do\n    for j = 1, #list1 do\n      if i ~= j then\n        local product = list1[i][1] * list1[j][1]\n        if product < min then\n          min = product\n        end\n      end\n    end\n  end\n  return min\nend",
    "  local min = math.huge\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      local prod = list1[i][1] * list1[j][1] + list1[i][2] * list1[j][2]\n      if prod < min then\n        min = prod\n      end\n    end\n  end\n  return min\nend",
    "    local min_prod = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local prod = list1[i][1] * list1[i][2]\n        if prod < min_prod then\n            min_prod = prod\n        end\n    end\n    return min_prod\nend",
    "  local min_product = list1[1][1] * list1[1][2]\n  for i = 2, #list1 do\n    local product = list1[i][1] * list1[i][2]\n    if product < min_product then\n      min_product = product\n    end\n  end\n  return min_product\nend",
    "    local min_product = math.huge\n    for i = 1, #list1 do\n        for j = 1, #list1 do\n            if i ~= j then\n                local product = list1[i][1] * list1[j][1]\n                if product < min_product then\n                    min_product = product\n                end\n            end\n        end\n    end\n    return min_product\nend",
    "  local min_product = list1[1][1] * list1[1][2]\n  for i = 2, #list1 do\n    local product = list1[i][1] * list1[i][2]\n    if product < min_product then\n      min_product = product\n    end\n  end\n  return min_product\nend",
    "  local min_product = list1[1][1] * list1[1][2]\n  for i = 2, #list1 do\n    local product = list1[i][1] * list1[i][2]\n    if product < min_product then\n      min_product = product\n    end\n  end\n  return min_product\nend",
    "    local min_product = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local product = list1[i][1] * list1[i][2]\n        if product < min_product then\n            min_product = product\n        end\n    end\n    return min_product\nend",
    "\tlocal min_product = list1[1][1] * list1[1][2]\n\tfor i = 2, #list1 do\n\t\tlocal product = list1[i][1] * list1[i][2]\n\t\tif product < min_product then\n\t\t\tmin_product = product\n\t\tend\n\tend\n\treturn min_product\nend",
    "    local min_product = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local product = list1[i][1] * list1[i][2]\n        if product < min_product then\n            min_product = product\n        end\n    end\n    return min_product\nend",
    "\tlocal min_product = list1[1][1] * list1[1][2]\n\tfor i = 2, #list1 do\n\t\tlocal product = list1[i][1] * list1[i][2]\n\t\tif product < min_product then\n\t\t\tmin_product = product\n\t\tend\n\tend\n\treturn min_product\nend",
    "  local min = list1[1][1] * list1[1][2]\n  for i = 2, #list1 do\n    local product = list1[i][1] * list1[i][2]\n    if product < min then\n      min = product\n    end\n  end\n  return min\nend",
    "  local min_product = math.huge\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      local product = list1[i] * list1[j]\n      if product < min_product then\n        min_product = product\n      end\n    end\n  end\n  return min_product\nend",
    "    local min = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local product = list1[i][1] * list1[i][2]\n        if product < min then\n            min = product\n        end\n    end\n    return min\nend",
    "    local min = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local product = list1[i][1] * list1[i][2]\n        if product < min then\n            min = product\n        end\n    end\n    return min\nend",
    "    local min_product = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local product = list1[i][1] * list1[i][2]\n        if product < min_product then\n            min_product = product\n        end\n    end\n    return min_product\nend",
    "    local min = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local product = list1[i][1] * list1[i][2]\n        if product < min then\n            min = product\n        end\n    end\n    return min\nend",
    "\tlocal min_product = list1[1][1] * list1[1][2]\n\tfor i = 2, #list1 do\n\t\tlocal product = list1[i][1] * list1[i][2]\n\t\tif product < min_product then\n\t\t\tmin_product = product\n\t\tend\n\tend\n\treturn min_product\nend",
    "\tlocal min_product = list1[1][1] * list1[1][2]\n\tfor i = 2, #list1 do\n\t\tlocal product = list1[i][1] * list1[i][2]\n\t\tif product < min_product then\n\t\t\tmin_product = product\n\t\tend\n\tend\n\treturn min_product\nend",
    "    local min_product = list1[1][1] * list1[1][2]\n    for i = 2, #list1 do\n        local product = list1[i][1] * list1[i][2]\n        if product < min_product then\n            min_product = product\n        end\n    end\n    return min_product\nend"
  ]
}
{
  "name": "mbpp_127_multiply_int",
  "language": "lua",
  "prompt": "-- Write a function to multiply two integers.\nlocal function multiply_int(x, y)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = multiply_int\n    lu.assertEquals(candidate(10, 20), 200)\n    lu.assertEquals(candidate(5, 10), 50)\n    lu.assertEquals(candidate(4, 8), 32)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return x * y\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  if x == 0 or y == 0 then\n    return 0\n  elseif x < 0 then\n    return -multiply_int(-x, y)\n  elseif y < 0 then\n    return -multiply_int(x, -y)\n  else\n    return x + multiply_int(x, y - 1)\n  end\nend",
    "    return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end",
    "    if y == 0 then\n        return 0\n    end\n    if y < 0 then\n        return -multiply_int(x, -y)\n    end\n    return x + multiply_int(x, y - 1)\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    -- TODO: Implement this function.\n    return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  return x * y\nend",
    "    if y == 0 then return 0 end\n    if y < 0 then return -multiply_int(x, -y) end\n    return x + multiply_int(x, y - 1)\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -x + multiply_int(x, y + 1)\n  end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    while y > 0 do\n        if y % 2 == 1 then\n            result = result + x\n        end\n        x = x * 2\n        y = math.floor(y / 2)\n    end\n    return result\nend",
    "  return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    elseif x == 1 then\n        return y\n    elseif y == 1 then\n        return x\n    else\n        local result = 0\n        for i = 1, y do\n            result = result + x\n        end\n        return result\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    return x * y\nend",
    "  if x == 0 or y == 0 then\n    return 0\n  end\n  if x < 0 and y < 0 then\n    return multiply_int(-x, -y)\n  end\n  if x < 0 then\n    return -multiply_int(-x, y)\n  end\n  if y < 0 then\n    return -multiply_int(x, -y)\n  end\n  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  return x * y\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "    return x * y\nend",
    "    return x * y\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end\n    if x < 0 and y < 0 then\n        return multiply_int(-x, -y)\n    end\n    if x < 0 then\n        return -multiply_int(-x, y)\n    end\n    if y < 0 then\n        return -multiply_int(x, -y)\n    end\n    if y == 1 then\n        return x\n    end\n    return x + multiply_int(x, y - 1)\nend",
    "  return x * y\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  return x * y\nend",
    "    return x * y\nend",
    "    return x * y\nend",
    "    return x * y\nend",
    "    local result = 0\n    while y > 0 do\n        if y % 2 == 1 then\n            result = result + x\n        end\n        x = x + x\n        y = math.floor(y / 2)\n    end\n    return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end\n    if x < 0 and y < 0 then\n        return multiply_int(-x, -y)\n    end\n    if x < 0 then\n        return -multiply_int(-x, y)\n    end\n    if y < 0 then\n        return -multiply_int(x, -y)\n    end\n    if y == 1 then\n        return x\n    end\n    return x + multiply_int(x, y - 1)\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end\n    local result = 0\n    if y > 0 then\n        for i = 1, y do\n            result = result + x\n        end\n    else\n        for i = 1, -y do\n            result = result - x\n        end\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  if y < 0 then\n    return -multiply_int(x, -y)\n  elseif y == 0 then\n    return 0\n  else\n    return x + multiply_int(x, y - 1)\n  end\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -multiply_int(x, -y)\n  end\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -x + multiply_int(x, y + 1)\n  end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local function add(a, b)\n    if b == 0 then\n      return a\n    else\n      return add(a + 1, b - 1)\n    end\n  end",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    -- TODO: Implement this function.\n    return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  if y == 0 then\n    return 0\n  elseif y < 0 then\n    return -(x + multiply_int(x, -y - 1))\n  else\n    return x + multiply_int(x, y - 1)\n  end\nend",
    "  if x == 0 or y == 0 then\n    return 0\n  end\n  local z = multiply_int(x, math.floor(y / 2))\n  if y % 2 == 0 then\n    return z + z\n  else\n    return z + z + x\n  end\nend",
    "    return x * y\nend",
    "\tlocal result = 0\n\tfor i = 1, y do\n\t\tresult = result + x\n\tend\n\treturn result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    return x * y\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -multiply_int(x, -y)\n  end\nend",
    "    return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "    return x * y\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  if y == 0 then return 0 end\n  if y > 0 then return x + multiply_int(x, y - 1) end\n  if y < 0 then return -multiply_int(x, -y) end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "  local z = 0\n  for i = 1, y do\n    z = z + x\n  end\n  return z\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  return x * y\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -multiply_int(x, -y)\n  end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    return x * y\nend",
    "\tlocal result = 0\n\twhile y > 0 do\n\t\tif y % 2 == 1 then\n\t\t\tresult = result + x\n\t\tend\n\t\tx = x + x\n\t\ty = y // 2\n\tend\n\treturn result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end\n    local result = 0\n    if x > 0 then\n        for i = 1, y do\n            result = result + x\n        end\n    else\n        for i = 1, -y do\n            result = result - x\n        end\n    end\n    return result\nend",
    "  return x * y\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "  if x == 0 or y == 0 then\n    return 0\n  else\n    return x + multiply_int(x, y - 1)\n  end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end",
    "  if y == 0 then return 0 end\n  if y < 0 then return -multiply_int(x, -y) end\n  return x + multiply_int(x, y - 1)\nend",
    "    return x * y\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "\tlocal result = 0\n\twhile y > 0 do\n\t\tif y % 2 == 1 then\n\t\t\tresult = result + x\n\t\tend\n\t\tx = x * 2\n\t\ty = math.floor(y / 2)\n\tend\n\treturn result\nend",
    "  if y == 0 then return 0 end\n  if y < 0 then return -multiply_int(x, -y) end\n  return x + multiply_int(x, y - 1)\nend",
    "  local result = 0\n  local x_is_negative = false\n  local y_is_negative = false",
    "    if x == 0 or y == 0 then\n        return 0\n    end",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    return x * y\nend",
    "  return x * y\nend",
    "  return x * y\nend",
    "    return x * y\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "    local result = 0\n    local abs_x = abs(x)\n    local abs_y = abs(y)\n    for i = 1, abs_y do\n        result = result + abs_x\n    end\n    if x < 0 and y < 0 then\n        return result\n    elseif x < 0 or y < 0 then\n        return -result\n    else\n        return result\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y < 0 then\n        return -(x + multiply_int(x, -y - 1))\n    else\n        return x + multiply_int(x, y - 1)\n    end\nend",
    "  if x == 0 or y == 0 then\n    return 0\n  end\n  local result = 0\n  if x < 0 then\n    x = -x\n    y = -y\n  end\n  for i = 1, x do\n    result = result + y\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  return x * y\nend",
    "    if y == 0 then\n        return 0\n    elseif y < 0 then\n        return -multiply_int(x, -y)\n    else\n        return x + multiply_int(x, y - 1)\n    end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    else\n        return x + multiply_int(x, y - 1)\n    end\nend",
    "  if y == 0 then\n    return 0\n  elseif y < 0 then\n    return -multiply_int(x, -y)\n  else\n    return x + multiply_int(x, y - 1)\n  end\nend",
    "  return x * y\nend",
    "  return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    return x * y\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    local x_neg = false\n    local y_neg = false\n    if x < 0 then\n        x_neg = true\n        x = -x\n    end\n    if y < 0 then\n        y_neg = true\n        y = -y\n    end\n    for i = 1, y do\n        result = result + x\n    end\n    if x_neg ~= y_neg then\n        result = -result\n    end\n    return result\nend",
    "    return x * y\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -x + multiply_int(x, y + 1)\n  end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    local result = 0\n    while y > 0 do\n        if y % 2 == 1 then\n            result = result + x\n        end\n        x = x + x\n        y = math.floor(y / 2)\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then return 0 end\n    if y < 0 then return -multiply_int(x, -y) end\n    return x + multiply_int(x, y - 1)\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "  return x * y\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -multiply_int(x, -y)\n  end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "    if x == 0 or y == 0 then\n        return 0\n    end",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    local result = 0\n    while y > 0 do\n        if y % 2 == 1 then\n            result = result + x\n        end\n        x = x + x\n        y = math.floor(y / 2)\n    end\n    return result\nend",
    "\tif y == 0 then\n\t\treturn 0\n\telseif y > 0 then\n\t\treturn x + multiply_int(x, y - 1)\n\telse\n\t\treturn -multiply_int(x, -y)\n\tend\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -x + multiply_int(x, y + 1)\n  end\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  return x * y\nend",
    "  if y == 0 then return 0 end\n  if y < 0 then return -multiply_int(x, -y) end\n  return x + multiply_int(x, y - 1)\nend",
    "  if y == 0 then return 0 end\n  if y < 0 then return -multiply_int(x, -y) end\n  return x + multiply_int(x, y - 1)\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -x + multiply_int(x, y + 1)\n    end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  if x < 0 then\n    return -multiply_int(-x, y)\n  elseif y < 0 then\n    return -multiply_int(x, -y)\n  elseif y == 0 then\n    return 0\n  elseif y == 1 then\n    return x\n  else\n    return x + multiply_int(x, y - 1)\n  end\nend",
    "    if y == 0 then\n        return 0\n    elseif y > 0 then\n        return x + multiply_int(x, y - 1)\n    else\n        return -multiply_int(x, -y)\n    end\nend",
    "  local result = 0\n  local y_abs = math.abs(y)\n  for i = 1, y_abs do\n    result = result + x\n  end\n  if y < 0 then\n    result = -result\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend",
    "  if y == 0 then\n    return 0\n  elseif y > 0 then\n    return x + multiply_int(x, y - 1)\n  else\n    return -x + multiply_int(x, y + 1)\n  end\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  local result = 0\n  local i = 0\n  while i < y do\n    result = result + x\n    i = i + 1\n  end\n  return result\nend",
    "    local result = 0\n    for i = 1, y do\n        result = result + x\n    end\n    return result\nend",
    "  if y == 0 then return 0 end\n  if y < 0 then return -multiply_int(x, -y) end\n  return x + multiply_int(x, y - 1)\nend",
    "  local result = 0\n  for i = 1, y do\n    result = result + x\n  end\n  return result\nend"
  ]
}
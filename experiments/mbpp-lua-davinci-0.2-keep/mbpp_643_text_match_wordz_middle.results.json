{
  "name": "mbpp_643_text_match_wordz_middle",
  "language": "lua",
  "prompt": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_643_text_match_wordz_middle.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkauiv2tn.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkauiv2tn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$') ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl65qcziz.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpl65qcziz.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe0d56em3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpe0d56em3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '%f[%w]z%f[%W]'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg4zfyqh1.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpg4zfyqh1.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return text:match(pattern) ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprw1kwnrt.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmprw1kwnrt.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9b53dobg.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp9b53dobg.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, 'z.-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbxe76xgi.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpbxe76xgi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    -- TODO: Implement the function\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2mpezyfh.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp2mpezyfh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9b53dobg.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp9b53dobg.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8zbt59t4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp8zbt59t4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.find(text, 'z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprcamu4h3.lua:9: expected: true, actual: 7\nstack traceback:\n\t/tmp/tmprcamu4h3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local s, e = string.find(text, 'z')\n    if s == 1 or e == #text then\n        return false\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbgbcnz0w.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpbgbcnz0w.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8zbt59t4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp8zbt59t4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"%w*z%w*\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghgpzc41.lua:9: expected: true, actual: \"pythonzabc\"\nstack traceback:\n\t/tmp/tmpghgpzc41.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc0s_zykc.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpc0s_zykc.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"%f[%a]z%f[%A]\"\n  return string.find(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9egrck6r.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp9egrck6r.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9b53dobg.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp9b53dobg.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\treturn text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwut0z1zd.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpwut0z1zd.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, \"^[^z]*z[^z]*$\")\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpez8lad2r.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpez8lad2r.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp67boxbn_.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp67boxbn_.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, '^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvb30gkh.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnvb30gkh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9b53dobg.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp9b53dobg.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.find(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprm94g_p7.lua:9: expected: true, actual: 7\nstack traceback:\n\t/tmp/tmprm94g_p7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"%f[%w]z%f[^%w]\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwjl7csxh.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpwjl7csxh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps4ind2k5.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmps4ind2k5.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkp_5_4my.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkp_5_4my.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqlw22x00.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpqlw22x00.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"%f[%a]z%f[%A]\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq825trnc.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpq825trnc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$') ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuhaa4aok.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpuhaa4aok.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '%f[%a]z%f[%A]'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpircbo5us.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpircbo5us.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqz8623oe.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpqz8623oe.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '%w*z%w*')\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6w5lzn6l.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp6w5lzn6l.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9b53dobg.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp9b53dobg.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"%w*z%w*\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghgpzc41.lua:9: expected: true, actual: \"pythonzabc\"\nstack traceback:\n\t/tmp/tmpghgpzc41.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8zbt59t4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp8zbt59t4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '%w*z%w*')\n    return match ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcps4887e.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpcps4887e.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkauiv2tn.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkauiv2tn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqlw22x00.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpqlw22x00.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkp_5_4my.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkp_5_4my.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqlw22x00.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpqlw22x00.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe0d56em3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpe0d56em3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, 'z.-z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp96w4c4hg.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp96w4c4hg.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"%f[%a]z%f[%A]\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppab_kelc.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmppab_kelc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkauiv2tn.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkauiv2tn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\tlocal pattern = \"^[^z]*z[^z]*$\"\n\treturn string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplel7r292.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmplel7r292.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '%f[%a]z%f[%A]'\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxfo94lt4.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpxfo94lt4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local match = text:match(\"^[^z]*z[^z]*$\")\n  if match then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7kawolfb.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp7kawolfb.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]+z[^z]+$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp017_4trr.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp017_4trr.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '^[^z]*z[^z]*$')\n    if match then\n        return match\n    else\n        return nil\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpixu61j87.lua:14: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpixu61j87.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9b53dobg.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp9b53dobg.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, 'z')\n    if match == nil then\n        return false\n    else\n        return true\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0k356afm.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp0k356afm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe0d56em3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpe0d56em3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '%f[%a]z%f[%A]'\n    return text:match(pattern) ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbcde7pwg.lua:10: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpbcde7pwg.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkauiv2tn.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkauiv2tn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe0d56em3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpe0d56em3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '%w*z%w*')\n    return match ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcps4887e.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpcps4887e.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, 'z.+z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp74mkvfht.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp74mkvfht.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, 'z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnhqa2_do.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpnhqa2_do.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqz8623oe.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpqz8623oe.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"z\"\n    local result = string.match(text, pattern)\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeg279hf8.lua:11: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpeg279hf8.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz56p0x7h.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpz56p0x7h.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqz8623oe.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpqz8623oe.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '%f[%a]z%f[%A]'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpircbo5us.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpircbo5us.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptco2iknz.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmptco2iknz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe0d56em3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpe0d56em3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhxug1s4.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpdhxug1s4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqz8623oe.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpqz8623oe.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps4ind2k5.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmps4ind2k5.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmsos5dcn.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpmsos5dcn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuht1igk3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpuht1igk3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.find(text, 'z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4_f7n2dl.lua:9: expected: true, actual: 7\nstack traceback:\n\t/tmp/tmp4_f7n2dl.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509854,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0oc1qgi3.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp0oc1qgi3.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '^[^z]*z[^z]*$')\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxc7ocwnp.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxc7ocwnp.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\tlocal match = string.match(text, \"^[^z]*z[^z]*$\")\n\tif match then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcfpti2yc.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpcfpti2yc.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"%f[%w]z%f[%W]\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc18xnv5y.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpc18xnv5y.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_222_check_type",
  "language": "lua",
  "prompt": "-- Write a function to check if all the elements in tuple have same data type or not.\nlocal function check_type(test_tuple)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_type\n    lu.assertEquals(candidate({5, 6, 7, 3, 5, 6}), true)\n    lu.assertEquals(candidate({1, 2, '4'}), false)\n    lu.assertEquals(candidate({3, 2, 1, 4, 5}), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local type_of_first_element = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= type_of_first_element then\n            return false\n        end\n    end\n    return true\nend",
    "\tlocal first_type = type(test_tuple[1])\n\tfor i = 2, #test_tuple do\n\t\tif type(test_tuple[i]) ~= first_type then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    local type_of_first_element = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= type_of_first_element then\n            return false\n        end\n    end\n    return true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "    local type_ = type(test_tuple[1])\n    for _, value in ipairs(test_tuple) do\n        if type(value) ~= type_ then\n            return false\n        end\n    end\n    return true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "\tlocal type_of_first_element = type(test_tuple[1])\n\tfor i = 2, #test_tuple do\n\t\tif type(test_tuple[i]) ~= type_of_first_element then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "\tlocal first_type = type(test_tuple[1])\n\tfor i = 2, #test_tuple do\n\t\tif type(test_tuple[i]) ~= first_type then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    local first_type = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= first_type then\n            return false\n        end\n    end\n    return true\nend",
    "    local type_tuple = {}\n    for i,v in ipairs(test_tuple) do\n        type_tuple[i] = type(v)\n    end\n    for i,v in ipairs(type_tuple) do\n        if v ~= type_tuple[1] then\n            return false\n        end\n    end\n    return true\nend",
    "    local type_of_first_element = type(test_tuple[1])\n    for _, element in ipairs(test_tuple) do\n        if type(element) ~= type_of_first_element then\n            return false\n        end\n    end\n    return true\nend",
    "\tlocal first_type = type(test_tuple[1])\n\tfor i = 2, #test_tuple do\n\t\tif type(test_tuple[i]) ~= first_type then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    local type_of_first_element = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= type_of_first_element then\n            return false\n        end\n    end\n    return true\nend",
    "    local type_of_first_element = type(test_tuple[1])\n    for i = 2, #test_tuple do\n        if type(test_tuple[i]) ~= type_of_first_element then\n            return false\n        end\n    end\n    return true\nend"
  ]
}
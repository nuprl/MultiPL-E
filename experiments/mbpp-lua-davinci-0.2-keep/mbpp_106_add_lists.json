{
  "name": "mbpp_106_add_lists",
  "language": "lua",
  "prompt": "-- Write a function to append the given list to the given tuples.\nlocal function add_lists(test_list, test_tup)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_106_add_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add_lists\n    lu.assertEquals(candidate({5, 6, 7}, {9, 10}), {9, 10, 5, 6, 7})\n    lu.assertEquals(candidate({6, 7, 8}, {10, 11}), {10, 11, 6, 7, 8})\n    lu.assertEquals(candidate({7, 8, 9}, {11, 12}), {11, 12, 7, 8, 9})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local new_tup = {}\n  for i,v in ipairs(test_tup) do\n    new_tup[i] = v\n  end\n  for i,v in ipairs(test_list) do\n    new_tup[#new_tup+1] = v\n  end\n  return new_tup\nend",
    "  local result = {}\n  for i, v in ipairs(test_tup) do\n    result[i] = v\n  end\n  for i, v in ipairs(test_list) do\n    result[#result + 1] = v\n  end\n  return result\nend",
    "    local new_tup = {}\n    for i,v in ipairs(test_tup) do\n        new_tup[i] = v\n    end\n    for i,v in ipairs(test_list) do\n        new_tup[#new_tup + 1] = v\n    end\n    return new_tup\nend",
    "    local new_tup = {}\n    for i, v in ipairs(test_tup) do\n        new_tup[i] = v\n    end\n    for i, v in ipairs(test_list) do\n        new_tup[#new_tup + 1] = v\n    end\n    return new_tup\nend",
    "  local new_list = {}\n  for i, v in ipairs(test_list) do\n    new_list[i] = v\n  end\n  for i, v in ipairs(test_tup) do\n    new_list[i + #test_list] = v\n  end\n  return new_list\nend",
    "    local new_tup = {}\n    for i, v in ipairs(test_tup) do\n        new_tup[i] = v\n    end\n    for i, v in ipairs(test_list) do\n        new_tup[#new_tup + 1] = v\n    end\n    return new_tup\nend",
    "  local new_tup = {}\n  for i, v in ipairs(test_tup) do\n    new_tup[i] = v\n  end\n  for i, v in ipairs(test_list) do\n    new_tup[#new_tup + 1] = v\n  end\n  return new_tup\nend",
    "  local result = {}\n  for i = 1, #test_tup do\n    result[i] = {test_tup[i], test_list[i]}\n  end\n  return result\nend",
    "    local new_tup = {}\n    for i,v in ipairs(test_tup) do\n        new_tup[i] = v\n    end\n    for i,v in ipairs(test_list) do\n        new_tup[#new_tup+1] = v\n    end\n    return new_tup\nend",
    "  local new_tup = {}\n  for i, v in ipairs(test_tup) do\n    new_tup[i] = v\n  end\n  for i, v in ipairs(test_list) do\n    new_tup[#new_tup + 1] = v\n  end\n  return new_tup\nend",
    "    local new_list = {}\n    for _, v in ipairs(test_list) do\n        new_list[#new_list + 1] = v\n    end\n    for _, v in ipairs(test_tup) do\n        new_list[#new_list + 1] = v\n    end\n    return new_list\nend",
    "    local result = {}\n    for i, v in ipairs(test_tup) do\n        result[i] = v\n    end\n    for i, v in ipairs(test_list) do\n        result[#result + 1] = v\n    end\n    return result\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup do\n        new_tup[i] = test_tup[i]\n    end\n    for i = 1, #test_list do\n        new_tup[#new_tup + 1] = test_list[i]\n    end\n    return new_tup\nend",
    "    local new_tup = {}\n    for i = 1, #test_tup do\n        new_tup[i] = test_tup[i]\n    end\n    for i = 1, #test_list do\n        new_tup[#test_tup + i] = test_list[i]\n    end\n    return new_tup\nend",
    "  local new_tup = {}\n  for i, v in ipairs(test_tup) do\n    new_tup[i] = v\n  end\n  for i, v in ipairs(test_list) do\n    new_tup[#new_tup + 1] = v\n  end\n  return new_tup\nend",
    "    local new_tup = {}\n    for i, v in ipairs(test_tup) do\n        new_tup[i] = v\n    end\n    for i, v in ipairs(test_list) do\n        new_tup[#new_tup + 1] = v\n    end\n    return new_tup\nend",
    "    local result = {}\n    for i, v in ipairs(test_tup) do\n        result[i] = v\n    end\n    for i, v in ipairs(test_list) do\n        result[#result + 1] = v\n    end\n    return result\nend",
    "  local new_list = {}\n  for i = 1, #test_tup do\n    new_list[i] = test_tup[i]\n  end\n  for i = 1, #test_list do\n    new_list[#new_list + 1] = test_list[i]\n  end\n  return new_list\nend",
    "  local result = {}\n  for i = 1, #test_tup do\n    table.insert(result, test_tup[i])\n  end\n  for i = 1, #test_list do\n    table.insert(result, test_list[i])\n  end\n  return result\nend",
    "  local new_tup = {}\n  for i, v in ipairs(test_tup) do\n    new_tup[i] = v\n  end\n  for i, v in ipairs(test_list) do\n    new_tup[i + #test_tup] = v\n  end\n  return new_tup\nend"
  ]
}
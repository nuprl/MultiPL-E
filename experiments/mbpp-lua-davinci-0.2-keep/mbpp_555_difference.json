{
  "name": "mbpp_555_difference",
  "language": "lua",
  "prompt": "-- Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\nlocal function difference(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = difference\n    lu.assertEquals(candidate(3), 30)\n    lu.assertEquals(candidate(5), 210)\n    lu.assertEquals(candidate(2), 6)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i^3\n    sum = sum + i\n  end\n  return sum_of_cubes - sum^2\nend",
    "\tlocal sum_of_cubes = 0\n\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum_of_cubes = sum_of_cubes + i^3\n\t\tsum = sum + i\n\tend\n\treturn sum_of_cubes - sum^2\nend",
    "    local sum_of_cubes = 0\n    local sum = 0\n    for i = 1, n do\n        sum_of_cubes = sum_of_cubes + i * i * i\n        sum = sum + i\n    end\n    return sum_of_cubes - sum * sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (i * i * i)\n    end\n    return sum\nend",
    "\tlocal sum_of_cubes = 0\n\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum_of_cubes = sum_of_cubes + i^3\n\t\tsum = sum + i\n\tend\n\treturn sum_of_cubes - sum^2\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i^3\n    sum = sum + i\n  end\n  return sum_of_cubes - sum^2\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i * i * i\n    sum = sum + i\n  end\n  return sum_of_cubes - sum * sum\nend",
    "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum = sum + (i * i * i)\n\tend\n\treturn sum - (n * (n + 1) / 2)\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (i * i * i)\n  end\n  return (n * (n + 1) / 2) ^ 2 - sum\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i^3\n    sum = sum + i\n  end\n  return sum_of_cubes - sum^2\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i^3\n    sum = sum + i\n  end\n  return sum_of_cubes - sum^2\nend",
    "    local sum = 0\n    local sum_cubes = 0\n    for i = 1, n do\n        sum = sum + i\n        sum_cubes = sum_cubes + i * i * i\n    end\n    return sum_cubes - sum\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i^3\n    sum = sum + i\n  end\n  return sum_of_cubes - sum^2\nend",
    "\tlocal sum_of_cubes = 0\n\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum_of_cubes = sum_of_cubes + i^3\n\t\tsum = sum + i\n\tend\n\treturn sum_of_cubes - sum^2\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i * i * i\n    sum = sum + i\n  end\n  return sum_of_cubes - sum * sum\nend",
    "    local sum_of_cubes = 0\n    local sum = 0\n    for i = 1, n do\n        sum_of_cubes = sum_of_cubes + i * i * i\n        sum = sum + i\n    end\n    return sum_of_cubes - sum * sum\nend",
    "    local sum_of_cubes = 0\n    local sum = 0\n    for i = 1, n do\n        sum_of_cubes = sum_of_cubes + i * i * i\n        sum = sum + i\n    end\n    return sum_of_cubes - sum * sum\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i ^ 3\n    sum = sum + i\n  end\n  return sum_of_cubes - sum ^ 2\nend",
    "  local sum_of_cubes = 0\n  local sum = 0\n  for i = 1, n do\n    sum_of_cubes = sum_of_cubes + i * i * i\n    sum = sum + i\n  end\n  return sum_of_cubes - sum * sum\nend",
    "    local sum_of_cubes = 0\n    local sum = 0\n    for i = 1, n do\n        sum_of_cubes = sum_of_cubes + i^3\n        sum = sum + i\n    end\n    return sum_of_cubes - sum^2\nend"
  ]
}
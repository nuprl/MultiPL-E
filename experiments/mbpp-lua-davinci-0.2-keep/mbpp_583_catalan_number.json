{
  "name": "mbpp_583_catalan_number",
  "language": "lua",
  "prompt": "-- Write a function which returns nth catalan number.\nlocal function catalan_number(num)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = catalan_number\n    lu.assertEquals(candidate(10), 16796)\n    lu.assertEquals(candidate(9), 4862)\n    lu.assertEquals(candidate(7), 429)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local catalan = {}\n    catalan[0] = 1\n    catalan[1] = 1\n    for i = 2, num do\n        catalan[i] = 0\n        for j = 0, i - 1 do\n            catalan[i] = catalan[i] + catalan[j] * catalan[i - j - 1]\n        end\n    end\n    return catalan[num]\nend",
    "    local function factorial(num)\n        if num == 0 then\n            return 1\n        else\n            return num * factorial(num - 1)\n        end\n    end",
    "    local function factorial(num)\n        if num == 0 then\n            return 1\n        else\n            return num * factorial(num - 1)\n        end\n    end\n    return factorial(2 * num) / (factorial(num + 1) * factorial(num))\nend",
    "\tif num == 0 then\n\t\treturn 1\n\tend\n\tlocal result = 0\n\tfor i = 0, num - 1 do\n\t\tresult = result + catalan_number(i) * catalan_number(num - i - 1)\n\tend\n\treturn result\nend",
    "  local catalan = {}\n  catalan[0] = 1\n  catalan[1] = 1\n  for i = 2, num do\n    catalan[i] = 0\n    for j = 0, i - 1 do\n      catalan[i] = catalan[i] + catalan[j] * catalan[i - j - 1]\n    end\n  end\n  return catalan[num]\nend",
    "  local function factorial(num)\n    local fact = 1\n    for i = 1, num do\n      fact = fact * i\n    end\n    return fact\n  end",
    "    local function factorial(n)\n        if n == 0 then\n            return 1\n        else\n            return n * factorial(n - 1)\n        end\n    end",
    "\tlocal catalan = {}\n\tcatalan[0] = 1\n\tcatalan[1] = 1\n\tfor i = 2, num do\n\t\tcatalan[i] = 0\n\t\tfor j = 0, i - 1 do\n\t\t\tcatalan[i] = catalan[i] + catalan[j] * catalan[i - j - 1]\n\t\tend\n\tend\n\treturn catalan[num]\nend",
    "    local function factorial(num)\n        local result = 1\n        for i = 1, num do\n            result = result * i\n        end\n        return result\n    end",
    "    local catalan = {}\n    catalan[0] = 1\n    catalan[1] = 1\n    for i = 2, num do\n        catalan[i] = 0\n        for j = 0, i - 1 do\n            catalan[i] = catalan[i] + catalan[j] * catalan[i - j - 1]\n        end\n    end\n    return catalan[num]\nend",
    "  if num == 0 then return 1 end\n  local sum = 0\n  for i = 0, num-1 do\n    sum = sum + catalan_number(i) * catalan_number(num-i-1)\n  end\n  return sum\nend",
    "    local catalan = {}\n    catalan[0] = 1\n    catalan[1] = 1\n    for i = 2, num do\n        catalan[i] = 0\n        for j = 0, i - 1 do\n            catalan[i] = catalan[i] + catalan[j] * catalan[i - j - 1]\n        end\n    end\n    return catalan[num]\nend",
    "\tlocal catalan = {}\n\tcatalan[0] = 1\n\tcatalan[1] = 1\n\tfor i = 2, num do\n\t\tcatalan[i] = 0\n\t\tfor j = 0, i - 1 do\n\t\t\tcatalan[i] = catalan[i] + catalan[j] * catalan[i - j - 1]\n\t\tend\n\tend\n\treturn catalan[num]\nend",
    "  local catalan_numbers = {1, 1}\n  local function helper(n)\n    if catalan_numbers[n] then\n      return catalan_numbers[n]\n    end\n    local sum = 0\n    for i = 1, n - 1 do\n      sum = sum + helper(i) * helper(n - i)\n    end\n    catalan_numbers[n] = sum\n    return sum\n  end\n  return helper(num)\nend",
    "  local catalan = {1, 1}\n  for i = 3, num do\n    catalan[i] = 0\n    for j = 1, i - 1 do\n      catalan[i] = catalan[i] + catalan[j] * catalan[i - j]\n    end\n  end\n  return catalan[num]\nend",
    "  local catalan_numbers = {}\n  catalan_numbers[0] = 1\n  catalan_numbers[1] = 1\n  for i = 2, num do\n    catalan_numbers[i] = 0\n    for j = 0, i - 1 do\n      catalan_numbers[i] = catalan_numbers[i] + catalan_numbers[j] * catalan_numbers[i - j - 1]\n    end\n  end\n  return catalan_numbers[num]\nend",
    "\tlocal catalan = {}\n\tcatalan[0] = 1\n\tcatalan[1] = 1\n\tfor i = 2, num do\n\t\tcatalan[i] = 0\n\t\tfor j = 0, i - 1 do\n\t\t\tcatalan[i] = catalan[i] + catalan[j] * catalan[i - j - 1]\n\t\tend\n\tend\n\treturn catalan[num]\nend",
    "    local function factorial(num)\n        local result = 1\n        for i = 2, num do\n            result = result * i\n        end\n        return result\n    end",
    "\tlocal function factorial(n)\n\t\tlocal result = 1\n\t\tfor i = 1, n do\n\t\t\tresult = result * i\n\t\tend\n\t\treturn result\n\tend\n\treturn factorial(2 * num) / (factorial(num + 1) * factorial(num))\nend",
    "\tlocal function factorial(num)\n\t\tlocal result = 1\n\t\tfor i = 1, num do\n\t\t\tresult = result * i\n\t\tend\n\t\treturn result\n\tend\n\treturn factorial(2 * num) / (factorial(num + 1) * factorial(num))\nend"
  ]
}
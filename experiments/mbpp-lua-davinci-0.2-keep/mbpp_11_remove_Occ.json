{
  "name": "mbpp_11_remove_Occ",
  "language": "lua",
  "prompt": "-- Write a python function to remove first and last occurrence of a given character from the string.\nlocal function remove_Occ(s, ch)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_Occ\n    lu.assertEquals(candidate('hello', 'l'), 'heo')\n    lu.assertEquals(candidate('abcda', 'a'), 'bcd')\n    lu.assertEquals(candidate('PHP', 'P'), 'H')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+2)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  if i and j then\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "\tlocal s1 = s:gsub(\"^\"..ch, \"\")\n\tlocal s2 = s1:gsub(ch..\"$\", \"\")\n\treturn s2\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, i + 1)\n  return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  local k = s:len() - j + 1\n  return s:sub(1, i - 1) .. s:sub(i + 1, k - 1) .. s:sub(k + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1)\nend",
    "    local i = s:find(ch)\n    if i == nil then\n        return s\n    end\n    local j = s:find(ch, i + 1)\n    if j == nil then\n        return s:sub(1, i - 1)\n    end\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, i + 1)\n    local k = s:find(ch, j + 1)\n    return s:sub(1, i - 1) .. s:sub(j + 1, k - 1) .. s:sub(k + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+2)\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    local j = s:find(ch)\n    if j then\n        s = s:sub(1, j - 1) .. s:sub(j + 1)\n    end\n    return s\nend",
    "    local i, j = s:find(ch)\n    local k, l = s:find(ch, -1, true)\n    return s:sub(1, i-1) .. s:sub(j+1, k-1) .. s:sub(l+1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "  local i, j = s:find(ch)\n  if i and j then\n    return s:sub(1, i-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "    local s1 = string.gsub(s, ch, \"\")\n    local s2 = string.gsub(s1, ch, \"\")\n    return s2\nend",
    "    local start = s:find(ch)\n    local finish = s:reverse():find(ch)\n    return s:sub(1, start - 1) .. s:sub(start + 1, -finish - 1) .. s:sub(-finish + 1, -1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i - 1) .. s:sub(i + 1, -j) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1)\n    if i and j then\n        return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n    else\n        return s\n    end\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local s1 = s:gsub(\"^\"..ch, \"\")\n    local s2 = s1:gsub(ch..\"$\", \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i == nil then return s end\n    local j = s:find(ch, i + 1, true)\n    if j == nil then return s:sub(1, i - 1) end\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    local i, j = s:find(ch)\n    if i == nil then\n        return s\n    end\n    local s1 = s:sub(1, i - 1)\n    local s2 = s:sub(j + 1)\n    return s1 .. s2\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    return s\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i, j = string.find(s, ch)\n    local s1 = string.sub(s, 1, i - 1)\n    local s2 = string.sub(s, j + 1)\n    return s1 .. s2\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i-1) .. s:sub(i+1)\n    else\n        return s\n    end\nend",
    "    return s:gsub(\"^\"..ch..\"+\", \"\"):gsub(ch..\"+$\", \"\")\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    local i = 1\n    local j = #s\n    while s:sub(i, i) ~= ch do\n        i = i + 1\n    end\n    while s:sub(j, j) ~= ch do\n        j = j - 1\n    end\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1, #s)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1, true)\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\nend",
    "    local first_occ = s:find(ch)\n    local last_occ = s:find(ch, -1)\n    local new_str = s:sub(1, first_occ - 1) .. s:sub(first_occ + 1, last_occ - 1) .. s:sub(last_occ + 1)\n    return new_str\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i == nil then\n\t\treturn s\n\telse\n\t\treturn string.sub(s, 1, i-1) .. string.sub(s, j+1)\n\tend\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:find(ch, -1)\n\tif i == nil or j == nil then\n\t\treturn s\n\tend\n\treturn s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i == nil then\n        return s\n    end\n    local j = s:find(ch, i + 1, true)\n    if j == nil then\n        return s:sub(1, i - 1)\n    end\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local f = s:find(ch)\n    local l = s:reverse():find(ch)\n    if f == nil or l == nil then\n        return s\n    else\n        return s:sub(1, f - 1) .. s:sub(f + 1, -l - 1) .. s:sub(-l + 1, -1)\n    end\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1)\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    if i and j then\n        return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1, true)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1, true)\n    if i and j then\n        return string.sub(s, 1, i - 1) .. string.sub(s, i + 1, j - 1) .. string.sub(s, j + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i, j = string.find(s, ch)\n    if i == nil then\n        return s\n    end\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "  local s1 = s:gsub(ch, \"\")\n  return s1:gsub(ch, \"\")\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n    else\n        return s\n    end\nend\nprint(remove_Occ(\"abcabc\", \"a\"))\nprint(remove_Occ(\"abcabc\", \"b\"))\nprint(remove_Occ(\"abcabc\", \"c\"))\nprint(remove_Occ(\"abcabc\", \"d\"))",
    "  local i = s:find(ch)\n  if i then\n    s = s:sub(1, i-1) .. s:sub(i+1)\n  end\n  i = s:find(ch, -1)\n  if i then\n    s = s:sub(1, i-1) .. s:sub(i+1)\n  end\n  return s\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  if i and j then\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+2)\nend",
    "    local i = s:find(ch)\n    if i then\n        local j = s:reverse():find(ch)\n        return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    if i == nil then\n        return s\n    end\n    if i == 1 then\n        return s:sub(2, -1)\n    end\n    if j == 1 then\n        return s:sub(1, -2)\n    end\n    return s:sub(1, i - 1) .. s:sub(i + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i-1) .. s:sub(i+1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1)\n    local s1 = string.sub(s, 1, i - 1)\n    local s2 = string.sub(s, j + 1, -1)\n    return s1 .. s2\nend",
    "    local f = string.find(s, ch)\n    local l = string.find(s, ch, -1)\n    return string.sub(s, 1, f - 1) .. string.sub(s, l + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+2)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend\nprint(remove_Occ(\"abcabcabc\", \"a\"))",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i - 1) .. s:sub(i + 1, -j) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    else\n        return s\n    end\nend",
    "\tlocal res = \"\"\n\tlocal first = true\n\tfor i = 1, #s do\n\t\tif s:sub(i, i) ~= ch then\n\t\t\tres = res .. s:sub(i, i)\n\t\telseif first then\n\t\t\tfirst = false\n\t\telse\n\t\t\tres = res .. s:sub(i, i)\n\t\tend\n\tend\n\treturn res\nend",
    "    local i, j = s:find(ch)\n    if i == nil then\n        return s\n    end\n    local s1 = s:sub(1, i - 1)\n    local s2 = s:sub(j + 1)\n    return s1 .. s2\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return remove_Occ(s:sub(1, i - 1) .. s:sub(i + 1), ch)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1)\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    if i == nil then\n        return s\n    end\n    if i == 1 then\n        s = s:sub(2)\n    elseif i == #s then\n        s = s:sub(1, #s - 1)\n    else\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    if j == 1 then\n        s = s:sub(2)\n    elseif j == #s then\n        s = s:sub(1, #s - 1)\n    else\n        s = s:sub(1, #s - j) .. s:sub(#s - j + 2)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1, true)\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1, true)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, i+1)\n    local k = s:find(ch, j+1)\n    return s:sub(1, i-1) .. s:sub(j+1, k-1) .. s:sub(k+1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend\nprint(remove_Occ(\"abcabc\", \"a\"))",
    "  local s1 = s:gsub(\"^\" .. ch, \"\")\n  local s2 = s1:gsub(ch .. \"$\", \"\")\n  return s2\nend\nprint(remove_Occ(\"Python\", \"o\"))\nprint(remove_Occ(\"Python\", \"n\"))\nprint(remove_Occ(\"Python\", \"P\"))",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i-1) .. s:sub(i+1)\n    else\n        return s\n    end\nend",
    "    local res = \"\"\n    local first = true\n    for i = 1, #s do\n        if s:sub(i, i) ~= ch then\n            res = res .. s:sub(i, i)\n        elseif first then\n            first = false\n        else\n            res = res .. s:sub(i, i)\n        end\n    end\n    return res\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1)\n    if i == nil or j == nil then\n        return s\n    end\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i, j = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = 1\n    local j = #s\n    while i <= #s do\n        if s:sub(i, i) == ch then\n            s = s:sub(1, i - 1) .. s:sub(i + 1, #s)\n            break\n        end\n        i = i + 1\n    end\n    while j >= 1 do\n        if s:sub(j, j) == ch then\n            s = s:sub(1, j - 1) .. s:sub(j + 1, #s)\n            break\n        end\n        j = j - 1\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    return s\nend",
    "\tlocal i, j = s:find(ch)\n\tlocal k = s:reverse():find(ch)\n\treturn s:sub(1, i-1) .. s:sub(j+1, -k-1) .. s:sub(-k+1)\nend",
    "\tlocal i, j = s:find(ch)\n\tlocal k = s:reverse():find(ch)\n\treturn s:sub(1, i-1)..s:sub(j+1, -k-1)..s:sub(-k+1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    return s1:gsub(ch, \"\")\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local str = s:gsub(ch, \"\")\n    return str\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i-1) .. s:sub(i+1)\n    else\n        return s\n    end\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, #s - j) .. s:sub(#s - j + 2)\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i and j then\n\t\treturn string.sub(s, 1, i-1) .. string.sub(s, j+1)\n\telse\n\t\treturn s\n\tend\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    s = s:gsub(\"^\"..ch, \"\")\n    s = s:gsub(ch..\"$\", \"\")\n    return s\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j) .. s:sub(-j + 2)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local f = s:find(ch)\n    local l = s:find(ch, -1)\n    if f == nil then\n        return s\n    elseif f == l then\n        return s:sub(1, f - 1) .. s:sub(f + 1)\n    else\n        return s:sub(1, f - 1) .. s:sub(f + 1, l - 1) .. s:sub(l + 1)\n    end\nend",
    "  local i = s:find(ch)\n  if i then\n    s = s:sub(1, i - 1) .. s:sub(i + 1)\n  end\n  i = s:find(ch, -1)\n  if i then\n    s = s:sub(1, i - 1) .. s:sub(i + 1)\n  end\n  return s\nend",
    "    return s:gsub(\"^\" .. ch .. \"*(.-)\" .. ch .. \"*$\", \"%1\")\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i-1) .. s:sub(i+1)\n    else\n        return s\n    end\nend",
    "  local i = s:find(ch)\n  if i then\n    s = s:sub(1, i - 1) .. s:sub(i + 1)\n  end\n  i = s:find(ch, -1)\n  if i then\n    s = s:sub(1, i - 1) .. s:sub(i + 1)\n  end\n  return s\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i-1) .. s:sub(i+1)\n    else\n        return s\n    end\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1, true)\n    if i == nil or j == nil then\n        return s\n    end\n    return string.sub(s, 1, i - 1) .. string.sub(s, i + 1, j - 1) .. string.sub(s, j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i == nil then return s end\n    local j = s:reverse():find(ch)\n    if j == nil then return s end\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "  local i = string.find(s, ch)\n  local j = string.find(s, ch, -1, true)\n  if i and j then\n    return string.sub(s, 1, i - 1) .. string.sub(s, i + 1, j - 1) .. string.sub(s, j + 1)\n  else\n    return s\n  end\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    return s:gsub(\"^\" .. ch .. \"*(.-)\" .. ch .. \"*$\", \"%1\")\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local n = string.len(s)\n    local i = string.find(s, ch)\n    local j = string.find(s, ch, i + 1)\n    local s1 = string.sub(s, 1, i - 1)\n    local s2 = string.sub(s, j + 1, n)\n    return s1 .. s2\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i-1) .. s:sub(j+1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "  local i, j = string.find(s, ch)\n  local k = string.find(s, ch, i + 1)\n  if k == nil then\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\n  else\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1, k - 1) .. string.sub(s, k + 1)\n  end\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i then\n\t\ts = string.sub(s, 1, i-1) .. string.sub(s, j+1)\n\tend\n\treturn s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i, j = string.find(s, ch)\n  if i and j then\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\n  else\n    return s\n  end\nend",
    "\tlocal i = string.find(s, ch)\n\tlocal j = string.find(s, ch, -1)\n\tif i and j then\n\t\treturn string.sub(s, 1, i - 1) .. string.sub(s, i + 1, j - 1) .. string.sub(s, j + 1)\n\tend\n\treturn s\nend",
    "\tlocal res = s:gsub(ch, \"\")\n\treturn res\nend",
    "    s = s:gsub(\"^\"..ch, \"\")\n    s = s:gsub(ch..\"$\", \"\")\n    return s\nend",
    "    local i, j = string.find(s, ch)\n    if i == nil then\n        return s\n    end\n    if i == 1 then\n        return remove_Occ(string.sub(s, j + 1), ch)\n    end\n    if j == #s then\n        return remove_Occ(string.sub(s, 1, i - 1), ch)\n    end\n    return string.sub(s, 1, i - 1) .. remove_Occ(string.sub(s, j + 1), ch)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "\tlocal i, j = s:find(ch)\n\tlocal k, l = s:reverse():find(ch)\n\treturn s:sub(1, i-1) .. s:sub(j+1, -l-1) .. s:sub(-k+1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local s1 = string.gsub(s, \"^\"..ch, \"\")\n    local s2 = string.gsub(s1, ch..\"$\", \"\")\n    return s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  if i then\n    return s:sub(1, i - 1) .. s:sub(i + 1)\n  else\n    return s\n  end\nend",
    "\tlocal s1 = s:gsub(ch, \"\")\n\tlocal s2 = s1:gsub(ch, \"\")\n\treturn s2\nend",
    "    return s:gsub(\"^\"..ch..\"+\", \"\"):gsub(ch..\"+$\", \"\")\nend"
  ]
}
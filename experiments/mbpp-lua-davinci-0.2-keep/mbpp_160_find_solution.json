{
  "name": "mbpp_160_find_solution",
  "language": "lua",
  "prompt": "-- Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\nlocal function find_solution(a, b, n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_solution\n    lu.assertEquals(candidate(2, 3, 7), {2, 1})\n    lu.assertEquals(candidate(4, 2, 7), None)\n    lu.assertEquals(candidate(1, 13, 17), {4, 1})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y % 1 == 0 then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\twhile a * x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y == math.floor(y) then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 1\n    while a * x + b * y ~= n do\n        if a * x + b * y > n then\n            x = x - 1\n        else\n            y = y + 1\n        end\n    end\n    return x, y\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    y = (n - x * a) / b\n    if y == math.floor(y) then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You can use the Euclidean algorithm to find the greatest common divisor of a and b.\n    -- Hint: You can use the extended Euclidean algorithm to find integers x and y that satisfy ax + by = gcd(a, b).\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use the Chinese remainder theorem to find integers x and y that satisfy ax + by = n.\n    -- Hint: You can use",
    "  local x = 0\n  local y = 0\n  while true do\n    if a * x + b * y == n then\n      return x, y\n    end\n    if a * x + b * y > n then\n      return nil\n    end\n    x = x + 1\n  end\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\tlocal d = gcd(a, b)\n\tif n % d ~= 0 then\n\t\treturn nil\n\tend\n\tlocal a1 = a / d\n\tlocal b1 = b / d\n\tlocal n1 = n / d\n\tlocal x1, y1 = find_solution(b1, a1 % b1, n1)\n\tif x1 == nil then\n\t\treturn nil\n\tend\n\tx = y1\n\ty = x1 - (a1 / b1) * y1\n\treturn x, y\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y % 1 == 0 then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        y = (n - x * a) / b\n        if y % 1 == 0 then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\twhile x <= n do\n\t\tif (a * x + b * y) == n then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\t\ty = (n - a * x) / b\n\tend\n\treturn nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y % 1 == 0 then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  local d = gcd(a, b)\n  if n % d == 0 then\n    local x0, y0 = find_solution(a / d, b / d, n / d)\n    x = x0\n    y = y0\n    return x, y\n  else\n    return nil\n  end\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y % 1 == 0 then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    local r = n - a * x\n    if r % b == 0 then\n      y = r / b\n      return x, y\n    end\n    x = x + 1\n  end\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\twhile a * x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y == math.floor(y) then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    if n == 0 then\n        return 0, 0\n    end\n    local x, y = find_solution(b, a % b, n % b)\n    return y, x - math.floor(a / b) * y\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    if a == 0 then\n        if n == 0 then\n            return 0, 0\n        else\n            return nil\n        end\n    end\n    local x, y = find_solution(b % a, a, n)\n    if x == nil then\n        return nil\n    else\n        return y - math.floor(b / a) * x, x\n    end\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\tlocal d = gcd(a, b)\n\tif n % d ~= 0 then\n\t\treturn nil\n\tend\n\tlocal a1 = a / d\n\tlocal b1 = b / d\n\tlocal n1 = n / d\n\tlocal x1, y1 = find_solution(b1, a1 % b1, n1)\n\tif x1 == nil then\n\t\treturn nil\n\tend\n\tx = y1\n\ty = x1 - (a1 / b1) * y1\n\treturn x, y\nend",
    "  local x, y = 0, 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x, y = x0, y0\n    end\n    return x, y\nend",
    "  local x = 0\n  while a * x <= n do\n    local y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    -- your code here\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "  local x, y = 0, 0\n  while x * a <= n do\n    local r = n - x * a\n    if r % b == 0 then\n      return x, r / b\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    if n > a and n > b then\n        return nil\n    end\n    local x = 0\n    local y = 0\n    while x <= n do\n        y = n - a * x\n        if y % b == 0 then\n            return x, y / b\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\ty = (n - a * x) / b\n\t\tif math.floor(y) == y then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    if n % gcd(a, b) ~= 0 then\n        return nil\n    end\n    local x, y = 0, 0\n    local x1, y1 = 1, 0\n    local x2, y2 = 0, 1\n    local q, r = math.floor(a / b), a % b\n    while r ~= 0 do\n        local x3, y3 = x1 - q * x2, y1 - q * y2\n        x, y, x1, y1, x2, y2 = x2, y2, x3, y3, x, y\n        a, b, q = b, r, math.floor(a / b)\n        r = a % b\n    end\n    return x * (n / b), y * (n / b)\nend",
    "    -- TODO: Implement this function\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x < n do\n        y = 0\n        while a * x + b * y < n do\n            y = y + 1\n        end\n        if a * x + b * y == n then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    if a == 0 then\n        if n == 0 then\n            return 0, 0\n        else\n            return nil\n        end\n    end\n    local x, y = find_solution(b % a, a, n)\n    if x == nil then\n        return nil\n    else\n        return y - math.floor(b / a) * x, x\n    end\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y == math.floor(y) then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    if a == 0 and b == 0 then\n        return nil\n    elseif a == 0 then\n        return nil\n    elseif b == 0 then\n        if n % a == 0 then\n            return 0, n / a\n        else\n            return nil\n        end\n    else\n        local x, y = find_solution(b, a % b, n)\n        if x == nil then\n            return nil\n        else\n            return y, (x - (a / b) * y)\n        end\n    end\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    if a == 0 then\n        if n == 0 then\n            return 0, 0\n        else\n            return nil\n        end\n    end",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    local r = n - a * x\n    if r % b == 0 then\n      y = r / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  if a == 0 and b == 0 then\n    return nil\n  elseif a == 0 then\n    return nil\n  elseif b == 0 then\n    return nil\n  else\n    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n      local x0, y0 = find_solution(a/d, b/d, n/d)\n      x = x0\n      y = y0\n      return x, y\n    else\n      return nil\n    end\n  end\nend",
    "    if a == 0 and b == 0 then\n        return nil\n    elseif a == 0 then\n        return nil\n    elseif b == 0 then\n        if n % a == 0 then\n            return 0, n / a\n        else\n            return nil\n        end\n    else\n        local x, y = find_solution(b, a % b, n)\n        if x == nil then\n            return nil\n        else\n            return y, x - math.floor(a / b) * y\n        end\n    end\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y == math.floor(y) then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x, y = 0, 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    y = (n - x * a) / b\n    if y % 1 == 0 then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        y = (n - x * a) / b\n        if y % 1 == 0 then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    y = (n - x * a) / b\n    if y % 1 == 0 then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    local r = n - a * x\n    if r % b == 0 then\n      y = r / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  if n % gcd(a, b) ~= 0 then\n    return nil\n  end\n  local x, y = 0, 1\n  local u, v = 1, 0\n  local m, n = a, b\n  while m ~= 0 do\n    local q, r = math.floor(n / m), n % m\n    local s = x - u * q\n    local t = y - v * q\n    x, y = u, v\n    u, v = s, t\n    n, m = m, r\n  end\n  return x * (n / gcd(a, b)), y * (n / gcd(a, b))\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  local d = gcd(a, b)\n  if n % d == 0 then\n    local a1 = a / d\n    local b1 = b / d\n    local n1 = n / d\n    local x1, y1 = find_solution(a1, b1, n1)\n    x = x1\n    y = y1\n    return x, y\n  else\n    return nil\n  end\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    if a == 0 and b == 0 then\n        return nil\n    elseif a == 0 then\n        return nil\n    elseif b == 0 then\n        if n % a == 0 then\n            return 0, n / a\n        else\n            return nil\n        end\n    else\n        local x, y = find_solution(b, a % b, n)\n        if x == nil then\n            return nil\n        else\n            return y, x - math.floor(a / b) * y\n        end\n    end\nend",
    "  local x, y = 0, 0\n  while x <= n do\n    y = (n - a * x) / b\n    if y % 1 == 0 then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 1\n  local y = 0\n  local x1 = 0\n  local y1 = 1\n  local q = math.floor(a / b)\n  local r = a - q * b\n  while r ~= 0 do\n    local temp = x - q * x1\n    x = x1\n    x1 = temp\n    temp = y - q * y1\n    y = y1\n    y1 = temp\n    a = b\n    b = r\n    q = math.floor(a / b)\n    r = a - q * b\n  end\n  if b > 1 then\n    return nil\n  end\n  local temp = math.floor(n / b)\n  x = x * temp\n  y = y * temp\n  return x, y\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tfor x = 0, n do\n\t\tfor y = 0, n do\n\t\t\tif a * x + b * y == n then\n\t\t\t\treturn x, y\n\t\t\tend\n\t\tend\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while x <= n do\n    if (a * x + b * y) == n then\n      return x, y\n    end\n    x = x + 1\n    y = (n - a * x) / b\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "\tfor x = 0, n do\n\t\tfor y = 0, n do\n\t\t\tif a * x + b * y == n then\n\t\t\t\treturn x, y\n\t\t\tend\n\t\tend\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "  if a == 0 and b == 0 then\n    return nil\n  end",
    "    -- TODO: Implement this function\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y == math.floor(y) then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n    else\n        return nil\n    end\n    return x, y\nend",
    "    if a == 0 then\n        return b == n and (0, n / b) or nil\n    end",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    if a == 0 and b == 0 then\n        return nil\n    elseif a == 0 then\n        return nil\n    elseif b == 0 then\n        return nil\n    else\n        local x = 0\n        local y = 0\n        while a * x <= n do\n            if (n - a * x) % b == 0 then\n                y = (n - a * x) / b\n                return x, y\n            end\n            x = x + 1\n        end\n        return nil\n    end\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\twhile x <= n do\n\t\tif (a * x + b * y) == n then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\t\ty = y + 1\n\tend\n\treturn nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        if (a * x + b * y) == n then\n            return x, y\n        end\n        x = x + 1\n        y = y + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while x <= n do\n    local r = n - a * x\n    if r % b == 0 then\n      y = r / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local a1 = a / d\n    local b1 = b / d\n    local n1 = n / d\n    local x1, y1 = find_solution(b1, a1 % b1, n1)\n    if x1 == nil then\n        return nil\n    end\n    x = y1\n    y = x1 - a1 / b1 * y1\n    return x, y\nend",
    "    if n % gcd(a, b) ~= 0 then\n        return nil\n    end\n    local x, y = 0, 0\n    local r = a\n    local s = b\n    local c, d = 1, 0\n    local e, f = 0, 1\n    while r ~= 0 and s ~= 0 do\n        local q = math.floor(s / r)\n        r, s = s - q * r, r\n        c, d = d, c - q * d\n        e, f = f, e - q * f\n    end\n    if s == 0 then\n        x = d\n        y = f\n    else\n        x = e\n        y = f\n    end\n    return x, y\nend",
    "  local x = 0\n  local y = 0\n  local d = gcd(a, b)\n  if n % d == 0 then\n    local x0, y0 = find_solution(a / d, b / d, n / d)\n    x = x0\n    y = y0\n    return x, y\n  else\n    return nil\n  end\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\twhile a * x <= n do\n\t\tlocal r = n - a * x\n\t\tif r % b == 0 then\n\t\t\ty = r / b\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    local r = n - a * x\n    if r % b == 0 then\n      y = r / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y == math.floor(y) then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        local r = n - a * x\n        if r % b == 0 then\n            y = r / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "  local x = 0\n  local y = 0\n  local d = gcd(a, b)\n  if n % d == 0 then\n    local x0, y0 = find_solution(a / d, b / d, n / d)\n    x = x0\n    y = y0\n  else\n    return nil\n  end\n  return x, y\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  local d = gcd(a, b)\n  if n % d == 0 then\n    x = n / d * inverse(a / d, b / d)\n    y = (n - a * x) / b\n    return x, y\n  else\n    return nil\n  end\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    if n == 0 then\n        return 0, 0\n    end",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local a1 = a / d\n        local b1 = b / d\n        local n1 = n / d\n        local x1, y1 = find_solution(a1, b1, n1)\n        x = x1\n        y = y1\n    else\n        return nil\n    end\n    return x, y\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile a*x <= n do\n\t\ty = (n - a*x)/b\n\t\tif y == math.floor(y) then\n\t\t\treturn x, y\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        y = (n - x * a) / b\n        if y % 1 == 0 then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while true do\n    if a * x + b * y == n then\n      return x, y\n    end\n    x = x + 1\n    if a * x > n then\n      return nil\n    end\n  end\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while x <= n do\n    if (a * x + b * y) == n then\n      return x, y\n    end\n    x = x + 1\n    y = y + 1\n  end\n  return nil\nend",
    "\tif a == 0 and b == 0 then\n\t\treturn nil\n\telseif a == 0 then\n\t\treturn nil\n\telseif b == 0 then\n\t\tif n % a == 0 then\n\t\t\treturn 0, n / a\n\t\telse\n\t\t\treturn nil\n\t\tend\n\telse\n\t\tlocal x, y = find_solution(b, a % b, n)\n\t\tif x == nil then\n\t\t\treturn nil\n\t\telse\n\t\t\treturn y, x - math.floor(a / b) * y\n\t\tend\n\tend\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        y = (n - a * x) / b\n        if y == math.floor(y) then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "    local x = 0\n    local y = 0\n    while x < n do\n        y = (n - a * x) / b\n        if y == math.floor(y) then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    while x <= n do\n        local y = (n - a * x) / b\n        if y == math.floor(y) then\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local a1 = a / d\n        local b1 = b / d\n        local n1 = n / d\n        local x1, y1 = find_solution(a1, b1, n1)\n        x = x1\n        y = y1\n    else\n        return nil\n    end\n    return x, y\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    local r = n - a * x\n    if r % b == 0 then\n      y = r / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while true do\n    if a * x + b * y == n then\n      return x, y\n    end\n    if a * x + b * y > n then\n      return nil\n    end\n    x = x + 1\n  end\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  local d = gcd(a, b)\n  if n % d == 0 then\n    local x0, y0 = find_solution(a/d, b/d, n/d)\n    x = x0\n    y = y0\n  else\n    return nil\n  end\n  return x, y\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    y = (n - x * a) / b\n    if y % 1 == 0 then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  while a * x <= n do\n    local y = (n - a * x) / b\n    if y == math.floor(y) then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  local d = gcd(a, b)\n  if n % d == 0 then\n    x = n / d * b\n    y = n / d * a\n    return x, y\n  else\n    return nil\n  end\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if b * y == n - a * x then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        if (a * x) % b == n % b then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local a1 = a / d\n    local b1 = b / d\n    local n1 = n / d\n    local x1, y1 = find_solution(b1, a1 % b1, n1)\n    if x1 == nil then\n        return nil\n    end\n    x = y1\n    y = x1 - (a1 / b1) * y1\n    return x, y\nend",
    "    if n % gcd(a, b) ~= 0 then\n        return nil\n    end\n    local x, y = 0, 1\n    local u, v = 1, 0\n    local m, n = a, b\n    while m ~= 0 do\n        local q, r = math.floor(n / m), n % m\n        local unew, vnew = x - u * q, y - v * q\n        x, y, u, v = u, v, unew, vnew\n        m, n = r, m\n    end\n    return x * (n / gcd(a, b)), y * (n / gcd(a, b))\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  if n == 0 then\n    return 0, 0\n  end\n  local x, y = find_solution(b, a % b, n % b)\n  return y, x - (a // b) * y\nend",
    "  local x = 0\n  while a * x <= n do\n    local y = (n - a * x) / b\n    if y == math.floor(y) then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y % 1 == 0 then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    if (n - a * x) % b == 0 then\n      y = (n - a * x) / b\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    if a == 0 and b == 0 then\n        return nil\n    elseif a == 0 then\n        return nil\n    elseif b == 0 then\n        return nil\n    else\n        local x = math.floor(n / a)\n        local y = math.floor(n / b)\n        local x_solution = nil\n        local y_solution = nil\n        while x >= 0 do\n            if (a * x) + (b * y) == n then\n                x_solution = x\n                y_solution = y\n                break\n            end\n            x = x - 1\n            y = y + 1\n        end\n        if x_solution == nil then\n            return nil\n        else\n            return x_solution, y_solution\n        end\n    end\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return x, y\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend"
  ]
}
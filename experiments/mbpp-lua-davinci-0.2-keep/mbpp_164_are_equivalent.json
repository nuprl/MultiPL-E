{
  "name": "mbpp_164_are_equivalent",
  "language": "lua",
  "prompt": "-- Write a function to determine if the sum of the divisors of two integers are the same.\nlocal function are_equivalent(num1, num2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_164_are_equivalent.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = are_equivalent\n    lu.assertEquals(candidate(36, 57), false)\n    lu.assertEquals(candidate(2, 4), false)\n    lu.assertEquals(candidate(23, 47), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal sum1 = sum_divisors(num1)\n\tlocal sum2 = sum_divisors(num2)\n\treturn sum1 == sum2\nend",
    "    return sum_of_divisors(num1) == sum_of_divisors(num2)\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "  return sum_of_divisors(num1) == sum_of_divisors(num2)\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    if sum1 == sum2 then\n        return true\n    else\n        return false\n    end\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\tif sum1 == sum2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend",
    "  local sum1 = sum_of_divisors(num1)\n  local sum2 = sum_of_divisors(num2)\n  return sum1 == sum2\nend",
    "\tlocal sum1 = sum_of_divisors(num1)\n\tlocal sum2 = sum_of_divisors(num2)\n\treturn sum1 == sum2\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    for i = 1, num1 do\n        if num1 % i == 0 then\n            sum1 = sum1 + i\n        end\n    end\n    for i = 1, num2 do\n        if num2 % i == 0 then\n            sum2 = sum2 + i\n        end\n    end\n    return sum1 == sum2\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, num1 do\n\t\tif num1 % i == 0 then\n\t\t\tsum1 = sum1 + i\n\t\tend\n\tend\n\tfor i = 1, num2 do\n\t\tif num2 % i == 0 then\n\t\t\tsum2 = sum2 + i\n\t\tend\n\tend\n\treturn sum1 == sum2\nend",
    "  local sum1 = sum_divisors(num1)\n  local sum2 = sum_divisors(num2)\n  return sum1 == sum2\nend",
    "    local sum1 = sum_divisors(num1)\n    local sum2 = sum_divisors(num2)\n    return sum1 == sum2\nend"
  ]
}
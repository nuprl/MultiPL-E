{
  "name": "mbpp_793_last",
  "language": "lua",
  "prompt": "-- Write a python function to find the last position of an element in a sorted array.\nlocal function last(arr, x)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = last\n    lu.assertEquals(candidate({1, 2, 3}, 1), 0)\n    lu.assertEquals(candidate({1, 1, 1, 2, 3, 4}, 1), 2)\n    lu.assertEquals(candidate({2, 3, 2, 3, 6, 8, 9}, 3), 3)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  while arr[i] ~= nil and arr[i] <= x do\n    i = i + 1\n  end\n  return i - 1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] > x then\n      hi = mid - 1\n    else\n      lo = mid + 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  while i <= #arr do\n    if arr[i] == x then\n      i = i + 1\n    else\n      break\n    end\n  end\n  return i - 1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      end\n      l = m + 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] <= x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return high\nend",
    "  local i = 1\n  while i <= #arr do\n    if arr[i] == x then\n      return i\n    end\n    i = i + 1\n  end\n  return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "  local l = 1\n  local r = #arr\n  local m = math.floor((l + r) / 2)\n  while l <= r do\n    if arr[m] == x then\n      if arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n    m = math.floor((l + r) / 2)\n  end\n  return -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                low = mid + 1\n            end\n        elseif arr[mid] < x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return -1\nend",
    "\tlocal l, r = 1, #arr\n\twhile l <= r do\n\t\tlocal m = math.floor((l + r) / 2)\n\t\tif arr[m] == x then\n\t\t\tif m == #arr or arr[m + 1] ~= x then\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\tl = m + 1\n\t\t\tend\n\t\telseif arr[m] < x then\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "    local low = 1\n    local high = #arr\n    local result = -1\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            result = mid\n            low = mid + 1\n        elseif arr[mid] > x then\n            high = mid - 1\n        else\n            low = mid + 1\n        end\n    end\n    return result\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] <= x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return j\nend",
    "  local lo = 1\n  local hi = #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] <= x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return hi\nend",
    "  local low = 1\n  local high = #arr\n  local result = -1\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      result = mid\n      low = mid + 1\n    elseif arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return result\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local mid = math.floor((l + r) / 2)\n    if arr[mid] > x then\n      r = mid - 1\n    else\n      l = mid + 1\n    end\n  end\n  return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "    local low = 1\n    local high = #arr\n    local result = -1\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            result = mid\n            low = mid + 1\n        elseif arr[mid] < x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return result\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                l = m + 1\n            end\n        elseif arr[m] > x then\n            r = m - 1\n        else\n            l = m + 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "    local low = 1\n    local high = #arr\n    local result = -1\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if x == arr[mid] then\n            result = mid\n            low = mid + 1\n        elseif x < arr[mid] then\n            high = mid - 1\n        else\n            low = mid + 1\n        end\n    end\n    return result\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return j\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                l = m + 1\n            end\n        elseif arr[m] > x then\n            r = m - 1\n        else\n            l = m + 1\n        end\n    end\n    return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] < x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local low = 1\n  local high = #arr\n  local result = -1\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      result = mid\n      low = mid + 1\n    elseif arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return result\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "\tlocal low = 1\n\tlocal high = #arr\n\tlocal result = -1\n\twhile low <= high do\n\t\tlocal mid = math.floor((low + high) / 2)\n\t\tif x == arr[mid] then\n\t\t\tresult = mid\n\t\t\tlow = mid + 1\n\t\telseif x < arr[mid] then\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn result\nend",
    "  local i = 1\n  while arr[i] do\n    if arr[i] == x then\n      local j = i + 1\n      while arr[j] and arr[j] == x do\n        j = j + 1\n      end\n      return j - 1\n    end\n    i = i + 1\n  end\n  return -1\nend",
    "  local low = 1\n  local high = #arr\n  local result = -1",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "  local l = 1\n  local r = #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      end\n      l = m + 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] > x then\n      j = m - 1\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    end\n  end\n  return -1\nend",
    "  local l = 1\n  local r = #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] > x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "  local left, right = 1, #arr\n  while left <= right do\n    local mid = math.floor((left + right) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        left = mid + 1\n      end\n    elseif arr[mid] < x then\n      left = mid + 1\n    else\n      right = mid - 1\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    while arr[i] do\n        if arr[i] == x then\n            return i\n        end\n        i = i + 1\n    end\n    return -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x and (mid == #arr or arr[mid + 1] ~= x) then\n            return mid\n        elseif arr[mid] <= x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] <= x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return j\nend",
    "    local lo, hi = 1, #arr\n    while lo <= hi do\n        local mid = math.floor((lo + hi) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                lo = mid + 1\n            end\n        elseif arr[mid] < x then\n            lo = mid + 1\n        else\n            hi = mid - 1\n        end\n    end\n    return -1\nend",
    "\tlocal low, high = 1, #arr\n\twhile low <= high do\n\t\tlocal mid = math.floor((low + high) / 2)\n\t\tif arr[mid] == x then\n\t\t\tif mid == #arr or arr[mid + 1] > x then\n\t\t\t\treturn mid\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif arr[mid] > x then\n\t\t\thigh = mid - 1\n\t\telse\n\t\t\tlow = mid + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local mid = math.floor((l + r) / 2)\n    if arr[mid] <= x then\n      l = mid + 1\n    else\n      r = mid - 1\n    end\n  end\n  return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] > x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = low + math.floor((high - low) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      end\n      low = mid + 1\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] < x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return -1\nend",
    "    local lo, hi = 1, #arr\n    while lo < hi do\n        local mid = math.floor((lo + hi) / 2)\n        if arr[mid] <= x then\n            lo = mid + 1\n        else\n            hi = mid\n        end\n    end\n    return lo - 1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local mid = math.floor((i + j) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                i = mid + 1\n            end\n        elseif arr[mid] > x then\n            j = mid - 1\n        else\n            i = mid + 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "\tlocal i = 1\n\tlocal j = #arr\n\twhile i <= j do\n\t\tlocal m = math.floor((i + j) / 2)\n\t\tif arr[m] == x then\n\t\t\tif m == #arr or arr[m + 1] ~= x then\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\ti = m + 1\n\t\t\tend\n\t\telseif arr[m] > x then\n\t\t\tj = m - 1\n\t\telse\n\t\t\ti = m + 1\n\t\tend\n\tend\n\treturn -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  while arr[i] do\n    if arr[i] == x then\n      return i\n    end\n    i = i + 1\n  end\nend",
    "  local l = 1\n  local r = #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == r or arr[m + 1] > x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            end\n            low = mid + 1\n        elseif arr[mid] < x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return -1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] > x then\n      hi = mid - 1\n    else\n      lo = mid + 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] <= x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return high\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then return m end\n      l = m + 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local low = 1\n  local high = #arr\n  local result = -1\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      result = mid\n      low = mid + 1\n    elseif arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return result\nend",
    "  local i = 1\n  while arr[i] do\n    if arr[i] == x then\n      return i\n    end\n    i = i + 1\n  end\n  return nil\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                l = m + 1\n            end\n        elseif arr[m] > x then\n            r = m - 1\n        else\n            l = m + 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  local m = 0\n  while i <= j do\n    m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                l = m + 1\n            end\n        elseif arr[m] < x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return -1\nend",
    "    local low = 1\n    local high = #arr\n    local result = -1\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            result = mid\n            low = mid + 1\n        elseif arr[mid] < x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return result\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local mid = math.floor((i + j) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                i = mid + 1\n            end\n        elseif arr[mid] < x then\n            i = mid + 1\n        else\n            j = mid - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  while arr[i] do\n    if arr[i] == x then\n      return i\n    end\n    i = i + 1\n  end\n  return -1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] <= x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return hi\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i+j)/2)\n    if arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  if arr[j] == x then\n    return j\n  else\n    return -1\n  end\nend",
    "    local lo, hi = 1, #arr\n    while lo < hi do\n        local mid = math.floor((lo + hi) / 2)\n        if arr[mid] <= x then\n            lo = mid + 1\n        else\n            hi = mid\n        end\n    end\n    return lo - 1\nend",
    "  local l = 1\n  local r = #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local lo = 1\n  local hi = #arr\n  local mid\n  while lo <= hi do\n    mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] < x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return j\nend",
    "  local i = 1\n  while arr[i] do\n    if arr[i] == x then\n      return i\n    end\n    i = i + 1\n  end\n  return nil\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] > x then\n      hi = mid - 1\n    else\n      lo = mid + 1\n    end\n  end\n  return hi\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      end\n      low = mid + 1\n    elseif arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                l = m + 1\n            end\n        elseif arr[m] < x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local mid = math.floor((i + j) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        i = mid + 1\n      end\n    elseif arr[mid] < x then\n      i = mid + 1\n    else\n      j = mid - 1\n    end\n  end\n  return -1\nend",
    "  local l = 1\n  local r = #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] > x then\n      r = m - 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "\tlocal low, high = 1, #arr\n\twhile low <= high do\n\t\tlocal mid = math.floor((low + high) / 2)\n\t\tif arr[mid] == x and (mid == #arr or arr[mid + 1] ~= x) then\n\t\t\treturn mid\n\t\telseif arr[mid] <= x then\n\t\t\tlow = mid + 1\n\t\telse\n\t\t\thigh = mid - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "    local i = 1\n    while arr[i] and arr[i] <= x do\n        i = i + 1\n    end\n    return i - 1\nend",
    "  local l = 1\n  local r = #arr\n  local m = math.floor((l + r) / 2)\n  while l <= r do\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n    m = math.floor((l + r) / 2)\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return -1\nend",
    "\tlocal i = 1\n\tlocal j = #arr\n\twhile i <= j do\n\t\tlocal m = math.floor((i + j) / 2)\n\t\tif arr[m] > x then\n\t\t\tj = m - 1\n\t\telseif arr[m] < x then\n\t\t\ti = m + 1\n\t\telse\n\t\t\tif m == #arr or arr[m + 1] ~= x then\n\t\t\t\treturn m\n\t\t\telse\n\t\t\t\ti = m + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return high\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local i = 1\n  while arr[i] ~= nil and arr[i] <= x do\n    i = i + 1\n  end\n  return i - 1\nend",
    "  local i = 1\n  while arr[i] ~= nil and arr[i] <= x do\n    i = i + 1\n  end\n  return i - 1\nend",
    "  local low = 1\n  local high = #arr\n  local result = -1\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      result = mid\n      low = mid + 1\n    elseif arr[mid] > x then\n      high = mid - 1\n    else\n      low = mid + 1\n    end\n  end\n  return result\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      end\n      l = m + 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            j = m - 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      end\n      low = mid + 1\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "    local l = 1\n    local r = #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                l = m + 1\n            end\n        elseif arr[m] < x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                low = mid + 1\n            end\n        elseif arr[mid] < x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] <= x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return j\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = lo + math.floor((hi - lo) / 2)\n    if arr[mid] <= x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return hi\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] > x then\n      j = m - 1\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] > x then\n      r = m - 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    end\n  end\n  return -1\nend",
    "\tlocal i = 1\n\tlocal j = #arr\n\tlocal k = math.floor((i + j) / 2)\n\twhile i <= j do\n\t\tif arr[k] == x then\n\t\t\tif k == #arr or arr[k + 1] ~= x then\n\t\t\t\treturn k\n\t\t\telse\n\t\t\t\ti = k + 1\n\t\t\tend\n\t\telseif arr[k] < x then\n\t\t\ti = k + 1\n\t\telse\n\t\t\tj = k - 1\n\t\tend\n\t\tk = math.floor((i + j) / 2)\n\tend\n\treturn -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                low = mid + 1\n            end\n        elseif arr[mid] < x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return -1\nend",
    "    local low = 1\n    local high = #arr\n    local result = -1\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            result = mid\n            low = mid + 1\n        elseif arr[mid] > x then\n            high = mid - 1\n        else\n            low = mid + 1\n        end\n    end\n    return result\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "\tlocal l = 1\n\tlocal r = #arr\n\twhile l <= r do\n\t\tlocal m = math.floor((l + r) / 2)\n\t\tif arr[m] == x then\n\t\t\tif m == #arr or arr[m + 1] ~= x then\n\t\t\t\treturn m\n\t\t\tend\n\t\t\tl = m + 1\n\t\telseif arr[m] < x then\n\t\t\tl = m + 1\n\t\telse\n\t\t\tr = m - 1\n\t\tend\n\tend\n\treturn -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] < x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] <= x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return r\nend",
    "    local low = 1\n    local high = #arr\n    local result = -1\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            result = mid\n            low = mid + 1\n        elseif arr[mid] > x then\n            high = mid - 1\n        else\n            low = mid + 1\n        end\n    end\n    return result\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] < x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return -1\nend",
    "    local left = 1\n    local right = #arr\n    while left <= right do\n        local mid = math.floor((left + right) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            end\n            left = mid + 1\n        elseif arr[mid] < x then\n            left = mid + 1\n        else\n            right = mid - 1\n        end\n    end\n    return -1\nend",
    "    local l, r = 1, #arr\n    while l <= r do\n        local m = math.floor((l + r) / 2)\n        if arr[m] == x then\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                l = m + 1\n            end\n        elseif arr[m] < x then\n            l = m + 1\n        else\n            r = m - 1\n        end\n    end\n    return -1\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        lo = mid + 1\n      end\n    elseif arr[mid] < x then\n      lo = mid + 1\n    else\n      hi = mid - 1\n    end\n  end\n  return -1\nend",
    "  local low, high = 1, #arr\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        low = mid + 1\n      end\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                low = mid + 1\n            end\n        elseif arr[mid] < x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  while arr[i] ~= nil and arr[i] <= x do\n    i = i + 1\n  end\n  return i - 1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x and (mid == #arr or arr[mid + 1] > x) then\n            return mid\n        elseif arr[mid] <= x then\n            low = mid + 1\n        else\n            high = mid - 1\n        end\n    end\n    return -1\nend",
    "    local i = 1\n    while arr[i] ~= nil and arr[i] <= x do\n        i = i + 1\n    end\n    return i - 1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return j\nend",
    "  local l, r = 1, #arr\n  while l < r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m\n    end\n  end\n  return l - 1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      end\n      l = m + 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local l = 1\n  local r = #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      end\n      l = m + 1\n    elseif arr[m] < x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  local mid = math.floor((i + j) / 2)\n  while i <= j do\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        i = mid + 1\n      end\n    elseif arr[mid] < x then\n      i = mid + 1\n    else\n      j = mid - 1\n    end\n    mid = math.floor((i + j) / 2)\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] > x then\n      j = m - 1\n    else\n      i = m + 1\n    end\n  end\n  return j\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        l = m + 1\n      end\n    elseif arr[m] > x then\n      r = m - 1\n    else\n      l = m + 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  while i <= #arr do\n    if arr[i] == x then\n      local j = i + 1\n      while j <= #arr do\n        if arr[j] ~= x then\n          return j - 1\n        end\n        j = j + 1\n      end\n      return #arr\n    end\n    i = i + 1\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] <= x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return j\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local mid = math.floor((i + j) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        i = mid + 1\n      end\n    elseif arr[mid] < x then\n      i = mid + 1\n    else\n      j = mid - 1\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    while i <= #arr do\n        if arr[i] == x then\n            i = i + 1\n        else\n            break\n        end\n    end\n    return i - 1\nend",
    "  local i = 1\n  while arr[i] ~= nil and arr[i] ~= x do\n    i = i + 1\n  end\n  if arr[i] == nil then\n    return nil\n  else\n    return i\n  end\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "    local low, high = 1, #arr\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                low = mid + 1\n            end\n        elseif arr[mid] > x then\n            high = mid - 1\n        else\n            low = mid + 1\n        end\n    end\n    return -1\nend",
    "    local lo, hi = 1, #arr\n    while lo <= hi do\n        local mid = math.floor((lo + hi) / 2)\n        if arr[mid] == x then\n            if mid == #arr or arr[mid + 1] ~= x then\n                return mid\n            else\n                lo = mid + 1\n            end\n        elseif arr[mid] < x then\n            lo = mid + 1\n        else\n            hi = mid - 1\n        end\n    end\n    return -1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local mid = math.floor((l + r) / 2)\n    if arr[mid] == x then\n      if mid == #arr or arr[mid + 1] ~= x then\n        return mid\n      else\n        l = mid + 1\n      end\n    elseif arr[mid] > x then\n      r = mid - 1\n    else\n      l = mid + 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] <= x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return j\nend",
    "  local low = 1\n  local high = #arr\n  local result = -1\n  while low <= high do\n    local mid = math.floor((low + high) / 2)\n    if arr[mid] == x then\n      result = mid\n      low = mid + 1\n    elseif arr[mid] < x then\n      low = mid + 1\n    else\n      high = mid - 1\n    end\n  end\n  return result\nend",
    "  local lo, hi = 1, #arr\n  while lo <= hi do\n    local mid = math.floor((lo + hi) / 2)\n    if arr[mid] > x then\n      hi = mid - 1\n    else\n      lo = mid + 1\n    end\n  end\n  return hi\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local k = math.floor((i + j) / 2)\n        if arr[k] == x then\n            if k == #arr or arr[k + 1] ~= x then\n                return k\n            else\n                i = k + 1\n            end\n        elseif arr[k] < x then\n            i = k + 1\n        else\n            j = k - 1\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] > x then\n      j = m - 1\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    local j = #arr\n    while i <= j do\n        local m = math.floor((i + j) / 2)\n        if arr[m] > x then\n            j = m - 1\n        elseif arr[m] < x then\n            i = m + 1\n        else\n            if m == #arr or arr[m + 1] ~= x then\n                return m\n            else\n                i = m + 1\n            end\n        end\n    end\n    return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "    local i = 1\n    while arr[i] ~= nil do\n        if arr[i] == x then\n            return i\n        end\n        i = i + 1\n    end\n    return -1\nend",
    "  local i = 1\n  while arr[i] and arr[i] <= x do\n    i = i + 1\n  end\n  return i - 1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "    local low = 1\n    local high = #arr\n    local result = -1\n    while low <= high do\n        local mid = math.floor((low + high) / 2)\n        if arr[mid] == x then\n            result = mid\n            low = mid + 1\n        elseif arr[mid] > x then\n            high = mid - 1\n        else\n            low = mid + 1\n        end\n    end\n    return result\nend",
    "  local i = 1\n  local j = #arr\n  local k = 0\n  while i <= j do\n    k = math.floor((i + j) / 2)\n    if arr[k] == x then\n      if k == #arr or arr[k + 1] ~= x then\n        return k\n      else\n        i = k + 1\n      end\n    elseif arr[k] < x then\n      i = k + 1\n    else\n      j = k - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  while arr[i] ~= nil and arr[i] <= x do\n    i = i + 1\n  end\n  return i - 1\nend",
    "  local l, r = 1, #arr\n  while l <= r do\n    local m = math.floor((l + r) / 2)\n    if arr[m] <= x then\n      l = m + 1\n    else\n      r = m - 1\n    end\n  end\n  return r\nend",
    "  local i = 1\n  while arr[i] ~= nil and arr[i] <= x do\n    i = i + 1\n  end\n  return i - 1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      else\n        i = m + 1\n      end\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend",
    "  local i = 1\n  local j = #arr\n  while i <= j do\n    local m = math.floor((i + j) / 2)\n    if arr[m] == x then\n      if m == #arr or arr[m + 1] ~= x then\n        return m\n      end\n      i = m + 1\n    elseif arr[m] < x then\n      i = m + 1\n    else\n      j = m - 1\n    end\n  end\n  return -1\nend"
  ]
}
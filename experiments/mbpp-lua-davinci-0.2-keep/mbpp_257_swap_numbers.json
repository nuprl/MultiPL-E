{
  "name": "mbpp_257_swap_numbers",
  "language": "lua",
  "prompt": "-- Write a function that takes in two numbers and returns a tuple with the second number and then the first number.\nlocal function swap_numbers(a, b)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_257_swap_numbers.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = swap_numbers\n    lu.assertEquals(candidate(10, 20), {20, 10})\n    lu.assertEquals(candidate(15, 17), {17, 15})\n    lu.assertEquals(candidate(100, 200), {200, 100})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "\treturn b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "\treturn b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "\treturn b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "  return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend",
    "    return b, a\nend"
  ]
}
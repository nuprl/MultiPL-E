{
  "name": "mbpp_739_find_Index",
  "language": "lua",
  "prompt": "-- Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nlocal function find_Index(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_Index\n    lu.assertEquals(candidate(2), 4)\n    lu.assertEquals(candidate(3), 14)\n    lu.assertEquals(candidate(4), 45)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local i = 1\n  local j = 1\n  while true do\n    local num = i * (i + 1) / 2\n    if num > 10 ^ (n - 1) then\n      return j\n    end\n    i = i + 1\n    j = j + 1\n  end\nend",
    "\tlocal i = 1\n\tlocal count = 1\n\twhile count < n do\n\t\ti = i + 1\n\t\tcount = count + i\n\tend\n\treturn i\nend",
    "\tlocal i = 1\n\tlocal tri = 1\n\twhile true do\n\t\ttri = tri + i\n\t\ti = i + 1\n\t\tif #tostring(tri) == n then\n\t\t\treturn i - 1\n\t\tend\n\tend\nend",
    "  local i = 1\n  local t = 1\n  while true do\n    if math.floor(math.log10(t)) + 1 == n then\n      return i\n    end\n    i = i + 1\n    t = t + i\n  end\nend",
    "    local i = 1\n    local t = 1\n    while true do\n        if #tostring(t) == n then\n            return i\n        end\n        i = i + 1\n        t = t + i\n    end\nend",
    "\tlocal i = 1\n\tlocal sum = 0\n\twhile true do\n\t\tsum = sum + i\n\t\tif #tostring(sum) == n then\n\t\t\treturn i\n\t\tend\n\t\ti = i + 1\n\tend\nend",
    "    -- body\n    local i = 1\n    local tri = 1\n    while(true) do\n        tri = tri + i\n        if(tri >= 10^(n-1) and tri < 10^n) then\n            return i\n        end\n        i = i + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    while true do\n        local t = (i * (i + 1)) / 2\n        if t > 10 ^ (n - 1) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "  local i = 1\n  local sum = 0\n  while true do\n    sum = sum + i\n    if sum >= 10^(n-1) and sum < 10^n then\n      return i\n    end\n    i = i + 1\n  end\nend",
    "    local i = 1\n    local j = 1\n    while true do\n        local t = (i * (i + 1)) / 2\n        if t >= 10 ^ (n - 1) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local tri = 1\n    while tri < 10^(n-1) do\n        i = i + 1\n        tri = tri + i\n    end\n    return i\nend",
    "    local i = 1\n    local j = 1\n    while true do\n        local num = (i * (i + 1)) / 2\n        if num > 10 ^ (n - 1) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    while true do\n        local t = (i * (i + 1)) / 2\n        if t > 10 ^ (n - 1) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local triangular_number = 0\n    while(true) do\n        triangular_number = triangular_number + i\n        if(triangular_number >= 10^(n-1)) then\n            break\n        end\n        i = i + 1\n    end\n    return i\nend",
    "  local index = 1\n  local tri = 0\n  while true do\n    tri = tri + index\n    if #tostring(tri) == n then\n      return index\n    end\n    index = index + 1\n  end\nend",
    "    local i = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if sum > 10^(n-1) then\n            return i\n        end\n        i = i + 1\n    end\nend",
    "    local i = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if sum > 10^(n-1) then\n            return i\n        end\n        i = i + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if sum >= 10^(n-1) then\n            break\n        end\n        i = i + 1\n    end\n    return j\nend",
    "    local i = 1\n    local j = 1\n    while true do\n        local t = (i * (i + 1)) / 2\n        local d = math.floor(math.log10(t)) + 1\n        if d == n then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "  local i = 1\n  local t = 0\n  while true do\n    t = t + i\n    if t >= 10^(n-1) then\n      break\n    end\n    i = i + 1\n  end\n  return i\nend"
  ]
}
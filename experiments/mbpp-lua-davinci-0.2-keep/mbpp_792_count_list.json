{
  "name": "mbpp_792_count_list",
  "language": "lua",
  "prompt": "-- Write a python function to count the number of lists in a given number of lists.\nlocal function count_list(input_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_792_count_list.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_list\n    lu.assertEquals(candidate({{1, 3}, {5, 7}, {9, 11}, {13, 15, 17}}), 4)\n    lu.assertEquals(candidate({{1, 2}, {2, 3}, {4, 5}}), 3)\n    lu.assertEquals(candidate({{1, 0}, {2, 0}}), 2)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal count = 0\n\tfor _, value in pairs(input_list) do\n\t\tif type(value) == \"table\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "    local count = 0\n    for _ in pairs(input_list) do\n        count = count + 1\n    end\n    return count\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "    count = 0\n    for _ in input_list do\n        count = count + 1\n    end\n    return count\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "\treturn #input_list\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "    count = 0\n    for _ in input_list do\n        count = count + 1\n    end\n    return count\nend",
    "    count = 0\n    for _ in input_list do\n        count = count + 1\n    end\n    return count\nend",
    "\tlocal count = 0\n\tfor _ in pairs(input_list) do\n\t\tcount = count + 1\n\tend\n\treturn count\nend",
    "    count = 0\n    for _ in input_list do\n        count = count + 1\n    end\n    return count\nend",
    "    count = 0\n    for _ in input_list:\n        count = count + 1\n    return count\nend",
    "    count = 0\n    for _, value in pairs(input_list) do\n        if type(value) == 'table' then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for _ in input_list do\n        count = count + 1\n    end\n    return count\nend",
    "    count = 0\n    for _ in input_list do\n        count = count + 1\n    end\n    return count\nend",
    "\tlocal count = 0\n\tfor _, value in pairs(input_list) do\n\t\tif type(value) == \"table\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend"
  ]
}
{
  "name": "mbpp_629_Split",
  "language": "lua",
  "prompt": "-- Write a python function to find even numbers from a list of numbers.\nlocal function Split(list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Split\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), {2, 4})\n    lu.assertEquals(candidate({4, 5, 6, 7, 8, 0, 1}), {4, 6, 8, 0})\n    lu.assertEquals(candidate({8, 12, 15, 19}), {8, 12})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "  local even = {}\n  local odd = {}\n  for i, v in ipairs(list) do\n    if v % 2 == 0 then\n      table.insert(even, v)\n    else\n      table.insert(odd, v)\n    end\n  end\n  return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for _, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for _, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor _, v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "  local evens = {}\n  local odds = {}\n  for i, v in ipairs(list) do\n    if v % 2 == 0 then\n      table.insert(evens, v)\n    else\n      table.insert(odds, v)\n    end\n  end\n  return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i,v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v%2 == 0 then\n\t\t\ttable.insert(even,v)\n\t\telse\n\t\t\ttable.insert(odd,v)\n\t\tend\n\tend\n\treturn even,odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i = 1, #list do\n        if list[i] % 2 == 0 then\n            table.insert(even, list[i])\n        else\n            table.insert(odd, list[i])\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i = 1, #list do\n\t\tif list[i] % 2 == 0 then\n\t\t\ttable.insert(even, list[i])\n\t\telse\n\t\t\ttable.insert(odd, list[i])\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for k, v in pairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even,v)\n\t\telse\n\t\t\ttable.insert(odd,v)\n\t\tend\n\tend\n\treturn even,odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even, odd = {}, {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for _, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even, odd = {}, {}\n    for _, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "  local even = {}\n  local odd = {}\n  for i, v in ipairs(list) do\n    if v % 2 == 0 then\n      table.insert(even, v)\n    else\n      table.insert(odd, v)\n    end\n  end\n  return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in pairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even_list = {}\n    local odd_list = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even_list, v)\n        else\n            table.insert(odd_list, v)\n        end\n    end\n    return even_list, odd_list\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal evens = {}\n\tlocal odds = {}\n\tfor _,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(evens, v)\n\t\telse\n\t\t\ttable.insert(odds, v)\n\t\tend\n\tend\n\treturn evens, odds\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even + 1] = v\n\t\telse\n\t\t\todd[#odd + 1] = v\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in pairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\teven[#even+1] = v\n\t\telse\n\t\t\todd[#odd+1] = v\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i,v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even, odd = {}, {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal evens = {}\n\tlocal odds = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(evens, v)\n\t\telse\n\t\t\ttable.insert(odds, v)\n\t\tend\n\tend\n\treturn evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local evens = {}\n    local odds = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(evens, v)\n        else\n            table.insert(odds, v)\n        end\n    end\n    return evens, odds\nend",
    "    local even, odd = {}, {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "    local even, odd = {}, {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i, v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend",
    "\tlocal even = {}\n\tlocal odd = {}\n\tfor i,v in ipairs(list) do\n\t\tif v % 2 == 0 then\n\t\t\ttable.insert(even, v)\n\t\telse\n\t\t\ttable.insert(odd, v)\n\t\tend\n\tend\n\treturn even, odd\nend",
    "    local even = {}\n    local odd = {}\n    for i, v in ipairs(list) do\n        if v % 2 == 0 then\n            table.insert(even, v)\n        else\n            table.insert(odd, v)\n        end\n    end\n    return even, odd\nend"
  ]
}
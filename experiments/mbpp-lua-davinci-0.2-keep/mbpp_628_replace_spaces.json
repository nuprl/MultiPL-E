{
  "name": "mbpp_628_replace_spaces",
  "language": "lua",
  "prompt": "-- Write a function to replace all spaces in the given string with '%20'.\nlocal function replace_spaces(string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_628_replace_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = replace_spaces\n    lu.assertEquals(candidate('My Name is Dawood'), 'My%20Name%20is%20Dawood')\n    lu.assertEquals(candidate('I am a Programmer'), 'I%20am%20a%20Programmer')\n    lu.assertEquals(candidate('I love Coding'), 'I%20love%20Coding')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return string:gsub(\"%s\", \"%%20\")\nend",
    "  return string:gsub(\"%s\", \"%%20\")\nend",
    "  local result = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == ' ' then\n      table.insert(result, '%20')\n    else\n      table.insert(result, char)\n    end\n  end\n  return table.concat(result)\nend",
    "  local new_string = \"\"\n  for i = 1, #string do\n    if string:sub(i, i) == \" \" then\n      new_string = new_string .. \"%20\"\n    else\n      new_string = new_string .. string:sub(i, i)\n    end\n  end\n  return new_string\nend",
    "  local result = string.gsub(string, ' ', '%%20')\n  return result\nend",
    "  local result = ''\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == ' ' then\n      result = result .. '%20'\n    else\n      result = result .. char\n    end\n  end\n  return result\nend",
    "  local new_string = ''\n  for i = 1, #string do\n    if string:sub(i, i) == ' ' then\n      new_string = new_string .. '%20'\n    else\n      new_string = new_string .. string:sub(i, i)\n    end\n  end\n  return new_string\nend",
    "    return string.gsub(string, \" \", \"%%20\")\nend",
    "  local result = string.gsub(string, \" \", \"%%20\")\n  return result\nend",
    "    return string:gsub(\"%s\", \"%%20\")\nend",
    "  local new_string = \"\"\n  for i = 1, #string do\n    if string:sub(i, i) == \" \" then\n      new_string = new_string .. \"%20\"\n    else\n      new_string = new_string .. string:sub(i, i)\n    end\n  end\n  return new_string\nend",
    "  local result = ''\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == ' ' then\n      result = result .. '%20'\n    else\n      result = result .. char\n    end\n  end\n  return result\nend",
    "  return string:gsub(\"%s\", \"%%20\")\nend",
    "    local new_string = string.gsub(string, ' ', '%%20')\n    return new_string\nend",
    "  local new_string = ''\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == ' ' then\n      new_string = new_string .. '%20'\n    else\n      new_string = new_string .. char\n    end\n  end\n  return new_string\nend",
    "  return string:gsub(\"%s\", \"%%20\")\nend",
    "    local new_string = string.gsub(string, \" \", \"%%20\")\n    return new_string\nend",
    "  local result = \"\"\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == \" \" then\n      result = result .. \"%20\"\n    else\n      result = result .. char\n    end\n  end\n  return result\nend",
    "  local result = \"\"\n  for i = 1, #string do\n    if string:sub(i, i) == \" \" then\n      result = result .. \"%20\"\n    else\n      result = result .. string:sub(i, i)\n    end\n  end\n  return result\nend",
    "  return string:gsub(' ', '%%20')\nend"
  ]
}
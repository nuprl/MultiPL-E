{
  "name": "mbpp_807_first_odd",
  "language": "lua",
  "prompt": "-- Write a python function to find the first odd number in a given list of numbers.\nlocal function first_odd(nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_807_first_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = first_odd\n    lu.assertEquals(candidate({1, 3, 5}), 1)\n    lu.assertEquals(candidate({2, 4, 1, 3}), 1)\n    lu.assertEquals(candidate({8, 9, 1}), 9)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  for _, num in ipairs(nums) do\n    if num % 2 == 1 then\n      return num\n    end\n  end\nend",
    "  for _, num in ipairs(nums) do\n    if num % 2 == 1 then\n      return num\n    end\n  end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 == 1 then\n            return num\n        end\n    end\nend",
    "    for i, v in ipairs(nums) do\n        if v % 2 == 1 then\n            return v\n        end\n    end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 == 1 then\n            return num\n        end\n    end\nend",
    "  for _, num in ipairs(nums) do\n    if num % 2 == 1 then\n      return num\n    end\n  end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 == 1 then\n            return num\n        end\n    end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 == 1 then\n            return num\n        end\n    end\nend",
    "  for _, num in ipairs(nums) do\n    if num % 2 == 1 then\n      return num\n    end\n  end\nend",
    "  for i = 1, #nums do\n    if nums[i] % 2 == 1 then\n      return nums[i]\n    end\n  end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 ~= 0 then\n            return num\n        end\n    end\nend",
    "    for i, v in ipairs(nums) do\n        if v % 2 == 1 then\n            return v\n        end\n    end\nend",
    "  for _, num in ipairs(nums) do\n    if num % 2 == 1 then\n      return num\n    end\n  end\nend",
    "    for i = 1, #nums do\n        if nums[i] % 2 == 1 then\n            return nums[i]\n        end\n    end\nend",
    "  for _, num in ipairs(nums) do\n    if num % 2 == 1 then\n      return num\n    end\n  end\nend",
    "  for i = 1, #nums do\n    if nums[i] % 2 == 1 then\n      return nums[i]\n    end\n  end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 == 1 then\n            return num\n        end\n    end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 == 1 then\n            return num\n        end\n    end\nend",
    "    for _, num in ipairs(nums) do\n        if num % 2 == 1 then\n            return num\n        end\n    end\nend",
    "  for _, num in ipairs(nums) do\n    if num % 2 == 1 then\n      return num\n    end\n  end\nend"
  ]
}
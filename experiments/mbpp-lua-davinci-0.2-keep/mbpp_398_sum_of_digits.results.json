{
  "name": "mbpp_398_sum_of_digits",
  "language": "lua",
  "prompt": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, n in ipairs(nums) do\n        for d in tostring(n):gmatch(\"%d\") do\n            sum = sum + tonumber(d)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp28fdsvvb.lua:16: expected: 19, actual: 34\nstack traceback:\n\t/tmp/tmp28fdsvvb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for i, num in ipairs(nums) do\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6jz5zuyb.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp6jz5zuyb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for i, num in ipairs(nums) do\n    local sum = 0\n    for digit in string.gmatch(num, \"%d\") do\n      sum = sum + tonumber(digit)\n    end\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv97ga3ar.lua:17: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpv97ga3ar.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for i, num in ipairs(nums) do\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6jz5zuyb.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp6jz5zuyb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    local num_str = tostring(num)\n    for i = 1, #num_str do\n      sum = sum + tonumber(num_str:sub(i, i))\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgz1j_z2y.lua:7: attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpgz1j_z2y.lua:7: in local 'candidate'\n\t/tmp/tmpgz1j_z2y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            local digit = num % 10\n            sum = sum + digit\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpusjcw9j9.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpusjcw9j9.lua:6: in local 'candidate'\n\t/tmp/tmpusjcw9j9.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    for digit in tostring(num):gmatch('%d') do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm_xkhh50.lua:16: expected: 19, actual: 27\nstack traceback:\n\t/tmp/tmpm_xkhh50.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for _, num in ipairs(nums) do\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    table.insert(result, sum)\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpia6sw7qt.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpia6sw7qt.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for i, num in ipairs(nums) do\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6jz5zuyb.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp6jz5zuyb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for i, num in ipairs(nums) do\n        local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4duayusd.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp4duayusd.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    for digit in tostring(num):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_1gzmnqd.lua:16: expected: 19, actual: 29\nstack traceback:\n\t/tmp/tmp_1gzmnqd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        for digit in tostring(num):gmatch('%d') do\n            sum = sum + tonumber(digit)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw8tx9o8x.lua:16: expected: 19, actual: 26\nstack traceback:\n\t/tmp/tmpw8tx9o8x.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    local digits = tostring(num):gmatch('%d')\n    for digit in digits do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfqz729ke.lua:17: expected: 19, actual: 32\nstack traceback:\n\t/tmp/tmpfqz729ke.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local num_str = tostring(num)\n        for i = 1, #num_str do\n            sum = sum + tonumber(num_str:sub(i, i))\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeku1sbs6.lua:7: attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpeku1sbs6.lua:7: in local 'candidate'\n\t/tmp/tmpeku1sbs6.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local num_str = tostring(num)\n        for i = 1, #num_str do\n            local digit = tonumber(num_str:sub(i, i))\n            sum = sum + digit\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqhywzor4.lua:8: attempt to perform arithmetic on a nil value (local 'digit')\nstack traceback:\n\t/tmp/tmpqhywzor4.lua:8: in local 'candidate'\n\t/tmp/tmpqhywzor4.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local num_str = tostring(num)\n        for i = 1, #num_str do\n            local digit = tonumber(num_str:sub(i, i))\n            sum = sum + digit\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqhywzor4.lua:8: attempt to perform arithmetic on a nil value (local 'digit')\nstack traceback:\n\t/tmp/tmpqhywzor4.lua:8: in local 'candidate'\n\t/tmp/tmpqhywzor4.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for i, num in ipairs(nums) do\n    local sum = 0\n    for digit in tostring(num):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n    end\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplea9pqlg.lua:17: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmplea9pqlg.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for i = 1, #nums do\n        local sum = 0\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf73ij_zv.lua:19: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpf73ij_zv.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        for digit in tostring(num):gmatch('%d') do\n            sum = sum + tonumber(digit)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw8tx9o8x.lua:16: expected: 19, actual: 26\nstack traceback:\n\t/tmp/tmpw8tx9o8x.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local n = num\n        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuyp6wn_.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmphuyp6wn_.lua:6: in local 'candidate'\n\t/tmp/tmphuyp6wn_.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, n in ipairs(nums) do\n    while n > 0 do\n      sum = sum + (n % 10)\n      n = math.floor(n / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7qr5sa3_.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp7qr5sa3_.lua:5: in local 'candidate'\n\t/tmp/tmp7qr5sa3_.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, n in ipairs(nums) do\n        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpve7o18t0.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpve7o18t0.lua:5: in local 'candidate'\n\t/tmp/tmpve7o18t0.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            local digit = num % 10\n            sum = sum + digit\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpusjcw9j9.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpusjcw9j9.lua:6: in local 'candidate'\n\t/tmp/tmpusjcw9j9.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for i, num in ipairs(nums) do\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6jz5zuyb.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp6jz5zuyb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            local digit = num % 10\n            sum = sum + digit\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpusjcw9j9.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpusjcw9j9.lua:6: in local 'candidate'\n\t/tmp/tmpusjcw9j9.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for _, v in ipairs(nums) do\n        local sum = 0\n        for d in tostring(v):gmatch(\"%d\") do\n            sum = sum + tonumber(d)\n        end\n        table.insert(result, sum)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyfaij40f.lua:17: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpyfaij40f.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        for digit in tostring(num):gmatch(\"%d\") do\n            sum = sum + tonumber(digit)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpse_lc1sm.lua:16: expected: 19, actual: 30\nstack traceback:\n\t/tmp/tmpse_lc1sm.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            local digit = num % 10\n            sum = sum + digit\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6foxqxuu.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp6foxqxuu.lua:5: in local 'candidate'\n\t/tmp/tmp6foxqxuu.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local n = num\n        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuyp6wn_.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmphuyp6wn_.lua:6: in local 'candidate'\n\t/tmp/tmphuyp6wn_.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local digits = tostring(num):gmatch('.')\n        for digit in digits do\n            sum = sum + tonumber(digit)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi5djeua5.lua:7: attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpi5djeua5.lua:7: in local 'candidate'\n\t/tmp/tmpi5djeua5.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + (num % 10)\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1ja1no63.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp1ja1no63.lua:6: in local 'candidate'\n\t/tmp/tmp1ja1no63.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        for digit in tostring(num):gmatch(\"%d\") do\n            sum = sum + tonumber(digit)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpse_lc1sm.lua:16: expected: 19, actual: 30\nstack traceback:\n\t/tmp/tmpse_lc1sm.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    for digit in tostring(num):gmatch('%d') do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm_xkhh50.lua:16: expected: 19, actual: 27\nstack traceback:\n\t/tmp/tmpm_xkhh50.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            local digit = num % 10\n            sum = sum + digit\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpusjcw9j9.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpusjcw9j9.lua:6: in local 'candidate'\n\t/tmp/tmpusjcw9j9.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for i = 1, #nums do\n        local num = nums[i]\n        local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpth046g_w.lua:19: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpth046g_w.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local num_str = tostring(num)\n        for i = 1, #num_str do\n            sum = sum + tonumber(num_str:sub(i, i))\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeku1sbs6.lua:7: attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpeku1sbs6.lua:7: in local 'candidate'\n\t/tmp/tmpeku1sbs6.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for i, v in ipairs(nums) do\n        local sum = 0\n        while v > 0 do\n            sum = sum + v % 10\n            v = math.floor(v / 10)\n        end\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpasfrk8j3.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpasfrk8j3.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n\tlocal sum = 0\n\tfor i = 1, #nums do\n\t\tlocal num = nums[i]\n\t\twhile num > 0 do\n\t\t\tsum = sum + num % 10\n\t\t\tnum = math.floor(num / 10)\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9efbjaqb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp9efbjaqb.lua:6: in local 'candidate'\n\t/tmp/tmp9efbjaqb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        local num = tostring(num)\n        for i = 1, #num do\n            sum = sum + tonumber(num:sub(i, i))\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4s0l8s5l.lua:7: attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp4s0l8s5l.lua:7: in local 'candidate'\n\t/tmp/tmp4s0l8s5l.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    for digit in tostring(num):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_1gzmnqd.lua:16: expected: 19, actual: 29\nstack traceback:\n\t/tmp/tmp_1gzmnqd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    for digit in tostring(num):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_1gzmnqd.lua:16: expected: 19, actual: 29\nstack traceback:\n\t/tmp/tmp_1gzmnqd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local n = nums[i]\n        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg6cc1g6a.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpg6cc1g6a.lua:6: in local 'candidate'\n\t/tmp/tmpg6cc1g6a.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, #tostring(nums[i]) do\n      sum = sum + tonumber(tostring(nums[i]):sub(j, j))\n    end\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_gv2silz.lua:17: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp_gv2silz.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            local digit = num % 10\n            sum = sum + digit\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6foxqxuu.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp6foxqxuu.lua:5: in local 'candidate'\n\t/tmp/tmp6foxqxuu.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local function sum_of_digits_of_num(num)\n        local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "",
      "stderr": "lua: /tmp/tmpmo6pyhnq.lua:20: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local function sum_of_digits_of_num(num)\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return sum\n  end\n  local sums = {}\n  for _, num in ipairs(nums) do\n    table.insert(sums, sum_of_digits_of_num(num))\n  end\n  return sums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyek6i9gk.lua:21: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpyek6i9gk.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5392z_86.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp5392z_86.lua:5: in local 'candidate'\n\t/tmp/tmp5392z_86.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for i, num in ipairs(nums) do\n        local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4duayusd.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp4duayusd.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for i, v in ipairs(nums) do\n        local sum = 0\n        for j = 1, #tostring(v) do\n            sum = sum + tonumber(tostring(v):sub(j, j))\n        end\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl43lnxvk.lua:17: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpl43lnxvk.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            local digit = num % 10\n            sum = sum + digit\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpusjcw9j9.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpusjcw9j9.lua:6: in local 'candidate'\n\t/tmp/tmpusjcw9j9.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    local num = tostring(num)\n    for i = 1, #num do\n      sum = sum + tonumber(num:sub(i, i))\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn9enxni0.lua:7: attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpn9enxni0.lua:7: in local 'candidate'\n\t/tmp/tmpn9enxni0.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = (num - digit) / 10\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuw4xw01d.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpuw4xw01d.lua:6: in local 'candidate'\n\t/tmp/tmpuw4xw01d.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    for digit in tostring(num):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_1gzmnqd.lua:16: expected: 19, actual: 29\nstack traceback:\n\t/tmp/tmp_1gzmnqd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    local num_str = tostring(num)\n    for i = 1, #num_str do\n      local digit = tonumber(num_str:sub(i, i))\n      sum = sum + digit\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpehvkoh0c.lua:8: attempt to perform arithmetic on a nil value (local 'digit')\nstack traceback:\n\t/tmp/tmpehvkoh0c.lua:8: in local 'candidate'\n\t/tmp/tmpehvkoh0c.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  local num = 0\n  for i = 1, #nums do\n    num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0jjv3u20.lua:7: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp0jjv3u20.lua:7: in local 'candidate'\n\t/tmp/tmp0jjv3u20.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for i, num in ipairs(nums) do\n        local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4duayusd.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp4duayusd.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + (num % 10)\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1ja1no63.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp1ja1no63.lua:6: in local 'candidate'\n\t/tmp/tmp1ja1no63.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    local num_str = tostring(num)\n    for i = 1, #num_str do\n      sum = sum + tonumber(num_str:sub(i, i))\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgz1j_z2y.lua:7: attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpgz1j_z2y.lua:7: in local 'candidate'\n\t/tmp/tmpgz1j_z2y.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, n in ipairs(nums) do\n        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpve7o18t0.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpve7o18t0.lua:5: in local 'candidate'\n\t/tmp/tmpve7o18t0.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + (num % 10)\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz6ty7jsz.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpz6ty7jsz.lua:5: in local 'candidate'\n\t/tmp/tmpz6ty7jsz.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local result = {}\n    for _, num in ipairs(nums) do\n        local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        table.insert(result, sum)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpursfxbmr.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpursfxbmr.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + (num % 10)\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz6ty7jsz.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpz6ty7jsz.lua:5: in local 'candidate'\n\t/tmp/tmpz6ty7jsz.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n\tlocal sum = 0\n\tfor i = 1, #nums do\n\t\tlocal num = nums[i]\n\t\twhile num > 0 do\n\t\t\tsum = sum + num % 10\n\t\t\tnum = math.floor(num / 10)\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9efbjaqb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp9efbjaqb.lua:6: in local 'candidate'\n\t/tmp/tmp9efbjaqb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        sum = sum + num\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5e3oq1b7.lua:13: expected: 14, actual: 68\nstack traceback:\n\t/tmp/tmp5e3oq1b7.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sums = {}\n  for _, num in ipairs(nums) do\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    table.insert(sums, sum)\n  end\n  return sums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_lzluvic.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmp_lzluvic.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    for digit in tostring(num):gmatch('%d') do\n      sum = sum + tonumber(digit)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm_xkhh50.lua:16: expected: 19, actual: 27\nstack traceback:\n\t/tmp/tmpm_xkhh50.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local function sum_of_digits_of_num(num)\n        local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123614,
      "stdout": "",
      "stderr": "lua: /tmp/tmpmo6pyhnq.lua:20: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgcyq5fm2.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpgcyq5fm2.lua:6: in local 'candidate'\n\t/tmp/tmpgcyq5fm2.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for _, num in ipairs(nums) do\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplwjp40qb.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmplwjp40qb.lua:5: in local 'candidate'\n\t/tmp/tmplwjp40qb.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local sum = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    while num > 0 do\n      local digit = num % 10\n      sum = sum + digit\n      num = math.floor(num / 10)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo72jh4nd.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpo72jh4nd.lua:6: in local 'candidate'\n\t/tmp/tmpo72jh4nd.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n  local result = {}\n  for _, num in ipairs(nums) do\n    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    table.insert(result, sum)\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpia6sw7qt.lua:18: expected: 14, actual: {1, 2, 11}\nstack traceback:\n\t/tmp/tmpia6sw7qt.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tra32sb.lua:6: attempt to compare number with table\nstack traceback:\n\t/tmp/tmp8tra32sb.lua:6: in local 'candidate'\n\t/tmp/tmp8tra32sb.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to compute the sum of digits of each number of a given list.\nlocal function sum_of_digits(nums)\n    local sum = 0\n    for _, num in ipairs(nums) do\n        while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_of_digits\n    lu.assertEquals(candidate({10, 2, 56}), 14)\n    lu.assertEquals(candidate({{10, 20, 4, 5, 'b', 70, 'a'}}), 19)\n    lu.assertEquals(candidate({10, 20, -4, 5, -70}), 19)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665509729,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv7sfls7h.lua:5: attempt to compare number with table\nstack traceback:\n\t/tmp/tmpv7sfls7h.lua:5: in local 'candidate'\n\t/tmp/tmpv7sfls7h.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
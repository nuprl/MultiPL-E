{
  "name": "mbpp_608_bell_Number",
  "language": "lua",
  "prompt": "-- Write a python function to find nth bell number.\nlocal function bell_Number(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_608_bell_Number.py",
  "prompt_terminology": "verbatim",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = bell_Number\n    lu.assertEquals(candidate(2), 2)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 15)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal bell = {}\n\tbell[0] = 1\n\tfor i = 1, n do\n\t\tbell[i] = 0\n\t\tfor j = 0, i - 1 do\n\t\t\tbell[i] = bell[i] + bell[j] * bell[i - j - 1]\n\t\tend\n\tend\n\treturn bell[n]\nend",
    "\tlocal bell = {0, 1}\n\tfor i = 2, n do\n\t\tbell[i] = bell[i-1]\n\t\tfor j = i-1, 1, -1 do\n\t\t\tbell[j] = bell[j] + bell[j-1]\n\t\tend\n\tend\n\treturn bell[n]\nend",
    "\tlocal bell = {}\n\tbell[0] = 1\n\tfor i = 1, n do\n\t\tbell[i] = 0\n\t\tfor j = 0, i - 1 do\n\t\t\tbell[i] = bell[i] + bell[j] * bell[i - j - 1]\n\t\tend\n\tend\n\treturn bell[n]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {0, 1}\n    for i = 2, n do\n        bell[i] = bell[i - 1]\n        for j = i - 1, 1, -1 do\n            bell[j] = bell[j] + bell[j - 1]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {0, 1}\n    for i = 2, n do\n        bell[i] = bell[i - 1]\n        for j = i - 1, 1, -1 do\n            bell[j] = bell[j] + bell[j - 1]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n        end\n    end\n    return bell[n]\nend",
    "\tlocal b = {1}\n\tfor i = 1, n do\n\t\tb[i+1] = 0\n\t\tfor j = i, 1, -1 do\n\t\t\tb[j+1] = b[j] + b[j+1]\n\t\tend\n\tend\n\treturn b[n+1]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n        end\n    end\n    return bell[n]\nend",
    "  local bell = {1}\n  for i = 1, n do\n    local s = 0\n    for j = 1, i do\n      s = s + bell[j] * comb(i - 1, j - 1)\n    end\n    bell[i + 1] = s\n  end\n  return bell[n + 1]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - 1 - j]\n        end\n    end\n    return bell[n]\nend",
    "\tlocal bell = {}\n\tbell[0] = 1\n\tfor i = 1, n do\n\t\tbell[i] = 0\n\t\tfor j = 0, i - 1 do\n\t\t\tbell[i] = bell[i] + bell[j] * bell[i - j - 1]\n\t\tend\n\tend\n\treturn bell[n]\nend",
    "  local b = {0, 1}\n  for i = 2, n do\n    b[i] = 0\n    for j = 0, i - 1 do\n      b[i] = b[i] + b[j] * b[i - j - 1]\n    end\n  end\n  return b[n]\nend",
    "  local bell = {}\n  bell[0] = 1\n  for i = 1, n do\n    bell[i] = 0\n    for j = 0, i - 1 do\n      bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n    end\n  end\n  return bell[n]\nend",
    "    local bell = {0, 1}\n    for i = 2, n do\n        bell[i] = bell[i - 1]\n        for j = i - 1, 1, -1 do\n            bell[j] = bell[j] + bell[j - 1]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - 1 - j]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n        end\n    end\n    return bell[n]\nend",
    "    local bell = {}\n    bell[0] = 1\n    for i = 1, n do\n        bell[i] = 0\n        for j = 0, i - 1 do\n            bell[i] = bell[i] + bell[j] * bell[i - j - 1]\n        end\n    end\n    return bell[n]\nend"
  ]
}
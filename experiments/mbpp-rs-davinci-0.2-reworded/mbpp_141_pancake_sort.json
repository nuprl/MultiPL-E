{
  "name": "mbpp_141_pancake_sort",
  "language": "rs",
  "prompt": "/// Write a function to sort a vector of elements.\nfn pancake_sort(nums: Vec<isize>) -> Vec<isize> {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = pancake_sort;\n    assert_eq!(candidate(vec![15, 79, 25, 38, 69]), vec![15, 25, 38, 69, 79]);\n    assert_eq!(candidate(vec![98, 12, 54, 36, 85]), vec![12, 36, 54, 85, 98]);\n    assert_eq!(candidate(vec![41, 42, 32, 12, 23]), vec![12, 23, 32, 41, 42]);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    for i in (0..nums.len()).rev() {\n        let max_index = nums[..=i].iter().enumerate().max_by_key(|(_, x)| *x).unwrap().0;\n        if max_index == i {\n            continue;\n        }\n        if max_index != 0 {\n            result.push(max_index as isize + 1);\n            nums[..max_index + 1].reverse();\n        }\n        result.push((i + 1) as isize);\n        nums[..i + 1].reverse();\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    for i in (0..nums.len()).rev() {\n        let max = nums.iter().enumerate().max_by_key(|&(_, &x)| x).unwrap().0;\n        if max != i {\n            result.push(max as isize + 1);\n            nums[..=max].reverse();\n            result.push((i + 1) as isize);\n            nums[..=i].reverse();\n        }\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(nums, max_index);\n            nums = flip(nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (0..nums.len()).rev() {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut max_index = 0;\n        for i in 0..k {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, k - 1);\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut i = n - 1;\n        while i > 0 && nums[i - 1] > nums[i] {\n            i -= 1;\n        }\n        if i > 0 {\n            nums[..i + 1].reverse();\n        }\n        nums[..n].reverse();\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums[0..max_index + 1].reverse();\n        nums[0..i].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = (0..=i).max_by_key(|&j| nums[j]).unwrap();\n        if max_index != i {\n            nums[..=max_index].reverse();\n            nums[..=i].reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = 0;\n    while sorted < nums.len() {\n        let mut max_index = sorted;\n        for i in sorted..nums.len() {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, sorted);\n        sorted += 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i - 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut max = 0;\n        for i in 0..k {\n            if nums[i] > nums[max] {\n                max = i;\n            }\n        }\n        flip(&mut nums, max);\n        flip(&mut nums, k - 1);\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_index = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, n - 1);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max = i;\n        for j in 0..i {\n            if nums[j] > nums[max] {\n                max = j;\n            }\n        }\n        flip(&mut nums, max);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    while !sorted {\n        let mut max_index = 0;\n        let mut max_value = nums[0];\n        for (i, &num) in nums.iter().enumerate() {\n            if num > max_value {\n                max_value = num;\n                max_index = i;\n            }\n        }\n        if max_index == nums.len() - 1 {\n            sorted = true;\n        } else {\n            nums[..max_index + 1].reverse();\n            nums.reverse();\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index + 1);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = 0;\n    while sorted < nums.len() {\n        let mut max_idx = sorted;\n        for i in sorted..nums.len() {\n            if nums[i] > nums[max_idx] {\n                max_idx = i;\n            }\n        }\n        flip(&mut nums, max_idx);\n        flip(&mut nums, sorted);\n        sorted += 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.swap(max_index, i);\n            nums.swap(0, max_index);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut max_i = 0;\n        for i in 1..k {\n            if nums[i] > nums[max_i] {\n                max_i = i;\n            }\n        }\n        nums[..=max_i].reverse();\n        nums[..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.swap(max_index, i);\n            nums.swap(0, max_index);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i - 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(&nums, max_index);\n            nums = flip(&nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut i = 0;\n        let mut j = 0;\n        for j in 0..k {\n            if nums[j] > nums[i] {\n                i = j;\n            }\n        }\n        if i != k - 1 {\n            nums = flip(nums, i);\n            nums = flip(nums, k - 1);\n        }\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i - 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        let max_index = nums[..i + 1].iter().enumerate().fold(0, |max_index, (index, &x)| {\n            if x > nums[max_index] {\n                index\n            } else {\n                max_index\n            }\n        });\n        if max_index == i {\n            i -= 1;\n        } else {\n            nums[..max_index + 1].reverse();\n            nums[..i + 1].reverse();\n        }\n        sorted = i == 0;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index == i {\n            i -= 1;\n            if i == 0 {\n                sorted = true;\n            }\n        } else {\n            nums = flip(nums, max_index);\n            nums = flip(nums, i);\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = find_max_index(&nums, i);\n        if max_index != i {\n            flip(&mut nums, max_index);\n            flip(&mut nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i - 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut curr_size = nums.len();\n    while curr_size > 1 {\n        let mut max_index = 0;\n        for i in 0..curr_size {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, curr_size - 1);\n        curr_size -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_index = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, n - 1);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 1..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i - 1 {\n            nums = flip(nums, max_index + 1);\n            nums = flip(nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            flip(&mut nums, max_index);\n            flip(&mut nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_index = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, n - 1);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_idx = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_idx] {\n                max_idx = j;\n            }\n        }\n        flip(&mut nums, max_idx);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_idx = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_idx] {\n                max_idx = j;\n            }\n        }\n        if max_idx != i {\n            nums.swap(max_idx, i);\n            nums.swap(0, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        sorted = true;\n        for j in 0..i {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n                sorted = false;\n            }\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.reverse_range(0, max_index + 1);\n            nums.reverse_range(0, i + 1);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.swap(max_index, i);\n            nums.reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut end = nums.len();\n    while end > 1 {\n        let mut max_index = 0;\n        for i in 0..end {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        nums = flip(nums, max_index + 1);\n        nums = flip(nums, end);\n        end -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = find_max(&nums, i);\n        if max_index != i {\n            flip(&mut nums, max_index);\n            flip(&mut nums, i);\n            result.push(max_index as isize + 1);\n            result.push(i as isize + 1);\n        }\n        i -= 1;\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(&nums, max_index + 1);\n            nums = flip(&nums, i + 1);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len();\n    while !sorted {\n        sorted = true;\n        for j in 0..i {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n                sorted = false;\n            }\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index == i {\n            i -= 1;\n            continue;\n        }\n        if max_index > 0 {\n            nums[..max_index + 1].reverse();\n        }\n        nums[..i + 1].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (1..nums.len()).rev() {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut i = n - 1;\n        while i > 0 && nums[i - 1] > nums[i] {\n            i -= 1;\n        }\n        if i > 0 {\n            nums[..i].reverse();\n            nums[..n].reverse();\n        }\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max] {\n                max = j;\n            }\n        }\n        flip(&mut nums, max);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut j = 0;\n        while j < i {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n            }\n            j += 1;\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    for i in (0..nums.len()).rev() {\n        let max_index = nums[0..=i]\n            .iter()\n            .enumerate()\n            .max_by_key(|(_, &x)| x)\n            .unwrap()\n            .0;\n        if max_index != i {\n            result.push(max_index + 1);\n            nums[0..=max_index].reverse();\n            result.push(i + 1);\n            nums[0..=i].reverse();\n        }\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums.rotate_left(max_index + 1);\n        nums.rotate_left(i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    for i in (1..nums.len()).rev() {\n        let max_index = find_max_index(&nums, i);\n        if max_index != i {\n            flip(&mut nums, max_index);\n            flip(&mut nums, i);\n            result.push(max_index as isize + 1);\n            result.push(i as isize + 1);\n        }\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums[0..max_index + 1].reverse();\n        nums[0..i].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index == i {\n            i -= 1;\n            continue;\n        }\n        if max_index != 0 {\n            nums[..=max_index].reverse();\n        }\n        nums[..=i].reverse();\n        if i == 0 {\n            sorted = true;\n        } else {\n            i -= 1;\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut index = nums.len() - 1;\n    while index > 0 {\n        let mut max_index = 0;\n        for i in 0..=index {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, index);\n        index -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, i - 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums[0..max_index + 1].reverse();\n            nums[0..i + 1].reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(nums, max_index);\n            nums = flip(nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i + 1 {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.reverse_partial(0, max_index + 1);\n            nums.reverse_partial(0, i + 1);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len() - 1;\n    while k > 0 {\n        let mut max_index = 0;\n        for i in 1..=k {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        if max_index != k {\n            flip(&mut nums, max_index);\n            flip(&mut nums, k);\n        }\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums[..=max_index].reverse();\n        nums[..i].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.swap(max_index, i);\n            nums.swap(0, max_index);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_idx = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_idx] {\n                max_idx = i;\n            }\n        }\n        flip(&mut nums, max_idx);\n        flip(&mut nums, n - 1);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = find_max_index(&nums, i);\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    let mut i = nums.len();\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        result.push(max_index + 1);\n        result.push(i);\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = find_max_index(&nums, i);\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i - 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut curr_size = nums.len();\n    while curr_size > 1 {\n        let mut mi = 0;\n        for i in 0..curr_size {\n            if nums[i] > nums[mi] {\n                mi = i;\n            }\n        }\n        flip(&mut nums, mi);\n        flip(&mut nums, curr_size - 1);\n        curr_size -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.swap(max_index, i);\n            nums.swap(0, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums[0..max_index + 1].reverse();\n        nums[0..i].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.swap(max_index, i);\n            nums.swap(0, max_index);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        sorted = true;\n        for j in 0..i {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n                sorted = false;\n            }\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut j = 0;\n        while j < i {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n            }\n            j += 1;\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut max_index = 0;\n        for i in 0..k {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        nums[0..max_index + 1].reverse();\n        nums[0..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums[..=max_index].reverse();\n        nums[..i].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(nums, max_index + 1);\n            nums = flip(nums, i + 1);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index + 1);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max = 0;\n        for i in 0..n {\n            if nums[i] > nums[max] {\n                max = i;\n            }\n        }\n        if max != n - 1 {\n            nums[..max + 1].reverse();\n            nums[..n].reverse();\n        }\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i + 1 {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max] {\n                max = j;\n            }\n        }\n        if max != i {\n            if max != 0 {\n                result.push(max as isize + 1);\n                nums[..max + 1].reverse();\n            }\n            result.push(i as isize + 1);\n            nums[..i + 1].reverse();\n        }\n        i -= 1;\n    }\n    result",
    "    let mut nums = nums;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n        for i in (1..nums.len()).rev() {\n            if nums[i] < nums[i - 1] {\n                sorted = false;\n                nums[0..i + 1].reverse();\n                nums[0..i].reverse();\n            }\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (1..nums.len()).rev() {\n        let mut max_idx = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_idx] {\n                max_idx = j;\n            }\n        }\n        flip(&mut nums, max_idx);\n        flip(&mut nums, i);\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            if max_index != 0 {\n                result.push(max_index as isize + 1);\n                nums[..max_index + 1].reverse();\n            }\n            result.push(i as isize + 1);\n            nums[..i + 1].reverse();\n        }\n        i -= 1;\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n\n        if max_index != i {\n            nums = flip(&nums, max_index);\n            nums = flip(&nums, i);\n        }\n\n        i -= 1;\n    }\n\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_idx = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_idx] {\n                max_idx = j;\n            }\n        }\n        flip(&mut nums, max_idx);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n\n    for i in (0..nums.len()).rev() {\n        let max_index = nums[..i + 1]\n            .iter()\n            .enumerate()\n            .max_by_key(|(_, &x)| x)\n            .unwrap()\n            .0;\n\n        if max_index != i {\n            nums[..max_index + 1].reverse();\n            nums[..i + 1].reverse();\n        }\n    }\n\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_index = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, n - 1);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (1..nums.len()).rev() {\n        let (mut max_idx, mut max) = (0, nums[0]);\n        for j in 1..=i {\n            if nums[j] > max {\n                max = nums[j];\n                max_idx = j;\n            }\n        }\n        nums[..=max_idx].reverse();\n        nums[..=i].reverse();\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.reverse_range(0, max_index + 1);\n            nums.reverse_range(0, i + 1);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut i = 0;\n        for j in 1..k {\n            if nums[j] > nums[i] {\n                i = j;\n            }\n        }\n        reverse(&mut nums, i + 1);\n        reverse(&mut nums, k);\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (0..nums.len()).rev() {\n        let max_index = max_index(&nums[0..=i]);\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n    }\n    nums",
    "    let mut nums = nums;\n    let mut current_size = nums.len();\n    while current_size > 1 {\n        let mut max_index = 0;\n        for i in 0..current_size {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, current_size - 1);\n        current_size -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_index = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, n);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut idx = nums.len() - 1;\n    while idx > 0 {\n        let mut max_idx = idx;\n        for i in 0..idx {\n            if nums[i] > nums[max_idx] {\n                max_idx = i;\n            }\n        }\n        if max_idx != idx {\n            flip(&mut nums, max_idx);\n            flip(&mut nums, idx);\n        }\n        idx -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = nums[..i + 1]\n            .iter()\n            .enumerate()\n            .max_by_key(|(_, &x)| x)\n            .unwrap()\n            .0;\n        if max_index != i {\n            nums[..max_index + 1].reverse();\n            nums[..i + 1].reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index == i {\n            i -= 1;\n            continue;\n        }\n        if max_index != 0 {\n            nums[..=max_index].reverse();\n        }\n        nums[..=i].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut end = nums.len() - 1;\n    while end > 0 {\n        let mut max_index = 0;\n        for i in 0..=end {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        nums[0..=max_index].reverse();\n        nums[0..=end].reverse();\n        end -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut max_i = 0;\n        for i in 0..k {\n            if nums[i] > nums[max_i] {\n                max_i = i;\n            }\n        }\n        nums[..max_i + 1].reverse();\n        nums[..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = nums[..i + 1]\n            .iter()\n            .enumerate()\n            .max_by_key(|&(_, &x)| x)\n            .unwrap()\n            .0;\n        if max_index != i {\n            nums.rotate_left(max_index + 1);\n            nums.rotate_left(i + 1);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut i = 0;\n        while i < k - 1 {\n            if nums[i] > nums[i + 1] {\n                break;\n            }\n            i += 1;\n        }\n        if i == k - 1 {\n            break;\n        }\n        if i > 0 {\n            nums[..i + 1].reverse();\n        }\n        nums[..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut max_i = 0;\n        for i in 0..k {\n            if nums[i] > nums[max_i] {\n                max_i = i;\n            }\n        }\n        nums[..max_i + 1].reverse();\n        nums[..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len();\n    while !sorted {\n        sorted = true;\n        for j in 0..i - 1 {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n                sorted = false;\n            }\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            flip(&mut nums, max_index);\n            flip(&mut nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (0..nums.len()).rev() {\n        let max_index = nums[..=i].iter().enumerate().max_by_key(|(_, &x)| x).unwrap().0;\n        if max_index != i {\n            nums[..=max_index].reverse();\n            nums[..=i].reverse();\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (1..nums.len()).rev() {\n        let mut max_idx = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_idx] {\n                max_idx = j;\n            }\n        }\n        flip(&mut nums, max_idx);\n        flip(&mut nums, i);\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(&nums, max_index + 1);\n            nums = flip(&nums, i + 1);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_index = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index + 1);\n        flip(&mut nums, n);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut max_index = 0;\n        for i in 0..k {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        nums[..max_index + 1].reverse();\n        nums[..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index == i {\n            i -= 1;\n            if i == 0 {\n                sorted = true;\n            }\n        } else {\n            nums = flip(nums, max_index);\n            nums = flip(nums, i);\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = find_max_index(&nums, i);\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted_index = nums.len();\n    while sorted_index > 0 {\n        let mut max_index = 0;\n        for i in 0..sorted_index {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, sorted_index - 1);\n        sorted_index -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let (mut i, mut m) = (0, 0);\n        for j in 0..k {\n            if nums[j] > nums[m] {\n                m = j;\n            }\n        }\n        reverse(&mut nums, i, m);\n        reverse(&mut nums, i, k - 1);\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n        for i in 0..nums.len() - 1 {\n            if nums[i] > nums[i + 1] {\n                nums = flip(nums, i + 1);\n                sorted = false;\n            }\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums[0..max_index + 1].reverse();\n            nums[0..i + 1].reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut flips = Vec::new();\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            flip(&mut nums, max_index);\n            flips.push(max_index + 1);\n            flip(&mut nums, i);\n            flips.push(i + 1);\n        }\n        i -= 1;\n    }\n    flips",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = find_max_index(&nums, i);\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut index = nums.len() - 1;\n    while !sorted {\n        sorted = true;\n        for i in 0..index {\n            if nums[i] > nums[i + 1] {\n                nums.swap(i, i + 1);\n                sorted = false;\n            }\n        }\n        index -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(nums, max_index + 1);\n        nums = flip(nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            if max_index != 0 {\n                result.push(max_index as isize + 1);\n                nums[..max_index + 1].reverse();\n            }\n            result.push(i as isize + 1);\n            nums[..i + 1].reverse();\n        }\n        i -= 1;\n    }\n    result",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    let mut i = nums.len();\n    while i > 0 {\n        let max_index = nums[..i].iter().enumerate().max_by_key(|&(_, &x)| x).unwrap().0;\n        if max_index == i - 1 {\n            i -= 1;\n            continue;\n        }\n        if max_index != 0 {\n            nums[..max_index + 1].reverse();\n            result.push(max_index as isize + 1);\n        }\n        nums[..i].reverse();\n        result.push(i as isize);\n        i -= 1;\n    }\n    result",
    "    let mut nums = nums;\n    for i in (0..nums.len()).rev() {\n        let max_index = nums[..i + 1].iter().enumerate().max_by_key(|&(_, &x)| x).unwrap().0;\n        nums[..max_index + 1].reverse();\n        nums[..i + 1].reverse();\n    }\n    nums",
    "    let mut nums = nums;\n    let mut flips = Vec::new();\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = nums[0..=i].iter().enumerate().max_by_key(|(_, &x)| x).unwrap().0;\n        if max_index != i {\n            if max_index > 0 {\n                flips.push(max_index + 1);\n                nums[0..=max_index].reverse();\n            }\n            flips.push(i + 1);\n            nums[0..=i].reverse();\n        }\n        i -= 1;\n    }\n    flips",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i + 1 {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums[0..=max_index].reverse();\n            nums[0..=i].reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let (mut max_index, mut max_value) = (0, nums[0]);\n        for j in 1..i + 1 {\n            if nums[j] > max_value {\n                max_index = j;\n                max_value = nums[j];\n            }\n        }\n        if max_index == i {\n            i -= 1;\n            continue;\n        }\n        if max_index != 0 {\n            nums[..max_index + 1].reverse();\n        }\n        nums[..i + 1].reverse();\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(nums, max_index);\n            nums = flip(nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let max_index = nums[..i + 1].iter().enumerate().fold(0, |max_index, (index, &x)| {\n            if x > nums[max_index] {\n                index\n            } else {\n                max_index\n            }\n        });\n        if max_index != i {\n            nums.reverse();\n            nums.reverse();\n            nums.reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut index = nums.len() - 1;\n    while index > 0 {\n        let mut max_index = 0;\n        for i in 0..index + 1 {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, index);\n        index -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_idx = 0;\n        for i in 1..n {\n            if nums[i] > nums[max_idx] {\n                max_idx = i;\n            }\n        }\n        if max_idx != n - 1 {\n            nums[..max_idx + 1].reverse();\n            nums[..n].reverse();\n        }\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i + 1 {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums = flip(nums, max_index);\n            nums = flip(nums, i);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut j = 0;\n        while j < i {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n            }\n            j += 1;\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    for i in (1..nums.len()).rev() {\n        let max_index = nums[..=i].iter().enumerate().max_by_key(|(_, x)| *x).unwrap().0;\n        if max_index == i {\n            continue;\n        }\n        nums[..=max_index].reverse();\n        nums[..=i].reverse();\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut i = n - 1;\n        while i > 0 && nums[i - 1] > nums[i] {\n            i -= 1;\n        }\n        if i > 0 {\n            nums[..i].reverse();\n            nums[..n].reverse();\n        }\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 0 {\n        let mut i = 0;\n        while i < k {\n            if nums[i] == k as isize {\n                break;\n            }\n            i += 1;\n        }\n        if i == k {\n            k -= 1;\n            continue;\n        }\n        if i > 0 {\n            nums[..i + 1].reverse();\n        }\n        nums[..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut n = nums.len();\n    while n > 1 {\n        let mut max_index = 0;\n        for i in 0..n {\n            if nums[i] > nums[max_index] {\n                max_index = i;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, n - 1);\n        n -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index == i {\n            i -= 1;\n            if i == 0 {\n                sorted = true;\n            }\n        } else {\n            nums = flip(nums, max_index);\n            nums = flip(nums, i);\n        }\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        sorted = true;\n        for j in 0..i {\n            if nums[j] > nums[j + 1] {\n                nums.swap(j, j + 1);\n                sorted = false;\n            }\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut sorted = false;\n    let mut i = nums.len() - 1;\n    while !sorted {\n        sorted = true;\n        for j in 0..i {\n            if nums[j] > nums[j + 1] {\n                nums[j..j + 2].reverse();\n                sorted = false;\n            }\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut result = Vec::new();\n    for i in (0..nums.len()).rev() {\n        let index = nums.iter().position(|&x| x == i as isize).unwrap();\n        if index != i {\n            if index != 0 {\n                result.push(index as isize + 1);\n                nums[..index + 1].reverse();\n            }\n            result.push(i as isize + 1);\n            nums[..i + 1].reverse();\n        }\n    }\n    result",
    "    let mut nums = nums;\n    let mut index = nums.len();\n    while index > 1 {\n        let mut max_index = 0;\n        let mut max_value = nums[0];\n        for i in 1..index {\n            if nums[i] > max_value {\n                max_value = nums[i];\n                max_index = i;\n            }\n        }\n        if max_index != index - 1 {\n            nums[..max_index + 1].reverse();\n            nums[..index].reverse();\n        }\n        index -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        flip(&mut nums, max_index);\n        flip(&mut nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut k = nums.len();\n    while k > 1 {\n        let mut i = 0;\n        for j in 1..k {\n            if nums[j] > nums[i] {\n                i = j;\n            }\n        }\n        nums[..i + 1].reverse();\n        nums[..k].reverse();\n        k -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max] {\n                max = j;\n            }\n        }\n        nums = flip(&nums, max);\n        nums = flip(&nums, i);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i {\n            nums.swap(max_index, i);\n            nums.swap(0, max_index);\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len();\n    while i > 1 {\n        let mut max_index = 0;\n        for j in 1..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        if max_index != i - 1 {\n            nums[..=max_index].reverse();\n            nums[..i].reverse();\n        }\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = i;\n        for j in 0..i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums",
    "    let mut nums = nums;\n    let mut i = nums.len() - 1;\n    while i > 0 {\n        let mut max_index = 0;\n        for j in 0..=i {\n            if nums[j] > nums[max_index] {\n                max_index = j;\n            }\n        }\n        nums = flip(&nums, max_index + 1);\n        nums = flip(&nums, i + 1);\n        i -= 1;\n    }\n    nums"
  ]
}
{
  "name": "mbpp_295_sum_div",
  "language": "rs",
  "prompt": "/// Write a function to return the sum of all divisors of a number.\nfn sum_div(number: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_295_sum_div.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = sum_div;\n    assert_eq!(candidate(8), 7);\n    assert_eq!(candidate(12), 16);\n    assert_eq!(candidate(7), 1);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    (1..number+1).filter(|x| number % x == 0).sum()",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..number {\n        if number % i == 0 {\n            sum += i;\n        }\n    }\n    sum"
  ]
}
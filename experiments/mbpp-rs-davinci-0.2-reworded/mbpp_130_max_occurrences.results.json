{
  "name": "mbpp_130_max_occurrences",
  "language": "rs",
  "prompt": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp5mee2kp_.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp5mee2kp_.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_item = 0;\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_item = num;\n        }\n    }\n\n    max_occurrences_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprpukrx3a.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_count = 0;\n    for (key, count) in counts {\n        if count > max_count {\n            max_key = key;\n            max_count = count;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp11gbqz9o.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_num = 0;\n    let mut max_count = 0;\n\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9qzahel7.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpon81v1m8.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpmmwna4qs.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpfl8lnoch.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp5mee2kp_.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp5mee2kp_.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakkll1lp.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in &counts {\n        if *count > max_count {\n            max_count = *count;\n            max_num = *num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpg1ntqls8.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_item = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_item = num;\n        }\n    }\n    max_occurrences_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp1ljkpyfl.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprfdmm4iv.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9mpa03rm.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max = 0;\n    let mut max_key = 0;\n    for (key, count) in counts {\n        if count > max {\n            max = count;\n            max_key = key;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpalr62ll3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp4oodcgs6.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_value = 0;\n    for (key, value) in map {\n        if value > max_value {\n            max_key = key;\n            max_value = value;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9udai16_.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprfdmm4iv.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_num = 0;\n    for num in nums {\n        let count = nums.iter().filter(|&x| *x == num).count();\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmp6sbnoflp.rs:6:21\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n5   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n6   |         let count = nums.iter().filter(|&x| *x == num).count();\n    |                     ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n5   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_value = 0;\n    for (key, value) in map {\n        if value > max_value {\n            max_key = key;\n            max_value = value;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp9udai16_.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, usize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_value = 0;\n    for (key, value) in occurrences {\n        if value > max_value {\n            max_key = key;\n            max_value = value;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpk4dsfhe3.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpk4dsfhe3.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_value = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_value = num;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgf7tfmcd.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp3y1p1khr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdxipc3so.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n\n    for num in nums {\n        let count = nums.iter().filter(|&x| *x == num).count();\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `nums`\n   --> /tmp/tmpmby_plxa.rs:7:21\n    |\n2   | fn max_occurrences(nums: Vec<isize>) -> isize {\n    |                    ---- move occurs because `nums` has type `Vec<isize>`, which does not implement the `Copy` trait\n...\n6   |     for num in nums {\n    |                ---- `nums` moved due to this implicit call to `.into_iter()`\n7   |         let count = nums.iter().filter(|&x| *x == num).count();\n    |                     ^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `nums`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n6   |     for num in &nums {\n    |                +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_count = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max = num;\n            max_count = *count;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpr3sm2u71.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut freq = HashMap::new();\n    for i in nums {\n        let count = freq.entry(i).or_insert(0);\n        *count += 1;\n    }\n    let mut max = 0;\n    let mut max_num = 0;\n    for (num, count) in freq {\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo0tvxkco.rs:3:20\n  |\n3 |     let mut freq = HashMap::new();\n  |                    ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_val = 0;\n    for (key, val) in occurrences {\n        if val > max_val {\n            max_key = key;\n            max_val = val;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp78w8dmvx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp3y1p1khr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max {\n            max = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpbnzj78a0.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpon81v1m8.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_count = 0;\n    for (key, count) in occurrences {\n        if count > max_count {\n            max_key = key;\n            max_count = count;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpzu9br0x5.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_count = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max = num;\n            max_count = *count;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpr3sm2u71.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_count = 0;\n    for (key, count) in counts {\n        if count > max_count {\n            max_key = key;\n            max_count = count;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp11gbqz9o.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp5xyil5cx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpon81v1m8.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_item = 0;\n    let mut count = HashMap::new();\n    for num in nums {\n        let count = count.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp23n5wmuj.rs:5:21\n  |\n5 |     let mut count = HashMap::new();\n  |                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, usize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpngbonw3q.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpngbonw3q.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    occurrences.into_iter().max_by_key(|(_, count)| *count).unwrap().0\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmput41dwqs.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_item = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpohxiigf6.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts: HashMap<isize, usize> = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp2x0kvytd.rs:3:21\n  |\n3 |     let mut counts: HashMap<isize, usize> = HashMap::new();\n  |                     ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2x0kvytd.rs:3:45\n  |\n3 |     let mut counts: HashMap<isize, usize> = HashMap::new();\n  |                                             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_key = 0;\n    for (key, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_key = key;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpf8re9zcq.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpon81v1m8.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts.iter() {\n        if *count > max_count {\n            max_count = *count;\n            max_num = *num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpr9ekatbq.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_item = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpohxiigf6.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_count = 0;\n    for (key, count) in counts {\n        if count > max_count {\n            max_key = key;\n            max_count = count;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp11gbqz9o.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, usize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp0q1em9em.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0q1em9em.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_count = 0;\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max = num;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmph4rap9c1.rs:5:19\n  |\n5 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvx2kg4ey.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut count = 0;\n    let mut num = 0;\n    for i in nums {\n        if i == num {\n            count += 1;\n        } else {\n            if count > max_count {\n                max_count = count;\n                max_num = num;\n            }\n            count = 1;\n            num = i;\n        }\n    }\n    if count > max_count {\n        max_num = num;\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `8`', /tmp/tmpsyxe1viy.rs:28:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    counts.into_iter().max_by_key(|&(_, count)| count).unwrap().0\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpi6_lukj9.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpf30l0p83.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max {\n            max = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgj673j3q.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_occurrences_item = 0;\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_occurrences_item = num;\n        }\n    }\n    max_occurrences_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp5opy7ho6.rs:5:26\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp5opy7ho6.rs:5:50\n  |\n5 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprfdmm4iv.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmplr4r1gs_.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmplr4r1gs_.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, isize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_key = 0;\n    let mut max_val = 0;\n    for (key, val) in occurrences {\n        if val > max_val {\n            max_key = key;\n            max_val = val;\n        }\n    }\n    max_key\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp78w8dmvx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpi18x21st.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_item = 0;\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpohxiigf6.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp1t9mcuhl.rs:3:18\n  |\n3 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp1t9mcuhl.rs:3:42\n  |\n3 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpoel0pbtp.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmph8ecopmw.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp5xyil5cx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpci9vk85e.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprfdmm4iv.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp8_hf24d3.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpo_bbdnzx.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts.iter() {\n        if *count > max_count {\n            max_count = *count;\n            max_num = *num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpr9ekatbq.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, usize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp0g8dj305.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0g8dj305.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp3y1p1khr.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpoel0pbtp.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpoel0pbtp.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, usize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrence = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrence {\n            max_occurrence = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpdz6awmwl.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpdz6awmwl.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences: HashMap<isize, usize> = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp0g8dj305.rs:3:26\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0g8dj305.rs:3:50\n  |\n3 |     let mut occurrences: HashMap<isize, usize> = HashMap::new();\n  |                                                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_value = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_value = num;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgf7tfmcd.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpp220wrfr.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmph8ecopmw.rs:3:19\n  |\n3 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut nums = nums;\n    nums.sort();\n    let mut max_occurrences = 0;\n    let mut max_occurrences_num = 0;\n    let mut current_num = nums[0];\n    let mut current_occurrences = 0;\n    for num in nums {\n        if num == current_num {\n            current_occurrences += 1;\n        } else {\n            if current_occurrences > max_occurrences {\n                max_occurrences = current_occurrences;\n                max_occurrences_num = current_num;\n            }\n            current_num = num;\n            current_occurrences = 1;\n        }\n    }\n    if current_occurrences > max_occurrences {\n        max_occurrences = current_occurrences;\n        max_occurrences_num = current_num;\n    }\n    max_occurrences_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122590,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `7`,\n right: `8`', /tmp/tmpsjtnlkkv.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp2vxegrwn.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp84r4yxr3.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    let mut occurrences = HashMap::new();\n\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_occurrences {\n            max_occurrences = *count;\n            max_num = num;\n        }\n    }\n\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmps30lydnq.rs:5:27\n  |\n5 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_item = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_item = num;\n        }\n    }\n    max_item\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpwclupf5p.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for num in nums {\n        let count = map.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in map {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp1t9mcuhl.rs:3:18\n  |\n3 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp1t9mcuhl.rs:3:42\n  |\n3 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut counts = HashMap::new();\n    for n in nums {\n        let count = counts.entry(n).or_insert(0);\n        *count += 1;\n    }\n    let mut max_count = 0;\n    let mut max_num = 0;\n    for (num, count) in counts {\n        if count > max_count {\n            max_count = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp142hfwx8.rs:3:22\n  |\n3 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_num = 0;\n    let mut max_count = 0;\n    for (num, count) in occurrences {\n        if count > max_count {\n            max_num = num;\n            max_count = count;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpon81v1m8.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut occurrences = HashMap::new();\n    for num in nums {\n        let count = occurrences.entry(num).or_insert(0);\n        *count += 1;\n    }\n    let mut max_occurrences = 0;\n    let mut max_num = 0;\n    for (num, count) in occurrences {\n        if count > max_occurrences {\n            max_occurrences = count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1666122589,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprfdmm4iv.rs:3:27\n  |\n3 |     let mut occurrences = HashMap::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the item with maximum frequency in a given vector.\nfn max_occurrences(nums: Vec<isize>) -> isize {\n    let mut max_count = 0;\n    let mut max_num = 0;\n    let mut counts = HashMap::new();\n    for num in nums {\n        let count = counts.entry(num).or_insert(0);\n        *count += 1;\n        if *count > max_count {\n            max_count = *count;\n            max_num = num;\n        }\n    }\n    max_num\n}\n\nfn main() {\n    let candidate = max_occurrences;\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]), 2);\n    assert_eq!(candidate(vec![2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]), 8);\n    assert_eq!(candidate(vec![10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]), 20);\n}\n",
      "timestamp": 1665517254,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpd65395io.rs:5:22\n  |\n5 |     let mut counts = HashMap::new();\n  |                      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
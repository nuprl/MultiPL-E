{
  "name": "mbpp_448_cal_sum",
  "language": "rs",
  "prompt": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let next = perrin[0] + perrin[2];\n        sum += next;\n        perrin.remove(0);\n        perrin.push(next);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmp669g24nr.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 3..n {\n        let next_number = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(next_number);\n    }\n    for i in perrin_numbers {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `22`,\n right: `49`', /tmp/tmps0ojmyck.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:9:16\n  |\n9 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(next);\n        sum += next;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpik44c3it.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 3] + p[i - 2]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:16\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:27\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 2, 3];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpwwq0ik6b.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpwwq0ik6b.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    while i < n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjtgj6rxp.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp4899ddc2.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp4899ddc2.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp4899ddc2.rs:9:16\n  |\n9 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmps3shmd9e.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![0, 0, 3];\n    for i in 3..n {\n        perrin.push(perrin[i - 2] + perrin[i - 3]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp0wismczk.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 2] + perrin[i - 3]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp0wismczk.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 2] + perrin[i - 3]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp0wismczk.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let tmp = a;\n        a = c;\n        c = b + c;\n        b = tmp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `93`,\n right: `49`', /tmp/tmplxc26ban.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 3] + p[i - 2]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:16\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:27\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0];\n        perrin[0] = tmp + perrin[2];\n        sum += perrin[0];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `67`,\n right: `49`', /tmp/tmp5y6dmw37.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 2, 3];\n    for i in 3..n {\n        let temp = p[i - 2] + p[i - 3];\n        p.push(temp);\n        sum += temp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpxt8u7omm.rs:6:20\n  |\n6 |         let temp = p[i - 2] + p[i - 3];\n  |                    ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpxt8u7omm.rs:6:31\n  |\n6 |         let temp = p[i - 2] + p[i - 3];\n  |                               ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums = vec![perrin_nums[1], perrin_nums[2], perrin_nums[0] + perrin_nums[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpmr6bm14b.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum: isize = 0;\n    let mut perrin: Vec<isize> = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp6dpnwbf7.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp6dpnwbf7.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror[E0277]: the type `[isize]` cannot be indexed by `isize`\n --> /tmp/tmp6dpnwbf7.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[isize]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<isize>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = tmp;\n    }\n    for i in perrin_numbers {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `22`,\n right: `49`', /tmp/tmpj4ngcxdd.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpd4vkysbq.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![0, 3, 0, 2];\n    for i in 4..n {\n        let perrin_number = perrin_numbers[i as usize - 3] + perrin_numbers[i as usize - 2];\n        perrin_numbers.push(perrin_number);\n        sum += perrin_number;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `22`,\n right: `49`', /tmp/tmpia21i68e.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    p.iter().sum()\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpefbbhsyn.rs:5:16\n  |\n5 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpefbbhsyn.rs:5:27\n  |\n5 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = perrin(n);\n    while let Some(x) = p {\n        sum += x;\n        p = perrin(n);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpoavyjmsl.rs:4:17\n  |\n4 |     let mut p = perrin(n);\n  |                 ^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpoavyjmsl.rs:7:13\n  |\n7 |         p = perrin(n);\n  |             ^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmphz8kal90.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpiezqen7a.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![0, 1, 2];\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 2] + perrin_numbers[i - 3]);\n    }\n    for i in 0..n {\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmplc7yxmes.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 2] + perrin_numbers[i - 3]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmplc7yxmes.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 2] + perrin_numbers[i - 3]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmplc7yxmes.rs:9:16\n  |\n9 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next = perrin_numbers[(i - 2) as usize] + perrin_numbers[(i - 3) as usize];\n        perrin_numbers.push(next);\n    }\n    for i in 0..n {\n        sum += perrin_numbers[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmppkvc2sn8.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p_n = 0;\n    let mut p_n_1 = 3;\n    let mut p_n_2 = 0;\n    for _ in 0..n {\n        p_n = p_n_1 + p_n_2;\n        p_n_2 = p_n_1;\n        p_n_1 = p_n;\n        sum += p_n;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `426`,\n right: `49`', /tmp/tmpqugaynxj.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpg7va56af.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpvbe7tncw.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n    }\n    for i in perrin {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `22`,\n right: `49`', /tmp/tmp3rjn04nx.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    let mut i = 3;\n    while i <= n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `44`,\n right: `49`', /tmp/tmpz57e4y74.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin = vec![3, 0, 2];\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmp86s5x9iw.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmpuztoqgvf.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    let mut i = 3;\n    while i <= n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        i += 1;\n    }\n    for i in 0..n {\n        sum += perrin_numbers[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp1_j4ua6i.rs:7:29\n  |\n7 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp1_j4ua6i.rs:7:53\n  |\n7 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpd4vkysbq.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 3..n {\n        let next = perrin_nums[0] + perrin_nums[2];\n        perrin_nums.insert(0, next);\n        perrin_nums.pop();\n        sum += next;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `75`,\n right: `49`', /tmp/tmpeu9cee2e.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums = vec![perrin_nums[1], perrin_nums[2], perrin_nums[0] + perrin_nums[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpmr6bm14b.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpghb2it91.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n    }\n    for i in 0..n {\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmplsz99m4j.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmplsz99m4j.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmplsz99m4j.rs:9:16\n  |\n9 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        let next = p[1] + p[2];\n        p[0] = p[1];\n        p[1] = p[2];\n        p[2] = next;\n        sum += next;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `64`,\n right: `49`', /tmp/tmp51528qv7.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![0, 0, 2];\n    for i in 3..n {\n        let perrin_number = perrin_numbers[i as usize - 3] + perrin_numbers[i as usize - 2];\n        perrin_numbers.push(perrin_number);\n        sum += perrin_number;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `14`,\n right: `49`', /tmp/tmp0a34mbm2.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        let t = p[1] + p[2];\n        p[0] = p[1];\n        p[1] = p[2];\n        p[2] = t;\n        sum += t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `64`,\n right: `49`', /tmp/tmpwoqjdp1g.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin_numbers[0] + perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = temp;\n    }\n    for i in 0..3 {\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `53`,\n right: `49`', /tmp/tmpm275nf2_.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(next);\n        sum += next;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpik44c3it.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpghb2it91.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 0;\n    for _ in 0..n {\n        sum += a;\n        a = b;\n        b = c;\n        c = a + b;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `141`,\n right: `49`', /tmp/tmp536273py.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:7:16\n  |\n7 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin = vec![perrin[1], perrin[2], perrin[0] + perrin[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpcdqithcs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[0] + perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmppwpkjb9e.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = PerrinNumbers::new();\n    for _ in 0..n {\n        sum += perrin_numbers.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `PerrinNumbers`\n --> /tmp/tmpax0sj0u0.rs:4:30\n  |\n4 |     let mut perrin_numbers = PerrinNumbers::new();\n  |                              ^^^^^^^^^^^^^ use of undeclared type `PerrinNumbers`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_nums[0] + perrin_nums[1];\n        perrin_nums.push(next_num);\n        perrin_nums.remove(0);\n        sum += next_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpo3z5k08t.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 0;\n    while i < n {\n        sum += perrin(i);\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmptskm42d1.rs:6:16\n  |\n6 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpvbe7tncw.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let next = perrin[0] + perrin[2];\n        sum += next;\n        perrin.remove(0);\n        perrin.push(next);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmp669g24nr.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = perrin_seq(n);\n    while let Some(num) = perrin.next() {\n        sum += num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin_seq` in this scope\n --> /tmp/tmpalnvxkbj.rs:4:22\n  |\n4 |     let mut perrin = perrin_seq(n);\n  |                      ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin = vec![perrin[1], perrin[2], perrin[0] + perrin[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpcdqithcs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = tmp;\n        sum += perrin_numbers[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmp6rv0slll.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpuulihvwp.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers.push(next_num);\n        perrin_numbers.remove(0);\n        sum += next_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmprt6q1cma.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin = vec![perrin[1], perrin[2], perrin[0] + perrin[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `63`,\n right: `49`', /tmp/tmp5z6g8n84.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin[2];\n        perrin[2] = perrin[1];\n        perrin[1] = perrin[0];\n        perrin[0] = temp + perrin[1];\n        sum += perrin[0];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `75`,\n right: `49`', /tmp/tmp_v557mhh.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpi1yf6rrb.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpiezqen7a.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin_numbers = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp01t1d6f6.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp01t1d6f6.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp01t1d6f6.rs:7:16\n  |\n7 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin = vec![3, 0, 2];\n    let mut sum = 0;\n    for i in 3..n {\n        let temp = perrin[0] + perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = temp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmp38mpsy7c.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a + b;\n        a = c;\n        b = c;\n        c = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `78`,\n right: `49`', /tmp/tmpkjdqb7tq.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut p = vec![0, 3, 0, 2];\n    let mut i = 3;\n    while i < n {\n        i += 1;\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    p.iter().sum()\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpvnnju7lm.rs:7:16\n  |\n7 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpvnnju7lm.rs:7:27\n  |\n7 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpvbe7tncw.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin = vec![perrin[1], perrin[2], perrin[0] + perrin[1]];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpcdqithcs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[2];\n        perrin[2] = perrin[1];\n        perrin[1] = perrin[0];\n        perrin[0] = tmp + perrin[1];\n        sum += perrin[0];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `75`,\n right: `49`', /tmp/tmptarx878l.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        p.push(p[p.len() - 3] + p[p.len() - 2]);\n    }\n    for i in p {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmp3zcodljr.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 3..n {\n        let last_index = perrin_numbers.len() - 1;\n        let next_number = perrin_numbers[last_index] + perrin_numbers[last_index - 1] - perrin_numbers[last_index - 2];\n        perrin_numbers.push(next_number);\n    }\n    perrin_numbers.iter().sum()\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `49`', /tmp/tmpbpqc2dq8.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut a = 0;\n    let mut b = 2;\n    let mut c = 3;\n    let mut sum = 2;\n    for _ in 3..n {\n        a = b;\n        b = c;\n        c = a + b;\n        sum += c;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `138`,\n right: `49`', /tmp/tmpnq9lg_fd.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmp_9e70214.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[2];\n        perrin[2] = perrin[1];\n        perrin[1] = perrin[0];\n        perrin[0] = tmp + perrin[1];\n        sum += perrin[0];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `75`,\n right: `49`', /tmp/tmp__m2dh1c.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let perrin_num = perrin_nums[0] + perrin_nums[2];\n        sum += perrin_num;\n        perrin_nums.push(perrin_num);\n        perrin_nums.remove(0);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmpwdxcd1mh.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut p = vec![3, 0, 2];\n    let mut sum = 2;\n    for i in 3..n {\n        p.push(p[(i - 2) as usize] + p[(i - 3) as usize]);\n        sum += p[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `34`,\n right: `49`', /tmp/tmpbelozhtk.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_nums[0];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_nums[0] + perrin_nums[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmp0a2s4bmz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    if n == 0 {\n        return 3;\n    }\n    if n == 1 {\n        return 0;\n    }\n    if n == 2 {\n        return 2;\n    }\n    return cal_sum(n - 2) + cal_sum(n - 3);\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `12`,\n right: `49`', /tmp/tmp9g5f98is.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[(i - 2) as usize] + perrin[(i - 3) as usize]);\n        sum += perrin[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpghb2it91.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[2];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmp_9e70214.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let next = perrin[0] + perrin[2];\n        sum += next;\n        perrin.remove(0);\n        perrin.push(next);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmp669g24nr.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmpaepfgfwb.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 3..n {\n        p.push(p[p.len() - 2] + p[p.len() - 3]);\n    }\n    for i in 0..n {\n        sum += p[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpl05sr8e1.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = b;\n        b = c;\n        c = t + b;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `75`,\n right: `49`', /tmp/tmpijd_8xa2.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[0] + perrin[1];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpiezqen7a.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:7:16\n  |\n7 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - p[i - 1]] + p[i - p[i - 2]]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp9c3r127m.rs:6:22\n  |\n6 |         p.push(p[i - p[i - 1]] + p[i - p[i - 2]]);\n  |                      ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp9c3r127m.rs:6:40\n  |\n6 |         p.push(p[i - p[i - 1]] + p[i - p[i - 2]]);\n  |                                        ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp9c3r127m.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += p[2];\n        p[0] = p[1];\n        p[1] = p[2];\n        p[2] = p[0] + p[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `176`,\n right: `49`', /tmp/tmp80uuoq_y.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += p[0];\n        p[0] = p[1];\n        p[1] = p[2];\n        p[2] = p[0] + p[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpb3d3mejm.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpd4vkysbq.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n        sum += perrin_numbers[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:29\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:6:53\n  |\n6 |         perrin_numbers.push(perrin_numbers[i - 3] + perrin_numbers[i - 2]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpb3_6jmje.rs:7:16\n  |\n7 |         sum += perrin_numbers[i];\n  |                ^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        perrin_numbers = vec![perrin_numbers[1], perrin_numbers[2], perrin_numbers[0] + perrin_numbers[1]];\n        sum += perrin_numbers[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `83`,\n right: `49`', /tmp/tmp0da9rre5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let perrin_num = perrin_nums[0] + perrin_nums[1];\n        sum += perrin_num;\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = perrin_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpo3bodfds.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[0] + perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = tmp;\n    }\n    for i in perrin {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `53`,\n right: `49`', /tmp/tmpq_z6328o.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    let mut i = 3;\n    while i <= n {\n        let perrin_number = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_number;\n        sum += perrin_number;\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `44`,\n right: `49`', /tmp/tmpxd79ri29.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut a = 3;\n    let mut b = 0;\n    let mut c = 2;\n    for _ in 0..n {\n        sum += a;\n        let t = a;\n        a = c;\n        c = b + c;\n        b = t;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `93`,\n right: `49`', /tmp/tmpd8rk0hgp.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        perrin.push(perrin[i - 3] + perrin[i - 2]);\n        sum += perrin[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:21\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:6:37\n  |\n6 |         perrin.push(perrin[i - 3] + perrin[i - 2]);\n  |                                     ^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmp5kncxwqa.rs:7:16\n  |\n7 |         sum += perrin[i];\n  |                ^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let next = perrin_nums[0] + perrin_nums[2];\n        sum += next;\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = next;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmp70a70n_f.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin[0];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + perrin[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpjahlfvih.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum: isize = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = tmp;\n        sum += perrin_numbers[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpvsxl7n53.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 3] + p[i - 2]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:16\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:6:27\n  |\n6 |         p.push(p[i - 3] + p[i - 2]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmparjqa_1w.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    let mut i = 3;\n    while i <= n {\n        perrin_numbers.push(perrin_numbers[i - 2] + perrin_numbers[i - 3]);\n        i += 1;\n    }\n    for i in 0..n {\n        sum += perrin_numbers[i as usize];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpl4od998h.rs:7:29\n  |\n7 |         perrin_numbers.push(perrin_numbers[i - 2] + perrin_numbers[i - 3]);\n  |                             ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpl4od998h.rs:7:53\n  |\n7 |         perrin_numbers.push(perrin_numbers[i - 2] + perrin_numbers[i - 3]);\n  |                                                     ^^^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += perrin(i);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `perrin` in this scope\n --> /tmp/tmpa_obudnw.rs:5:16\n  |\n5 |         sum += perrin(i);\n  |                ^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_nums = vec![3, 0, 2];\n    for i in 3..n {\n        let tmp = perrin_nums[0] + perrin_nums[1];\n        perrin_nums[0] = perrin_nums[1];\n        perrin_nums[1] = perrin_nums[2];\n        perrin_nums[2] = tmp;\n    }\n    for i in perrin_nums {\n        sum += i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `22`,\n right: `49`', /tmp/tmpqpae8gsl.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![0, 3, 0, 2];\n    for i in 4..n {\n        p.push(p[i - 2] + p[i - 3]);\n    }\n    for i in 0..n {\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpdcuowy_k.rs:9:16\n  |\n9 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let next_num = perrin_numbers[0] + perrin_numbers[1];\n        perrin_numbers.remove(0);\n        perrin_numbers.push(next_num);\n        sum += next_num;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmp5tfhxntv.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for i in 3..n {\n        let perrin_number = perrin_numbers[0] + perrin_numbers[2];\n        sum += perrin_number;\n        perrin_numbers.remove(0);\n        perrin_numbers.push(perrin_number);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmpy1loa1v8.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpe4ssjgap.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut p = vec![3, 0, 2];\n    for i in 3..n {\n        p.push(p[i - 2] + p[i - 3]);\n        sum += p[i];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmptr_v6kx3.rs:7:16\n  |\n7 |         sum += p[i];\n  |                ^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 3 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpvbe7tncw.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for i in 3..n {\n        let temp = perrin[0] + perrin[2];\n        perrin[0] = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = temp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `70`,\n right: `49`', /tmp/tmppu39dx5k.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut perrin = vec![0, 3, 0, 2];\n    for i in 4..n + 1 {\n        perrin.push(perrin[i as usize - 3] + perrin[i as usize - 2]);\n    }\n    perrin[n as usize]\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `49`', /tmp/tmpnpzsudfg.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpvbe7tncw.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers.push(perrin_numbers[0] + perrin_numbers[1]);\n        perrin_numbers.remove(0);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123384,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `37`,\n right: `49`', /tmp/tmpa8boytny.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut p = vec![0, 3, 0, 2];\n    let mut i = 3;\n    while i < n {\n        p.push(p[i - 2] + p[i - 3]);\n        i += 1;\n    }\n    p.iter().sum()\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "error[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpzrgzze4f.rs:6:16\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror[E0277]: the type `[{integer}]` cannot be indexed by `isize`\n --> /tmp/tmpzrgzze4f.rs:6:27\n  |\n6 |         p.push(p[i - 2] + p[i - 3]);\n  |                           ^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n  |\n  = help: the trait `SliceIndex<[{integer}]>` is not implemented for `isize`\n  = help: the trait `SliceIndex<[T]>` is implemented for `usize`\n  = note: required because of the requirements on the impl of `Index<isize>` for `Vec<{integer}>`\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin_numbers = vec![3, 0, 2];\n    for _ in 0..n {\n        sum += perrin_numbers[0];\n        perrin_numbers[0] = perrin_numbers[1];\n        perrin_numbers[1] = perrin_numbers[2];\n        perrin_numbers[2] = perrin_numbers[0] + perrin_numbers[1];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `69`,\n right: `49`', /tmp/tmpvbe7tncw.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = vec![3, 0, 2];\n    for _ in 3..n {\n        let tmp = perrin[1];\n        perrin[1] = perrin[2];\n        perrin[2] = perrin[0] + tmp;\n        perrin[0] = tmp;\n        sum += perrin[2];\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1666123383,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `32`,\n right: `49`', /tmp/tmpuulihvwp.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to calculate the sum of perrin numbers.\nfn cal_sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut perrin = Perrin::new();\n    for _ in 0..n {\n        sum += perrin.next().unwrap();\n    }\n    sum\n}\n\nfn main() {\n    let candidate = cal_sum;\n    assert_eq!(candidate(9), 49);\n    assert_eq!(candidate(10), 66);\n    assert_eq!(candidate(11), 88);\n}\n",
      "timestamp": 1665517372,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `Perrin`\n --> /tmp/tmpvucmoov9.rs:4:22\n  |\n4 |     let mut perrin = Perrin::new();\n  |                      ^^^^^^ use of undeclared type `Perrin`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
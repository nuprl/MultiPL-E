{
  "name": "mbpp_292_find",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find quotient of two numbers (rounded down to the nearest integer).\nfn find(n: isize, m: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = find;\n    assert_eq!(candidate(10, 3), 3);\n    assert_eq!(candidate(4, 2), 2);\n    assert_eq!(candidate(20, 5), 4);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    (n / m)",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    let mut count = 0;\n    let mut sum = m;\n    while sum <= n {\n        sum += m;\n        count += 1;\n    }\n    count",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        sum += m;\n        i += 1;\n    }\n    i - 1",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r -= m;\n        q += 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t = t + m;\n        q = q + 1;\n    }\n    return q;",
    "    let mut count = 0;\n    let mut sum = 0;\n    while sum < n {\n        sum += m;\n        count += 1;\n    }\n    count - 1",
    "    if n == 0 {\n        return 0;\n    }\n    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t <<= 1;\n        q <<= 1;\n    }\n    if t > n {\n        t >>= 1;\n        q >>= 1;\n    }\n    q + find(n - t, m)",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t = t + m;\n        q = q + 1;\n    }\n    return q - 1;",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut count = 1;\n    let mut sum = m;\n    while sum + m <= n {\n        sum += m;\n        count += 1;\n    }\n    count",
    "    let mut c = 0;\n    let mut a = n;\n    while a >= m {\n        a -= m;\n        c += 1;\n    }\n    c",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t = t + m;\n        q = q + 1;\n    }\n    return q;",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    n / m",
    "    n / m",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    let mut res = 0;\n    let mut sum = m;\n    while sum <= n {\n        sum += m;\n        res += 1;\n    }\n    res",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t = t + m;\n        q = q + 1;\n    }\n    return q;",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    if n < m {\n        0\n    } else {\n        1 + find(n - m, m)\n    }",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum <= n {\n        sum += m;\n        i += 1;\n    }\n    i - 1",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r -= m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    let mut res = 0;\n    let mut m = m;\n    while n >= m {\n        m <<= 1;\n        res += 1;\n    }\n    res",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t <<= 1;\n        q <<= 1;\n    }\n    if t > n {\n        t >>= 1;\n        q >>= 1;\n    }\n    q + find(n - t, m)",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    let mut quotient = 0;\n    let mut dividend = n;\n    while dividend >= m {\n        dividend -= m;\n        quotient += 1;\n    }\n    quotient",
    "    let mut i = 0;\n    while n >= m {\n        n -= m;\n        i += 1;\n    }\n    i",
    "    let mut count = 0;\n    let mut sum = m;\n    while sum <= n {\n        count += 1;\n        sum += m;\n    }\n    count",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r -= m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    let mut count = 0;\n    let mut sum = m;\n    while sum <= n {\n        sum += m;\n        count += 1;\n    }\n    count",
    "    if n < m {\n        0\n    } else {\n        1 + find(n - m, m)\n    }",
    "    let mut count = 0;\n    let mut sum = m;\n    while sum <= n {\n        sum += m;\n        count += 1;\n    }\n    count",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t <<= 1;\n        q <<= 1;\n    }\n    if t > n {\n        t >>= 1;\n        q >>= 1;\n    }\n    q + find(n - t, m)",
    "    n / m",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r -= m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t = t + m;\n        q = q + 1;\n    }\n    return q;",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t <<= 1;\n        q <<= 1;\n    }\n    if t > n {\n        t >>= 1;\n        q >>= 1;\n    }\n    q + find(n - t, m)",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t <<= 1;\n        q <<= 1;\n    }\n    if t > n {\n        t >>= 1;\n        q >>= 1;\n    }\n    q + find(n - t, m)",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    return q;",
    "    n / m",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    return q - 1;",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q - 1",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t = t << 1;\n        q = q << 1;\n    }\n    if t > n {\n        t = t >> 1;\n        q = q >> 1;\n        return q + find(n - t, m);\n    }\n    return q;",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    n / m",
    "    let mut result = 0;\n    let mut sum = m;\n    while sum <= n {\n        sum += m;\n        result += 1;\n    }\n    result",
    "    let mut count = 0;\n    let mut sum = m;\n    while sum <= n {\n        sum += m;\n        count += 1;\n    }\n    count",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t = t + m;\n        q = q + 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r -= m;\n        q += 1;\n    }\n    q",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    if n < m {\n        return 0;\n    }\n    let mut q = 1;\n    let mut t = m;\n    while t < n {\n        t += m;\n        q += 1;\n    }\n    q"
  ]
}
{
  "name": "mbpp_292_find",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find quotient of two numbers (rounded down to the nearest integer).\nfn find(n: isize, m: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = find;\n    assert_eq!(candidate(10, 3), 3);\n    assert_eq!(candidate(4, 2), 2);\n    assert_eq!(candidate(20, 5), 4);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    return 1 + find(n - m, m);",
    "    n / m",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    (n / m)",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    let mut count = 0;\n    let mut sum = m;\n    while sum <= n {\n        sum += m;\n        count += 1;\n    }\n    count",
    "    if n < m {\n        return 0;\n    }\n    1 + find(n - m, m)",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        sum += m;\n        i += 1;\n    }\n    i - 1",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q",
    "    n / m",
    "    n / m",
    "    n / m",
    "    n / m",
    "    let mut q = 0;\n    let mut r = n;\n    while r >= m {\n        r = r - m;\n        q = q + 1;\n    }\n    q"
  ]
}
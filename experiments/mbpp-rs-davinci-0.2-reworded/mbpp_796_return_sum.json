{
  "name": "mbpp_796_return_sum",
  "language": "rs",
  "prompt": "use std::collections::HashMap;\n\n/// Write function to find the sum of all items in the given HashMap.\nfn return_sum(dict: HashMap<String, isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_796_return_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = return_sum;\n    assert_eq!(candidate(HashMap::from([(String::from(\"a\"), 100), (String::from(\"b\"), 200), (String::from(\"c\"), 300)])), 600);\n    assert_eq!(candidate(HashMap::from([(String::from(\"a\"), 25), (String::from(\"b\"), 18), (String::from(\"c\"), 45)])), 88);\n    assert_eq!(candidate(HashMap::from([(String::from(\"a\"), 36), (String::from(\"b\"), 39), (String::from(\"c\"), 49)])), 124);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict.iter() {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, val) in dict {\n        sum += val;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum",
    "    let mut sum = 0;\n    for (_, value) in dict {\n        sum += value;\n    }\n    sum"
  ]
}
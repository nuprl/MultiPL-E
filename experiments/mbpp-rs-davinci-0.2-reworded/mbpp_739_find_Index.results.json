{
  "name": "mbpp_739_find_Index",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let t = (mid * (mid + 1)) / 2;\n        if t < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpg2gbqwp3.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpv69ujqf5.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp_27wlucw.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp36fy4xzv.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let mut x = m * (m + 1) / 2;\n        let mut digits = 0;\n        while x > 0 {\n            digits += 1;\n            x /= 10;\n        }\n        if digits == n {\n            ans = m;\n            r = m - 1;\n        } else if digits < n {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmpfe734lli.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut ans = 0;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let mut x = mid * (mid + 1) / 2;\n\n        if x % 10 == 0 {\n            x = x / 10;\n        }\n\n        let mut count = 0;\n        while x > 0 {\n            count += 1;\n            x = x / 10;\n        }\n\n        if count == n {\n            ans = mid;\n            high = mid - 1;\n        } else if count < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmpb1gqgq3d.rs:36:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut tri = 0;\n    while tri < n {\n        tri = (i * (i + 1)) / 2;\n        i += 1;\n    }\n    i - 2\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmprg_c3hxt.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut temp = mid * (mid + 1) / 2;\n        if temp < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpmkxcuj5d.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = (j * (j + 1)) / 2;\n    }\n    j\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp83uq82or.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if is_triangular(m) {\n            ans = m;\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_triangular` in this scope\n --> /tmp/tmptvn3fohr.rs:8:12\n  |\n8 |         if is_triangular(m) {\n  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    let mut count = 0;\n    while count < n {\n        j = j + 1;\n        i = i + j;\n        count = i.to_string().len() as isize;\n    }\n    return j;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_num = (mid * (mid + 1)) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmpmw4sl3_x.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if (mid * (mid + 1)) / 2 < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpxdbwtsg9.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut temp: isize = mid * (mid + 1) / 2;\n        if temp < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp8obuderm.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 0;\n    while tri_num < n {\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n        if tri_num < n {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j.to_string().len() < n as usize {\n        i += 1;\n        j += i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 0;\n    while tri < n {\n        mid = (low + high) / 2;\n        tri = (mid * (mid + 1)) / 2;\n        if tri < n {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tri = mid * (mid + 1) / 2;\n        if tri < n {\n            low = mid + 1;\n        } else if tri > n {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpxajpwiyh.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let t = (mid * (mid + 1)) / 2;\n        if t < 10.pow(n as u32) {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmpn3810fyf.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32) {\n  |                ~~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let num = (mid * (mid + 1)) / 2;\n        if num.to_string().len() == n as usize {\n            ans = mid as isize;\n            high = mid - 1;\n        } else if num.to_string().len() < n as usize {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `4`', /tmp/tmpaf735php.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 0;\n    while tri_num < n {\n        mid = (low + high) / 2;\n        tri_num = (mid * (mid + 1)) / 2;\n        if tri_num < n {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 0;\n    while tri_num < n {\n        mid = (low + high) / 2;\n        tri_num = (mid * (mid + 1)) / 2;\n        if tri_num < n {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut triangle = 0;\n    while n > triangle.to_string().len() as isize {\n        triangle = (i * (i + 1)) / 2;\n        i += 1;\n    }\n    i - 1\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let mut temp = mid * (mid + 1) / 2;\n        if temp < 10 {\n            low = mid + 1;\n        } else {\n            let mut digits = 0;\n            let mut x = temp;\n            while x != 0 {\n                x = x / 10;\n                digits += 1;\n            }\n            if digits == n {\n                ans = mid;\n                break;\n            } else if digits < n {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `14`', /tmp/tmpz3xprmi8.rs:34:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpb8xccpto.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmpe8nfg8xd.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let triangle = mid * (mid + 1) / 2;\n        if triangle < n {\n            ans = mid;\n            low = mid + 1;\n        } else if triangle > n {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpb_1eiadg.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let mut val = (mid * (mid + 1)) / 2;\n        if val * 10 > 9 * mid {\n            ans = mid;\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpj8b0llag.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpb8xccpto.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp2e5a35vd.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let tri_num = mid * (mid + 1) / 2;\n        if tri_num < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpc4ocg9mx.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpv69ujqf5.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 0;\n    let mut triangle;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        triangle = mid * (mid + 1) / 2;\n        if triangle < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp8gsvjrrj.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp36fy4xzv.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmpq02m2cki.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut tri: isize = 1;\n    let mut prev_tri: isize = 0;\n\n    while tri < n {\n        low = mid + 1;\n        prev_tri = tri;\n        mid = (low + high) / 2;\n        tri = (mid * (mid + 1)) / 2;\n    }\n\n    if tri == n {\n        return mid;\n    } else {\n        return prev_tri;\n    }\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut sum = 0;\n    while sum <= n {\n        sum = sum + i;\n        i = i + 1;\n    }\n    return i - 2;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpfb2hwkam.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 0;\n    let mut tri = 0;\n    while tri < n {\n        mid = (low + high) / 2;\n        tri = (mid * (mid + 1)) / 2;\n        if tri < n {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 <= n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let temp = mid * (mid + 1) / 2;\n        if temp < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpe3maibgb.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid: isize;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpfrccamrz.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_number = 1;\n    let mut index = 1;\n    while tri_number < n {\n        low = index;\n        index = index + 1;\n        tri_number = tri_number + index;\n    }\n    if tri_number == n {\n        return low;\n    }\n    return -1;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `4`', /tmp/tmp5bp1v_t3.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let mut triangular = (mid * (mid + 1)) / 2;\n        if triangular % 10 == 0 {\n            triangular = triangular / 10;\n        }\n        let mut digits = 0;\n        while triangular > 0 {\n            triangular = triangular / 10;\n            digits += 1;\n        }\n        if digits == n {\n            ans = mid;\n            high = mid - 1;\n        } else if digits > n {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `4`', /tmp/tmppdbu5r3g.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpvbis1m69.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize;\n    let mut ans: isize = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp67r99ria.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmp7ecz9_4w.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let tri = (mid * (mid + 1)) / 2;\n        if tri < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp2yg4y3jk.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpgp96059e.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 1;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let mid = (l + r) / 2;\n        let val = (mid * (mid + 1)) / 2;\n        if val > 10.pow(n as u32) {\n            r = mid - 1;\n        } else {\n            ans = mid;\n            l = mid + 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmptnzld48s.rs:9:21\n  |\n9 |         if val > 10.pow(n as u32) {\n  |                     ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if val > 10_i32.pow(n as u32) {\n  |                  ~~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut tri = 0;\n    while tri < n {\n        tri = (i * (i + 1)) / 2;\n        i += 1;\n    }\n    i - 1\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp5s4hpzk2.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans as isize\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpxysq6uy0.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (j + 1) / 2;\n    }\n    j\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpody6qko9.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpvnam0re2.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    let mut index = 1;\n\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        index = mid;\n        tri_num = (mid * (mid + 1)) / 2;\n    }\n\n    index\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `17`,\n right: `14`', /tmp/tmpcgk7mdmm.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = mid + 1;\n        mid = (low + high) / 2;\n        high = mid * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp78xdka03.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (j + 1) / 2;\n    }\n    j\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpody6qko9.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpvnam0re2.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    let mut tri_num: isize = 1;\n    let mut len: isize = 1;\n\n    while len < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        while low < high {\n            mid = (low + high) / 2;\n            tri_num = (mid * (mid + 1)) / 2;\n            len = tri_num.to_string().len() as isize;\n            if len < n {\n                low = mid + 1;\n            } else if len >= n {\n                ans = tri_num;\n                high = mid - 1;\n            }\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `4`', /tmp/tmpw8ajwdiz.rs:30:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let t = mid * (mid + 1) / 2;\n        if t < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpic32wjlt.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let x = m * (m + 1) / 2;\n        if x % 10 == 0 {\n            ans = m;\n            r = m - 1;\n        } else if x % 10 < n {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmpy1blpct4.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 0;\n    let mut tri = 0;\n    let mut prev_tri = 0;\n    while tri < n {\n        mid = (low + high) / 2;\n        prev_tri = tri;\n        tri = (mid * (mid + 1)) / 2;\n        if tri < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    if prev_tri == n {\n        mid - 1\n    } else {\n        mid\n    }\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 0;\n    let mut triangle_number: isize = 0;\n    let mut digits: isize = 0;\n\n    while digits < n {\n        mid = (low + high) / 2;\n        triangle_number = (mid * (mid + 1)) / 2;\n        digits = triangle_number.to_string().len() as isize;\n        if digits < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j.to_string().len() < n as usize {\n        i += 1;\n        j += i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    while low <= high {\n        mid = (low + high) / 2;\n        let t = (mid * (mid + 1)) / 2;\n        let digits = (t as f64).log10() as isize + 1;\n        if digits == n {\n            ans = mid;\n            high = mid - 1;\n        } else if digits < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp6czjh1kc.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpsnvtb6b7.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let num = ((mid * (mid + 1)) / 2) as f64;\n        let digits = (num.log10() + 1.0) as isize;\n        if digits == n {\n            ans = mid;\n            high = mid - 1;\n        } else if digits < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmppa7mqeg6.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            l = m + 1;\n        } else if t > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmp6n3p4ix8.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp6n3p4ix8.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * mid;\n        while low <= high {\n            mid = (low + high) / 2;\n            tri = mid * (mid + 1) / 2;\n            if tri < n {\n                low = mid + 1;\n                ans = mid;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpzc2hujhu.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let x = m * (m + 1) / 2;\n        if x > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            l = m + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmpdx2i9mb3.rs:9:19\n  |\n9 |         if x > 10.pow(n as u32) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if x > 10_i32.pow(n as u32) {\n  |                ~~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let tn = mid * (mid + 1) / 2;\n        if tn < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp1vxav7hw.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if is_triangular(m) {\n            ans = m;\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_triangular` in this scope\n --> /tmp/tmptvn3fohr.rs:8:12\n  |\n8 |         if is_triangular(m) {\n  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let tri_num = (mid * (mid + 1)) / 2;\n\n        if tri_num < 10.pow(n as u32 - 1) {\n            low = mid + 1;\n        } else if tri_num > 10.pow(n as u32) {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return -1;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmphvu0fbbw.rs:10:25\n   |\n10 |         if tri_num < 10.pow(n as u32 - 1) {\n   |                         ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n10 |         if tri_num < 10_i32.pow(n as u32 - 1) {\n   |                      ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmphvu0fbbw.rs:12:32\n   |\n12 |         } else if tri_num > 10.pow(n as u32) {\n   |                                ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n12 |         } else if tri_num > 10_i32.pow(n as u32) {\n   |                             ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp1n65wtvv.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut result = 1;\n    while (triangular_number(high) as f64).log10() as isize < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        if (triangular_number(mid) as f64).log10() as isize == n {\n            result = mid;\n            break;\n        } else if (triangular_number(mid) as f64).log10() as isize < n {\n            result = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error: `<` is interpreted as a start of generic arguments for `isize`, not a comparison\n --> /tmp/tmpopn3c_bw.rs:7:61\n  |\n7 |     while (triangular_number(high) as f64).log10() as isize < n {\n  |                                                             ^ --- interpreted as generic arguments\n  |                                                             |\n  |                                                             not interpreted as comparison\n  |\nhelp: try comparing the cast value\n  |\n7 |     while ((triangular_number(high) as f64).log10() as isize) < n {\n  |           +                                                 +\n\nerror: `<` is interpreted as a start of generic arguments for `isize`, not a comparison\n  --> /tmp/tmpopn3c_bw.rs:16:68\n   |\n16 |         } else if (triangular_number(mid) as f64).log10() as isize < n {\n   |                                                                    ^ --- interpreted as generic arguments\n   |                                                                    |\n   |                                                                    not interpreted as comparison\n   |\nhelp: try comparing the cast value\n   |\n16 |         } else if ((triangular_number(mid) as f64).log10() as isize) < n {\n   |                   +                                                +\n\nerror[E0425]: cannot find function `triangular_number` in this scope\n --> /tmp/tmpopn3c_bw.rs:7:12\n  |\n7 |     while (triangular_number(high) as f64).log10() as isize < n {\n  |            ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `triangular_number` in this scope\n  --> /tmp/tmpopn3c_bw.rs:13:13\n   |\n13 |         if (triangular_number(mid) as f64).log10() as isize == n {\n   |             ^^^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0425]: cannot find function `triangular_number` in this scope\n  --> /tmp/tmpopn3c_bw.rs:16:20\n   |\n16 |         } else if (triangular_number(mid) as f64).log10() as isize < n {\n   |                    ^^^^^^^^^^^^^^^^^ not found in this scope\n\ne",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmpq02m2cki.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    while (high * (high + 1) / 2) < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        if (mid * (mid + 1) / 2) < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp8ddu9tzl.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tri = (mid * (mid + 1)) / 2;\n        if tri < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpq6532izi.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let mut t = mid * (mid + 1) / 2;\n        if t * (t + 1) / 2 <= n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpw3wpejdw.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = low + (high - low) / 2;\n        let mut tri = mid * (mid + 1) / 2;\n        if tri < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpds9dm42c.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut tri_num;\n    let mut index = 1;\n\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n\n    while low <= high {\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n\n        if tri_num < n {\n            index = mid;\n            low = mid + 1;\n        } else if tri_num > n {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n\n    index\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmphny422om.rs:33:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp1n65wtvv.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpsnvtb6b7.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpgp96059e.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n\n    while low <= high {\n        let mid = (low + high) / 2;\n        let mut triangular_number = mid * (mid + 1) / 2;\n        let mut digits = 0;\n\n        while triangular_number > 0 {\n            triangular_number /= 10;\n            digits += 1;\n        }\n\n        if digits == n {\n            ans = mid;\n            high = mid - 1;\n        } else if digits > n {\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmpdnnx80gz.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut x = (mid * (mid + 1)) / 2;\n        let mut digits = 0;\n        while x > 0 {\n            x = x / 10;\n            digits += 1;\n        }\n        if digits == n {\n            ans = mid;\n            high = mid - 1;\n        } else if digits < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmpwp53hbyq.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = mid + 1;\n        mid = (low + high) / 2;\n        high = mid * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpfvq_xcuc.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut tri: isize = 1;\n    let mut prev_tri: isize = 0;\n    while tri < n {\n        low = mid + 1;\n        prev_tri = tri;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    if prev_tri == n {\n        return low - 1;\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        let d = (t as f64).log10() as isize + 1;\n        if d == n {\n            ans = m;\n            r = m - 1;\n        } else if d < n {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmpilbwo9_p.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let mut tri = (mid * (mid + 1)) / 2;\n        if tri.to_string().len() as isize == n {\n            ans = mid;\n            high = mid - 1;\n        } else if tri.to_string().len() as isize < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error: `<` is interpreted as a start of generic arguments for `isize`, not a comparison\n  --> /tmp/tmpml3oivea.rs:12:50\n   |\n12 |         } else if tri.to_string().len() as isize < n {\n   |                                                  ^ --- interpreted as generic arguments\n   |                                                  |\n   |                                                  not interpreted as comparison\n   |\nhelp: try comparing the cast value\n   |\n12 |         } else if (tri.to_string().len() as isize) < n {\n   |                   +                              +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if count_digits(mid * (mid + 1) / 2) >= n {\n            ans = mid;\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `count_digits` in this scope\n --> /tmp/tmpjzr92o6m.rs:9:12\n  |\n9 |         if count_digits(mid * (mid + 1) / 2) >= n {\n  |            ^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let t = (mid * (mid + 1)) / 2;\n        if t.to_string().len() as isize == n {\n            ans = mid;\n            high = mid - 1;\n        } else if t.to_string().len() as isize < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error: `<` is interpreted as a start of generic arguments for `isize`, not a comparison\n  --> /tmp/tmpfzqmtqst.rs:12:48\n   |\n12 |         } else if t.to_string().len() as isize < n {\n   |                                                ^ --- interpreted as generic arguments\n   |                                                |\n   |                                                not interpreted as comparison\n   |\nhelp: try comparing the cast value\n   |\n12 |         } else if (t.to_string().len() as isize) < n {\n   |                   +                            +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (j + 1) / 2;\n    }\n    j\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpody6qko9.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let t = (mid * (mid + 1)) / 2;\n        if t < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpg2gbqwp3.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut tri_num;\n\n    while tri_num(high) < n {\n        low = high;\n        high = high * 2;\n    }\n\n    while low <= high {\n        mid = (low + high) / 2;\n        tri_num = tri_num(mid);\n\n        if tri_num > n {\n            high = mid - 1;\n        } else if tri_num < n {\n            low = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n\n    return high;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0282]: type annotations needed\n --> /tmp/tmpc0c1678o.rs:8:11\n  |\n6 |     let mut tri_num;\n  |         ----------- consider giving `tri_num` a type\n7 | \n8 |     while tri_num(high) < n {\n  |           ^^^^^^^^^^^^^ cannot infer type\n  |\n  = note: type must be known at this point\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0282`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n\n    while low <= high {\n        mid = (low + high) / 2;\n\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpjt_8w2dq.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp_y5ap7di.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let tn = mid * (mid + 1) / 2;\n        if tn < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmplficfk0m.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let tri = mid * (mid + 1) / 2;\n        let digits = (tri as f64).log10() as isize + 1;\n        if digits == n {\n            ans = mid;\n            high = mid - 1;\n        } else if digits < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmpqvyqy5ok.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    let mut tri: isize = 1;\n    while tri < n {\n        low = mid + 1;\n        high = low * 2;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    ans = mid;\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmp740fne4b.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let count = count_digits(mid);\n        if count <= n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `count_digits` in this scope\n --> /tmp/tmpjcmj80j8.rs:9:21\n  |\n9 |         let count = count_digits(mid);\n  |                     ^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = n * n + 1;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let mut temp = mid * (mid + 1) / 2;\n        if temp.to_string().len() as isize == n {\n            ans = mid;\n            high = mid - 1;\n        } else if temp.to_string().len() as isize < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error: `<` is interpreted as a start of generic arguments for `isize`, not a comparison\n  --> /tmp/tmp_ewtjbon.rs:12:51\n   |\n12 |         } else if temp.to_string().len() as isize < n {\n   |                                                   ^ --- interpreted as generic arguments\n   |                                                   |\n   |                                                   not interpreted as comparison\n   |\nhelp: try comparing the cast value\n   |\n12 |         } else if (temp.to_string().len() as isize) < n {\n   |                   +                               +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j.to_string().len() < n as usize {\n        i += 1;\n        j += i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpvnam0re2.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let tri = (mid * (mid + 1)) / 2;\n        if tri < 10.pow(n as u32 - 1) {\n            low = mid + 1;\n        } else if tri > 10.pow(n as u32) {\n            high = mid - 1;\n        } else {\n            ans = mid;\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmp7mshrtl3.rs:9:21\n  |\n9 |         if tri < 10.pow(n as u32 - 1) {\n  |                     ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if tri < 10_i32.pow(n as u32 - 1) {\n  |                  ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp7mshrtl3.rs:11:28\n   |\n11 |         } else if tri > 10.pow(n as u32) {\n   |                            ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if tri > 10_i32.pow(n as u32) {\n   |                         ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    let mut prev_tri = 0;\n    while tri < n {\n        low = mid + 1;\n        prev_tri = tri;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    if prev_tri == n {\n        return mid - 1;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let triangle = m * (m + 1) / 2;\n        if triangle.to_string().len() == n as usize {\n            ans = m;\n            r = m - 1;\n        } else if triangle.to_string().len() < n as usize {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmp95qwg1ne.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    let mut count = 1;\n    while count < n {\n        i = i + 1;\n        j = j + i;\n        count = count + 1;\n    }\n    return i;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp_vqt7qec.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if is_triangular(m) {\n            ans = m;\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_triangular` in this scope\n --> /tmp/tmphxpn81gt.rs:8:12\n  |\n8 |         if is_triangular(m) {\n  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    let mut count = 1;\n    while count < n {\n        j = j + 1;\n        i = i + j;\n        count = count + 1;\n    }\n    return i;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpm9rek3ew.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 0;\n    let mut index = 1;\n\n    while tri_num < n {\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n\n        if tri_num < n {\n            low = mid + 1;\n            index = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    index\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut ans = -1;\n\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let x = (mid * (mid + 1)) / 2;\n\n        if x.to_string().len() == n as usize {\n            ans = mid;\n            high = mid - 1;\n        } else if x.to_string().len() < n as usize {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmp0qrfyk3c.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpbaew2qvq.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_number = 1;\n    while tri_number.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_number = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmpi525ms3f.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    let mut prev_tri = 0;\n    while tri < n {\n        low = mid + 1;\n        prev_tri = tri;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    if prev_tri == n {\n        return low - 1;\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tri = mid * (mid + 1) / 2;\n        let mut num = tri.to_string().len() as isize;\n        if num == n {\n            ans = mid;\n            high = mid - 1;\n        } else if num < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `4`', /tmp/tmpy6dwc2pp.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let t = (mid * (mid + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            low = mid + 1;\n        } else if t > 10.pow(n as u32) {\n            high = mid - 1;\n        } else {\n            ans = mid;\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp6ymsxw8_.rs:10:19\n   |\n10 |         if t < 10.pow(n as u32 - 1) {\n   |                   ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n10 |         if t < 10_i32.pow(n as u32 - 1) {\n   |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp6ymsxw8_.rs:12:26\n   |\n12 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n12 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n\n    while tri < n {\n        low = mid + 1;\n        high = low * 2;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpgajmxmd3.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut tri: isize = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpkkbj9xcs.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let t = (mid * (mid + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            low = mid + 1;\n        } else if t > 10.pow(n as u32) {\n            high = mid - 1;\n        } else {\n            ans = mid;\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmphkhb0mzn.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmphkhb0mzn.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 0;\n    while tri_num < n {\n        mid = (low + high) / 2;\n        tri_num = (mid * (mid + 1)) / 2;\n        if tri_num < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut tri: isize = 1;\n    let mut prev_tri: isize = 0;\n\n    while tri < n {\n        low = mid + 1;\n        prev_tri = tri;\n        mid = (low + high) / 2;\n        tri = (mid * (mid + 1)) / 2;\n    }\n\n    if prev_tri == n {\n        return mid - 1;\n    }\n\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    let mut prev_tri = 0;\n\n    while tri < n {\n        low = mid + 1;\n        prev_tri = tri;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n\n    if tri == n {\n        return mid;\n    } else {\n        return prev_tri;\n    }\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid: isize;\n    let mut ans: isize;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0381]: use of possibly-uninitialized variable: `ans`\n  --> /tmp/tmpo2c0s6jk.rs:16:5\n   |\n16 |     ans\n   |     ^^^ use of possibly-uninitialized `ans`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0381`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpsnvtb6b7.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpb8xccpto.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut tri_number;\n    while tri_number(high) < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        tri_number = tri_number(mid);\n        if tri_number == n {\n            return mid;\n        } else if tri_number < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return -1;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0282]: type annotations needed\n --> /tmp/tmpdwndcwrw.rs:7:11\n  |\n6 |     let mut tri_number;\n  |         -------------- consider giving `tri_number` a type\n7 |     while tri_number(high) < n {\n  |           ^^^^^^^^^^^^^^^^ cannot infer type\n  |\n  = note: type must be known at this point\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0282`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut tri_number;\n    let mut index = 1;\n\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n\n    while low <= high {\n        mid = (low + high) / 2;\n        tri_number = mid * (mid + 1) / 2;\n\n        if tri_number < n {\n            index = mid;\n            low = mid + 1;\n        } else if tri_number > n {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n\n    index\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp6fdhay_w.rs:33:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp36fy4xzv.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n\n    while low <= high {\n        mid = (low + high) / 2;\n\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpluocfl0k.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut tri_num;\n    let mut index = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n        if tri_num < n {\n            index = mid;\n            low = mid + 1;\n        } else if tri_num > n {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return index;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp9x536r85.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    while i * (i + 1) / 2 < 10.pow(n - 1) {\n        i += 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmpdn4aa0tr.rs:4:32\n  |\n4 |     while i * (i + 1) / 2 < 10.pow(n - 1) {\n  |                                ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n4 |     while i * (i + 1) / 2 < 10_i32.pow(n - 1) {\n  |                             ~~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        if is_triangular(m) {\n            ans = m;\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `is_triangular` in this scope\n --> /tmp/tmphxpn81gt.rs:8:12\n  |\n8 |         if is_triangular(m) {\n  |            ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j.to_string().len() < n as usize {\n        i += 1;\n        j += i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    let mut triangle_number: isize = 1;\n    while triangle_number < n {\n        low = mid + 1;\n        high = low * 2;\n        mid = (low + high) / 2;\n        triangle_number = mid * (mid + 1) / 2;\n    }\n    ans = mid;\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmp9ymlvlho.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if count_digits(mid) >= n {\n            ans = mid;\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `count_digits` in this scope\n --> /tmp/tmpe4rezqb8.rs:9:12\n  |\n9 |         if count_digits(mid) >= n {\n  |            ^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    let mut index = 1;\n    while tri_num < n {\n        low = mid + 1;\n        high = 2 * mid;\n        index = binary_search(low, high, n);\n        mid = index;\n        tri_num = (index * (index + 1)) / 2;\n    }\n    return index;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `binary_search` in this scope\n  --> /tmp/tmp74csw2zf.rs:11:17\n   |\n11 |         index = binary_search(low, high, n);\n   |                 ^^^^^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = (l + r) / 2;\n        let x = (m * (m + 1)) / 2;\n        if x.to_string().len() as isize >= n {\n            ans = m;\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmpv_s94bx1.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut tri: isize = 1;\n    let mut prev_tri: isize = 0;\n    while tri < n {\n        low = mid + 1;\n        prev_tri = tri;\n        mid = (low + high) / 2;\n        tri = (mid * (mid + 1)) / 2;\n    }\n    if prev_tri == n {\n        return mid - 1;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122585,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut num = (mid * (mid + 1)) / 2;\n        if num * (10 as f64).powi(n as i32 - 1) < 1.0 {\n            low = mid + 1;\n        } else if num * (10 as f64).powi(n as i32 - 1) > 1.0 {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0277]: cannot multiply `isize` by `f64`\n --> /tmp/tmpghl3s8yo.rs:9:16\n  |\n9 |         if num * (10 as f64).powi(n as i32 - 1) < 1.0 {\n  |                ^ no implementation for `isize * f64`\n  |\n  = help: the trait `Mul<f64>` is not implemented for `isize`\n  = help: the following other types implement trait `Mul<Rhs>`:\n            <&'a f32 as Mul<f32>>\n            <&'a f64 as Mul<f64>>\n            <&'a i128 as Mul<i128>>\n            <&'a i16 as Mul<i16>>\n            <&'a i32 as Mul<i32>>\n            <&'a i64 as Mul<i64>>\n            <&'a i8 as Mul<i8>>\n            <&'a isize as Mul<isize>>\n          and 49 others\n\nerror[E0277]: cannot multiply `isize` by `f64`\n  --> /tmp/tmpghl3s8yo.rs:11:23\n   |\n11 |         } else if num * (10 as f64).powi(n as i32 - 1) > 1.0 {\n   |                       ^ no implementation for `isize * f64`\n   |\n   = help: the trait `Mul<f64>` is not implemented for `isize`\n   = help: the following other types implement trait `Mul<Rhs>`:\n             <&'a f32 as Mul<f32>>\n             <&'a f64 as Mul<f64>>\n             <&'a i128 as Mul<i128>>\n             <&'a i16 as Mul<i16>>\n             <&'a i32 as Mul<i32>>\n             <&'a i64 as Mul<i64>>\n             <&'a i8 as Mul<i8>>\n             <&'a isize as Mul<isize>>\n           and 49 others\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let x = (m * (m + 1)) / 2;\n        if x > 10_isize.pow(n as u32 - 1) && x < 10_isize.pow(n as u32) {\n            ans = m;\n            r = m - 1;\n        } else if x < 10_isize.pow(n as u32 - 1) {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `4`', /tmp/tmpagl4rfcl.rs:23:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpsnvtb6b7.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let mut val = (mid * (mid + 1)) / 2;\n        if val.to_string().len() as isize == n {\n            ans = mid;\n            high = mid - 1;\n        } else if val.to_string().len() as isize < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error: `<` is interpreted as a start of generic arguments for `isize`, not a comparison\n  --> /tmp/tmp12mmham3.rs:12:50\n   |\n12 |         } else if val.to_string().len() as isize < n {\n   |                                                  ^ --- interpreted as generic arguments\n   |                                                  |\n   |                                                  not interpreted as comparison\n   |\nhelp: try comparing the cast value\n   |\n12 |         } else if (val.to_string().len() as isize) < n {\n   |                   +                              +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp2e5a35vd.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 1;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let x = (m * (m + 1)) / 2;\n        if x > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            l = m + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmprmens_em.rs:9:19\n  |\n9 |         if x > 10.pow(n as u32) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if x > 10_i32.pow(n as u32) {\n  |                ~~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut ans = 0;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let mut temp = mid * (mid + 1) / 2;\n        if temp % 10 == 0 {\n            ans = mid;\n            high = mid - 1;\n        } else {\n            low = mid + 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `14`', /tmp/tmpmozkf9bf.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut curr = mid * (mid + 1) / 2;\n        if curr < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpsqwpdvr6.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            l = m + 1;\n        } else if t > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmp6n3p4ix8.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp6n3p4ix8.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            l = m + 1;\n        } else if t > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            r = m - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmpdwbha162.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmpdwbha162.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut t = 1;\n    while t.to_string().len() < n as usize {\n        i += 1;\n        t = i * (i + 1) / 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut tri_num;\n    while tri_num < n {\n        mid = (low + high) / 2;\n        tri_num = (mid * (mid + 1)) / 2;\n        if tri_num < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0381]: use of possibly-uninitialized variable: `tri_num`\n --> /tmp/tmp40we2rc7.rs:7:11\n  |\n7 |     while tri_num < n {\n  |           ^^^^^^^ use of possibly-uninitialized `tri_num`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0381`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = -1;\n    while low <= high {\n        let mid = low + (high - low) / 2;\n        let mut t = (mid * (mid + 1)) / 2;\n        if t < 10 {\n            low = mid + 1;\n        } else {\n            let mut digits = 0;\n            while t > 0 {\n                t /= 10;\n                digits += 1;\n            }\n            if digits == n {\n                ans = mid;\n                high = mid - 1;\n            } else if digits < n {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `4`', /tmp/tmp72y1m_p4.rs:32:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    let mut triangle_number: isize = 0;\n    let mut number_of_digits: isize = 0;\n    while number_of_digits < n {\n        mid = (low + high) / 2;\n        triangle_number = (mid * (mid + 1)) / 2;\n        number_of_digits = (triangle_number as f64).log10().floor() as isize + 1;\n        if number_of_digits < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122585,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if (mid * (mid + 1)) / 2 < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpkz9z9d2g.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = mid + 1;\n        mid = (low + high) / 2;\n        high = mid * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp78xdka03.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tri = (mid * (mid + 1)) / 2;\n        if tri < 10.pow(n as u32 - 1) {\n            low = mid + 1;\n        } else if tri > 10.pow(n as u32) {\n            high = mid - 1;\n        } else {\n            ans = mid;\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmpynvfzc4h.rs:10:21\n   |\n10 |         if tri < 10.pow(n as u32 - 1) {\n   |                     ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n10 |         if tri < 10_i32.pow(n as u32 - 1) {\n   |                  ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmpynvfzc4h.rs:12:28\n   |\n12 |         } else if tri > 10.pow(n as u32) {\n   |                            ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n12 |         } else if tri > 10_i32.pow(n as u32) {\n   |                         ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    while tri_num < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp7533j8ae.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32) {\n            ans = m;\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmpnxadj88q.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32) {\n  |                ~~~~~~\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            l = m + 1;\n        } else if t > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmp6n3p4ix8.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp6n3p4ix8.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut x = (mid * (mid + 1)) / 2;\n        let mut digits = 0;\n        while x > 0 {\n            digits += 1;\n            x /= 10;\n        }\n        if digits == n {\n            ans = mid;\n            high = mid - 1;\n        } else if digits < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `14`', /tmp/tmpp_87kpab.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n;\n    let mut ans = -1;\n    while l <= r {\n        let mid = l + (r - l) / 2;\n        let x = (mid * (mid + 1)) / 2;\n        if x.to_string().len() as isize >= n {\n            ans = mid;\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmpuw_2s8wp.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 0;\n    while high * (high + 1) / 2 < n {\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let temp = mid * (mid + 1) / 2;\n        if temp < n {\n            low = mid + 1;\n            ans = mid;\n        } else if temp > n {\n            high = mid - 1;\n        } else {\n            return mid;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpjfwh7wvp.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tri = mid * (mid + 1) / 2;\n        if tri < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpmioglba1.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    let mut count = 1;\n    while count < n {\n        i = i + 1;\n        j = j + i;\n        count = j.to_string().len() as isize;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            l = m + 1;\n        } else if t > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmpliastswn.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmpliastswn.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpv69ujqf5.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j.to_string().len() < n as usize {\n        i += 1;\n        j = i * (i + 1) / 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i: isize = 1;\n    let mut j: isize = 1;\n    let mut count: isize = 0;\n    while count < n {\n        j = j + 1;\n        i = i + j;\n        count = i.to_string().len() as isize;\n    }\n    return j;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp36fy4xzv.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp3wuvepi1.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            l = m + 1;\n        } else if t > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmp6n3p4ix8.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp6n3p4ix8.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut ans = -1;\n    while low <= high {\n        let mid = (low + high) / 2;\n        let mut tn = (mid * (mid + 1)) / 2;\n        if tn > 0 && tn <= n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpgo1x1i0w.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmpq02m2cki.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpvnam0re2.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp2e5a35vd.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t < 10.pow(n as u32 - 1) {\n            l = m + 1;\n        } else if t > 10.pow(n as u32) {\n            r = m - 1;\n        } else {\n            ans = m;\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n --> /tmp/tmp6n3p4ix8.rs:9:19\n  |\n9 |         if t < 10.pow(n as u32 - 1) {\n  |                   ^^^\n  |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n  |\n9 |         if t < 10_i32.pow(n as u32 - 1) {\n  |                ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmp6n3p4ix8.rs:11:26\n   |\n11 |         } else if t > 10.pow(n as u32) {\n   |                          ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n11 |         } else if t > 10_i32.pow(n as u32) {\n   |                       ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 1;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let mut count = 0;\n        let mut i = 1;\n        while i * (i + 1) / 2 < m {\n            count += 1;\n            i += 1;\n        }\n        if count == n {\n            ans = m;\n            r = m - 1;\n        } else if count < n {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `7`,\n right: `14`', /tmp/tmpc03_r9ql.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low - 1;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmp36fy4xzv.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let t = mid * (mid + 1) / 2;\n        if t < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp711yspb3.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut tri_num;\n    while tri_num < n {\n        mid = (low + high) / 2;\n        tri_num = (mid * (mid + 1)) / 2;\n\n        if tri_num < n {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return low;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "error[E0381]: use of possibly-uninitialized variable: `tri_num`\n --> /tmp/tmpn_66_vet.rs:7:11\n  |\n7 |     while tri_num < n {\n  |           ^^^^^^^ use of possibly-uninitialized `tri_num`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0381`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j.to_string().len() < n as usize {\n        i += 1;\n        j += i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpv69ujqf5.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpv69ujqf5.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri = 1;\n    while tri < n {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri = mid * (mid + 1) / 2;\n    }\n    return mid;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `3`,\n right: `4`', /tmp/tmpv69ujqf5.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n    let mut prev_tri_num = 0;\n    while tri_num < n {\n        low = mid + 1;\n        prev_tri_num = tri_num;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n    if tri_num == n {\n        return mid;\n    } else {\n        return prev_tri_num;\n    }\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122585,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let mid = (l + r) / 2;\n        let x = (mid * (mid + 1)) / 2;\n        if x.to_string().len() as isize >= n {\n            ans = mid;\n            r = mid - 1;\n        } else {\n            l = mid + 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmp0nltqa2z.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j < n {\n        i += 1;\n        j = i * (i + 1) / 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpidf3vyp9.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = (l + r) / 2;\n        let x = m * (m + 1) / 2;\n        if x.to_string().len() as isize == n {\n            ans = m;\n            r = m - 1;\n        } else if x.to_string().len() as isize < n {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "error: `<` is interpreted as a start of generic arguments for `isize`, not a comparison\n  --> /tmp/tmp4j91jc89.rs:12:48\n   |\n12 |         } else if x.to_string().len() as isize < n {\n   |                                                ^ --- interpreted as generic arguments\n   |                                                |\n   |                                                not interpreted as comparison\n   |\nhelp: try comparing the cast value\n   |\n12 |         } else if (x.to_string().len() as isize) < n {\n   |                   +                            +\n\nerror: aborting due to previous error\n\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low: isize = 1;\n    let mut high: isize = 1;\n    let mut mid: isize = 1;\n    let mut ans: isize = 1;\n    let mut triangular_number: isize = 0;\n\n    while triangular_number < n {\n        mid = (low + high) / 2;\n        triangular_number = (mid * (mid + 1)) / 2;\n\n        if triangular_number < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122585,
      "stdout": "",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = mid + 1;\n        mid = (low + high) / 2;\n        high = mid * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmp78xdka03.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let t = (m * (m + 1)) / 2;\n        if t.to_string().len() == n as usize {\n            ans = m;\n            r = m - 1;\n        } else if t.to_string().len() < n as usize {\n            l = m + 1;\n        } else {\n            r = m - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmpaw3o18np.rs:24:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j.to_string().len() < n as usize {\n        i += 1;\n        j += i;\n    }\n    i\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1665510068,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i.to_string().len() < n as usize {\n        j += 1;\n        i += j;\n    }\n    return j;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid;\n    let mut ans = 1;\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n    while low <= high {\n        mid = (low + high) / 2;\n        let curr = mid * (mid + 1) / 2;\n        if curr < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpvnam0re2.rs:26:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let mut temp = m * (m + 1) / 2;\n        if temp < 0 {\n            r = m - 1;\n        } else {\n            let mut digits = 0;\n            while temp > 0 {\n                digits += 1;\n                temp /= 10;\n            }\n            if digits == n {\n                ans = m;\n                r = m - 1;\n            } else if digits < n {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `14`', /tmp/tmpv_57mrx4.rs:33:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n * n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        if mid * (mid + 1) / 2 < n * (n + 1) / 2 {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return ans;\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmphf3jkum3.rs:21:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 0;\n    let mut high = n;\n    let mut mid;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tn = (mid * (mid + 1)) / 2;\n        if tn % 10 == 0 {\n            ans = mid;\n            high = mid - 1;\n        } else if tn % 10 <= n {\n            ans = mid;\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpovfxz2c4.rs:25:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = n;\n    let mut mid = 0;\n    let mut ans = 0;\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tri = (mid * (mid + 1)) / 2;\n        if tri < 10.pow(n as u32 - 1) {\n            low = mid + 1;\n        } else if tri > 10.pow(n as u32) {\n            high = mid - 1;\n        } else {\n            ans = mid;\n            high = mid - 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "error[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmpynvfzc4h.rs:10:21\n   |\n10 |         if tri < 10.pow(n as u32 - 1) {\n   |                     ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n10 |         if tri < 10_i32.pow(n as u32 - 1) {\n   |                  ~~~~~~\n\nerror[E0689]: can't call method `pow` on ambiguous numeric type `{integer}`\n  --> /tmp/tmpynvfzc4h.rs:12:28\n   |\n12 |         } else if tri > 10.pow(n as u32) {\n   |                            ^^^\n   |\nhelp: you must specify a concrete type for this numeric value, like `i32`\n   |\n12 |         } else if tri > 10_i32.pow(n as u32) {\n   |                         ~~~~~~\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0689`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut ans = 1;\n\n    while high * (high + 1) / 2 < n {\n        low = high;\n        high = high * 2;\n    }\n\n    while low <= high {\n        mid = (low + high) / 2;\n        let mut tri_num = mid * (mid + 1) / 2;\n\n        if tri_num < n {\n            low = mid + 1;\n            ans = mid;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `4`', /tmp/tmpqp3oyukj.rs:30:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_num = 1;\n\n    while tri_num.to_string().len() < n as usize {\n        low = mid + 1;\n        high = 2 * low;\n        mid = (low + high) / 2;\n        tri_num = mid * (mid + 1) / 2;\n    }\n\n    mid\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122579,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6`,\n right: `4`', /tmp/tmp7ecz9_4w.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut low = 1;\n    let mut high = 1;\n    let mut mid = 1;\n    let mut tri_number = 1;\n    let mut index = 1;\n    while tri_number < n {\n        low = mid + 1;\n        high = 2 * mid;\n        mid = (low + high) / 2;\n        tri_number = mid * (mid + 1) / 2;\n        index = mid;\n    }\n    index\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `4`', /tmp/tmpsvusy205.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nfn find_Index(n: isize) -> isize {\n    let mut l = 0;\n    let mut r = n * n + 1;\n    let mut ans = -1;\n    while l <= r {\n        let m = l + (r - l) / 2;\n        let mut x = (m * (m + 1)) / 2;\n        if x % 10 == 0 {\n            x = x / 10;\n        }\n        let mut count = 0;\n        while x > 0 {\n            count += 1;\n            x = x / 10;\n        }\n        if count == n {\n            ans = m;\n            r = m - 1;\n        } else if count > n {\n            r = m - 1;\n        } else {\n            l = m + 1;\n        }\n    }\n    ans\n}\n\nfn main() {\n    let candidate = find_Index;\n    assert_eq!(candidate(2), 4);\n    assert_eq!(candidate(3), 14);\n    assert_eq!(candidate(4), 45);\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `4`', /tmp/tmpgwc80854.rs:31:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_69_is_sublist",
  "language": "rs",
  "prompt": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                found = true;\n                break;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    found",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == m {\n        return true;\n    }\n    return false;",
    "    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false",
    "    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()",
    "    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()",
    "    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n            found = true;\n        } else {\n            i += 1;\n            j = 0;\n            found = false;\n        }\n    }\n    found",
    "    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()",
    "    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false",
    "    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false",
    "    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()",
    "    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    return false;",
    "    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false",
    "    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()",
    "    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()",
    "    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()",
    "    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()",
    "    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()"
  ]
}
{
  "name": "mbpp_782_odd_length_sum",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the sum of all odd length subvectors. https://www.geeksforgeeks.org/sum-of-all-odd-length-subvectors/\nfn odd_length_sum(arr: Vec<isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = odd_length_sum;\n    assert_eq!(candidate(vec![1, 2, 4]), 14);\n    assert_eq!(candidate(vec![1, 2, 1, 2]), 15);\n    assert_eq!(candidate(vec![1, 7]), 8);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut curr_sum = 0;\n            for k in i..=j {\n                curr_sum += arr[k];\n            }\n            if (j - i + 1) % 2 != 0 {\n                sum += curr_sum;\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let len = j - i + 1;\n            if len % 2 != 0 {\n                for k in i..=j {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut curr_sum = 0;\n            for k in i..=j {\n                curr_sum += arr[k];\n            }\n            if (j - i + 1) % 2 != 0 {\n                sum += curr_sum;\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut sub_sum = 0;\n            for k in i..=j {\n                sub_sum += arr[k];\n            }\n            if (j - i + 1) % 2 != 0 {\n                sum += sub_sum;\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut curr_sum = 0;\n            for k in i..=j {\n                curr_sum += arr[k];\n            }\n            if (j - i + 1) % 2 != 0 {\n                sum += curr_sum;\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut cur_sum = 0;\n            for k in i..=j {\n                cur_sum += arr[k];\n            }\n            if (j - i + 1) % 2 != 0 {\n                sum += cur_sum;\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            if (j - i + 1) % 2 != 0 {\n                for k in i..=j {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            if (j - i) % 2 == 0 {\n                sum += arr[i..=j].iter().sum::<isize>();\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut len = j - i + 1;\n            if len % 2 == 1 {\n                sum += arr[i..j + 1].iter().sum();\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let len = j - i + 1;\n            if len % 2 != 0 {\n                for k in i..=j {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            if (j - i + 1) % 2 == 1 {\n                sum += arr[i..=j].iter().sum();\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut n = arr.len();\n    let mut i = 0;\n    while i < n {\n        let mut j = i;\n        while j < n {\n            let mut k = i;\n            while k <= j {\n                sum += arr[k];\n                k += 1;\n            }\n            j += 1;\n        }\n        i += 1;\n    }\n    sum",
    "    let mut sum = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut len = (j - i + 1) as isize;\n            if len % 2 == 1 {\n                sum += arr[j] * len;\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let mut curr_sum = 0;\n            for k in i..=j {\n                curr_sum += arr[k];\n            }\n            if (j - i + 1) % 2 != 0 {\n                sum += curr_sum;\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut n = arr.len();\n    for i in 0..n {\n        let mut j = 0;\n        while j < n {\n            let mut k = i;\n            while k <= j {\n                sum += arr[k];\n                k += 1;\n            }\n            j += 1;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            if (j - i) % 2 != 0 {\n                sum += arr[i..=j].iter().sum::<isize>();\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            if (j - i + 1) % 2 == 1 {\n                for k in i..=j {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i..=j].iter().sum();\n            }\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = arr.len();\n    while i < n {\n        j = i;\n        while j < n {\n            let mut k = i;\n            while k <= j {\n                sum += arr[k];\n                k += 1;\n            }\n            j += 1;\n        }\n        i += 1;\n    }\n    sum",
    "    let mut sum = 0;\n    let n = arr.len();\n    for i in 0..n {\n        for j in i..n {\n            let len = j - i + 1;\n            if len % 2 == 1 {\n                for k in i..=j {\n                    sum += arr[k];\n                }\n            }\n        }\n    }\n    sum"
  ]
}
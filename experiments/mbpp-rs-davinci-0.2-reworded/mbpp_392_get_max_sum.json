{
  "name": "mbpp_392_get_max_sum",
  "language": "rs",
  "prompt": "/// Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nfn get_max_sum(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = get_max_sum;\n    assert_eq!(candidate(60), 106);\n    assert_eq!(candidate(10), 12);\n    assert_eq!(candidate(2), 2);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut dp = vec![0; n as usize + 1];\n    dp[0] = 0;\n    dp[1] = 1;\n    for i in 2..=n {\n        dp[i as usize] = std::cmp::max(\n            i,\n            dp[(i / 2) as usize] + dp[(i / 3) as usize] + dp[(i / 4) as usize] + dp[(i / 5) as usize],\n        );\n    }\n    dp[n as usize]",
    "    if n < 2 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = n - 1;\n    while i > 0 {\n        let sum = get_max_sum(i / 2) + get_max_sum(i / 3) + get_max_sum(i / 4) + get_max_sum(i / 5);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i -= 1;\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut temp_sum = 0;\n    for i in 2..6 {\n        temp_sum = get_max_sum(n / i);\n        if temp_sum > max_sum {\n            max_sum = temp_sum;\n        }\n    }\n    max_sum",
    "    if n < 2 {\n        return n;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = max(sum, get_max_sum(n / i));\n        }\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut max_sum_cache = vec![0; (n + 1) as usize];\n    max_sum_cache[0] = 0;\n    max_sum_cache[1] = 1;\n    for i in 2..=n {\n        let mut sum = 0;\n        for j in 2..=5 {\n            if i - j >= 0 {\n                sum += max_sum_cache[(i - j) as usize];\n            }\n        }\n        max_sum_cache[i as usize] = std::cmp::max(sum, i);\n    }\n    max_sum_cache[n as usize]",
    "    if n <= 11 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut dp = vec![0; n as usize + 1];\n    dp[0] = 0;\n    dp[1] = 1;\n    for i in 2..=n {\n        dp[i as usize] = std::cmp::max(\n            i,\n            dp[(i / 2) as usize] + dp[(i / 3) as usize] + dp[(i / 4) as usize] + dp[(i / 5) as usize],\n        );\n    }\n    dp[n as usize]",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n == 0 {\n        return 0;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = std::cmp::max(sum, get_max_sum(n / i));\n        }\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    return max_sum;",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        sum = max(sum, get_max_sum(n / i));\n        i += 1;\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut cache = vec![0; n as usize + 1];\n    cache[0] = 0;\n    cache[1] = 1;\n    for i in 2..=n as usize {\n        let mut max = cache[i - 1];\n        if i % 2 == 0 {\n            max = max.max(cache[i / 2]);\n        }\n        if i % 3 == 0 {\n            max = max.max(cache[i / 3]);\n        }\n        if i % 4 == 0 {\n            max = max.max(cache[i / 4]);\n        }\n        if i % 5 == 0 {\n            max = max.max(cache[i / 5]);\n        }\n        cache[i] = max + i as isize;\n    }\n    cache[n as usize]",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    return std::cmp::max(\n        get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5),\n        n,\n    );",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = std::cmp::max(sum, get_max_sum(n / i));\n        }\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        sum = std::cmp::max(sum, get_max_sum(n / i));\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = std::cmp::max(sum, get_max_sum(n / i));\n        }\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum: isize = n;\n    let mut sum: isize = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            let sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    if n >= 2 {\n        sum = get_max_sum(n / 2);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    if n >= 3 {\n        sum = get_max_sum(n / 3);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    if n >= 4 {\n        sum = get_max_sum(n / 4);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    if n >= 5 {\n        sum = get_max_sum(n / 5);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i) + get_max_sum(n / i);\n            if sum > max {\n                max = sum;\n            }\n        }\n    }\n    max",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    let mut i = 2;\n    while i <= 5 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut max_sum_list = vec![n];\n    let mut i = 2;\n    while i <= 5 {\n        let mut sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n            max_sum_list = vec![sum];\n        } else if sum == max_sum {\n            max_sum_list.push(sum);\n        }\n        i += 1;\n    }\n    max_sum_list.iter().sum()",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let tmp = get_max_sum(n / i);\n        if tmp > sum {\n            sum = tmp;\n        }\n        i += 1;\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        return sum;\n    }\n    return n;",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = std::cmp::max(max_sum, get_max_sum(n / i));\n        }\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum + n",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 2 {\n        return n;\n    }\n    let mut sum = n;\n    let mut max_sum = n;\n    for i in 2..(n + 1) {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut dp: Vec<isize> = vec![0; (n + 1) as usize];\n    dp[0] = 0;\n    dp[1] = 1;\n    for i in 2..=n {\n        dp[i as usize] = std::cmp::max(\n            dp[(i / 2) as usize] + dp[(i / 3) as usize] + dp[(i / 4) as usize],\n            i,\n        );\n    }\n    dp[n as usize]",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut n = n;\n    while n > 0 {\n        let n2 = n / 2;\n        let n3 = n / 3;\n        let n4 = n / 4;\n        let n5 = n / 5;\n        let n_sum = get_max_sum(n2) + get_max_sum(n3) + get_max_sum(n4) + get_max_sum(n5);\n        if n_sum > sum {\n            sum = n_sum;\n        }\n        n -= 1;\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut dp = vec![0; (n + 1) as usize];\n    dp[0] = 0;\n    dp[1] = 1;\n    for i in 2..=n {\n        dp[i as usize] = std::cmp::max(\n            dp[(i / 2) as usize] + dp[(i / 3) as usize] + dp[(i / 4) as usize] + dp[(i / 5) as usize],\n            i,\n        );\n    }\n    dp[n as usize]",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum + n",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = 0;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max {\n            max = sum;\n        }\n    }\n    max + n",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = std::cmp::max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 1..n {\n        let sum = get_max_sum(i / 2) + get_max_sum(i / 3) + get_max_sum(i / 4) + get_max_sum(i / 5);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum + n",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n < 2 {\n        return n;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum: isize = n;\n    let mut sum: isize = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    if n > 5 {\n        max_sum = max(max_sum, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut n = n;\n    while n > 0 {\n        let sum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        n -= 1;\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = std::cmp::max(max_sum, get_max_sum(n / i) + get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 11 {\n        return n;\n    }\n    let mut sum = 0;\n    let mut n = n;\n    while n > 11 {\n        sum += n;\n        n /= 2;\n    }\n    sum + n",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i) * i);\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    return std::cmp::max(sum, n);",
    "    if n < 0 {\n        return 0;\n    }\n    if n < 2 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if max_sum < sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 2 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if max_sum < sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    let mut cache = HashMap::new();\n    cache.insert(0, 0);\n    cache.insert(1, 1);\n    cache.insert(2, 2);\n    cache.insert(3, 3);\n    cache.insert(4, 4);\n    cache.insert(5, 5);\n\n    fn get_max_sum_rec(n: isize, cache: &mut HashMap<isize, isize>) -> isize {\n        if cache.contains_key(&n) {\n            return *cache.get(&n).unwrap();\n        }\n\n        let sum = max(\n            get_max_sum_rec(n / 2, cache) + get_max_sum_rec(n / 3, cache) + get_max_sum_rec(n / 4, cache) + get_max_sum_rec(n / 5, cache),\n            n\n        );\n\n        cache.insert(n, sum);\n        sum\n    }\n\n    get_max_sum_rec(n, &mut cache)",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        sum = std::cmp::max(sum, get_max_sum(n / i));\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 1..=5 {\n        sum = get_max_sum(n / (i + 1));\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    if n <= 5 {\n        return n;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            let sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..=5 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            let sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 11 {\n        return n;\n    }\n    let mut sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let temp = get_max_sum(n / i);\n        if temp > sum {\n            sum = temp;\n        }\n        i += 1;\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 1..=5 {\n        let sum = get_max_sum(n / (i + 1)) + get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = get_max_sum(n / i);\n            if sum > max_sum {\n                max_sum = sum;\n            }\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 1..5 {\n        sum = get_max_sum(n / (i + 1));\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    if n <= 5 {\n        return n;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i) * i);\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 1..=5 {\n        max_sum = max_sum.max(get_max_sum(n / (i + 1)));\n    }\n    max_sum + n",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        sum\n    } else {\n        n\n    }",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = std::cmp::max(max_sum, get_max_sum(n / i) + get_max_sum(n % i));\n    }\n    max_sum",
    "    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n < 2 {\n        return n;\n    }\n    let mut result = n;\n    for i in 2..=5 {\n        if n % i == 0 {\n            result = std::cmp::max(result, get_max_sum(n / i) + get_max_sum(n / i));\n        }\n    }\n    result",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut memo = vec![0; n as usize + 1];\n    memo[0] = 0;\n    memo[1] = 1;\n    for i in 2..=n {\n        let mut max = i;\n        for j in 2..=5 {\n            if i % j == 0 {\n                max = std::cmp::max(max, memo[(i / j) as usize]);\n            }\n        }\n        memo[i as usize] = max;\n    }\n    memo[n as usize]",
    "    if n < 0 {\n        return 0;\n    }\n    if n <= 6 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut dp = vec![0; n as usize + 1];\n    dp[0] = 0;\n    for i in 1..=n {\n        let mut max_sum = i;\n        for j in 2..=5 {\n            if i - j >= 0 {\n                max_sum = max(max_sum, dp[(i - j) as usize]);\n            }\n        }\n        dp[i as usize] = max_sum;\n    }\n    dp[n as usize]",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum: isize = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut temp = 0;\n    for i in 2..6 {\n        if n % i == 0 {\n            temp = get_max_sum(n / i);\n            if temp > sum {\n                sum = temp;\n            }\n        }\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum + n",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    if n >= 2 {\n        max_sum = max_sum.max(get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    return max_sum;",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 || n == 1 {\n        return n;\n    }\n    let mut max_sum = n;\n    let mut i = 1;\n    while i <= 5 {\n        if n - i >= 0 {\n            max_sum = max(max_sum, get_max_sum(n - i));\n        }\n        i += 1;\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    if n >= 2 {\n        max_sum = max(max_sum, get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    let mut n = n;\n    while n > 0 {\n        let n1 = n / 2;\n        let n2 = n / 3;\n        let n3 = n / 4;\n        let n4 = n / 5;\n        let n5 = n / 6;\n        let n6 = n / 7;\n        let n7 = n / 8;\n        let n8 = n / 9;\n        let n9 = n / 10;\n        let n10 = n / 11;\n        let n11 = n / 12;\n        let n12 = n / 13;\n        let n13 = n / 14;\n        let n14 = n / 15;\n        let n15 = n / 16;\n        let n16 = n / 17;\n        let n17 = n / 18;\n        let n18 = n / 19;\n        let n19 = n / 20;\n        let n20 = n / 21;\n        let n21 = n / 22;\n        let n22 = n / 23;\n        let n23 = n / 24;\n        let n24 = n / 25;\n        let n25 = n / 26;\n        let n26 = n / 27;\n        let n27 = n / 28;\n        let n28 = n / 29;\n        let n29 = n / 30;\n        let n30 = n / 31;\n        let n31 = n / 32;\n        let n32 = n / 33;\n        let n33 = n / 34;\n        let n34 = n / 35;\n        let n35 = n / 36;\n        let n36 = n / 37;\n        let n37 = n / 38;\n        let n38 = n / 39;\n        let n39 = n / 40;\n        let n40 = n / 41;\n        let n41 = n / 42;\n        let n42 = n / 43;\n        let n43 = n / 44;\n        let n44 = n / 45;\n        let n45 = n / 46;\n        let n46 = n / 47;\n        let n47 = n / 48;\n        let n",
    "    if n <= 11 {\n        return n;\n    }\n    let mut sum = get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5);\n    if sum < n {\n        sum = n;\n    }\n    sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        max_sum = max(max_sum, get_max_sum(n / i));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut cache = vec![0; (n + 1) as usize];\n    cache[0] = 0;\n    cache[1] = 1;\n    for i in 2..(n + 1) {\n        let mut max_sum = cache[(i / 2) as usize] + cache[(i / 3) as usize] + cache[(i / 4) as usize] + cache[(i / 5) as usize];\n        if max_sum < i {\n            max_sum = i;\n        }\n        cache[i as usize] = max_sum;\n    }\n    cache[n as usize]",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..=5 {\n        max_sum = max(max_sum, get_max_sum(n / i) * i);\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut dp = vec![0; n as usize + 1];\n    dp[0] = 0;\n    dp[1] = 1;\n    for i in 2..=n {\n        dp[i as usize] = std::cmp::max(\n            i,\n            dp[(i / 2) as usize] + dp[(i / 3) as usize] + dp[(i / 4) as usize] + dp[(i / 5) as usize],\n        );\n    }\n    dp[n as usize]",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n\n    let mut max_sum = n;\n    let mut sum = 0;\n\n    for i in 1..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            sum = std::cmp::max(sum, get_max_sum(n / i));\n        }\n    }\n    sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if max_sum < sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut sum = 0;\n    for i in 2..6 {\n        sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    let mut sum = 0;\n    for i in 2..6 {\n        sum += get_max_sum(n / i);\n    }\n    if sum > n {\n        return sum;\n    }\n    return n;",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut max_sum_cache = vec![0; n as usize + 1];\n    max_sum_cache[0] = 0;\n    max_sum_cache[1] = 1;\n    for i in 2..=n {\n        let mut sum = 0;\n        for j in 2..=5 {\n            if i - j >= 0 {\n                sum += max_sum_cache[(i - j) as usize];\n            }\n        }\n        max_sum_cache[i as usize] = std::cmp::max(sum, i);\n    }\n    max_sum_cache[n as usize]",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    if n >= 2 {\n        max_sum = max_sum.max(get_max_sum(n / 2) + get_max_sum(n / 3) + get_max_sum(n / 4) + get_max_sum(n / 5));\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = 0;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum + n",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        if n % i == 0 {\n            max_sum = max(max_sum, get_max_sum(n / i));\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 1..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut max_sum = n;\n    let mut i = 2;\n    while i <= 5 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n        i += 1;\n    }\n    max_sum",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max {\n            max = sum;\n        }\n    }\n    max",
    "    if n <= 0 {\n        return 0;\n    }\n    if n <= 5 {\n        return n;\n    }\n    let mut max_sum = n;\n    for i in 2..6 {\n        let sum = get_max_sum(n / i);\n        if sum > max_sum {\n            max_sum = sum;\n        }\n    }\n    max_sum"
  ]
}
{
  "name": "mbpp_69_is_sublist",
  "language": "rs",
  "prompt": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                found = true;\n                break;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == m {\n        return true;\n    }\n    return false;\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n            found = true;\n        } else {\n            i += 1;\n            j = 0;\n            found = false;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    return false;\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == m\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    while i < l.len() {\n        if l[i] == s[0] {\n            let mut j = 0;\n            while j < s.len() && i + j < l.len() {\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n            found = true;\n        } else {\n            i += 1;\n            j = 0;\n            found = false;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    for i in 0..(l.len() - s.len() + 1) {\n        if l[i..(i + s.len())] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        found = true;\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        found = true;\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n\n        if j == s.len() {\n            return true;\n        }\n\n        i += 1;\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        found = true;\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == s.len() {\n        found = true;\n    }\n\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    for &x in l.iter() {\n        if x == s[i] {\n            i += 1;\n            if i == s.len() {\n                return true;\n            }\n        } else {\n            i = 0;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    while i <= l.len() - s.len() {\n        if l[i] == s[0] {\n            let mut j = 1;\n            while j < s.len() && l[i + j] == s[j] {\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut is_sub = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n        if j == s.len() {\n            is_sub = true;\n            break;\n        }\n    }\n    is_sub\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut l_len = l.len();\n    let mut s_len = s.len();\n    while i < l_len && j < s_len {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s_len {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == m\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    for i in 0..(l.len() - s.len() + 1) {\n        if l[i..(i + s.len())] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    while i < l.len() {\n        if l[i] == s[0] {\n            let mut j = 0;\n            while j < s.len() {\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n        if j == s.len() {\n            found = true;\n            break;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        if j == s.len() {\n            return true;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    while i < l.len() {\n        if l[i] == s[0] {\n            let mut j = 0;\n            while j < s.len() && i + j < l.len() && l[i + j] == s[j] {\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    while i < l.len() - s.len() + 1 {\n        if l[i] == s[0] {\n            let mut j = 0;\n            while j < s.len() {\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.is_empty() {\n        return true;\n    }\n    if l.is_empty() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    while i < l.len() - s.len() + 1 {\n        if l[i] == s[0] {\n            let mut j = 0;\n            while j < s.len() && l[i + j] == s[j] {\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n\n    if l.len() == 0 {\n        return false;\n    }\n\n    let mut i = 0;\n\n    while i < l.len() {\n        if l[i] == s[0] {\n            let mut j = 1;\n            while j < s.len() {\n                if i + j >= l.len() {\n                    return false;\n                }\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    while i < l.len() {\n        if l[i] == s[0] {\n            let mut j = 1;\n            while j < s.len() {\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i] == s[0] {\n            let mut j = 1;\n            while j < s.len() && l[i + j] == s[j] {\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        let mut j = 0;\n        while j < s.len() && l[i + j] == s[j] {\n            j += 1;\n        }\n        if j == s.len() {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    while i < l.len() - s.len() + 1 {\n        if l[i] == s[0] {\n            let mut j = 0;\n            while j < s.len() {\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == s.len() {\n        found = true;\n    }\n\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        found = true;\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.is_empty() {\n        return true;\n    }\n    if l.is_empty() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    while i < l.len() {\n        if l[i] == s[0] {\n            let mut j = 0;\n            while j < s.len() && i + j < l.len() && l[i + j] == s[j] {\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        let mut j = 0;\n        while j < s.len() && l[i + j] == s[j] {\n            j += 1;\n        }\n        if j == s.len() {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        let mut j = 0;\n        while j < s.len() && l[i + j] == s[j] {\n            j += 1;\n        }\n        if j == s.len() {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    while i < l.len() - s.len() + 1 {\n        if l[i] == s[0] {\n            let mut j = 1;\n            while j < s.len() {\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut l_len = l.len();\n    let mut s_len = s.len();\n    while i < l_len && j < s_len {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s_len {\n        return true;\n    }\n    return false;\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == m {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.is_empty() {\n        return true;\n    }\n    if l.is_empty() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        true\n    } else {\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        found = true;\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() == 0 {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.is_empty() {\n        true\n    } else if l.is_empty() {\n        false\n    } else if l.len() < s.len() {\n        false\n    } else {\n        let mut i = 0;\n        while i < l.len() - s.len() + 1 {\n            let mut j = 0;\n            while j < s.len() && l[i + j] == s[j] {\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n            i += 1;\n        }\n        false\n    }\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() == 0 {\n        return true;\n    }\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    while i < l.len() - s.len() + 1 {\n        if l[i] == s[0] {\n            let mut j = 1;\n            while j < s.len() {\n                if l[i + j] != s[j] {\n                    break;\n                }\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n            break;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.is_empty() {\n        return true;\n    }\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i] == s[0] {\n            let mut j = 1;\n            while j < s.len() && l[i + j] == s[j] {\n                j += 1;\n            }\n            if j == s.len() {\n                return true;\n            }\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if j == m {\n        return true;\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut found = false;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n        if j == s.len() {\n            found = true;\n            break;\n        }\n    }\n    found\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n\n    for i in 0..l.len() - s.len() + 1 {\n        if l[i..i + s.len()] == s[..] {\n            return true;\n        }\n    }\n\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    if j == s.len() {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            j += 1;\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    let mut n = l.len();\n    let mut m = s.len();\n    while i < n && j < m {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n    if j == m {\n        return true;\n    }\n    return false;\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if s.len() > l.len() {\n        return false;\n    }\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() {\n        if l[i] == s[j] {\n            j += 1;\n            if j == s.len() {\n                return true;\n            }\n        } else {\n            j = 0;\n        }\n        i += 1;\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    if l.len() < s.len() {\n        return false;\n    }\n    for i in 0..(l.len() - s.len() + 1) {\n        if l[i..(i + s.len())] == s[..] {\n            return true;\n        }\n    }\n    false\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1666123248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to check whether a vector contains the given subvector or not.\nfn is_sublist(l: Vec<isize>, s: Vec<isize>) -> bool {\n    let mut i = 0;\n    let mut j = 0;\n    while i < l.len() && j < s.len() {\n        if l[i] == s[j] {\n            i += 1;\n            j += 1;\n        } else {\n            i += 1;\n            j = 0;\n        }\n    }\n    j == s.len()\n}\n\nfn main() {\n    let candidate = is_sublist;\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![3, 7]), false);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![4, 3]), true);\n    assert_eq!(candidate(vec![2, 4, 3, 5, 7], vec![1, 6]), false);\n}\n",
      "timestamp": 1665510376,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
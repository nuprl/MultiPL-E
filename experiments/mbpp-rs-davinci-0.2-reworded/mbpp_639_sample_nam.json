{
  "name": "mbpp_639_sample_nam",
  "language": "rs",
  "prompt": "/// Write a function to sum the length of the names of a given vector of names after removing the names that start with a lowercase letter.\nfn sample_nam(sample_names: Vec<String>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = sample_nam;\n    assert_eq!(candidate(vec![String::from(\"sally\"), String::from(\"Dylan\"), String::from(\"rebecca\"), String::from(\"Diana\"), String::from(\"Joanne\"), String::from(\"keith\")]), 16);\n    assert_eq!(candidate(vec![String::from(\"php\"), String::from(\"res\"), String::from(\"Python\"), String::from(\"abcd\"), String::from(\"Java\"), String::from(\"aaa\")]), 10);\n    assert_eq!(candidate(vec![String::from(\"abcd\"), String::from(\"Python\"), String::from(\"abba\"), String::from(\"aba\")]), 6);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if !name.starts_with(char::is_lowercase) {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().nth(0).unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if name.chars().next().unwrap().is_uppercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for name in sample_names {\n        if !name.chars().next().unwrap().is_lowercase() {\n            sum += name.len() as isize;\n        }\n    }\n    sum"
  ]
}
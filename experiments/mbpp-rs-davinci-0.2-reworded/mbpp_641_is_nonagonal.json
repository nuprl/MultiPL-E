{
  "name": "mbpp_641_is_nonagonal",
  "language": "rs",
  "prompt": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    } else {\n        return 0;\n    }",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 1;\n    let mut sum = 0;\n    while count < n {\n        sum = i + j;\n        i = j;\n        j = sum;\n        count += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    } else {\n        return 0;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    (n * (3 * n - 1)) / 2",
    "    n * (3 * n - 2)",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    if n <= 0 {\n        return 0;\n    }\n    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        -1\n    }",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        i += 1;\n        n -= i;\n    }\n    n + i",
    "    let mut i = 0;\n    let mut sum = 0;\n    loop {\n        i += 1;\n        sum += i;\n        if sum == n {\n            return i;\n        }\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        }\n        i += 1;\n    }",
    "    n * (3 * n - 2)",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    (n * (3 * n - 1)) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 1) / 2;\n    }\n    nth",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while (i * (i + 1) / 2) < n {\n        i += 1;\n    }\n    return i;",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1",
    "    n * (3 * n - 2)",
    "    let mut i = 1;\n    loop {\n        let x = i * (3 * i - 1) / 2;\n        if x == n {\n            return i;\n        } else if x > n {\n            return 0;\n        }\n        i += 1;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let n = n as f64;\n    let a = (8.0 * n + 1.0).sqrt();\n    let b = (a - 1.0) / 2.0;\n    let c = b.floor();\n    if b == c {\n        return n;\n    }\n    0",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    if n == 0 {\n        return i - 1;\n    } else {\n        return 0;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1",
    "    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        j = i;\n        k = i;\n        sum = 0;\n        while k > 0 {\n            sum += j;\n            j += 1;\n            k -= 1;\n        }\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    } else {\n        return 0;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut nth = 1;\n    loop {\n        if nth == n {\n            return i;\n        }\n        i += 1;\n        nth += i;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let n = n as f64;\n    let n = (n * (3.0 * n - 1.0)) / 2.0;\n    n as isize",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    -1",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    0",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let n = n as f64;\n    let x = (8.0 * n + 1.0).sqrt();\n    let x = x.floor();\n    if x.is_integer() {\n        let x = x as isize;\n        (x * (3 * x - 1)) / 2\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    n * (3 * n - 2)",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    n * (3 * n - 2)",
    "    let x = (8.0 * n as f64 + 1.0).sqrt();\n    if x.floor() == x {\n        return n;\n    }\n    return 0;",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        i += 1;\n        n -= i;\n    }\n    n + i",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    while k < n {\n        i += 1;\n        j += 1;\n        k += i + j;\n    }\n    k",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut nth = 0;\n    while nth < n {\n        nth += i;\n        i += 1;\n    }\n    nth",
    "    let n = n as f64;\n    let x = (1.0 + 8.0 * n).sqrt();\n    let x = x - 1.0;\n    let x = x / 2.0;\n    let x = x.floor();\n    x as isize",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    loop {\n        i += 1;\n        sum += i;\n        if sum == n {\n            return i;\n        }\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let n = n as f64;\n    let n = (n * (3.0 * n - 1.0)) / 2.0;\n    return n as isize;",
    "    let mut i = 1;\n    let mut sum = 1;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 1) / 2;\n    }\n    nth",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut count = 0;\n    let mut sum = 0;\n    while count < n {\n        sum = i * (3 * i - 1) / 2;\n        if i % 2 == 0 {\n            j += 1;\n        } else {\n            j -= 1;\n        }\n        i += 1;\n        count += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let x = (8.0 * n as f64 + 1.0).sqrt();\n    if x == x.floor() {\n        return n;\n    }\n    0",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    n * (3 * n - 2)",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    loop {\n        sum += i;\n        if sum == n {\n            return i;\n        }\n        if sum > n {\n            return -1;\n        }\n        i += 1;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    n * (3 * n - 2)",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut k = 1;\n    while k < n {\n        i += 1;\n        j += 1;\n        k += 1;\n        while i > 1 {\n            j += 1;\n            k += 1;\n            if k == n {\n                return j;\n            }\n            i -= 1;\n        }\n        while j > 1 {\n            i += 1;\n            k += 1;\n            if k == n {\n                return i;\n            }\n            j -= 1;\n        }\n    }\n    return i;",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 0;\n    while n > 0 {\n        i += 1;\n        n -= i;\n    }\n    n + i",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    n * (3 * n - 2)",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut result = 0;\n    while result < n {\n        i += 1;\n        j = i;\n        k = 0;\n        while j > 0 {\n            result += 1;\n            k += 1;\n            j -= 1;\n        }\n    }\n    k",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    0",
    "    let mut i = 1;\n    loop {\n        let nth = i * (3 * i - 1) / 2;\n        if nth == n {\n            return i;\n        }\n        if nth > n {\n            return 0;\n        }\n        i += 1;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    0",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    }\n    return 0;",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 1;\n    }\n    n + i - 1",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        return i;\n    }\n    -1",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    if sum == n {\n        i\n    } else {\n        -1\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum"
  ]
}
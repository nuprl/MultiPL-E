{
  "name": "mbpp_641_is_nonagonal",
  "language": "rs",
  "prompt": "/// Write a function to find the nth nonagonal number.\nfn is_nonagonal(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = is_nonagonal;\n    assert_eq!(candidate(10), 325);\n    assert_eq!(candidate(15), 750);\n    assert_eq!(candidate(18), 1089);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    } else {\n        return 0;\n    }",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 1;\n    let mut sum = 0;\n    while count < n {\n        sum = i + j;\n        i = j;\n        j = sum;\n        count += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    while i * (3 * i - 1) / 2 < n {\n        i += 1;\n    }\n    i * (3 * i - 1) / 2",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    if sum == n {\n        return i - 1;\n    } else {\n        return 0;\n    }",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 0;\n    let mut sum = 0;\n    while sum < n {\n        i += 1;\n        sum += i;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    let mut i = 1;\n    let mut sum = 0;\n    while sum < n {\n        sum += i;\n        i += 1;\n    }\n    sum",
    "    (n * (3 * n - 1)) / 2",
    "    n * (3 * n - 2)"
  ]
}
{
  "name": "mbpp_59_is_octagonal",
  "language": "rs",
  "prompt": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmppz0pz271.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = (3 * j * j - j) / 2;\n        j += 1;\n    }\n    if i == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmpmv6lezk1.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = i + j * 3;\n        j += 1;\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa4vz3dlu.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    loop {\n        j = i * (3 * i - 2);\n        if j == n {\n            return i;\n        }\n        if j > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpcxigjctw.rs:19:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpqa66fck3.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 3;\n    }\n    if n == 0 {\n        return i - 3;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `65`', /tmp/tmp69ggswcw.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut oct = 0;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpkzzf8kg5.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = (n as f64).sqrt();\n    let n = n as isize;\n    if n * n * (3 * n - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpi31hajnj.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (1.0 + (1.0 + 24.0 * n).sqrt()) / 6.0;\n    if x.fract() == 0.0 {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp61irmwe8.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        i = 3 * j * j - j + 1;\n        j += 1;\n    }\n    if i == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp3sdna7kt.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let n = n.sqrt();\n    let n = n.ceil();\n    let n = n as isize;\n    let n = n * (3 * n - 2);\n    n\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `21`,\n right: `65`', /tmp/tmp_p8fd2b9.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return result;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpu76zx00j.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6y_qgbt_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut octagonal = 0;\n    while octagonal < n {\n        i += 1;\n        octagonal = i * (3 * i - 2);\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpbh7ncnqq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp49735bqc.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x == x.floor() {\n        return (x * 3.0 - 1.0) as isize;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpyew509ot.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth_octagonal = 0;\n    while nth_octagonal < n {\n        i += 1;\n        nth_octagonal = i * (3 * i - 2);\n    }\n    if nth_octagonal == n {\n        nth_octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6u1215fq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpznukghga.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut x = 1;\n    let mut y = 1;\n    while x < n {\n        x = 3 * y * (y + 1) + 1;\n        y += 1;\n    }\n    if x == n {\n        return y;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmphf5_t30p.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut num = 0;\n    while num < n {\n        num = i * (3 * i - 2);\n        i += 1;\n    }\n    if num == n {\n        return num;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpdoagh52h.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut num = 1;\n    while i < n {\n        num += 3 * i + 2;\n        i += 1;\n    }\n    num\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `39`,\n right: `65`', /tmp/tmpf4zae0_n.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 3;\n    }\n    if n == 0 {\n        return i - 3;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `65`', /tmp/tmp69ggswcw.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp49735bqc.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        j\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp3y2uu0a6.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpvffuyudu.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0jsao09h.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 0;\n    while nth < n {\n        nth = i * (3 * i - 2);\n        i += 1;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpmi5508q4.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return j;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n        j += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpmuhmfv7f.rs:20:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return -1;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmpoal2661x.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n * (3.0_f64.sqrt() + 1.0) / 2.0).round() as isize;\n    if x * (3 * x - 2) == n {\n        x\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmp7wjb0llk.rs:5:27\n  |\n5 |     if x * (3 * x - 2) == n {\n  |                           ^ expected `isize`, found `f64`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa3geqogz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = 3 * j * j - j + 1;\n        j += 1;\n    }\n    if i == n {\n        return n;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpj5qx_uqz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp1alkg4ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let n = (n * (3.0_f64.sqrt() + 1.0) / 2.0).floor() as isize;\n    if n * (3 * n - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpcsgooz9x.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp1alkg4ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 0;\n    while nth < n {\n        nth = i * (3 * i - 2);\n        i += 1;\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpmi5508q4.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        }\n        if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6k24lv3l.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (1.0 + (1.0 + 24.0 * n).sqrt()) / 6.0;\n    if x.fract() == 0.0 {\n        x as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp61irmwe8.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j < n {\n        i += 1;\n        j = i * (3 * i - 2);\n    }\n    if j == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpwgnkfrgc.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j < n {\n        i += 1;\n        j = i * (3 * i - 2);\n    }\n    if j == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp_injeifq.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt() + 1.0 / 3.0;\n    if x.fract() == 0.0 {\n        (x - 1.0 / 3.0) * (x - 2.0 / 3.0)\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "error[E0308]: mismatched types\n --> /tmp/tmpdjzu4dnk.rs:6:9\n  |\n2 | fn is_octagonal(n: isize) -> isize {\n  |                              ----- expected `isize` because of return type\n...\n6 |         (x - 1.0 / 3.0) * (x - 2.0 / 3.0)\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `f64`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp1alkg4ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp_oyklkwk.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth_octagonal = 0;\n    while nth_octagonal < n {\n        nth_octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    nth_octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp38cftbmw.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let a = (n as f64).sqrt();\n    let b = (a * a - n as f64) / 2.0;\n    if b.fract() == 0.0 {\n        b as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmplvmf5jhf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        j\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp3y2uu0a6.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while i < n {\n        oct += 3 * i + 2;\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `39`,\n right: `65`', /tmp/tmpxlh2c6sx.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let n = (n * (3.0 + 2.0 * n.sqrt())).sqrt();\n    if n == n.floor() {\n        return n as isize;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpn2who68y.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    if i == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpch583kz8.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let a = (1.0 + (1.0 + 24.0 * n).sqrt()) / 6.0;\n    if a.fract() == 0.0 {\n        a as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmppn74ner9.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut result = 0;\n    while result < n {\n        i += 1;\n        result = i * (3 * i - 2);\n    }\n    if result == n {\n        return i;\n    }\n    -1\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmpre_z9ys1.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut res = 0;\n    while res < n {\n        res = i * (3 * i - 2);\n        i += 1;\n    }\n    if res == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpne3m727d.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = 3 * j * j - j + 1;\n        j += 1;\n    }\n    if i == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpxzgxvt08.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpoq_coi3q.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let n = (n * (3.0 + 2.0 * n.sqrt())).round() as isize;\n    if n * (3 * n - 2) == n * n * 2 {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpibe68enf.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpz40c4mp5.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return result;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpurmsscjd.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpqa66fck3.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0jsao09h.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j < n {\n        i += 1;\n        j = i * (3 * i - 2);\n    }\n    if j == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpwgnkfrgc.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmptzuk8_yr.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp49735bqc.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6y_qgbt_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    if i == n {\n        return n;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpw_eokpm_.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut n = n;\n    while n > 0 {\n        n -= i * 3 - 2;\n        i += 1;\n    }\n    if n == 0 {\n        i - 1\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmpo1l8pjjz.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = j * (3 * j - 2);\n        j += 1;\n    }\n    if i == n {\n        return 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpn19_ux3k.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = (n as f64).sqrt();\n    if n == n.floor() {\n        let n = n as isize;\n        let x = (n * (3 * n - 2)) / 2;\n        if x > 0 {\n            return x;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmprvar_f2t.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut n = n;\n    while n > 0 {\n        i += 1;\n        n -= i * 3 - 2;\n    }\n    if n == 0 {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `65`', /tmp/tmp68hfc1hi.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    loop {\n        i += 1;\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpt6gtvqqx.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return i - 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpa3geqogz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    loop {\n        let oct = i * (3 * i - 2);\n        if oct == n {\n            return i;\n        } else if oct > n {\n            return 0;\n        }\n        i += 1;\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp29f2ut54.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth_octagonal = 0;\n    while nth_octagonal < n {\n        nth_octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    nth_octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp38cftbmw.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 1;\n    while oct < n {\n        i += 1;\n        oct = i * (3 * i - 2);\n    }\n    if oct == n {\n        oct\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpl0xrp3at.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut j = 0;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpqa66fck3.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut n = n;\n    let mut i = 1;\n    while n > 0 {\n        n -= i;\n        i += 3;\n    }\n    if n == 0 {\n        return i - 3;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `4`,\n right: `65`', /tmp/tmp69ggswcw.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    oct\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmpgp8n70ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        -1\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-1`,\n right: `65`', /tmp/tmprod10v1g.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while j < n {\n        i += 1;\n        j = i * (3 * i - 2);\n    }\n    if j == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp_injeifq.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x.fract() == 0.0 {\n        let x = x as isize;\n        if x % 2 == 0 {\n            return x / 2;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp7864j9x2.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let a = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if a == a.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmp17gqi1k4.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        i\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1dth8zth.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmppz0pz271.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut oct = 0;\n    while oct < n {\n        oct = i * (3 * i - 2);\n        i += 1;\n    }\n    if oct == n {\n        return i - 1;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpkktlib9n.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 0;\n    let mut nth = 0;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    nth\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp1alkg4ic.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut result = 0;\n    while result < n {\n        result = i * (3 * i - 2);\n        i += 1;\n    }\n    if result == n {\n        return result;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpu76zx00j.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        i = 3 * j * j - j + 1;\n        j += 1;\n    }\n    if i == n {\n        return 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1nisyidt.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpyihwwlyz.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut j = 1;\n    while i < n {\n        j += 1;\n        i = j * (3 * j - 2);\n    }\n    if i == n {\n        return j;\n    }\n    return 0;\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmppz0pz271.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 0;\n    while octagonal < n {\n        octagonal = i * (3 * i - 2);\n        i += 1;\n    }\n    octagonal\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `8`,\n right: `65`', /tmp/tmp30ljtkla.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let a = (n + 1.0) / 2.0;\n    let b = (n - 1.0) / 2.0;\n    let c = (a * a * a - b * b * b).sqrt();\n    if c.fract() == 0.0 {\n        (c * 2.0).round() as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp59tzreod.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut nth = 1;\n    while nth < n {\n        i += 1;\n        nth = i * (3 * i - 2);\n    }\n    if nth == n {\n        nth\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpeafp6kfq.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let n = n as f64;\n    let x = (n + 1.0 / 3.0).sqrt();\n    if x.fract() == 0.0 {\n        (x - 1.0 / 3.0) as isize\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp6ncypil7.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp1z0r2ac0.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    while i * (3 * i - 2) < n {\n        i += 1;\n    }\n    if i * (3 * i - 2) == n {\n        return i;\n    }\n    0\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmpunb_wqln.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let x = (1.0 + (1.0 + 24.0 * n as f64).sqrt()) / 6.0;\n    if x == x.floor() {\n        n\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1665510623,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `65`', /tmp/tmppx3ppjgi.rs:13:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the nth octagonal number.\nfn is_octagonal(n: isize) -> isize {\n    let mut i = 1;\n    let mut octagonal = 1;\n    while octagonal < n {\n        i += 1;\n        octagonal = i * (3 * i - 2);\n    }\n    if octagonal == n {\n        octagonal\n    } else {\n        0\n    }\n}\n\nfn main() {\n    let candidate = is_octagonal;\n    assert_eq!(candidate(5), 65);\n    assert_eq!(candidate(10), 280);\n    assert_eq!(candidate(15), 645);\n}\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `65`', /tmp/tmp0frhe52k.rs:18:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_83_get_Char",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfn get_Char(strr: String) -> String {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = get_Char;\n    assert_eq!(candidate(String::from(\"abc\")), String::from(\"f\"));\n    assert_eq!(candidate(String::from(\"gfg\")), String::from(\"t\"));\n    assert_eq!(candidate(String::from(\"ab\")), String::from(\"c\"));\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut res = sum % 26;\n    let mut res_char = (res as u8 + 65) as char;\n    res_char.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut res = (sum % 26) as u8;\n    res += 65;\n    let s = res as char;\n    s.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = (sum % 26) as u8;\n    let ch = (res + 65) as char;\n    ch.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum = sum + i as u32;\n    }\n    let mut ch = (sum % 26) as u8;\n    ch = ch + 65;\n    let s = ch as char;\n    s.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut ch = (sum % 26) as u8;\n    ch += 65;\n    let mut s = String::new();\n    s.push(ch as char);\n    s",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let mut result = (sum % 26) as u8;\n    result += 65;\n    let result = result as char;\n    format!(\"{}\", result)",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let mut ch = (sum % 26) as u8;\n    ch += 65;\n    let mut s = String::new();\n    s.push(ch as char);\n    s",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = (sum % 26) as u8 + 65;\n    let res = res as char;\n    res.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let mut ch = (sum % 26) as u8;\n    ch += 65;\n    let mut s = String::new();\n    s.push(ch as char);\n    s",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut res = (sum % 26) as u8;\n    res += 65;\n    let mut result = String::new();\n    result.push(res as char);\n    result",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = sum % 26;\n    let ch = (res + 65) as u8 as char;\n    ch.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let mut ch = (sum % 26) as u8 + 65;\n    let mut s = String::new();\n    s.push(ch as char);\n    s",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let ch = (sum % 26 + 65) as u8;\n    let s = ch as char;\n    s.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let ch = (sum % 26 + 65) as u8 as char;\n    ch.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let sum = sum % 26;\n    let sum = sum + 97;\n    let sum = sum as u8;\n    let sum = sum as char;\n    let mut strr = String::new();\n    strr.push(sum);\n    strr",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u32;\n    }\n    let mut res = (sum % 26) as u8;\n    res += 65;\n    let res = res as char;\n    res.to_string()",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = (sum % 26) as u8;\n    let res = res + 65;\n    let res = res as char;\n    let res = res.to_string();\n    res",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let res = sum % 26;\n    let res = res as u8 + 97;\n    let res = res as char;\n    let res = res.to_string();\n    res",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let mut res = (sum % 26) as u8;\n    res += 65;\n    let ch = res as char;\n    let mut strr = String::new();\n    strr.push(ch);\n    strr",
    "    let mut sum = 0;\n    for i in strr.chars() {\n        sum += i as u8;\n    }\n    let ch = (sum % 26) as u8 + 65;\n    return format!(\"{}\", ch as char);"
  ]
}
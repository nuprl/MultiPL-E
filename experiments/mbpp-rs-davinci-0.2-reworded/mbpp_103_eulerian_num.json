{
  "name": "mbpp_103_eulerian_num",
  "language": "rs",
  "prompt": "/// Write a function to find the Eulerian number a(n, m).\nfn eulerian_num(n: isize, m: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = eulerian_num;\n    assert_eq!(candidate(3, 1), 4);\n    assert_eq!(candidate(4, 1), 11);\n    assert_eq!(candidate(5, 3), 26);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 0;\n    }\n    if n == 1 || m == 1 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    let mut sum = 0;\n    for k in 0..n + 1 {\n        sum += eulerian_num(k, m - 1) * eulerian_num(n - k, 1);\n    }\n    sum",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut sum = 0;\n    for i in 0..m + 1 {\n        sum += eulerian_num(n - 1, i);\n    }\n    sum",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 || m == 1 {\n        return n + m - 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n - 1) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 || m == 0 {\n        return 0;\n    }\n    if n == 1 || m == 1 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut res = 0;\n    for i in 0..=m {\n        res += (-1isize).pow(i as u32) * comb(m, i) * eulerian_num(n - i, m - i);\n    }\n    res",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    if m == 1 {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)",
    "    if m == 0 || n == m {\n        return 1;\n    }\n    if m == 1 {\n        return n;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < m {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if m == 1 {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut sum = 0;\n    for i in 0..m + 1 {\n        sum += (-1).pow(i as u32) * eulerian_num(n - 1, m - i) * (n - i) / (i + 1);\n    }\n    sum",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut result = 0;\n    for i in 0..m + 1 {\n        result += eulerian_num(n - 1, i);\n    }\n    result",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    if m == 1 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    if m == 1 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 && m == 0 {\n        1\n    } else if n == 0 || m == 0 {\n        0\n    } else {\n        (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if m == 0 {\n        return 1;\n    }\n    if n == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1) * (n - m + 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut res = 0;\n    for i in 0..=m {\n        res += (-1isize).pow(i as u32) * (n - i + 1) * eulerian_num(n - 1, i);\n    }\n    res",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < m {\n        return 0;\n    }\n    if m == 0 {\n        return 1;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if m == 0 {\n        return 1;\n    }\n    if n == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1) * (n - m + 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == m {\n        1\n    } else if n < m {\n        0\n    } else {\n        (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n    }",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut sum = 0;\n    for k in 0..m + 1 {\n        sum += (-1).pow(k) * eulerian_num(n - 1, k) * factorial(n - k);\n    }\n    sum / factorial(m)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 && m == 0 {\n        1\n    } else if n == 0 || m == 0 {\n        0\n    } else {\n        (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    let mut sum = 0;\n    for i in 0..n + 1 {\n        sum += eulerian_num(i, m - 1) * binomial_coeff(n + 1, i + 1);\n    }\n    sum",
    "    let mut res = 0;\n    for k in 0..=m {\n        res += (-1isize).pow(k as u32) * comb(m, k) * comb(n + k, k);\n    }\n    res",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 0;\n    }\n    if n == 1 || m == 1 {\n        return 1;\n    }\n    if n == m {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 0;\n    }\n    if n == 1 || m == 1 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n - 1) * eulerian_num(n - 1, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 || n < m {\n        return 0;\n    }\n    if n == 0 || m == 0 || n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 0;\n    }\n    if n == 1 || m == 1 {\n        return 1;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if m == 0 {\n        return 1;\n    }\n    if n == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    if m == 1 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 || m == 1 {\n        return n.max(m);\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n - 1) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 && m == 0 {\n        1\n    } else if n == 0 || m == 0 {\n        0\n    } else {\n        (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut res = 0;\n    for i in 0..m + 1 {\n        res += eulerian_num(n - 1, i);\n    }\n    res",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == m {\n        return 1;\n    }\n    if n > m {\n        return 0;\n    }\n    let mut res = 0;\n    for i in 0..n + 1 {\n        res += (-1isize).pow(i as u32) * eulerian_num(n - i, m - 1) * factorial(m - 1);\n    }\n    res / factorial(n)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    if n == m {\n        return factorial(n) / factorial(n - m);\n    }\n    let mut sum = 0;\n    for k in 0..m + 1 {\n        sum += (-1).pow(k as u32) * factorial(m) / (factorial(k) * factorial(m - k)) * eulerian_num(n - k, m);\n    }\n    sum",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut sum = 0;\n    for i in 0..m + 1 {\n        sum += (-1).pow(i as u32) * binomial(m, i) * eulerian_num(n - i, m);\n    }\n    sum",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut res = 0;\n    for i in 0..=m {\n        res += (-1isize).pow(i as u32) * comb(m, i) * comb(n + m - i - 1, m - 1);\n    }\n    res",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n - 1) * eulerian_num(n - 1, m - 1)",
    "    if m == 0 || n == m {\n        1\n    } else {\n        eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n    }",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 0;\n    }\n    if n == 1 || m == 1 {\n        return 1;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut res = 0;\n    for i in 0..=m {\n        res += (-1isize).pow(i as u32) * comb(m, i) * comb(n + m - i - 1, m - 1);\n    }\n    res",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if m > n {\n        return 0;\n    }\n    if m == 0 {\n        return 1;\n    }\n    if m == 1 {\n        return n;\n    }\n    if m == n {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)",
    "    let mut result = 0;\n    for k in 0..=m {\n        result += (-1isize).pow(k as u32) * binomial(m, k) * binomial(n + k, n);\n    }\n    result",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if m == 0 {\n        return 1;\n    }\n    if n == 0 {\n        return 0;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + eulerian_num(n - 1, m - 1) * (n - m + 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == m {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    if n == m {\n        return factorial(n) / factorial(n - m);\n    }\n    if n > m {\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m);\n    }\n    0",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        1\n    } else if m == 0 {\n        0\n    } else {\n        (eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)) % 1000000\n    }",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    let mut res = 0;\n    for k in 0..=m {\n        res += binomial(m, k) * (m - k).pow(n as u32);\n    }\n    res",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 && m == 0 {\n        1\n    } else if n == 0 || m == 0 {\n        0\n    } else {\n        (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    }",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 || m == 1 {\n        return n + m - 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n - 1) * eulerian_num(n - 1, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 || m == 1 {\n        return n;\n    }\n    if n == m {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut sum = 0;\n    for i in 0..m + 1 {\n        sum += (-1).pow(i as u32) * eulerian_num(n - i - 1, m - i);\n    }\n    sum",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if n == 1 {\n        return 1;\n    }\n    if m == 1 {\n        return 1;\n    }\n    eulerian_num(n - 1, m - 1) + (n - 1) * eulerian_num(n - 1, m)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    if n == m {\n        return factorial(n) / factorial(n - m);\n    }\n    factorial(n) / (factorial(n - m) * factorial(m))",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    let mut res = 0;\n    for k in 0..=m {\n        res += (-1isize).pow(k as u32) * binomial(m, k) * binomial(n + m - k, m);\n    }\n    res",
    "    if n == 0 && m == 0 {\n        return 1;\n    }\n    if n == 0 || m == 0 {\n        return 0;\n    }\n    eulerian_num(n - 1, m) + (n + 1) * eulerian_num(n, m - 1)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut result = 0;\n    for i in 0..=m {\n        result += (-1isize).pow(i as u32) * eulerian_num(n - i, m - i);\n    }\n    result",
    "    if n == 0 {\n        return 1;\n    }\n    if m == 0 {\n        return 0;\n    }\n    if m > n {\n        return 0;\n    }\n    eulerian_num(n - 1, m - 1) + (n - m + 1) * eulerian_num(n - 1, m)",
    "    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n < m {\n        return 0;\n    }\n    let mut sum = 0;\n    for i in 0..m + 1 {\n        sum += (-1).pow(i as u32) * eulerian_num(n - 1, i) * factorial(n - 1);\n    }\n    sum / factorial(n)",
    "    if n < 0 || m < 0 {\n        return 0;\n    }\n    if n == 0 || m == 0 {\n        return 1;\n    }\n    if n == 1 {\n        return m + 1;\n    }\n    if m == 1 {\n        return n + 1;\n    }\n    eulerian_num(n - 1, m) + m * eulerian_num(n, m - 1)",
    "    if m == 0 || n == m {\n        1\n    } else {\n        eulerian_num(n - 1, m - 1) + (n - m) * eulerian_num(n - 1, m)\n    }"
  ]
}
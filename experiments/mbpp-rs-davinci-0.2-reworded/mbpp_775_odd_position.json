{
  "name": "mbpp_775_odd_position",
  "language": "rs",
  "prompt": "/// Write a rsthon function to check whether every odd index contains odd numbers of a given vector.\nfn odd_position(nums: Vec<isize>) -> bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_775_odd_position.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = odd_position;\n    assert_eq!(candidate(vec![2, 1, 4, 3, 6, 7, 6, 3]), true);\n    assert_eq!(candidate(vec![4, 1, 2]), true);\n    assert_eq!(candidate(vec![1, 2, 3]), false);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    nums.iter().enumerate().all(|(i, &n)| i % 2 == 0 && n % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &n)| i % 2 == 0 && n % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &n)| i % 2 == 0 && n % 2 != 0)",
    "    nums.iter().enumerate().all(|(i, n)| i % 2 == 0 && n % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    let mut result = true;\n    for (i, num) in nums.iter().enumerate() {\n        if i % 2 == 1 && *num % 2 == 0 {\n            result = false;\n        }\n    }\n    result",
    "    nums.iter().enumerate().all(|(i, &n)| i % 2 == 0 && n % 2 != 0)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &n)| (i % 2 == 0) == (n % 2 == 0))",
    "    nums.iter().enumerate().all(|(i, n)| i % 2 == 0 && n % 2 != 0)",
    "    nums.iter().enumerate().all(|(i, &n)| i % 2 == 0 && n % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 != 0)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, x)| i % 2 == 0 && x % 2 == 1)",
    "    nums.iter().enumerate().all(|(i, &x)| i % 2 == 0 && x % 2 == 1)"
  ]
}
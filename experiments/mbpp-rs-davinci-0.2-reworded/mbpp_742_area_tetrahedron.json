{
  "name": "mbpp_742_area_tetrahedron",
  "language": "rs",
  "prompt": "/// Write a function to caluclate the area of a tetrahedron.\nfn area_tetrahedron(side: isize) -> f64 {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_742_area_tetrahedron.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = area_tetrahedron;\n    assert_eq!(candidate(3), 15.588457268119894);\n    assert_eq!(candidate(20), 692.8203230275509);\n    assert_eq!(candidate(10), 173.20508075688772);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0_f64;\n    area",
    "    let a = side as f64;\n    let s = a * a.sqrt();\n    let area = (s * s * s.sqrt()) / 12.0;\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s * s * s * 3.0_f64.sqrt() / 2.0",
    "    let s = side as f64;\n    let area = (s.powi(2) * (s.powi(2) - 2.0 * s + 2.0).sqrt()).sqrt();\n    area",
    "    let s = side as f64;\n    let a = (s.powi(2) * (3.0_f64.sqrt())) / 4.0;\n    a",
    "    let area = ((side as f64).powi(2) * (3.0_f64).sqrt() / 4.0).powi(2);\n    area",
    "    let area = (3.0 * (side as f64).powi(2) * (3.0_f64.sqrt() / 2.0)).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 12.0;\n    s.powi(2) * 3.0_f64.sqrt()",
    "    let a = side as f64;\n    let area = (a.powi(2) * (3.0_f64).sqrt() / 4.0).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let s = side as f64;\n    let area = (s.powi(2) * (3.0_f64.sqrt())) / 4.0;\n    area",
    "    let area = ((3.0f64).sqrt() / 4.0) * (side as f64).powi(2);\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt() / 4.0;\n    area",
    "    let area = (side as f64).powi(2) * (3.0_f64).sqrt();\n    area",
    "    let a = side as f64;\n    let s = a * 3.0_f64.sqrt() / 4.0;\n    (s * s * s * 3.0_f64.sqrt() / 2.0).round()"
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "rs",
  "prompt": "/// Write a function to sum all amicable numbers from 1 to a specified number.\nfn amicable_numbers_sum(limit: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = amicable_numbers_sum;\n    assert_eq!(candidate(999), 504);\n    assert_eq!(candidate(9999), 31626);\n    assert_eq!(candidate(99), 0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += i + a;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let divisors_sum = divisors_sum(i);\n        if divisors_sum > i && divisors_sum < limit && divisors_sum == divisors_sum(divisors_sum) {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let divisors_sum = divisors_sum(i);\n        if divisors_sum != i && divisors_sum < limit && divisors_sum == divisors_sum(divisors_sum) {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_proper_divisors(i);\n        let b = sum_proper_divisors(a);\n        if i == b && i != a {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let j = sum_of_divisors(i);\n        if i != j && sum_of_divisors(j) == i {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a != i && sum_of_divisors(a) == i {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += i + a;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if i != a && sum_of_divisors(a) == i {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        let b = sum_of_divisors(a);\n        if i == b && i != a {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += a + i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += i + a;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_proper_divisors(i);\n        if a > i && sum_of_proper_divisors(a) == i {\n            sum += i + a;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += i + a;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_proper_divisors(i);\n        if a > i && sum_proper_divisors(a) == i {\n            sum += i + a;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let sum_divisors = sum_divisors(i);\n        if sum_divisors != i && sum_divisors < limit && sum_divisors == sum_divisors(sum_divisors) {\n            sum += i;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_proper_divisors(i);\n        if a > i && sum_of_proper_divisors(a) == i {\n            sum += i + a;\n        }\n    }\n    sum",
    "    let mut sum = 0;\n    for i in 1..limit {\n        let a = sum_of_divisors(i);\n        if a > i && sum_of_divisors(a) == i {\n            sum += a + i;\n        }\n    }\n    sum"
  ]
}
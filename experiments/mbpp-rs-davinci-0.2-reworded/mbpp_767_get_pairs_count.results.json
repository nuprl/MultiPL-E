{
  "name": "mbpp_767_get_pairs_count",
  "language": "rs",
  "prompt": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if set.contains(&diff) {\n            count += 1;\n        }\n        set.insert(arr[i]);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp5qwdtzh4.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpbtlxo4ms.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpbtlxo4ms.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpvl_kicpc.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvl_kicpc.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        let complement = sum - i;\n        if map.contains_key(&complement) {\n            count += 1;\n        }\n        map.insert(i, i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp0dyda8tx.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0dyda8tx.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpbtlxo4ms.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpbtlxo4ms.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += 1;\n        } else {\n            map.insert(sum - arr[i], i);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpxrvcbi29.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += map[&arr[i]];\n        }\n        map.insert(sum - arr[i], map.get(&(sum - arr[i])).unwrap_or(&0) + 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpsk30khv2.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsk30khv2.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpzk5xt2nb.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpzk5xt2nb.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map.get(&diff).unwrap();\n        }\n        let val = map.entry(arr[i]).or_insert(0);\n        *val += 1;\n    }\n    return count;\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp4x8dlvfn.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp4x8dlvfn.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let count = map.entry(arr[i]).or_insert(0);\n        *count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpsr0bc_c5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsr0bc_c5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if hash_map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        hash_map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpovr2h_b5.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpovr2h_b5.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let val = map.entry(arr[i]).or_insert(0);\n        *val += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpbi1_v2fz.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpbi1_v2fz.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp3lpas_wj.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3lpas_wj.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let count = map.entry(arr[i]).or_insert(0);\n        *count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpsr0bc_c5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsr0bc_c5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpprb9q7ns.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpprb9q7ns.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpvl_kicpc.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvl_kicpc.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpyicyrfdl.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += 1;\n        } else {\n            map.insert(sum - arr[i], i);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpxrvcbi29.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpitdo7oap.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpceru3aq8.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpceru3aq8.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut hash_map = HashMap::new();\n    for i in arr {\n        if hash_map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        hash_map.insert(i, true);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0hsljoyd.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0isize;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpnunnekwk.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpx9ourk3s.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpx9ourk3s.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpx9ourk3s.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpx9ourk3s.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        let diff = sum - i;\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprubswa7k.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        let diff = sum - i;\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprubswa7k.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpzk5xt2nb.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpzk5xt2nb.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map.get(&diff).unwrap();\n        }\n        let count = map.entry(arr[i]).or_insert(0);\n        *count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpai1wyqyy.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpai1wyqyy.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let count = map.entry(arr[i]).or_insert(0);\n        *count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpsr0bc_c5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsr0bc_c5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in 0..arr.len() {\n        if set.contains(&(sum - arr[i])) {\n            count += 1;\n        }\n        set.insert(arr[i]);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp0b6iz1vy.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp0b6iz1vy.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        let diff = sum - i;\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprubswa7k.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut hash_map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if hash_map.contains_key(&diff) {\n            count += 1;\n        }\n        hash_map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpf7yex8bk.rs:4:24\n  |\n4 |     let mut hash_map = HashMap::new();\n  |                        ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpx9ourk3s.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpx9ourk3s.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpyicyrfdl.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut i: usize = 0;\n    let mut j: usize = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpbozcj6a2.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map.get(&(sum - i)).unwrap();\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map.get(&i).unwrap() + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpddrutyfm.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpddrutyfm.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        let entry = map.entry(i).or_insert(0);\n        *entry += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7vpcdn9t.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map.get(&diff).unwrap();\n        }\n        let val = map.entry(arr[i]).or_insert(0);\n        *val += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpewtv_5zk.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpewtv_5zk.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        let diff = sum - i;\n        if set.contains(&diff) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcbmc8erb.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmps1ni0pa8.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmps1ni0pa8.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpx9ourk3s.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpx9ourk3s.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map.get(&diff).unwrap();\n        }\n        let count = map.entry(arr[i]).or_insert(0);\n        *count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpai1wyqyy.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpai1wyqyy.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpvl_kicpc.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvl_kicpc.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut s = HashSet::new();\n\n    for i in arr {\n        let diff = sum - i;\n        if s.contains(&diff) {\n            count += 1;\n        }\n        s.insert(i);\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpx1g_2iom.rs:4:17\n  |\n4 |     let mut s = HashSet::new();\n  |                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += 1;\n        }\n        map.insert(sum - arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmphxqmx3h8.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmphxqmx3h8.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpakcvp8se.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpakcvp8se.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr.iter() {\n        if map.contains_key(i) {\n            let val = map.get(i).unwrap();\n            map.insert(*i, val + 1);\n        } else {\n            map.insert(*i, 1);\n        }\n    }\n    for i in arr.iter() {\n        let diff = sum - i;\n        if map.contains_key(&diff) {\n            count += map.get(&diff).unwrap();\n        }\n        if diff == *i {\n            count -= 1;\n        }\n    }\n    count / 2\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpvdvlfku7.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvdvlfku7.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map[&(sum - arr[i])];\n        }\n        let mut value = 1;\n        if map.contains_key(&arr[i]) {\n            value = map[&arr[i]] + 1;\n        }\n        map.insert(arr[i], value);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpms0mqf8g.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += 1;\n        }\n        map.insert(sum - arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmphxqmx3h8.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmphxqmx3h8.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpvl_kicpc.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpvl_kicpc.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpbtlxo4ms.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpbtlxo4ms.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        let diff = sum - i;\n        if set.contains(&diff) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcbmc8erb.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        let diff = sum - i;\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let entry = map.entry(i).or_insert(0);\n        *entry += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp7kbdqg21.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7kbdqg21.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp3lpas_wj.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3lpas_wj.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        let complement = sum - i;\n        if map.contains_key(&complement) {\n            count += map[&complement];\n        }\n        if map.contains_key(&i) {\n            map.insert(i, map[&i] + 1);\n        } else {\n            map.insert(i, 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpq259vt0i.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpq259vt0i.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let complement = sum - arr[i];\n        if map.contains_key(&complement) {\n            count += map.get(&complement).unwrap();\n        }\n        let value = map.entry(arr[i]).or_insert(0);\n        *value += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpukbzdclq.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpukbzdclq.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += map[&(sum - i)];\n        }\n        let entry = map.entry(i).or_insert(0);\n        *entry += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp_kmav8zw.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp_kmav8zw.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i as isize);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpzk5xt2nb.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpzk5xt2nb.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut hash_map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if hash_map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        hash_map.insert(arr[i], 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmps9oed4jm.rs:4:23\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmps9oed4jm.rs:4:47\n  |\n4 |     let mut hash_map: HashMap<isize, isize> = HashMap::new();\n  |                                               ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        if map.contains_key(&(sum - i)) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpejjani0q.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp7unjricy.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7unjricy.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpitdo7oap.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpc3l3gxx1.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpc3l3gxx1.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map.get(&(sum - arr[i])).unwrap();\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map.get(&arr[i]).unwrap() + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp6ekn3_um.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6ekn3_um.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += 1;\n        } else {\n            map.insert(sum - arr[i], i);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpxrvcbi29.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        let diff = sum - i;\n        if set.contains(&diff) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcbmc8erb.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp7unjricy.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7unjricy.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += 1;\n        } else {\n            map.insert(sum - arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0vq8cuu4.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr.iter() {\n        let diff = sum - i;\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpgjq0nj3y.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map.get(&diff).unwrap();\n        }\n        let val = map.entry(arr[i]).or_insert(0);\n        *val += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpewtv_5zk.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpewtv_5zk.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut i = 0;\n    let mut j = arr.len() - 1;\n    while i < j {\n        if arr[i] + arr[j] == sum {\n            count += 1;\n            i += 1;\n            j -= 1;\n        } else if arr[i] + arr[j] < sum {\n            i += 1;\n        } else {\n            j -= 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `6`', /tmp/tmpc9qv77li.rs:22:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let val = map.entry(arr[i]).or_insert(0);\n        *val += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpbi1_v2fz.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpbi1_v2fz.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if set.contains(&diff) {\n            count += 1;\n        }\n        set.insert(arr[i]);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpqq3mc8tl.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqq3mc8tl.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let count = map.entry(arr[i]).or_insert(0);\n        *count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpsr0bc_c5.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpsr0bc_c5.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpbtlxo4ms.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpbtlxo4ms.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut set: HashSet<isize> = HashSet::new();\n    for i in 0..arr.len() {\n        if set.contains(&(sum - arr[i])) {\n            count += 1;\n        }\n        set.insert(arr[i]);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp0b6iz1vy.rs:4:18\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp0b6iz1vy.rs:4:35\n  |\n4 |     let mut set: HashSet<isize> = HashSet::new();\n  |                                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmprhgmwvet.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in arr {\n        let complement = sum - i;\n        if map.contains_key(&complement) {\n            count += 1;\n        }\n        map.insert(i, 1);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpyoj88jmb.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpprb9q7ns.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpprb9q7ns.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        let diff = sum - i;\n        if set.contains(&diff) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcbmc8erb.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i + 1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut set = HashSet::new();\n    for i in arr {\n        if set.contains(&(sum - i)) {\n            count += 1;\n        }\n        set.insert(i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp04c19vsm.rs:4:19\n  |\n4 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&(sum - arr[i])) {\n            count += map.get(&(sum - arr[i])).unwrap();\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map.get(&arr[i]).unwrap() + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp6ekn3_um.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp6ekn3_um.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpitdo7oap.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122955,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `10`,\n right: `6`', /tmp/tmpfym5sk_e.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        if map.contains_key(&arr[i]) {\n            map.insert(arr[i], map[&arr[i]] + 1);\n        } else {\n            map.insert(arr[i], 1);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp7unjricy.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp7unjricy.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    for i in 0..arr.len() {\n        for j in i+1..arr.len() {\n            if arr[i] + arr[j] == sum {\n                count += 1;\n            }\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map = HashMap::new();\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += 1;\n        }\n        map.insert(arr[i], i);\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp0akdnw79.rs:4:19\n  |\n4 |     let mut map = HashMap::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count: isize = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n\n    for i in 0..arr.len() {\n        let diff = sum - arr[i];\n        if map.contains_key(&diff) {\n            count += map[&diff];\n        }\n        let count = map.entry(arr[i]).or_insert(0);\n        *count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmp38e4j95k.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmp38e4j95k.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a vector of numbers and the sum,\nfn get_pairs_count(arr: Vec<isize>, sum: isize) -> isize {\n    let mut count = 0;\n    let mut map: HashMap<isize, isize> = HashMap::new();\n    for i in 0..arr.len() {\n        if map.contains_key(&arr[i]) {\n            count += 1;\n        } else {\n            map.insert(sum - arr[i], arr[i]);\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = get_pairs_count;\n    assert_eq!(candidate(vec![1, 1, 1, 1], 2), 6);\n    assert_eq!(candidate(vec![1, 5, 7, -1, 5], 6), 3);\n    assert_eq!(candidate(vec![1, -2, 3], 1), 1);\n    assert_eq!(candidate(vec![-1, -2, 3], -3), 1);\n}\n",
      "timestamp": 1666122954,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashMap` in this scope\n --> /tmp/tmpuaii049l.rs:4:18\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                  ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashMap`\n --> /tmp/tmpuaii049l.rs:4:42\n  |\n4 |     let mut map: HashMap<isize, isize> = HashMap::new();\n  |                                          ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
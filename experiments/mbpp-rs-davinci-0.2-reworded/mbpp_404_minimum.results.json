{
  "name": "mbpp_404_minimum",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_404_minimum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        return a;\n    }\n    b\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        return a;\n    }\n    return b;\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        return a;\n    }\n    b\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the minimum of two numbers.\nfn minimum(a: isize, b: isize) -> isize {\n    if a < b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = minimum;\n    assert_eq!(candidate(1, 2), 1);\n    assert_eq!(candidate(-5, -4), -5);\n    assert_eq!(candidate(0, 0), 0);\n}\n",
      "timestamp": 1665509793,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_267_square_Sum",
  "language": "rs",
  "prompt": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmp9d66mtbd.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_nj2fpox.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= n {\n        sum += i * i;\n        i += 2;\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpwbr9v9w8.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpto66sbd3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmp9d66mtbd.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp9i7y_eaz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmp9d66mtbd.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp93g4pkfs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyun0498s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmp357n1fq2.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_nj2fpox.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(2);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpuoko7hk6.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpp2km4apc.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i.pow(2);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpx1ddtl77.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmp9d66mtbd.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpto66sbd3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum: isize = 0;\n    let mut i: isize = 1;\n    while i <= n {\n        sum += i * i;\n        i += 2;\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpzwnq5pxe.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpa_qam7xu.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum: isize = 0;\n    for i in 0..n {\n        sum += (2 * i + 1).pow(2);\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i.pow(2);\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpuoko7hk6.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpto66sbd3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= n {\n        sum += i * i;\n        i += 2;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpxt3zpb71.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp9i7y_eaz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp9i7y_eaz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= n {\n        sum += i * i;\n        i += 2;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpxt3zpb71.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyun0498s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp9i7y_eaz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyun0498s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= n {\n        sum += i * i;\n        i += 2;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpxt3zpb71.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp9i7y_eaz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpto66sbd3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 0..n {\n        sum += (2 * i + 1).pow(2);\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 == 1 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpr6xzs___.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyun0498s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_nj2fpox.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpto66sbd3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyun0498s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyun0498s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpbha7q2bq.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmp9d66mtbd.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    let mut i = 1;\n    while i <= n {\n        sum += i * i;\n        i += 2;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpxt3zpb71.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_nj2fpox.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyun0498s.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    return sum;\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp9i7y_eaz.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpgf7346kh.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        sum += i*i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `5`,\n right: `10`', /tmp/tmpn7yicjoy.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 == 0 {\n            continue;\n        }\n        sum += i * i;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpyzluo0fh.rs:15:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp93g4pkfs.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpto66sbd3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmp_ln1026f.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n+1 {\n        if i % 2 != 0 {\n            sum += i*i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpto66sbd3.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n {\n        if i % 2 == 1 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpp2km4apc.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfn square_Sum(n: isize) -> isize {\n    let mut sum = 0;\n    for i in 1..n + 1 {\n        if i % 2 != 0 {\n            sum += i * i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = square_Sum;\n    assert_eq!(candidate(2), 10);\n    assert_eq!(candidate(3), 35);\n    assert_eq!(candidate(4), 84);\n}\n",
      "timestamp": 1665510368,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `10`', /tmp/tmpie8_yo_e.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_463_max_subarray_product",
  "language": "rs",
  "prompt": "/// Write a function to find the maximum product subvector of the given vector.\nfn max_subarray_product(arr: Vec<isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = max_subarray_product;\n    assert_eq!(candidate(vec![1, -2, -3, 0, 7, -8, -2]), 112);\n    assert_eq!(candidate(vec![6, -3, -10, 0, 2]), 180);\n    assert_eq!(candidate(vec![-2, -40, 0, -2, -3]), 80);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in &arr {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        0\n    } else {\n        max_so_far\n    }",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in &arr {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for &x in arr.iter() {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for x in arr {\n        if x > 0 {\n            max_ending_here = max_ending_here * x;\n            min_ending_here = min(min_ending_here * x, 1);\n        } else if x == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * x, 1);\n            min_ending_here = temp * x;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut res = arr[0];\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n\n    max_so_far",
    "    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = temp * arr[i];\n        }\n\n        if max_ending_here > max_so_far {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_so_far = 1;\n    let mut min_so_far = 1;\n    let mut max_ending_here = 1;\n    let mut max_product = 1;\n\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_so_far = min(min_so_far * arr[i], 1);\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_so_far = 1;\n        } else {\n            let tmp = max_ending_here;\n            max_ending_here = max(min_so_far * arr[i], 1);\n            min_so_far = tmp * arr[i];\n        }\n\n        if max_ending_here > max_product {\n            max_product = max_ending_here;\n        }\n    }\n\n    max_product",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n    let mut flag = 0;\n    for i in 0..arr.len() {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i];\n            min_ending_here = min(min_ending_here * arr[i], 1);\n            flag = 1;\n        } else if arr[i] == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * arr[i], 1);\n            min_ending_here = temp * arr[i];\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0;\n    }\n    max_so_far",
    "    let mut max_ending_here = 1;\n    let mut min_ending_here = 1;\n    let mut max_so_far = 1;\n\n    for i in arr {\n        if i > 0 {\n            max_ending_here = max_ending_here * i;\n            min_ending_here = min(min_ending_here * i, 1);\n        } else if i == 0 {\n            max_ending_here = 1;\n            min_ending_here = 1;\n        } else {\n            let temp = max_ending_here;\n            max_ending_here = max(min_ending_here * i, 1);\n            min_ending_here = temp * i;\n        }\n\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here;\n        }\n    }\n\n    max_so_far"
  ]
}
{
  "name": "mbpp_309_maximum",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_309_maximum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        return a;\n    }\n    return b;\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        return a;\n    }\n    b\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1666123235,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        return a;\n    }\n    return b;\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the maximum of two numbers.\nfn maximum(a: isize, b: isize) -> isize {\n    if a > b {\n        a\n    } else {\n        b\n    }\n}\n\nfn main() {\n    let candidate = maximum;\n    assert_eq!(candidate(5, 10), 10);\n    assert_eq!(candidate(-1, -2), -1);\n    assert_eq!(candidate(9, 7), 9);\n}\n",
      "timestamp": 1665510485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
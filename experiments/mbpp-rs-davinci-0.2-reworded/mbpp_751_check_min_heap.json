{
  "name": "mbpp_751_check_min_heap",
  "language": "rs",
  "prompt": "/// Write a function to check if the given vector represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-vector-represents-a-binary-heap/\nfn check_min_heap(arr: Vec<isize>) -> bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = check_min_heap;\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 6]), true);\n    assert_eq!(candidate(vec![2, 3, 4, 5, 10, 15]), true);\n    assert_eq!(candidate(vec![2, 10, 4, 5, 3, 15]), false);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut n = arr.len();\n    while i < n {\n        j = 2 * i + 1;\n        k = 2 * i + 2;\n        if j < n && arr[i] > arr[j] {\n            return false;\n        }\n        if k < n && arr[i] > arr[k] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let mut n = arr.len();\n    while i < n {\n        if j < n && arr[i] > arr[j] {\n            return false;\n        }\n        if k < n && arr[i] > arr[k] {\n            return false;\n        }\n        i += 1;\n        j += 1;\n        k += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[i] > arr[left] {\n            return false;\n        }\n        if right < n && arr[i] > arr[right] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[i] > arr[left] {\n            return false;\n        }\n        if right < n && arr[i] > arr[right] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[left] < arr[i] {\n            return false;\n        }\n        if right < n && arr[right] < arr[i] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let len = arr.len();\n    while i < len {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < len && arr[left] < arr[i] {\n            return false;\n        }\n        if right < len && arr[right] < arr[i] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[i] > arr[left] {\n            return false;\n        }\n        if right < n && arr[i] > arr[right] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[left] < arr[i] {\n            return false;\n        }\n        if right < n && arr[right] < arr[i] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[left] < arr[i] {\n            return false;\n        }\n        if right < n && arr[right] < arr[i] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[i] > arr[left] {\n            return false;\n        }\n        if right < n && arr[i] > arr[right] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[left] < arr[i] {\n            return false;\n        }\n        if right < n && arr[right] < arr[i] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[i] > arr[left] {\n            return false;\n        }\n        if right < n && arr[i] > arr[right] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[i] > arr[left] {\n            return false;\n        }\n        if right < n && arr[i] > arr[right] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut aa = 0;\n    let mut ab = 0;\n    let mut ac = 0;\n    let mut ad = 0;\n    let mut ae = 0;\n    let mut af = 0;\n    let mut ag = 0;\n    let mut ah = 0;\n    let mut ai = 0;\n    let mut aj = 0;\n    let mut ak = 0;\n    let mut al = 0;\n    let mut am = 0;\n    let mut an = 0;\n    let mut ao = 0;\n    let mut ap = 0;\n    let mut aq = 0;\n    let mut ar = 0;\n    let mut as_ = 0;\n    let mut at = 0;\n    let mut au = 0;\n    let mut av = 0;\n    let mut aw = 0;\n    let mut ax = 0;\n    let mut ay = 0;\n    let mut az = 0;\n    let mut ba = 0;\n    let mut bb = 0;\n    let mut bc = 0;\n    let mut bd = 0;\n    let mut be = 0;\n    let mut bf = 0;\n    let mut bg = 0;\n    let mut bh = 0;\n    let mut bi = 0;\n    let mut bj = 0;\n    let mut bk = 0;\n    let mut bl = 0;\n    let mut bm = 0;\n    let mut bn = 0;\n    let mut bo = 0;\n    let mut bp = 0;\n    let mut bq = 0;\n    let mut br =",
    "    let mut i = 0;\n    while i < arr.len() {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < arr.len() && arr[left] < arr[i] {\n            return false;\n        }\n        if right < arr.len() && arr[right] < arr[i] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let mut flag = true;\n    while i < arr.len() {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < arr.len() && arr[i] > arr[left] {\n            flag = false;\n            break;\n        }\n        if right < arr.len() && arr[i] > arr[right] {\n            flag = false;\n            break;\n        }\n        i += 1;\n    }\n    flag",
    "    let mut i = 0;\n    let mut j = 1;\n    let mut k = 2;\n    let len = arr.len();\n    while k < len {\n        if arr[i] > arr[j] || arr[i] > arr[k] {\n            return false;\n        }\n        i += 1;\n        j += 1;\n        k += 1;\n    }\n    if j < len && arr[i] > arr[j] {\n        return false;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[left] < arr[i] {\n            return false;\n        }\n        if right < n && arr[right] < arr[i] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        if 2 * i + 1 < n && arr[i] > arr[2 * i + 1] {\n            return false;\n        }\n        if 2 * i + 2 < n && arr[i] > arr[2 * i + 2] {\n            return false;\n        }\n        i += 1;\n    }\n    true",
    "    let mut i = 0;\n    let n = arr.len();\n    while i < n {\n        let left = 2 * i + 1;\n        let right = 2 * i + 2;\n        if left < n && arr[i] > arr[left] {\n            return false;\n        }\n        if right < n && arr[i] > arr[right] {\n            return false;\n        }\n        i += 1;\n    }\n    return true;"
  ]
}
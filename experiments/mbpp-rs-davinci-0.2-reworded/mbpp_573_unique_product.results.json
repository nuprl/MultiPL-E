{
  "name": "mbpp_573_unique_product",
  "language": "rs",
  "prompt": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data = Vec::new();\n    for item in list_data {\n        if !unique_data.contains(&item) {\n            unique_data.push(item);\n        }\n    }\n    let mut product = 1;\n    for item in unique_data {\n        product *= item;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.insert(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpzwcv8xy9.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.push(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    for i in list_data {\n        if product % i != 0 {\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `6000`,\n right: `720000000`', /tmp/tmp5wa4o25i.rs:14:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmpj_6ryips.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    for i in list_data {\n        if list_data.contains(&i) {\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `list_data`\n   --> /tmp/tmpmvt1pgei.rs:5:12\n    |\n2   | fn unique_product(list_data: Vec<isize>) -> isize {\n    |                   --------- move occurs because `list_data` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut product = 1;\n4   |     for i in list_data {\n    |              --------- `list_data` moved due to this implicit call to `.into_iter()`\n5   |         if list_data.contains(&i) {\n    |            ^^^^^^^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `list_data`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for i in &list_data {\n    |              +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmpj_6ryips.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.push(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut result = 1;\n    let mut unique_data = HashSet::new();\n\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.insert(i);\n            result *= i;\n        }\n    }\n\n    result\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp1x2i1enf.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n        }\n    }\n    for i in unique_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.insert(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpzwcv8xy9.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for num in list_data {\n        if !unique_numbers.contains(&num) {\n            unique_numbers.push(num);\n            product *= num;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for num in list_data {\n        if !unique_numbers.contains(&num) {\n            unique_numbers.insert(num);\n            product *= num;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpl106wd5y.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    for i in list_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `576000000000`,\n right: `720000000`', /tmp/tmpgajwhfrz.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.push(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: HashSet<isize> = HashSet::new();\n\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp6xyj9zby.rs:4:29\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp6xyj9zby.rs:4:46\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.push(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in 0..list_data.len() {\n        if !unique_numbers.contains(&list_data[i]) {\n            unique_numbers.push(list_data[i]);\n        }\n    }\n    for i in 0..unique_numbers.len() {\n        product *= unique_numbers[i];\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product: isize = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data: Vec<isize> = Vec::new();\n    let mut product: isize = 1;\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.push(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    for item in list_data {\n        if !unique_list.contains(&item) {\n            unique_list.push(item);\n        }\n    }\n    let mut product = 1;\n    for item in unique_list {\n        product *= item;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n\n    for num in list_data {\n        if !unique_data.contains(&num) {\n            unique_data.insert(num);\n            product *= num;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpeirhw9np.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcufrqg6c.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n\n    for item in list_data {\n        if !unique_data.contains(&item) {\n            unique_data.push(item);\n            product *= item;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: HashSet<isize> = HashSet::new();\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.insert(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpxjul551m.rs:4:29\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpxjul551m.rs:4:46\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data = Vec::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.push(data);\n        }\n    }\n    let mut product = 1;\n    for data in unique_data {\n        product *= data;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product: isize = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut set = HashSet::new();\n    for item in list_data {\n        set.insert(item);\n    }\n    let mut product = 1;\n    for item in set {\n        product *= item;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpzf9sjbfe.rs:3:19\n  |\n3 |     let mut set = HashSet::new();\n  |                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    for i in list_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `576000000000`,\n right: `720000000`', /tmp/tmpgajwhfrz.rs:12:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.push(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers = HashSet::new();\n    let mut product = 1;\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmprynbzpgk.rs:3:30\n  |\n3 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        unique_numbers.insert(i);\n    }\n    let mut product = 1;\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpkl3z01aa.rs:3:30\n  |\n3 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            product *= i;\n            unique_numbers.insert(i);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpw_u__w5h.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            product *= item;\n            unique_numbers.insert(item);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp5td5tnkh.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.insert(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3illvtpq.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n        }\n    }\n    for i in unique_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        unique_numbers.insert(i);\n    }\n    let mut product = 1;\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpkl3z01aa.rs:3:30\n  |\n3 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for item in list_data {\n        if !unique_list.contains(&item) {\n            unique_list.push(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for num in list_data {\n        if unique_numbers.contains(&num) {\n            continue;\n        }\n        unique_numbers.insert(num);\n        product *= num;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpxk7ylj9r.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product: isize = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in 0..list_data.len() {\n        if !unique_list.contains(&list_data[i]) {\n            unique_list.push(list_data[i]);\n        }\n    }\n    for i in 0..unique_list.len() {\n        product *= unique_list[i];\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcufrqg6c.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    for item in list_data {\n        if !list_data.contains(&item) {\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0382]: borrow of moved value: `list_data`\n   --> /tmp/tmpr7gsre8q.rs:5:13\n    |\n2   | fn unique_product(list_data: Vec<isize>) -> isize {\n    |                   --------- move occurs because `list_data` has type `Vec<isize>`, which does not implement the `Copy` trait\n3   |     let mut product = 1;\n4   |     for item in list_data {\n    |                 --------- `list_data` moved due to this implicit call to `.into_iter()`\n5   |         if !list_data.contains(&item) {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ value borrowed here after move\n    |\nnote: this function takes ownership of the receiver `self`, which moves `list_data`\n    = note: borrow occurs due to deref coercion to `[isize]`\nhelp: consider iterating over a slice of the `Vec<isize>`'s content to avoid moving into the `for` loop\n    |\n4   |     for item in &list_data {\n    |                 +\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0382`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqytoswrz.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.insert(data);\n            product *= data;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpmni6f8yu.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        unique_numbers.insert(i);\n    }\n    let mut product = 1;\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpkl3z01aa.rs:3:30\n  |\n3 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            product *= i;\n            unique_numbers.insert(i);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpw_u__w5h.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        unique_numbers.insert(i);\n    }\n    let mut product = 1;\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpkl3z01aa.rs:3:30\n  |\n3 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n\n    for item in list_data {\n        if !unique_data.contains(&item) {\n            unique_data.push(item);\n            product *= item;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: HashSet<isize> = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product = product * i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpvr56v3yt.rs:4:29\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpvr56v3yt.rs:4:46\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    unique_list.iter().product()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.insert(item);\n            product *= item;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpdwbe3h9g.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in list_data.iter() {\n        if !unique_list.contains(i) {\n            unique_list.push(*i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list.iter() {\n        product *= *i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for item in list_data {\n        if !unique_data.contains(&item) {\n            unique_data.push(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcufrqg6c.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.insert(item);\n            product *= item;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpdwbe3h9g.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data: Vec<isize> = Vec::new();\n    let mut product: isize = 1;\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            product *= i;\n            unique_numbers.insert(i);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpw_u__w5h.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for num in list_data {\n        if !unique_numbers.contains(&num) {\n            unique_numbers.insert(num);\n            product *= num;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpl106wd5y.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            product *= i;\n            unique_numbers.insert(i);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpw_u__w5h.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for data in list_data {\n        if !unique_list.contains(&data) {\n            unique_list.push(data);\n        }\n    }\n    unique_list.iter().product()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for num in list_data {\n        if !unique_numbers.contains(&num) {\n            product *= num;\n            unique_numbers.insert(num);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqfwrwtmg.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmphgsytr21.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for data in list_data {\n        if !unique_list.contains(&data) {\n            unique_list.push(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            product *= i;\n            unique_data.insert(i);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpiz8ap96m.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpcufrqg6c.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n        }\n    }\n    for i in unique_numbers {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data = HashSet::new();\n    for i in list_data {\n        unique_data.insert(i);\n    }\n    let mut product = 1;\n    for i in unique_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpmwp03m4w.rs:3:27\n  |\n3 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.insert(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3illvtpq.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmpj_6ryips.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for number in list_data {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.insert(number);\n            product *= number;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmph0_zaxcb.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.insert(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpzwcv8xy9.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for num in list_data {\n        if !unique_numbers.contains(&num) {\n            unique_numbers.push(num);\n        }\n    }\n    let mut product = 1;\n    for num in unique_numbers {\n        product *= num;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data = HashSet::new();\n    for data in list_data {\n        unique_data.insert(data);\n    }\n    let mut product = 1;\n    for data in unique_data {\n        product *= data;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmptj5xi7v_.rs:3:27\n  |\n3 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    unique_list.iter().product()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    unimplemented!()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'not implemented', /tmp/tmp0ks8wkg6.rs:3:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n        }\n    }\n    for i in unique_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for item in list_data {\n        if !unique_data.contains(&item) {\n            unique_data.push(item);\n        }\n    }\n    for item in unique_data {\n        product *= item;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for item in list_data {\n        if !unique_numbers.contains(&item) {\n            unique_numbers.insert(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpzwcv8xy9.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    let mut product: isize = 1;\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = Vec::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.push(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut result = 1;\n    let mut unique_data = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            result *= i;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqytoswrz.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510557,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_numbers = HashSet::new();\n    for item in list_data {\n        unique_numbers.insert(item);\n    }\n    unique_numbers.iter().product()\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpfbkj_iqg.rs:3:30\n  |\n3 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list: Vec<isize> = Vec::new();\n    for item in list_data {\n        if !unique_list.contains(&item) {\n            unique_list.push(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            product *= i;\n            unique_numbers.insert(i);\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpw_u__w5h.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_data {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.insert(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3illvtpq.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for num in list_data {\n        if !unique_numbers.contains(&num) {\n            unique_numbers.insert(num);\n            product *= num;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpl106wd5y.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for item in list_data {\n        if !unique_list.contains(&item) {\n            unique_list.push(item);\n        }\n    }\n    let mut product = 1;\n    for item in unique_list {\n        product *= item;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list = Vec::new();\n    for item in list_data {\n        if !unique_list.contains(&item) {\n            unique_list.push(item);\n        }\n    }\n    let mut product = 1;\n    for item in unique_list {\n        product *= item;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for data in list_data {\n        if !unique_data.contains(&data) {\n            unique_data.insert(data);\n            product *= data;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmp3illvtpq.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product: isize = 1;\n    let mut unique_numbers: HashSet<isize> = HashSet::new();\n\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpu_fcjuqp.rs:4:29\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpu_fcjuqp.rs:4:46\n  |\n4 |     let mut unique_numbers: HashSet<isize> = HashSet::new();\n  |                                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut unique_list: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_list.contains(&i) {\n            unique_list.push(i);\n        }\n    }\n    let mut product = 1;\n    for i in unique_list {\n        product *= i;\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for item in list_data {\n        if !unique_data.contains(&item) {\n            unique_data.insert(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpzz8sjvd7.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data: Vec<isize> = Vec::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.push(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_data = HashSet::new();\n    for i in list_data {\n        if !unique_data.contains(&i) {\n            unique_data.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpqytoswrz.rs:4:27\n  |\n4 |     let mut unique_data = HashSet::new();\n  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_list = Vec::new();\n    for item in list_data {\n        if !unique_list.contains(&item) {\n            unique_list.push(item);\n            product *= item;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to calculate the product of the unique numbers in a given vector.\nfn unique_product(list_data: Vec<isize>) -> isize {\n    let mut product = 1;\n    let mut unique_numbers = HashSet::new();\n    for i in list_data {\n        if !unique_numbers.contains(&i) {\n            unique_numbers.insert(i);\n            product *= i;\n        }\n    }\n    product\n}\n\nfn main() {\n    let candidate = unique_product;\n    assert_eq!(candidate(vec![10, 20, 30, 40, 20, 50, 60, 40]), 720000000);\n    assert_eq!(candidate(vec![1, 2, 3, 1]), 6);\n    assert_eq!(candidate(vec![7, 8, 9, 0, 1, 1]), 0);\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n --> /tmp/tmpgulfti1d.rs:4:30\n  |\n4 |     let mut unique_numbers = HashSet::new();\n  |                              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0433`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
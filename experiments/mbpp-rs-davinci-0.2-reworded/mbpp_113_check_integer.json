{
  "name": "mbpp_113_check_integer",
  "language": "rs",
  "prompt": "/// Write a function to check if a string represents an integer or not.\nfn check_integer(text: String) -> bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = check_integer;\n    assert_eq!(candidate(String::from(\"python\")), false);\n    assert_eq!(candidate(String::from(\"1\")), true);\n    assert_eq!(candidate(String::from(\"12345\")), true);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    while let Some(c) = first {\n        if !c.is_digit(10) {\n            return false;\n        }\n        first = chars.next();\n    }\n    true",
    "    text.parse::<i32>().is_ok()",
    "    text.parse::<i32>().is_ok()",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    if chars.next().unwrap() == '-' {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = true;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if c == '-' {\n            if first {\n                first = false;\n            } else {\n                return false;\n            }\n        } else if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            return false;\n        }\n    }\n    has_digit",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n    let mut is_positive = false;\n    let mut is_zero = false;\n    let mut is_first_digit = true;\n\n    while let Some(c) = chars.next() {\n        match c {\n            '0' => {\n                if is_first_digit {\n                    is_zero = true;\n                    is_first_digit = false;\n                } else {\n                    is_integer = false;\n                }\n            }\n            '1'..='9' => {\n                is_first_digit = false;\n            }\n            '-' => {\n                if is_first_digit {\n                    is_negative = true;\n                    is_first_digit = false;\n                } else {\n                    is_integer = false;\n                }\n            }\n            '+' => {\n                if is_first_digit {\n                    is_positive = true;\n                    is_first_digit = false;\n                } else {\n                    is_integer = false;\n                }\n            }\n            _ => {\n                is_integer = false;\n            }\n        }\n    }\n\n    if is_zero && (is_negative || is_positive) {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    match first {\n        Some(c) if c.is_digit(10) => {\n            chars.all(|c| c.is_digit(10))\n        },\n        _ => false,\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n\n    if first == Some('-') {\n        first = chars.next();\n    }\n\n    if first == None {\n        return false;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n\n    return true;",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' || c == '+' {\n            has_sign = true;\n        } else if !c.is_digit(10) {\n            return false;\n        } else {\n            has_digit = true;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n        has_digit = true;\n    }\n\n    has_sign || has_digit",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if chars.next() == Some('-') {\n        is_negative = true;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    if is_negative && text.len() == 1 {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    if chars.next().unwrap() == '-' {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = true;\n    let mut has_sign = false;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if first {\n            if c == '-' || c == '+' {\n                has_sign = true;\n            } else if c.is_digit(10) {\n                has_digit = true;\n            } else {\n                return false;\n            }\n            first = false;\n        } else {\n            if !c.is_digit(10) {\n                return false;\n            }\n            has_digit = true;\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first_char = true;\n    while let Some(c) = chars.next() {\n        if is_first_char {\n            if c == '+' || c == '-' {\n                is_first_char = false;\n            } else if !c.is_digit(10) {\n                is_integer = false;\n                break;\n            }\n        } else if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if c == '+' || c == '-' {\n            if has_sign || has_digit {\n                return false;\n            }\n            has_sign = true;\n        } else if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            return false;\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if c < '0' || c > '9' {\n            return false;\n        }\n    }\n    true",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = true;\n    let mut has_sign = false;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if c == ' ' {\n            continue;\n        }\n        if first {\n            if c == '+' || c == '-' {\n                has_sign = true;\n            } else if c.is_digit(10) {\n                has_digit = true;\n            } else {\n                return false;\n            }\n            first = false;\n        } else {\n            if c.is_digit(10) {\n                has_digit = true;\n            } else {\n                return false;\n            }\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    let mut has_digit = false;\n    for c in chars {\n        if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            return false;\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if c == '-' || c == '+' {\n            if has_sign || has_digit {\n                return false;\n            }\n            has_sign = true;\n        } else if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            return false;\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first.is_none() {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n    let mut is_positive = false;\n    let mut is_first = true;\n\n    while let Some(c) = chars.next() {\n        if is_first {\n            if c == '-' {\n                is_negative = true;\n                is_first = false;\n            } else if c == '+' {\n                is_positive = true;\n                is_first = false;\n            } else if c.is_digit(10) {\n                is_first = false;\n            } else {\n                is_integer = false;\n                break;\n            }\n        } else {\n            if !c.is_digit(10) {\n                is_integer = false;\n                break;\n            }\n        }\n    }\n\n    if is_negative && is_positive {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut is_integer = false;\n    let mut is_negative = false;\n    let mut is_positive = false;\n    let mut is_zero = false;\n    let mut is_digit = false;\n    let mut is_first_digit = false;\n    let mut is_second_digit = false;\n    let mut is_third_digit = false;\n    let mut is_fourth_digit = false;\n    let mut is_fifth_digit = false;\n    let mut is_sixth_digit = false;\n    let mut is_seventh_digit = false;\n    let mut is_eighth_digit = false;\n    let mut is_ninth_digit = false;\n    let mut is_tenth_digit = false;\n    let mut is_eleventh_digit = false;\n    let mut is_twelfth_digit = false;\n    let mut is_thirteenth_digit = false;\n    let mut is_fourteenth_digit = false;\n    let mut is_fifteenth_digit = false;\n    let mut is_sixteenth_digit = false;\n    let mut is_seventeenth_digit = false;\n    let mut is_eighteenth_digit = false;\n    let mut is_nineteenth_digit = false;\n    let mut is_twentieth_digit = false;\n    let mut is_twenty_first_digit = false;\n    let mut is_twenty_second_digit = false;\n    let mut is_twenty_third_digit = false;\n    let mut is_twenty_fourth_digit = false;\n    let mut is_twenty_fifth_digit = false;\n    let mut is_twenty_sixth_digit = false;\n    let mut is_twenty_seventh_digit = false;\n    let mut is_twenty_eighth_digit = false;\n    let mut is_twenty_ninth_digit = false;\n    let mut is_thirtieth_digit = false;\n    let mut is_thirty_first_digit = false;\n    let mut is_thirty_second_digit = false;\n    let mut is_thirty_third",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    match first_char {\n        Some(c) => {\n            if c.is_digit(10) {\n                for c in chars {\n                    if !c.is_digit(10) {\n                        return false;\n                    }\n                }\n                true\n            } else {\n                false\n            }\n        }\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first_char = true;\n    while let Some(c) = chars.next() {\n        if is_first_char {\n            if c == '-' || c == '+' {\n                is_first_char = false;\n                continue;\n            }\n        }\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first_char = true;\n    let mut is_negative = false;\n    while let Some(c) = chars.next() {\n        if is_first_char {\n            if c == '-' {\n                is_negative = true;\n            } else if !c.is_numeric() {\n                is_integer = false;\n                break;\n            }\n            is_first_char = false;\n        } else {\n            if !c.is_numeric() {\n                is_integer = false;\n                break;\n            }\n        }\n    }\n    if is_integer && is_negative {\n        is_integer = false;\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    if chars.next().unwrap() == '-' {\n        chars.next();\n    }\n    chars.all(|c| c.is_numeric())",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    if first.is_none() {\n        return false;\n    }\n    let first = first.unwrap();\n    if first == '-' {\n        if chars.next().is_none() {\n            return false;\n        }\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    let mut is_integer = true;\n    match first {\n        Some(c) => {\n            if c == '-' {\n                is_integer = false;\n            }\n            for c in chars {\n                if !c.is_digit(10) {\n                    is_integer = false;\n                }\n            }\n        }\n        None => {\n            is_integer = false;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    if first.is_none() {\n        return false;\n    }\n    let first = first.unwrap();\n    if first == '-' || first == '+' {\n        let second = chars.next();\n        if second.is_none() {\n            return false;\n        }\n        let second = second.unwrap();\n        if second < '0' || second > '9' {\n            return false;\n        }\n    } else if first < '0' || first > '9' {\n        return false;\n    }\n    for c in chars {\n        if c < '0' || c > '9' {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    let mut is_integer = true;\n\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n\n    if first_char == Some('0') {\n        first_char = chars.next();\n    }\n\n    while let Some(c) = first_char {\n        if c < '0' || c > '9' {\n            is_integer = false;\n            break;\n        }\n        first_char = chars.next();\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first = true;\n\n    while let Some(c) = chars.next() {\n        if is_first {\n            if c == '-' {\n                is_first = false;\n                continue;\n            }\n        }\n\n        if c.is_digit(10) {\n            is_first = false;\n            continue;\n        } else {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' {\n                match chars.next() {\n                    Some(c) => {\n                        if c.is_digit(10) {\n                            for c in chars {\n                                if !c.is_digit(10) {\n                                    return false;\n                                }\n                            }\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                    None => return false,\n                }\n            } else {\n                if c.is_digit(10) {\n                    for c in chars {\n                        if !c.is_digit(10) {\n                            return false;\n                        }\n                    }\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        }\n        None => return false,\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    if is_integer && is_negative {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer && !is_negative",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' {\n                match chars.next() {\n                    Some(c) => {\n                        if c.is_digit(10) {\n                            return true;\n                        }\n                    }\n                    None => return false,\n                }\n            } else if c.is_digit(10) {\n                return true;\n            }\n        }\n        None => return false,\n    }\n    return false;",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n    let mut has_dot = false;\n    let mut has_exp = false;\n    let mut has_exp_sign = false;\n    let mut has_exp_digit = false;\n\n    while let Some(c) = chars.next() {\n        match c {\n            '+' | '-' => {\n                if has_sign || has_digit || has_exp_digit {\n                    return false;\n                }\n                has_sign = true;\n            }\n            '.' => {\n                if has_dot || has_exp {\n                    return false;\n                }\n                has_dot = true;\n            }\n            'e' | 'E' => {\n                if has_exp {\n                    return false;\n                }\n                has_exp = true;\n            }\n            '0'..='9' => {\n                if has_exp {\n                    has_exp_digit = true;\n                } else {\n                    has_digit = true;\n                }\n            }\n            _ => return false,\n        }\n    }\n\n    has_digit && (has_exp_digit || !has_exp)",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut has_sign = false;\n    let mut has_digit = false;\n\n    while let Some(c) = chars.next() {\n        if c == '-' || c == '+' {\n            if has_sign || has_digit {\n                is_integer = false;\n                break;\n            } else {\n                has_sign = true;\n            }\n        } else if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = true;\n    while let Some(c) = chars.next() {\n        if first {\n            if c == '-' {\n                first = false;\n                continue;\n            }\n        }\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' {\n                match chars.next() {\n                    Some(c) => c.is_digit(10),\n                    None => false,\n                }\n            } else {\n                c.is_digit(10)\n            }\n        }\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    if is_negative && text.len() == 1 {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    match first {\n        Some(c) => c.is_digit(10),\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    if first == Some('-') {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            if let Some(c) = chars.next() {\n                if c.is_digit(10) {\n                    return chars.all(|c| c.is_digit(10));\n                }\n            }\n        } else {\n            if c.is_digit(10) {\n                return chars.all(|c| c.is_digit(10));\n            }\n        }\n    }\n    false",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' {\n                match chars.next() {\n                    Some(c) => c.is_digit(10),\n                    None => false,\n                }\n            } else {\n                c.is_digit(10)\n            }\n        }\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if c == '-' || c == '+' {\n            if has_sign || has_digit {\n                return false;\n            }\n            has_sign = true;\n        } else if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            return false;\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first_char = true;\n    while let Some(c) = chars.next() {\n        if is_first_char {\n            if c == '-' {\n                is_first_char = false;\n                continue;\n            }\n        }\n        if c.is_digit(10) {\n            is_first_char = false;\n        } else {\n            is_integer = false;\n            break;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n    let mut is_positive = false;\n\n    if chars.next() == Some('-') {\n        is_negative = true;\n    } else if chars.next() == Some('+') {\n        is_positive = true;\n    }\n\n    if is_negative || is_positive {\n        if chars.next() == None {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    if let Some(first) = chars.next() {\n        if first == '-' {\n            return chars.all(|c| c.is_digit(10));\n        }\n    }\n    text.chars().all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    let mut is_integer = true;\n    match first {\n        Some(c) => {\n            if c == '-' || c == '+' {\n                is_integer = false;\n                for c in chars {\n                    if !c.is_digit(10) {\n                        is_integer = false;\n                        break;\n                    }\n                }\n            } else if !c.is_digit(10) {\n                is_integer = false;\n            } else {\n                for c in chars {\n                    if !c.is_digit(10) {\n                        is_integer = false;\n                        break;\n                    }\n                }\n            }\n        }\n        None => is_integer = false,\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    if first == Some('-') {\n        chars.next();\n    }\n    let mut has_digit = false;\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n        has_digit = true;\n    }\n    has_digit",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n    let mut has_dot = false;\n    let mut has_exp = false;\n    let mut has_exp_sign = false;\n    let mut has_exp_digit = false;\n\n    while let Some(c) = chars.next() {\n        match c {\n            '+' | '-' => {\n                if has_sign || has_digit || has_exp_sign || has_exp_digit {\n                    return false;\n                }\n                has_sign = true;\n            }\n            '.' => {\n                if has_dot || has_exp {\n                    return false;\n                }\n                has_dot = true;\n            }\n            'e' | 'E' => {\n                if has_exp || !has_digit {\n                    return false;\n                }\n                has_exp = true;\n            }\n            '0'..='9' => {\n                if has_exp {\n                    has_exp_digit = true;\n                } else {\n                    has_digit = true;\n                }\n            }\n            _ => return false,\n        }\n    }\n\n    has_digit && (has_exp ? has_exp_digit : true)",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    match first {\n        Some(c) => c.is_digit(10),\n        None => false,\n    }",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first_char = true;\n\n    while let Some(c) = chars.next() {\n        if is_first_char {\n            if c == '-' {\n                is_first_char = false;\n                continue;\n            }\n        }\n\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n\n        is_first_char = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    if let Some(first) = chars.next() {\n        if first == '-' {\n            chars.all(|c| c.is_digit(10))\n        } else {\n            chars.all(|c| c.is_digit(10))\n        }\n    } else {\n        false\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first.is_none() {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('+') || first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_numeric() {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    match first {\n        Some(c) => c.is_digit(10),\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let mut is_integer = false;\n    let mut is_negative = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if c.is_digit(10) {\n            is_integer = true;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    if is_negative && is_integer {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let first_char = chars.next();\n    let mut is_integer = true;\n    match first_char {\n        Some(c) => {\n            if c == '-' {\n                is_integer = false;\n            }\n        }\n        None => {\n            is_integer = false;\n        }\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' {\n                match chars.next() {\n                    Some(c) => {\n                        if c.is_numeric() {\n                            for c in chars {\n                                if !c.is_numeric() {\n                                    return false;\n                                }\n                            }\n                            return true;\n                        }\n                        return false;\n                    }\n                    None => return false,\n                }\n            } else if c.is_numeric() {\n                for c in chars {\n                    if !c.is_numeric() {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        None => return false,\n    }",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = true;\n    let mut has_sign = false;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if first {\n            if c == '-' || c == '+' {\n                has_sign = true;\n            } else if c.is_digit(10) {\n                has_digit = true;\n            } else {\n                return false;\n            }\n            first = false;\n        } else {\n            if !c.is_digit(10) {\n                return false;\n            }\n            has_digit = true;\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if c < '0' || c > '9' {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if c < '0' || c > '9' {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n    let mut is_positive = false;\n    let mut is_zero = false;\n    let mut is_digit = false;\n\n    while let Some(c) = chars.next() {\n        match c {\n            '0' => {\n                if is_zero {\n                    is_integer = false;\n                } else {\n                    is_zero = true;\n                }\n            }\n            '1'..='9' => {\n                is_digit = true;\n            }\n            '-' => {\n                if is_negative || is_positive || is_digit {\n                    is_integer = false;\n                } else {\n                    is_negative = true;\n                }\n            }\n            '+' => {\n                if is_negative || is_positive || is_digit {\n                    is_integer = false;\n                } else {\n                    is_positive = true;\n                }\n            }\n            _ => {\n                is_integer = false;\n            }\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n\n    if first_char == None {\n        return false;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer && !is_negative",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first_char = true;\n    while let Some(c) = chars.next() {\n        if is_first_char {\n            if c == '-' || c == '+' {\n                is_first_char = false;\n                continue;\n            }\n        }\n        if c < '0' || c > '9' {\n            is_integer = false;\n            break;\n        }\n        is_first_char = false;\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let first_char = chars.next();\n    let mut is_integer = false;\n\n    match first_char {\n        Some(c) => {\n            if c == '-' || c == '+' {\n                is_integer = true;\n            } else if c.is_digit(10) {\n                is_integer = true;\n            }\n        }\n        None => {\n            is_integer = false;\n        }\n    }\n\n    if is_integer {\n        for c in chars {\n            if !c.is_digit(10) {\n                is_integer = false;\n                break;\n            }\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut has_digit = false;\n    let mut has_sign = false;\n    let mut has_dot = false;\n\n    while let Some(c) = chars.next() {\n        match c {\n            '0'...'9' => has_digit = true,\n            '+' | '-' => {\n                if has_sign || has_digit {\n                    is_integer = false;\n                    break;\n                }\n                has_sign = true;\n            }\n            '.' => {\n                if has_dot {\n                    is_integer = false;\n                    break;\n                }\n                has_dot = true;\n            }\n            _ => {\n                is_integer = false;\n                break;\n            }\n        }\n    }\n    is_integer && has_digit",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer && !is_negative",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    let mut is_integer = true;\n\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n\n    while is_integer && first_char != None {\n        is_integer = first_char.unwrap().is_digit(10);\n        first_char = chars.next();\n    }\n\n    is_integer",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut is_integer = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' || c == '+' {\n            is_integer = true;\n        } else if c.is_digit(10) {\n            is_integer = true;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer",
    "    let mut it = text.chars();\n    let mut is_integer = false;\n    let mut is_negative = false;\n    let mut is_positive = false;\n    let mut is_zero = false;\n    let mut is_digit = false;\n\n    if let Some(c) = it.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if c == '+' {\n            is_positive = true;\n        } else if c == '0' {\n            is_zero = true;\n        } else if c.is_digit(10) {\n            is_digit = true;\n        } else {\n            return false;\n        }\n    }\n\n    for c in it {\n        if c.is_digit(10) {\n            is_digit = true;\n        } else {\n            return false;\n        }\n    }\n\n    if is_negative || is_positive || is_zero || is_digit {\n        is_integer = true;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == Some('0') {\n        return chars.next().is_none();\n    }\n    if first.is_none() {\n        return false;\n    }\n    let mut has_digit = false;\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n        has_digit = true;\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n\n    if let Some(c) = chars.next() {\n        if c == '-' || c == '+' {\n            if let Some(c) = chars.next() {\n                if !c.is_digit(10) {\n                    is_integer = false;\n                }\n            } else {\n                is_integer = false;\n            }\n        } else if !c.is_digit(10) {\n            is_integer = false;\n        }\n    } else {\n        is_integer = false;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    if chars.next().unwrap() == '-' {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first.is_none() {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n    let mut has_dot = false;\n    let mut has_exp = false;\n    let mut has_exp_sign = false;\n    let mut has_exp_digit = false;\n    while let Some(c) = chars.next() {\n        match c {\n            '+' | '-' => {\n                if has_sign || has_digit || has_exp_sign || has_exp_digit {\n                    return false;\n                }\n                if has_exp {\n                    has_exp_sign = true;\n                } else {\n                    has_sign = true;\n                }\n            }\n            '0'..='9' => {\n                if has_exp {\n                    has_exp_digit = true;\n                } else {\n                    has_digit = true;\n                }\n            }\n            '.' => {\n                if has_dot || has_exp {\n                    return false;\n                }\n                has_dot = true;\n            }\n            'e' | 'E' => {\n                if has_exp || !has_digit {\n                    return false;\n                }\n                has_exp = true;\n            }\n            _ => return false,\n        }\n    }\n    has_digit && (!has_exp || has_exp_digit)",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' {\n                chars.all(|c| c.is_digit(10))\n            } else {\n                c.is_digit(10) && chars.all(|c| c.is_digit(10))\n            }\n        }\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    if first.is_none() {\n        return false;\n    }\n    let first = first.unwrap();\n    if first == '-' || first == '+' {\n        let second = chars.next();\n        if second.is_none() {\n            return false;\n        }\n        let second = second.unwrap();\n        if !second.is_digit(10) {\n            return false;\n        }\n    } else if !first.is_digit(10) {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == Some('0') {\n        return chars.next().is_none();\n    }\n    if first.is_none() {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    if chars.next().unwrap() == '-' {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let mut is_integer = false;\n    let mut is_negative = false;\n    let mut is_positive = false;\n    let mut is_decimal = false;\n    let mut is_exponent = false;\n    let mut is_exponent_negative = false;\n    let mut is_exponent_positive = false;\n    let mut is_exponent_decimal = false;\n    let mut is_exponent_integer = false;\n    let mut is_exponent_integer_negative = false;\n    let mut is_exponent_integer_positive = false;\n    let mut is_exponent_integer_decimal = false;\n    let mut is_exponent_integer_decimal_negative = false;\n    let mut is_exponent_integer_decimal_positive = false;\n    let mut is_exponent_integer_decimal_negative_integer = false;\n    let mut is_exponent_integer_decimal_positive_integer = false;\n    let mut is_exponent_integer_decimal_negative_integer_integer = false;\n    let mut is_exponent_integer_decimal_positive_integer_integer = false;\n    let mut is_exponent_integer_decimal_negative_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_positive_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_negative_integer_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_positive_integer_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_negative_integer_integer_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_positive_integer_integer_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_negative_integer_integer_integer_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_positive_integer_integer_integer_integer_integer_integer = false;\n    let mut is_exponent_integer_decimal_",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    let mut is_integer = false;\n    match first {\n        Some(c) => {\n            if c == '-' || c == '+' {\n                is_integer = true;\n            } else if c.is_digit(10) {\n                is_integer = true;\n            }\n        }\n        None => return false,\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n\n    while let Some(c) = chars.next() {\n        if c == '-' || c == '+' {\n            if has_sign || has_digit {\n                return false;\n            }\n            has_sign = true;\n        } else if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            return false;\n        }\n    }\n\n    has_digit",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' {\n                chars.all(|c| c.is_digit(10))\n            } else {\n                c.is_digit(10) && chars.all(|c| c.is_digit(10))\n            }\n        }\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n\n    if first == Some('-') {\n        first = chars.next();\n    }\n\n    if first == None {\n        return false;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n\n    if first_char == None {\n        return false;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n\n    if first_char == None {\n        return false;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == Some('0') {\n        return chars.next().is_none();\n    }\n    if first_char.is_none() {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut is_integer = false;\n    let mut is_negative = false;\n\n    if chars.next() == Some('-') {\n        is_negative = true;\n    }\n\n    for c in chars {\n        if c.is_digit(10) {\n            is_integer = true;\n        } else {\n            is_integer = false;\n            break;\n        }\n    }\n\n    if is_negative {\n        is_integer\n    } else {\n        is_integer && !is_negative\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    text.parse::<i32>().is_ok()",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    let mut is_integer = false;\n    let mut is_negative = false;\n\n    if first == Some('-') {\n        is_negative = true;\n        first = chars.next();\n    }\n\n    if first == Some('0') {\n        is_integer = true;\n    } else if first.is_some() && first.unwrap().is_digit(10) {\n        is_integer = true;\n    }\n\n    if is_integer {\n        for c in chars {\n            if !c.is_digit(10) {\n                is_integer = false;\n                break;\n            }\n        }\n    }\n\n    if is_negative && is_integer {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    if chars.next().unwrap() == '-' {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    let mut is_integer = true;\n\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n\n    if first_char == None {\n        is_integer = false;\n    }\n\n    while let Some(c) = first_char {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n\n        first_char = chars.next();\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    let mut is_integer = false;\n    match first {\n        Some(c) => {\n            if c == '-' || c == '+' {\n                is_integer = true;\n            } else if c.is_digit(10) {\n                is_integer = true;\n            }\n        }\n        None => return false,\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') || first_char == Some('+') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    if first == Some('-') {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    match chars.next() {\n        Some(c) => {\n            if c == '-' || c == '+' {\n                match chars.next() {\n                    Some(c) => c.is_digit(10),\n                    None => false,\n                }\n            } else {\n                c.is_digit(10)\n            }\n        }\n        None => false,\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            return chars.all(|c| c.is_digit(10));\n        }\n    }\n    text.chars().all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if let Some(first_char) = chars.next() {\n        if first_char == '-' {\n            is_negative = true;\n        } else if !first_char.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    if is_negative && text.len() == 1 {\n        is_integer = false;\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    let mut is_integer = true;\n    let mut is_negative = false;\n    if first == Some('-') {\n        is_negative = true;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n    if is_negative {\n        is_integer\n    } else {\n        is_integer && !text.starts_with('0')\n    }",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first = true;\n\n    while let Some(c) = chars.next() {\n        if is_first {\n            if c == '-' {\n                is_first = false;\n                continue;\n            }\n        }\n\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n\n    if chars.next().unwrap() == '-' {\n        is_integer = false;\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    if first_char == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first = true;\n    while let Some(c) = chars.next() {\n        if is_first {\n            if c == '-' || c == '+' {\n                is_first = false;\n            } else if !c.is_digit(10) {\n                is_integer = false;\n                break;\n            }\n        } else if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut is_integer = false;\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_integer = chars.all(|c| c.is_numeric());\n        } else {\n            is_integer = chars.all(|c| c.is_numeric());\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let first = chars.next();\n    let mut is_integer = false;\n    match first {\n        Some(c) => {\n            if c == '-' {\n                is_integer = true;\n            } else if c.is_digit(10) {\n                is_integer = true;\n            }\n        }\n        None => is_integer = false,\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut has_sign = false;\n    let mut has_digit = false;\n\n    match chars.next() {\n        Some(c) => {\n            if c == '+' || c == '-' {\n                has_sign = true;\n            } else if !c.is_digit(10) {\n                return false;\n            } else {\n                has_digit = true;\n            }\n        }\n        None => return false,\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        } else {\n            has_digit = true;\n        }\n    }\n\n    has_digit",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if c < '0' || c > '9' {\n            return false;\n        }\n    }\n    true",
    "    // TODO: implement\n    true",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    let mut chars = text.chars();\n    let mut first = chars.next().unwrap();\n    if first == '-' {\n        first = chars.next().unwrap();\n    }\n    first.is_digit(10) && chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_first_char = true;\n    while let Some(c) = chars.next() {\n        if is_first_char {\n            if c == '-' {\n                is_first_char = false;\n                continue;\n            }\n        }\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n        is_first_char = false;\n    }\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    return true;",
    "    text.parse::<i32>().is_ok()",
    "    let mut chars = text.chars();\n    let first_char = chars.next();\n    let mut is_integer = true;\n\n    if first_char == Some('-') {\n        is_integer = is_integer && first_char.is_some();\n    }\n\n    for c in chars {\n        is_integer = is_integer && c.is_digit(10);\n    }\n\n    is_integer",
    "    let mut chars = text.chars();\n    let mut first_char = chars.next();\n    if first_char == Some('-') {\n        first_char = chars.next();\n    }\n    match first_char {\n        Some(c) if c.is_digit(10) => {\n            for c in chars {\n                if !c.is_digit(10) {\n                    return false;\n                }\n            }\n            true\n        }\n        _ => false,\n    }",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') || first == Some('+') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true",
    "    let mut chars = text.chars();\n    let mut first = true;\n    let mut has_digit = false;\n    while let Some(c) = chars.next() {\n        if c == '-' {\n            if first {\n                first = false;\n            } else {\n                return false;\n            }\n        } else if c.is_digit(10) {\n            has_digit = true;\n        } else {\n            return false;\n        }\n    }\n    has_digit",
    "    let mut chars = text.chars();\n    let mut is_integer = true;\n    let mut is_negative = false;\n\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            is_negative = true;\n        } else if !c.is_digit(10) {\n            is_integer = false;\n        }\n    }\n\n    for c in chars {\n        if !c.is_digit(10) {\n            is_integer = false;\n            break;\n        }\n    }\n\n    if is_negative {\n        is_integer && text.len() > 1\n    } else {\n        is_integer\n    }",
    "    let mut chars = text.chars();\n    if chars.next().unwrap() == '-' {\n        chars.next();\n    }\n    chars.all(|c| c.is_digit(10))",
    "    let mut chars = text.chars();\n    if let Some(c) = chars.next() {\n        if c == '-' {\n            if let Some(c) = chars.next() {\n                if c.is_digit(10) {\n                    for c in chars {\n                        if !c.is_digit(10) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n            }\n        } else if c.is_digit(10) {\n            for c in chars {\n                if !c.is_digit(10) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    false",
    "    let mut chars = text.chars();\n    let mut is_integer = false;\n    let mut is_negative = false;\n    let mut is_positive = false;\n    let mut is_decimal = false;\n    let mut is_exponent = false;\n    let mut is_exponent_negative = false;\n    let mut is_exponent_positive = false;\n    let mut is_exponent_integer = false;\n    let mut is_exponent_decimal = false;\n\n    loop {\n        match chars.next() {\n            Some('-') => {\n                if is_negative || is_positive || is_decimal || is_exponent || is_exponent_decimal {\n                    break;\n                }\n                is_negative = true;\n            },\n            Some('+') => {\n                if is_negative || is_positive || is_decimal || is_exponent || is_exponent_decimal {\n                    break;\n                }\n                is_positive = true;\n            },\n            Some('.') => {\n                if is_decimal || is_exponent || is_exponent_decimal {\n                    break;\n                }\n                is_decimal = true;\n            },\n            Some('e') => {\n                if is_exponent {\n                    break;\n                }\n                is_exponent = true;\n            },\n            Some('E') => {\n                if is_exponent {\n                    break;\n                }\n                is_exponent = true;\n            },\n            Some('-') => {\n                if is_exponent_negative || is_exponent_positive || is_exponent_decimal {\n                    break;\n                }\n                is_exponent_negative = true;\n            },\n            Some('+') => {\n                if is_exponent_negative || is_exponent_positive || is_exponent_decimal {\n                    break;\n                }\n                is_exponent_positive = true;\n            },\n            Some('.') => {\n                if is_exponent_decimal {\n                    break;\n                }\n                is_exponent_decimal = true;\n            },\n            Some(c) =>",
    "    let mut chars = text.chars();\n    let mut first = chars.next();\n    if first == Some('-') {\n        first = chars.next();\n    }\n    if first == None {\n        return false;\n    }\n    for c in chars {\n        if !c.is_digit(10) {\n            return false;\n        }\n    }\n    true"
  ]
}
{
  "name": "mbpp_430_parabola_directrix",
  "language": "rs",
  "prompt": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-2`,\n right: `-198`', /tmp/tmpdx0xwr3f.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)) as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp5hg162ig.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -b / (2 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpe3pc_jsd.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)) as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp5hg162ig.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-2`,\n right: `-198`', /tmp/tmpdx0xwr3f.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -b / (2 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpe3pc_jsd.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -b / (2 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpe3pc_jsd.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)) as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp5hg162ig.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -b / (2 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpe3pc_jsd.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b) / (4 * a) + c\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `-198`', /tmp/tmpucxn71xy.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b) / (4 * a) + c\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `-198`', /tmp/tmpucxn71xy.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -4 * a * c / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmplfu0nrn_.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(a * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-5`,\n right: `-198`', /tmp/tmp0hnhh2_u.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b as f64 / (2.0 * a as f64)).round() as isize\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmpxukd2yjk.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b - 4 * a * c) / (4 * a)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `1`,\n right: `-198`', /tmp/tmpk1g8z53k.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(4 * a * c) / (b * b)\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `-4`,\n right: `-198`', /tmp/tmp_d5wu93r.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b / (2 * a))\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp60si112a.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -(b * b) / (4 * a) + c\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `2`,\n right: `-198`', /tmp/tmpucxn71xy.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a function to find the directrix of a parabola.\nfn parabola_directrix(a: isize, b: isize, c: isize) -> isize {\n    -c / b\n}\n\nfn main() {\n    let candidate = parabola_directrix;\n    assert_eq!(candidate(5, 3, 2), -198);\n    assert_eq!(candidate(9, 8, 4), -2336);\n    assert_eq!(candidate(2, 4, 6), -130);\n}\n",
      "timestamp": 1665510375,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `-198`', /tmp/tmp34aj88dm.rs:8:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_90_len_log",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the length of the longest word.\nfn len_log(list1: Vec<String>) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = len_log;\n    assert_eq!(candidate(vec![String::from(\"python\"), String::from(\"PHP\"), String::from(\"bigdata\")]), 7);\n    assert_eq!(candidate(vec![String::from(\"a\"), String::from(\"ab\"), String::from(\"abc\")]), 3);\n    assert_eq!(candidate(vec![String::from(\"small\"), String::from(\"big\"), String::from(\"tall\")]), 5);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut len = 0;\n    for i in list1 {\n        if i.len() as isize > len {\n            len = i.len() as isize;\n        }\n    }\n    len",
    "    let mut max = 0;\n    for i in list1 {\n        let len = i.len() as isize;\n        if len > max {\n            max = len;\n        }\n    }\n    return max;",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut len = 0;\n    for i in list1 {\n        if i.len() as isize > len {\n            len = i.len() as isize;\n        }\n    }\n    len",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() > max {\n            max = i.len();\n        }\n    }\n    max as isize",
    "    let mut len = 0;\n    for i in list1 {\n        if i.len() as isize > len {\n            len = i.len() as isize;\n        }\n    }\n    len",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max_len = 0;\n    for i in list1 {\n        if i.len() > max_len {\n            max_len = i.len();\n        }\n    }\n    max_len as isize",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max_len: isize = 0;\n    for i in list1 {\n        if i.len() as isize > max_len {\n            max_len = i.len() as isize;\n        }\n    }\n    max_len",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() as isize > max {\n            max = i.len() as isize;\n        }\n    }\n    max",
    "    let mut max = 0;\n    for i in list1 {\n        if i.len() > max {\n            max = i.len();\n        }\n    }\n    return max as isize;"
  ]
}
{
  "name": "mbpp_167_next_power_of_2",
  "language": "rs",
  "prompt": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_167_next_power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i <<= 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut m = 1;\n    while m < n {\n        m *= 2;\n    }\n    m\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    while 2_isize.pow(i) < n {\n        i += 1;\n    }\n    2_isize.pow(i)\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x -= 1;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x += 1;\n    x\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmpgc3o3etf.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n |= n >> 32;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp_ao_x8cz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut m = 1;\n    while m < n {\n        m *= 2;\n    }\n    m\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i = i << 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n |= n >> 32;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp_ao_x8cz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut power = 1;\n    while power < n {\n        power *= 2;\n    }\n    power\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut m = 1;\n    while m < n {\n        m *= 2;\n    }\n    m\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    while (1 << i) < n {\n        i += 1;\n    }\n    1 << i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x -= 1;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x += 1;\n    x\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmpgc3o3etf.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x = x - 1;\n    x = x | (x >> 1);\n    x = x | (x >> 2);\n    x = x | (x >> 4);\n    x = x | (x >> 8);\n    x = x | (x >> 16);\n    x = x + 1;\n    x\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp6dg8yc9n.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n |= n >> 32;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp_ao_x8cz.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut power = 1;\n    while power < n {\n        power *= 2;\n    }\n    power\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i = i << 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    if n == 0 {\n        return 1;\n    }\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x |= x >> 32;\n    x += 1;\n    x\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i = i << 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut m = 1;\n    while m < n {\n        m *= 2;\n    }\n    m\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x |= x >> 32;\n    x += 1;\n    x\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result <<= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result <<= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut m = 1;\n    while m < n {\n        m *= 2;\n    }\n    m\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut m = 1;\n    while m < n {\n        m *= 2;\n    }\n    m\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i = i << 1;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n = n - 1;\n    n = n | (n >> 1);\n    n = n | (n >> 2);\n    n = n | (n >> 4);\n    n = n | (n >> 8);\n    n = n | (n >> 16);\n    n = n | (n >> 32);\n    n = n + 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmpvg1xsdt7.rs:17:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut p = 1;\n    while p < n {\n        p = p << 1;\n        i += 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut m = 1;\n    while m < n {\n        m *= 2;\n    }\n    m\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 0;\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n        i += 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p = p << 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut power = 1;\n    while power < n {\n        power *= 2;\n    }\n    power\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut x = n;\n    x -= 1;\n    x |= x >> 1;\n    x |= x >> 2;\n    x |= x >> 4;\n    x |= x >> 8;\n    x |= x >> 16;\n    x += 1;\n    x\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmpgc3o3etf.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p = p << 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p *= 2;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut p = 1;\n    while p < n {\n        p <<= 1;\n    }\n    p\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut i = 1;\n    while i < n {\n        i *= 2;\n    }\n    i\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result <<= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut power = 1;\n    while power < n {\n        power *= 2;\n    }\n    power\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut result = 1;\n    while result < n {\n        result *= 2;\n    }\n    result\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut power = 1;\n    while power < n {\n        power <<= 1;\n    }\n    power\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1666123677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    },
    {
      "program": "/// Write a rsthon function to find the smallest power of 2 greater than or equal to n.\nfn next_power_of_2(n: isize) -> isize {\n    let mut n = n;\n    n -= 1;\n    n |= n >> 1;\n    n |= n >> 2;\n    n |= n >> 4;\n    n |= n >> 8;\n    n |= n >> 16;\n    n += 1;\n    n\n}\n\nfn main() {\n    let candidate = next_power_of_2;\n    assert_eq!(candidate(0), 1);\n    assert_eq!(candidate(5), 8);\n    assert_eq!(candidate(17), 32);\n}\n",
      "timestamp": 1665510311,
      "stdout": "",
      "stderr": "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `1`', /tmp/tmp9r93z5hz.rs:16:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n",
      "exit_code": 101,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_227_min_of_three",
  "language": "rs",
  "prompt": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    a.min(b).min(c)\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            return a;\n        }\n    } else {\n        if b < c {\n            return b;\n        }\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            return a;\n        }\n    } else if b < c {\n        return b;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            return a;\n        } else {\n            return c;\n        }\n    } else {\n        if b < c {\n            return b;\n        } else {\n            return c;\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            return a;\n        }\n    } else if b < c {\n        return b;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    min(min(a, b), c)\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "error[E0425]: cannot find function `min` in this scope\n --> /tmp/tmpto3zik_4.rs:3:5\n  |\n3 |     min(min(a, b), c)\n  |     ^^^\n...\n6 | fn main() {\n  | --------- similarly named function `main` defined here\n  |\nhelp: a function with a similar name exists\n  |\n3 |     main(min(a, b), c)\n  |     ~~~~\nhelp: consider importing this function\n  |\n1 | use std::cmp::min;\n  |\n\nerror[E0425]: cannot find function `min` in this scope\n --> /tmp/tmpto3zik_4.rs:3:9\n  |\n3 |     min(min(a, b), c)\n  |         ^^^\n...\n6 | fn main() {\n  | --------- similarly named function `main` defined here\n  |\nhelp: a function with a similar name exists\n  |\n3 |     min(main(a, b), c)\n  |         ~~~~\nhelp: consider importing this function\n  |\n1 | use std::cmp::min;\n  |\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0425`.\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            return a;\n        }\n    } else {\n        if b < c {\n            return b;\n        }\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            return a;\n        }\n    } else if b < c {\n        return b;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        return a;\n    } else if b < a && b < c {\n        return b;\n    } else {\n        return c;\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        return a;\n    } else if b < c {\n        return b;\n    } else {\n        return c;\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    let mut min = a;\n    if b < min {\n        min = b;\n    }\n    if c < min {\n        min = c;\n    }\n    min\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b {\n        if a < c {\n            a\n        } else {\n            c\n        }\n    } else {\n        if b < c {\n            b\n        } else {\n            c\n        }\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        return a;\n    }\n    if b < a && b < c {\n        return b;\n    }\n    return c;\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < a && b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "/// Write a function to find minimum of three numbers.\nfn min_of_three(a: isize, b: isize, c: isize) -> isize {\n    if a < b && a < c {\n        a\n    } else if b < c {\n        b\n    } else {\n        c\n    }\n}\n\nfn main() {\n    let candidate = min_of_three;\n    assert_eq!(candidate(10, 20, 0), 0);\n    assert_eq!(candidate(19, 15, 18), 15);\n    assert_eq!(candidate(-10, -20, -30), -30);\n}\n",
      "timestamp": 1666122608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
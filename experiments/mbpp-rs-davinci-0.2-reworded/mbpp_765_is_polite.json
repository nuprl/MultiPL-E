{
  "name": "mbpp_765_is_polite",
  "language": "rs",
  "prompt": "/// Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\nfn is_polite(n: isize) -> isize {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = is_polite;\n    assert_eq!(candidate(7), 11);\n    assert_eq!(candidate(4), 7);\n    assert_eq!(candidate(9), 13);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 0;\n    while count < n {\n        if i % 2 == 0 {\n            count += 1;\n        }\n        if j % 3 == 0 {\n            count += 1;\n        }\n        if i % 5 == 0 {\n            count += 1;\n        }\n        if count < n {\n            i += 1;\n            j += 1;\n        }\n    }\n    i",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 0;\n    while count < n {\n        if i % 2 == 0 {\n            count += 1;\n        }\n        if j % 3 == 0 {\n            count += 1;\n        }\n        if i % 5 == 0 {\n            count += 1;\n        }\n        if count == n {\n            return i;\n        }\n        i += 1;\n        j += 1;\n    }\n    return 0;",
    "    let mut n = n;\n    let mut count = 0;\n    while n % 2 == 0 {\n        n /= 2;\n        count += 1;\n    }\n    while n % 3 == 0 {\n        n /= 3;\n        count += 1;\n    }\n    while n % 5 == 0 {\n        n /= 5;\n        count += 1;\n    }\n    if n == 1 {\n        count\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut n = n;\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 == 4 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut i = 1;\n    let mut n = n;\n    while n > 0 {\n        if n % i == 0 {\n            return i;\n        }\n        i += 1;\n        n -= 1;\n    }\n    return i;",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n            if count == n {\n                return i;\n            }\n        }\n        i += 1;\n        if is_prime(j) {\n            count += 1;\n            if count == n {\n                return j;\n            }\n        }\n        j += 1;\n    }\n    0",
    "    let mut n = n;\n    let mut sum = 0;\n    while n > 0 {\n        let digit = n % 10;\n        sum += digit;\n        n /= 10;\n    }\n    sum",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 0;\n    while count < n {\n        if i % j == 0 {\n            count += 1;\n        }\n        if count == n {\n            return i;\n        }\n        j += 1;\n        if j > i {\n            i += 1;\n            j = 1;\n        }\n    }\n    return -1;",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut n = n;\n    let mut count = 0;\n    while n % 2 == 0 {\n        n /= 2;\n        count += 1;\n    }\n    while n % 3 == 0 {\n        n /= 3;\n        count += 1;\n    }\n    while n % 5 == 0 {\n        n /= 5;\n        count += 1;\n    }\n    if n == 1 {\n        count\n    } else {\n        0\n    }",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n            if count == n {\n                return i;\n            }\n        }\n        i += 1;\n        if is_prime(j) {\n            count += 1;\n            if count == n {\n                return j;\n            }\n        }\n        j += 1;\n    }\n    0",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        if is_prime(i) {\n            count += 1;\n        }\n        i += 1;\n    }\n    i - 1",
    "    let mut i = 1;\n    let mut j = 1;\n    let mut count = 0;\n    while count < n {\n        if i % j == 0 {\n            count += 1;\n        }\n        j += 1;\n        if j > i {\n            i += 1;\n            j = 1;\n        }\n    }\n    i",
    "    let mut i = 1;\n    let mut count = 0;\n    while count < n {\n        i += 1;\n        if is_prime(i) && is_prime(i + 2) {\n            count += 1;\n        }\n    }\n    i"
  ]
}
{
  "name": "mbpp_731_lateralsurface_cone",
  "language": "rs",
  "prompt": "/// Write a function to find the lateral surface area of a cone given radius r and the height h.\nfn lateralsurface_cone(r: isize, h: isize) -> f64 {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_731_lateralsurface_cone.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\nfn main() {\n    let candidate = lateralsurface_cone;\n    assert_eq!(candidate(5, 12), 204.20352248333654);\n    assert_eq!(candidate(10, 15), 566.3586699569488);\n    assert_eq!(candidate(19, 17), 1521.8090132193388);\n}\n",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface as f64",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h.pow(2) + r.pow(2)).sqrt());\n    lateral_surface as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let area = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    area",
    "    let pi = std::f64::consts::PI;\n    pi * (r as f64) * (h as f64).sqrt()",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    let lateral_surface_area = pi * r as f64 * slant_height as f64;\n    lateral_surface_area",
    "    let pi = std::f64::consts::PI;\n    let s = (r as f64).powi(2) + (h as f64).powi(2);\n    let s = s.sqrt();\n    pi * r as f64 * s",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let lateral_surface_area = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface_area",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    pi * r as f64 * l.sqrt()",
    "    let pi = std::f64::consts::PI;\n    let s = (pi * r as f64 * (r as f64 + (h as f64).sqrt())).round();\n    s",
    "    let pi = std::f64::consts::PI;\n    let l = (r * h) as f64;\n    let s = pi * l;\n    s",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    pi * r as f64 * l.sqrt()",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    let lateral_surface = pi * r as f64 * slant_height;\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    pi * r as f64 * slant_height as f64",
    "    let pi: f64 = 3.14;\n    let lsa = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let slant_height = ((r as f64).powi(2) + (h as f64).powi(2)).sqrt();\n    let lateral_surface = pi * r as f64 * slant_height;\n    lateral_surface",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    (PI * r * h).sqrt()",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    pi * r as f64 * l.sqrt()",
    "    let pi = std::f64::consts::PI;\n    let s = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = (2.0 * pi * r as f64 * h as f64) / s.sqrt();\n    l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    let lateral_surface_area = pi * r as f64 * slant_height as f64;\n    lateral_surface_area",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let lateral_surface: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    return lsa;",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    ((PI * r * h) as f64).abs()",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    (pi * r * slant_height) as f64",
    "    let pi = std::f64::consts::PI;\n    (pi * r as f64 * (r as f64 + (h as f64).sqrt())).round()",
    "    let pi: f64 = 3.14;\n    let l: f64 = (pi * r as f64 * (r as f64 + (h as f64).sqrt())).round();\n    l",
    "    PI * r as f64 * (r as f64 + (h as f64).sqrt())",
    "    let pi: f64 = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277",
    "    let pi = std::f64::consts::PI;\n    pi * r as f64 * (r as f64 + (h as f64).sqrt())",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi: f64 = 3.14;\n    let s: f64 = (r as f64) * (h as f64).sqrt();\n    let lsa: f64 = pi * s;\n    return lsa;",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (2.0 * pi * r * h) as f64;\n    l",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    return lsa;",
    "    let pi = 3.14;\n    let l = (pi * r * h).sqrt();\n    pi * r * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    PI * r as f64 * (r as f64 + (h as f64).sqrt())",
    "    let pi = std::f64::consts::PI;\n    let lateral_surface = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let result = pi * r * (r + (h * h + r * r).sqrt());\n    result as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let lateral_surface_area = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface_area",
    "    let pi: f64 = 3.14;\n    let l: f64 = (pi * r as f64 * (r as f64 + (h as f64).sqrt())).round();\n    l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = l.sqrt();\n    pi * r as f64 * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    PI * r as f64 * (r as f64 + (h as f64).sqrt())",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r * h).pow(2) + (r.pow(2) + h.pow(2)).sqrt();\n    l as f64 * pi",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    pi * r as f64 * slant_height as f64",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = 3.14;\n    let l = (r * h).pow(2) + (r * r).pow(2);\n    let lateral_surface = pi * r * l.sqrt();\n    lateral_surface",
    "    let pi = 3.14;\n    let l = (pi * r * h).sqrt();\n    pi * r * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    let lateral_surface = pi * r as f64 * slant_height;\n    lateral_surface",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa as f64",
    "    let pi = std::f64::consts::PI;\n    let lateral_surface = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() + (h as f64).sqrt();\n    pi * r as f64 * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    (PI * r * (r + (h as f64).sqrt())).round()",
    "    let pi = std::f64::consts::PI;\n    pi * r as f64 * (r as f64 + (h as f64).sqrt())",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    pi * r as f64 * l.sqrt()",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let mut lateral_surface: f64 = 0.0;\n    lateral_surface = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64).sqrt() + (r as f64) * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let lsa = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi: f64 = 3.14;\n    let lateral_surface_area: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    return lateral_surface_area;",
    "    let pi: f64 = 3.14;\n    let lateral_surface: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    return lateral_surface;",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let lsa = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64).sqrt() + r as f64;\n    pi * l * (r as f64)",
    "    let pi: f64 = std::f64::consts::PI;\n    let l: f64 = (r as f64 * h as f64).sqrt();\n    pi * l * (r as f64)",
    "    let pi: f64 = std::f64::consts::PI;\n    let s: f64 = (r as f64).sqrt() * (r as f64) + (h as f64).sqrt() * (h as f64);\n    pi * s",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let s = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = (2.0 * pi * r as f64 * h as f64) / s.sqrt();\n    l",
    "    let pi = std::f64::consts::PI;\n    let s = (r as f64).powi(2) + (h as f64).powi(2);\n    let s = s.sqrt();\n    pi * r as f64 * s",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    pi * r as f64 * l.sqrt()",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let lsa = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = l.sqrt();\n    pi * r as f64 * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (r as f64).sqrt() + (h as f64).sqrt() * (h as f64).sqrt();\n    pi * r as f64 * l",
    "    let pi = std::f64::consts::PI;\n    let l = ((r as f64).powi(2) + (h as f64).powi(2)).sqrt();\n    pi * r as f64 * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = l.sqrt();\n    pi * r as f64 * l",
    "    let pi = 3.14;\n    let l = (pi * r * h).sqrt();\n    (pi * r * l).round() as f64",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r * h).sqrt();\n    pi * l * (r as f64)",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    pi * r as f64 * l.sqrt()",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let lateral_surface = std::f64::consts::PI * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    pi * r as f64 * slant_height as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let s = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = (pi * r as f64 * s.sqrt()).round();\n    l",
    "    let pi: f64 = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    pi * r as f64 * slant_height as f64",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r * r + h * h).sqrt();\n    let lateral_surface = pi * r * slant_height;\n    lateral_surface",
    "    let pi: f64 = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277",
    "    let pi = std::f64::consts::PI;\n    let l = (2.0 * pi * r * h) as f64;\n    l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let l: f64 = (pi * r as f64 * (r as f64 + (h as f64).sqrt())).round();\n    l",
    "    let pi = 3.14;\n    let l = (pi * r * h).sqrt();\n    let lateral_surface = pi * r * l;\n    lateral_surface as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64 * h as f64).sqrt();\n    pi * l * (r as f64)",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi: f64 = std::f64::consts::PI;\n    let l: f64 = (2.0 * pi * r * h) as f64;\n    l",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    (pi * r as f64 * (r as f64 + (h as f64).sqrt())).round()",
    "    let pi = std::f64::consts::PI;\n    let s = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    s",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi = 3.14;\n    let l = (pi * r * h).sqrt();\n    let lateral_surface = pi * r * l;\n    lateral_surface",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let slant_height = ((r * r + h * h) as f64).sqrt();\n    pi * r as f64 * slant_height",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * h as f64;\n    pi * l",
    "    let pi = 3.14;\n    let l = (pi * r * h).sqrt();\n    let lateral_surface = pi * r * l;\n    lateral_surface",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi: f64 = std::f64::consts::PI;\n    pi * (r as f64) * (h as f64).sqrt()",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface as f64",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = std::f64::consts::PI;\n    let l = (r * h).hypot(r);\n    pi * l * r as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = 3.14;\n    let lateral_surface = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    (pi * r * slant_height) as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi: f64 = std::f64::consts::PI;\n    let l: f64 = (r as f64 * h as f64).sqrt();\n    pi * r as f64 * l",
    "    let pi = std::f64::consts::PI;\n    let s = (r as f64) * (h as f64).sqrt();\n    pi * s",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * h as f64;\n    pi * l",
    "    let pi: f64 = 3.14;\n    let lateral_surface: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    pi * r as f64 * slant_height as f64",
    "    let pi = 3.14;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * h as f64;\n    pi * l",
    "    let pi: f64 = std::f64::consts::PI;\n    let l: f64 = (r as f64).sqrt() + (h as f64).sqrt();\n    pi * r as f64 * l",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r * h).sqrt();\n    pi * l * (r as f64)",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let l = (r * h).pow(2) + (r.pow(2) + h.pow(2)).sqrt();\n    (pi * r * l) as f64",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    l.sqrt() * 2.0 * PI * r as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let lateral_surface_area = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface_area",
    "    let pi = std::f64::consts::PI;\n    let slant_height = (r.pow(2) + h.pow(2)).sqrt();\n    let lateral_surface_area = pi * r as f64 * slant_height as f64;\n    lateral_surface_area",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = l.sqrt();\n    pi * r as f64 * l",
    "    let pi: f64 = 3.14;\n    let lateral_surface_area: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lateral_surface_area",
    "    let pi: f64 = 3.14;\n    let lsa = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    let pi = 3.14;\n    let l = (pi * r * h).sqrt();\n    let lateral_surface = pi * r * l;\n    lateral_surface as f64",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = l.sqrt();\n    (PI * r as f64 * l).round()",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h.pow(2) + r.pow(2)).sqrt());\n    lateral_surface",
    "    let pi = 3.14;\n    let lsa = pi * r * (r + (h * h + r * r).sqrt());\n    lsa",
    "    let pi: f64 = 3.14;\n    let lsa: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    lsa",
    "    PI * r as f64 * (r as f64 + (h as f64).sqrt())",
    "    let pi = std::f64::consts::PI;\n    let l = (pi * r as f64 * (r as f64 + (h as f64).sqrt())).round();\n    l",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    return lateral_surface;",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface as f64",
    "    let pi: f64 = 3.14;\n    let lateral_surface_area: f64 = pi * r as f64 * (r as f64 + (h as f64).sqrt());\n    return lateral_surface_area;",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).sqrt() * (h as f64);\n    pi * l",
    "    let pi = 3.14;\n    let lateral_surface = pi * r * (r + (h * h + r * r).sqrt());\n    lateral_surface",
    "    let pi = std::f64::consts::PI;\n    let l = (r as f64).powi(2) + (h as f64).powi(2);\n    let l = l.sqrt();\n    pi * r as f64 * l"
  ]
}